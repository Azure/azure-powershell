// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Extensions;

    /// <summary>A lab virtual machine resource.</summary>
    public partial class VirtualMachine :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachine,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ProxyResource();

        /// <summary>The lab user ID (not the PUID!) of who claimed the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ClaimedByUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ClaimedByUserId; }

        /// <summary>The username used to log on to the virtual machine as admin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileAdminUsername; }

        /// <summary>The username used to log on to the virtual machine as non-admin, if one exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileNonAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileNonAdminUsername; }

        /// <summary>The private IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfilePrivateIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfilePrivateIPAddress; }

        /// <summary>
        /// Port and host name separated by semicolon for connecting via RDP protocol to the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileRdpAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpAuthority; }

        /// <summary>URL for connecting via RDP protocol to the virtual machine in browser.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileRdpInBrowserUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpInBrowserUrl; }

        /// <summary>
        /// Port and host name separated by semicolon for connecting via SSH protocol to the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileSshAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshAuthority; }

        /// <summary>URL for connecting via SSH protocol to the virtual machine in browser.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ConnectionProfileSshInBrowserUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshInBrowserUrl; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Name = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Type = value ?? null; }

        /// <summary>Internal Acessors for ClaimedByUserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ClaimedByUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ClaimedByUserId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ClaimedByUserId = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineConnectionProfile Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfile = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ConnectionProfileAdminUsername</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileAdminUsername = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfileNonAdminUsername</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileNonAdminUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileNonAdminUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileNonAdminUsername = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfilePrivateIPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfilePrivateIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfilePrivateIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfilePrivateIPAddress = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfileRdpAuthority</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileRdpAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpAuthority = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfileRdpInBrowserUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileRdpInBrowserUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpInBrowserUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileRdpInBrowserUrl = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfileSshAuthority</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileSshAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshAuthority; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshAuthority = value ?? null; }

        /// <summary>Internal Acessors for ConnectionProfileSshInBrowserUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ConnectionProfileSshInBrowserUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshInBrowserUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ConnectionProfileSshInBrowserUrl = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProperties Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for State</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).State = value ?? null; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedByType = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedByType = value ?? null; }

        /// <summary>Internal Acessors for VMType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineInternal.VMType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).VMType; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).VMType = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProperties _property;

        /// <summary>Virtual machine resource properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineProperties()); set => this._property = value; }

        /// <summary>Current provisioning state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The current state of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string State { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).State; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemData _systemData;

        /// <summary>System data of the Lab virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).CreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemDataInternal)SystemData).LastModifiedByType; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>The type of this VM resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inlined)]
        public string VMType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachinePropertiesInternal)Property).VMType; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }

        /// <summary>Creates an new <see cref="VirtualMachine" /> instance.</summary>
        public VirtualMachine()
        {

        }
    }
    /// A lab virtual machine resource.
    public partial interface IVirtualMachine :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IProxyResource
    {
        /// <summary>The lab user ID (not the PUID!) of who claimed the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The lab user ID (not the PUID!) of who claimed the virtual machine.",
        SerializedName = @"claimedByUserId",
        PossibleTypes = new [] { typeof(string) })]
        string ClaimedByUserId { get;  }
        /// <summary>The username used to log on to the virtual machine as admin.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The username used to log on to the virtual machine as admin.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileAdminUsername { get;  }
        /// <summary>The username used to log on to the virtual machine as non-admin, if one exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The username used to log on to the virtual machine as non-admin, if one exists.",
        SerializedName = @"nonAdminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileNonAdminUsername { get;  }
        /// <summary>The private IP address of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The private IP address of the virtual machine.",
        SerializedName = @"privateIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfilePrivateIPAddress { get;  }
        /// <summary>
        /// Port and host name separated by semicolon for connecting via RDP protocol to the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Port and host name separated by semicolon for connecting via RDP protocol to the virtual machine.",
        SerializedName = @"rdpAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileRdpAuthority { get;  }
        /// <summary>URL for connecting via RDP protocol to the virtual machine in browser.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"URL for connecting via RDP protocol to the virtual machine in browser.",
        SerializedName = @"rdpInBrowserUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileRdpInBrowserUrl { get;  }
        /// <summary>
        /// Port and host name separated by semicolon for connecting via SSH protocol to the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Port and host name separated by semicolon for connecting via SSH protocol to the virtual machine.",
        SerializedName = @"sshAuthority",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileSshAuthority { get;  }
        /// <summary>URL for connecting via SSH protocol to the virtual machine in browser.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"URL for connecting via SSH protocol to the virtual machine in browser.",
        SerializedName = @"sshInBrowserUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionProfileSshInBrowserUrl { get;  }
        /// <summary>Current provisioning state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Current provisioning state of the virtual machine.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Failed", "Locked")]
        string ProvisioningState { get;  }
        /// <summary>The current state of the virtual machine</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current state of the virtual machine",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Stopped", "Starting", "Running", "Stopping", "ResettingPassword", "Reimaging", "Redeploying")]
        string State { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }
        /// <summary>The type of this VM resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of this VM resource",
        SerializedName = @"vmType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Template")]
        string VMType { get;  }

    }
    /// A lab virtual machine resource.
    internal partial interface IVirtualMachineInternal :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IProxyResourceInternal
    {
        /// <summary>The lab user ID (not the PUID!) of who claimed the virtual machine.</summary>
        string ClaimedByUserId { get; set; }
        /// <summary>Profile for information about connecting to the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineConnectionProfile ConnectionProfile { get; set; }
        /// <summary>The username used to log on to the virtual machine as admin.</summary>
        string ConnectionProfileAdminUsername { get; set; }
        /// <summary>The username used to log on to the virtual machine as non-admin, if one exists.</summary>
        string ConnectionProfileNonAdminUsername { get; set; }
        /// <summary>The private IP address of the virtual machine.</summary>
        string ConnectionProfilePrivateIPAddress { get; set; }
        /// <summary>
        /// Port and host name separated by semicolon for connecting via RDP protocol to the virtual machine.
        /// </summary>
        string ConnectionProfileRdpAuthority { get; set; }
        /// <summary>URL for connecting via RDP protocol to the virtual machine in browser.</summary>
        string ConnectionProfileRdpInBrowserUrl { get; set; }
        /// <summary>
        /// Port and host name separated by semicolon for connecting via SSH protocol to the virtual machine.
        /// </summary>
        string ConnectionProfileSshAuthority { get; set; }
        /// <summary>URL for connecting via SSH protocol to the virtual machine in browser.</summary>
        string ConnectionProfileSshInBrowserUrl { get; set; }
        /// <summary>Virtual machine resource properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProperties Property { get; set; }
        /// <summary>Current provisioning state of the virtual machine.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Failed", "Locked")]
        string ProvisioningState { get; set; }
        /// <summary>The current state of the virtual machine</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Stopped", "Starting", "Running", "Stopping", "ResettingPassword", "Reimaging", "Redeploying")]
        string State { get; set; }
        /// <summary>System data of the Lab virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of this VM resource</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("User", "Template")]
        string VMType { get; set; }

    }
}