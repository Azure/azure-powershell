// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Extensions;

    /// <summary>User resource properties</summary>
    public partial class UserProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserProperties,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdateProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdateProperties __userUpdateProperties = new Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.UserUpdateProperties();

        /// <summary>
        /// The amount of usage quota time the user gets in addition to the lab usage quota.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? AdditionalUsageQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdatePropertiesInternal)__userUpdateProperties).AdditionalUsageQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdatePropertiesInternal)__userUpdateProperties).AdditionalUsageQuota = value ?? default(global::System.TimeSpan); }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name of the user, for example user's full name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="Email" /> property.</summary>
        private string _email;

        /// <summary>Email address of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string Email { get => this._email; set => this._email = value; }

        /// <summary>Backing field for <see cref="InvitationSent" /> property.</summary>
        private global::System.DateTime? _invitationSent;

        /// <summary>Date and time when the invitation message was sent to the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public global::System.DateTime? InvitationSent { get => this._invitationSent; }

        /// <summary>Backing field for <see cref="InvitationState" /> property.</summary>
        private string _invitationState;

        /// <summary>State of the invitation message for the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string InvitationState { get => this._invitationState; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for InvitationSent</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.InvitationSent { get => this._invitationSent; set { {_invitationSent = value;} } }

        /// <summary>Internal Acessors for InvitationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.InvitationState { get => this._invitationState; set { {_invitationState = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RegistrationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.RegistrationState { get => this._registrationState; set { {_registrationState = value;} } }

        /// <summary>Internal Acessors for TotalUsage</summary>
        global::System.TimeSpan? Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserPropertiesInternal.TotalUsage { get => this._totalUsage; set { {_totalUsage = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Current provisioning state of the user resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RegistrationState" /> property.</summary>
        private string _registrationState;

        /// <summary>State of the user's registration within the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public string RegistrationState { get => this._registrationState; }

        /// <summary>Backing field for <see cref="TotalUsage" /> property.</summary>
        private global::System.TimeSpan? _totalUsage;

        /// <summary>How long the user has used their virtual machines in this lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.LabServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? TotalUsage { get => this._totalUsage; }

        /// <summary>Creates an new <see cref="UserProperties" /> instance.</summary>
        public UserProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__userUpdateProperties), __userUpdateProperties);
            await eventListener.AssertObjectIsValid(nameof(__userUpdateProperties), __userUpdateProperties);
        }
    }
    /// User resource properties
    public partial interface IUserProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdateProperties
    {
        /// <summary>Display name of the user, for example user's full name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Display name of the user, for example user's full name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Email address of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Email address of the user.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string Email { get; set; }
        /// <summary>Date and time when the invitation message was sent to the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date and time when the invitation message was sent to the user.",
        SerializedName = @"invitationSent",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InvitationSent { get;  }
        /// <summary>State of the invitation message for the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of the invitation message for the user.",
        SerializedName = @"invitationState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("NotSent", "Sending", "Sent", "Failed")]
        string InvitationState { get;  }
        /// <summary>Current provisioning state of the user resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Current provisioning state of the user resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Failed", "Locked")]
        string ProvisioningState { get;  }
        /// <summary>State of the user's registration within the lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of the user's registration within the lab.",
        SerializedName = @"registrationState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Registered", "NotRegistered")]
        string RegistrationState { get;  }
        /// <summary>How long the user has used their virtual machines in this lab.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"How long the user has used their virtual machines in this lab.",
        SerializedName = @"totalUsage",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TotalUsage { get;  }

    }
    /// User resource properties
    internal partial interface IUserPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IUserUpdatePropertiesInternal
    {
        /// <summary>Display name of the user, for example user's full name.</summary>
        string DisplayName { get; set; }
        /// <summary>Email address of the user.</summary>
        string Email { get; set; }
        /// <summary>Date and time when the invitation message was sent to the user.</summary>
        global::System.DateTime? InvitationSent { get; set; }
        /// <summary>State of the invitation message for the user.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("NotSent", "Sending", "Sent", "Failed")]
        string InvitationState { get; set; }
        /// <summary>Current provisioning state of the user resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Failed", "Locked")]
        string ProvisioningState { get; set; }
        /// <summary>State of the user's registration within the lab.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.LabServices.PSArgumentCompleterAttribute("Registered", "NotRegistered")]
        string RegistrationState { get; set; }
        /// <summary>How long the user has used their virtual machines in this lab.</summary>
        global::System.TimeSpan? TotalUsage { get; set; }

    }
}