// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.PowerShell;

    /// <summary>The lab resource for updates.</summary>
    [System.ComponentModel.TypeConverter(typeof(LabUpdateTypeConverter))]
    public partial class LabUpdate
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdate DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new LabUpdate(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdate" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdate DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new LabUpdate(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="LabUpdate" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="LabUpdate" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdate FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal LabUpdate(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ITrackedResourceUpdateInternal)this).Tag = (System.Collections.Generic.List<string>) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ITrackedResourceUpdateInternal)this).Tag, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IConnectionProfile) content.GetValueForProperty("ConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RosterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IRosterProfile) content.GetValueForProperty("RosterProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.RosterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IAutoShutdownProfile) content.GetValueForProperty("AutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProfile) content.GetValueForProperty("VirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).LabPlanId = (string) content.GetValueForProperty("LabPlanId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).LabPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("VirtualMachineProfileImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileImageReference = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IImageReference) content.GetValueForProperty("VirtualMachineProfileImageReference",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileImageReference, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileSku = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISku) content.GetValueForProperty("VirtualMachineProfileSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileSku, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileCreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileCreateOption = (string) content.GetValueForProperty("VirtualMachineProfileCreateOption",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileCreateOption, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileOSType = (string) content.GetValueForProperty("VirtualMachineProfileOSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileOSType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileUsageQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota = (global::System.TimeSpan?) content.GetValueForProperty("VirtualMachineProfileUsageQuota",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("SecurityProfileRegistrationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileRegistrationCode = (string) content.GetValueForProperty("SecurityProfileRegistrationCode",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileRegistrationCode, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLmsInstance = (string) content.GetValueForProperty("RosterProfileLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect = (string) content.GetValueForProperty("AutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected = (string) content.GetValueForProperty("AutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle = (string) content.GetValueForProperty("AutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebSshAccess = (string) content.GetValueForProperty("ConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebSshAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess = (string) content.GetValueForProperty("ConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientSshAccess = (string) content.GetValueForProperty("ConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientSshAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess = (string) content.GetValueForProperty("ConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileAdditionalCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineAdditionalCapabilities) content.GetValueForProperty("VirtualMachineProfileAdditionalCapability",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineAdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ICredentials) content.GetValueForProperty("VirtualMachineProfileAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileNonAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ICredentials) content.GetValueForProperty("VirtualMachineProfileNonAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileUseSharedPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword = (string) content.GetValueForProperty("VirtualMachineProfileUseSharedPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("SkuSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuSize = (string) content.GetValueForProperty("SkuSize",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuSize, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecurityProfileOpenAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileOpenAccess = (string) content.GetValueForProperty("SecurityProfileOpenAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileOpenAccess, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileActiveDirectoryGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId = (string) content.GetValueForProperty("RosterProfileActiveDirectoryGroupId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiContextId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiContextId = (string) content.GetValueForProperty("RosterProfileLtiContextId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiContextId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiClientId = (string) content.GetValueForProperty("RosterProfileLtiClientId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiRosterEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint = (string) content.GetValueForProperty("RosterProfileLtiRosterEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalCapabilityInstallGpuDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver = (string) content.GetValueForProperty("AdditionalCapabilityInstallGpuDriver",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserUsername = (string) content.GetValueForProperty("AdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserPassword = (System.Security.SecureString) content.GetValueForProperty("AdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("NonAdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserUsername = (string) content.GetValueForProperty("NonAdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserPassword = (System.Security.SecureString) content.GetValueForProperty("NonAdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserPassword, (object ss) => (System.Security.SecureString)ss);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdate"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal LabUpdate(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.LabUpdatePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ITrackedResourceUpdateInternal)this).Tag = (System.Collections.Generic.List<string>) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ITrackedResourceUpdateInternal)this).Tag, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConnectionProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IConnectionProfile) content.GetValueForProperty("ConnectionProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ConnectionProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("RosterProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IRosterProfile) content.GetValueForProperty("RosterProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.RosterProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoShutdownProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IAutoShutdownProfile) content.GetValueForProperty("AutoShutdownProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.AutoShutdownProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfile = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineProfile) content.GetValueForProperty("VirtualMachineProfile",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfile, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("LabPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).LabPlanId = (string) content.GetValueForProperty("LabPlanId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).LabPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("Title"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Title = (string) content.GetValueForProperty("Title",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Title, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileDisconnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileDisconnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileDisconnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("AutoShutdownProfileIdleDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileIdleDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileIdleDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("VirtualMachineProfileImageReference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileImageReference = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IImageReference) content.GetValueForProperty("VirtualMachineProfileImageReference",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileImageReference, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ImageReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileSku = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ISku) content.GetValueForProperty("VirtualMachineProfileSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileSku, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileCreateOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileCreateOption = (string) content.GetValueForProperty("VirtualMachineProfileCreateOption",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileCreateOption, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileOSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileOSType = (string) content.GetValueForProperty("VirtualMachineProfileOSType",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileOSType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileUsageQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota = (global::System.TimeSpan?) content.GetValueForProperty("VirtualMachineProfileUsageQuota",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUsageQuota, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("SecurityProfileRegistrationCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileRegistrationCode = (string) content.GetValueForProperty("SecurityProfileRegistrationCode",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileRegistrationCode, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLmsInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLmsInstance = (string) content.GetValueForProperty("RosterProfileLmsInstance",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLmsInstance, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnDisconnect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect = (string) content.GetValueForProperty("AutoShutdownProfileShutdownOnDisconnect",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnDisconnect, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownWhenNotConnected"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected = (string) content.GetValueForProperty("AutoShutdownProfileShutdownWhenNotConnected",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownWhenNotConnected, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileShutdownOnIdle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle = (string) content.GetValueForProperty("AutoShutdownProfileShutdownOnIdle",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileShutdownOnIdle, global::System.Convert.ToString);
            }
            if (content.Contains("AutoShutdownProfileNoConnectDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay = (global::System.TimeSpan?) content.GetValueForProperty("AutoShutdownProfileNoConnectDelay",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AutoShutdownProfileNoConnectDelay, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("ConnectionProfileWebSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebSshAccess = (string) content.GetValueForProperty("ConnectionProfileWebSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebSshAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileWebRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess = (string) content.GetValueForProperty("ConnectionProfileWebRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileWebRdpAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileClientSshAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientSshAccess = (string) content.GetValueForProperty("ConnectionProfileClientSshAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientSshAccess, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionProfileClientRdpAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess = (string) content.GetValueForProperty("ConnectionProfileClientRdpAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ConnectionProfileClientRdpAccess, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineProfileAdditionalCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.IVirtualMachineAdditionalCapabilities) content.GetValueForProperty("VirtualMachineProfileAdditionalCapability",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdditionalCapability, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.VirtualMachineAdditionalCapabilitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ICredentials) content.GetValueForProperty("VirtualMachineProfileAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileNonAdminUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser = (Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ICredentials) content.GetValueForProperty("VirtualMachineProfileNonAdminUser",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileNonAdminUser, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.CredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualMachineProfileUseSharedPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword = (string) content.GetValueForProperty("VirtualMachineProfileUseSharedPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).VirtualMachineProfileUseSharedPassword, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceOffer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceOffer = (string) content.GetValueForProperty("ImageReferenceOffer",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceOffer, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferencePublisher"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferencePublisher = (string) content.GetValueForProperty("ImageReferencePublisher",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferencePublisher, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceSku = (string) content.GetValueForProperty("ImageReferenceSku",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceSku, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceVersion = (string) content.GetValueForProperty("ImageReferenceVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceExactVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceExactVersion = (string) content.GetValueForProperty("ImageReferenceExactVersion",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceExactVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("SkuSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuSize = (string) content.GetValueForProperty("SkuSize",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuSize, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuCapacity = (int?) content.GetValueForProperty("SkuCapacity",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SkuCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SecurityProfileOpenAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileOpenAccess = (string) content.GetValueForProperty("SecurityProfileOpenAccess",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).SecurityProfileOpenAccess, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileActiveDirectoryGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId = (string) content.GetValueForProperty("RosterProfileActiveDirectoryGroupId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileActiveDirectoryGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiContextId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiContextId = (string) content.GetValueForProperty("RosterProfileLtiContextId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiContextId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiClientId = (string) content.GetValueForProperty("RosterProfileLtiClientId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiClientId, global::System.Convert.ToString);
            }
            if (content.Contains("RosterProfileLtiRosterEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint = (string) content.GetValueForProperty("RosterProfileLtiRosterEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).RosterProfileLtiRosterEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ImageReferenceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceId = (string) content.GetValueForProperty("ImageReferenceId",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).ImageReferenceId, global::System.Convert.ToString);
            }
            if (content.Contains("AdditionalCapabilityInstallGpuDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver = (string) content.GetValueForProperty("AdditionalCapabilityInstallGpuDriver",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdditionalCapabilityInstallGpuDriver, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserUsername = (string) content.GetValueForProperty("AdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("AdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserPassword = (System.Security.SecureString) content.GetValueForProperty("AdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).AdminUserPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("NonAdminUserUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserUsername = (string) content.GetValueForProperty("NonAdminUserUsername",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserUsername, global::System.Convert.ToString);
            }
            if (content.Contains("NonAdminUserPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserPassword = (System.Security.SecureString) content.GetValueForProperty("NonAdminUserPassword",((Microsoft.Azure.PowerShell.Cmdlets.LabServices.Models.ILabUpdateInternal)this).NonAdminUserPassword, (object ss) => (System.Security.SecureString)ss);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.LabServices.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The lab resource for updates.
    [System.ComponentModel.TypeConverter(typeof(LabUpdateTypeConverter))]
    public partial interface ILabUpdate

    {

    }
}