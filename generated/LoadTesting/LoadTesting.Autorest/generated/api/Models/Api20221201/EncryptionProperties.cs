// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Runtime.Extensions;

    /// <summary>
    /// Key and identity details for Customer Managed Key encryption of load test resource
    /// </summary>
    public partial class EncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesInternal
    {

        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.PropertyOrigin.Inlined)]
        public string EncryptionIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentityInternal)Identity).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentityInternal)Identity).ResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentity _identity;

        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.EncryptionPropertiesIdentity()); set => this._identity = value; }

        /// <summary>Managed identity type to use for accessing encryption key Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Support.Type? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Support.Type)""); }

        /// <summary>Backing field for <see cref="KeyUrl" /> property.</summary>
        private string _keyUrl;

        /// <summary>
        /// key encryption key Url, versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.PropertyOrigin.Owned)]
        public string KeyUrl { get => this._keyUrl; set => this._keyUrl = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentity Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.EncryptionPropertiesIdentity()); set { {_identity = value;} } }

        /// <summary>Creates an new <see cref="EncryptionProperties" /> instance.</summary>
        public EncryptionProperties()
        {

        }
    }
    /// Key and identity details for Customer Managed Key encryption of load test resource
    public partial interface IEncryptionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Runtime.IJsonSerializable
    {
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionIdentityResourceId { get; set; }
        /// <summary>Managed identity type to use for accessing encryption key Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed identity type to use for accessing encryption key Url",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Support.Type) })]
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Support.Type? IdentityType { get; set; }
        /// <summary>
        /// key encryption key Url, versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"key encryption key Url, versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyUrl { get; set; }

    }
    /// Key and identity details for Customer Managed Key encryption of load test resource
    internal partial interface IEncryptionPropertiesInternal

    {
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId
        /// </summary>
        string EncryptionIdentityResourceId { get; set; }
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Models.Api20221201.IEncryptionPropertiesIdentity Identity { get; set; }
        /// <summary>Managed identity type to use for accessing encryption key Url</summary>
        Microsoft.Azure.PowerShell.Cmdlets.LoadTesting.Support.Type? IdentityType { get; set; }
        /// <summary>
        /// key encryption key Url, versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek.
        /// </summary>
        string KeyUrl { get; set; }

    }
}