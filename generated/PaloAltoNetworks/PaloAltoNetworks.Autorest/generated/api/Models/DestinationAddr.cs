// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Extensions;

    /// <summary>destination address</summary>
    public partial class DestinationAddr :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDestinationAddr,
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Models.IDestinationAddrInternal
    {

        /// <summary>Backing field for <see cref="Cidr" /> property.</summary>
        private System.Collections.Generic.List<string> _cidr;

        /// <summary>special value 'any'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Cidr { get => this._cidr; set => this._cidr = value; }

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private System.Collections.Generic.List<string> _country;

        /// <summary>list of countries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Country { get => this._country; set => this._country = value; }

        /// <summary>Backing field for <see cref="Feed" /> property.</summary>
        private System.Collections.Generic.List<string> _feed;

        /// <summary>list of feeds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Feed { get => this._feed; set => this._feed = value; }

        /// <summary>Backing field for <see cref="FqdnList" /> property.</summary>
        private System.Collections.Generic.List<string> _fqdnList;

        /// <summary>fqdn list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> FqdnList { get => this._fqdnList; set => this._fqdnList = value; }

        /// <summary>Backing field for <see cref="PrefixList" /> property.</summary>
        private System.Collections.Generic.List<string> _prefixList;

        /// <summary>prefix list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Origin(Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> PrefixList { get => this._prefixList; set => this._prefixList = value; }

        /// <summary>Creates an new <see cref="DestinationAddr" /> instance.</summary>
        public DestinationAddr()
        {

        }
    }
    /// destination address
    public partial interface IDestinationAddr :
        Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.IJsonSerializable
    {
        /// <summary>special value 'any'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"special value 'any'",
        SerializedName = @"cidrs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Cidr { get; set; }
        /// <summary>list of countries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of countries",
        SerializedName = @"countries",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Country { get; set; }
        /// <summary>list of feeds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of feeds",
        SerializedName = @"feeds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Feed { get; set; }
        /// <summary>fqdn list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"fqdn list",
        SerializedName = @"fqdnLists",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FqdnList { get; set; }
        /// <summary>prefix list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PaloAltoNetworks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"prefix list",
        SerializedName = @"prefixLists",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> PrefixList { get; set; }

    }
    /// destination address
    internal partial interface IDestinationAddrInternal

    {
        /// <summary>special value 'any'</summary>
        System.Collections.Generic.List<string> Cidr { get; set; }
        /// <summary>list of countries</summary>
        System.Collections.Generic.List<string> Country { get; set; }
        /// <summary>list of feeds</summary>
        System.Collections.Generic.List<string> Feed { get; set; }
        /// <summary>fqdn list</summary>
        System.Collections.Generic.List<string> FqdnList { get; set; }
        /// <summary>prefix list</summary>
        System.Collections.Generic.List<string> PrefixList { get; set; }

    }
}