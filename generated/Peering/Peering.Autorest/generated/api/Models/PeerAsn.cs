// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>The essential information related to the peer's ASN.</summary>
    public partial class PeerAsn :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsn,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Resource();

        /// <summary>The error message for the validation state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ErrorMessage; }

        /// <summary>The ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnInternal.ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ErrorMessage = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnProperties Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.PeerAsnProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ValidationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnInternal.ValidationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ValidationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ValidationState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name; }

        /// <summary>The contact details of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 4)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IContactDetail> PeerContactDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerContactDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerContactDetail = value ?? null /* arrayOf */; }

        /// <summary>The name of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 1)]
        public string PeerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerName = value ?? null; }

        /// <summary>The Autonomous System Number (ASN) of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 2)]
        public int? PropertiesPeerAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerAsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).PeerAsn = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnProperties _property;

        /// <summary>The properties that define a peer's ASN.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.PeerAsnProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type; }

        /// <summary>The validation state of the ASN associated with the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 3)]
        public string ValidationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnPropertiesInternal)Property).ValidationState; }

        /// <summary>Creates an new <see cref="PeerAsn" /> instance.</summary>
        public PeerAsn()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The essential information related to the peer's ASN.
    public partial interface IPeerAsn :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource
    {
        /// <summary>The error message for the validation state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error message for the validation state",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>The contact details of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The contact details of the peer.",
        SerializedName = @"peerContactDetail",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IContactDetail) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IContactDetail> PeerContactDetail { get; set; }
        /// <summary>The name of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the peer.",
        SerializedName = @"peerName",
        PossibleTypes = new [] { typeof(string) })]
        string PeerName { get; set; }
        /// <summary>The Autonomous System Number (ASN) of the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Autonomous System Number (ASN) of the peer.",
        SerializedName = @"peerAsn",
        PossibleTypes = new [] { typeof(int) })]
        int? PropertiesPeerAsn { get; set; }
        /// <summary>The validation state of the ASN associated with the peer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The validation state of the ASN associated with the peer.",
        SerializedName = @"validationState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Peering.PSArgumentCompleterAttribute("None", "Pending", "Approved", "Failed")]
        string ValidationState { get;  }

    }
    /// The essential information related to the peer's ASN.
    internal partial interface IPeerAsnInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal
    {
        /// <summary>The error message for the validation state</summary>
        string ErrorMessage { get; set; }
        /// <summary>The contact details of the peer.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IContactDetail> PeerContactDetail { get; set; }
        /// <summary>The name of the peer.</summary>
        string PeerName { get; set; }
        /// <summary>The Autonomous System Number (ASN) of the peer.</summary>
        int? PropertiesPeerAsn { get; set; }
        /// <summary>The properties that define a peer's ASN.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeerAsnProperties Property { get; set; }
        /// <summary>The validation state of the ASN associated with the peer.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Peering.PSArgumentCompleterAttribute("None", "Pending", "Approved", "Failed")]
        string ValidationState { get; set; }

    }
}