// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>
    /// Peering location is where connectivity could be established to the Microsoft Cloud Edge.
    /// </summary>
    public partial class PeeringLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocation,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Resource();

        /// <summary>The Azure region associated with the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 2)]
        public string AzureRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).AzureRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).AzureRegion = value ?? null; }

        /// <summary>The country in which the peering location exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 1)]
        public string Country { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Country; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Country = value ?? null; }

        /// <summary>The list of bandwidth offers available at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringBandwidthOffer> DirectBandwidthOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).DirectBandwidthOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).DirectBandwidthOffer = value ?? null /* arrayOf */; }

        /// <summary>The list of direct peering facilities at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IDirectPeeringFacility> DirectPeeringFacility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).DirectPeeringFacility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).DirectPeeringFacility = value ?? null /* arrayOf */; }

        /// <summary>The list of exchange peering facilities at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IExchangePeeringFacility> ExchangePeeringFacility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).ExchangePeeringFacility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).ExchangePeeringFacility = value ?? null /* arrayOf */; }

        /// <summary>The ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>The kind of peering that the peering location supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 3)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Internal Acessors for Direct</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesDirect Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationInternal.Direct { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Direct; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Direct = value; }

        /// <summary>Internal Acessors for Exchange</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesExchange Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationInternal.Exchange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Exchange; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).Exchange = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationProperties Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.PeeringLocationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Name; }

        /// <summary>The name of the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string PropertiesPeeringLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).PeeringLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesInternal)Property).PeeringLocation = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationProperties _property;

        /// <summary>The properties that define a peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.PeeringLocationProperties()); set => this._property = value; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="PeeringLocation" /> instance.</summary>
        public PeeringLocation()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Peering location is where connectivity could be established to the Microsoft Cloud Edge.
    public partial interface IPeeringLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResource
    {
        /// <summary>The Azure region associated with the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Azure region associated with the peering location.",
        SerializedName = @"azureRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AzureRegion { get; set; }
        /// <summary>The country in which the peering location exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The country in which the peering location exists.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get; set; }
        /// <summary>The list of bandwidth offers available at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of bandwidth offers available at the peering location.",
        SerializedName = @"bandwidthOffers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringBandwidthOffer) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringBandwidthOffer> DirectBandwidthOffer { get; set; }
        /// <summary>The list of direct peering facilities at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of direct peering facilities at the peering location.",
        SerializedName = @"peeringFacilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IDirectPeeringFacility) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IDirectPeeringFacility> DirectPeeringFacility { get; set; }
        /// <summary>The list of exchange peering facilities at the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of exchange peering facilities at the peering location.",
        SerializedName = @"peeringFacilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IExchangePeeringFacility) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IExchangePeeringFacility> ExchangePeeringFacility { get; set; }
        /// <summary>The kind of peering that the peering location supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The kind of peering that the peering location supports.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Peering.PSArgumentCompleterAttribute("Direct", "Exchange")]
        string Kind { get; set; }
        /// <summary>The name of the peering location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the peering location.",
        SerializedName = @"peeringLocation",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesPeeringLocation { get; set; }

    }
    /// Peering location is where connectivity could be established to the Microsoft Cloud Edge.
    internal partial interface IPeeringLocationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IResourceInternal
    {
        /// <summary>The Azure region associated with the peering location.</summary>
        string AzureRegion { get; set; }
        /// <summary>The country in which the peering location exists.</summary>
        string Country { get; set; }
        /// <summary>The properties that define a direct peering location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesDirect Direct { get; set; }
        /// <summary>The list of bandwidth offers available at the peering location.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringBandwidthOffer> DirectBandwidthOffer { get; set; }
        /// <summary>The list of direct peering facilities at the peering location.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IDirectPeeringFacility> DirectPeeringFacility { get; set; }
        /// <summary>The properties that define an exchange peering location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationPropertiesExchange Exchange { get; set; }
        /// <summary>The list of exchange peering facilities at the peering location.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IExchangePeeringFacility> ExchangePeeringFacility { get; set; }
        /// <summary>The kind of peering that the peering location supports.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Peering.PSArgumentCompleterAttribute("Direct", "Exchange")]
        string Kind { get; set; }
        /// <summary>The name of the peering location.</summary>
        string PropertiesPeeringLocation { get; set; }
        /// <summary>The properties that define a peering location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.IPeeringLocationProperties Property { get; set; }

    }
}