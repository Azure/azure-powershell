// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Describes the properties of a Virtual Machine.</summary>
    public partial class VirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="HardwareProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfile _hardwareProfile;

        /// <summary>Specifies the hardware settings for the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfile HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.HardwareProfile()); set => this._hardwareProfile = value; }

        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public bool? HardwareProfileCpuHotAddEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotAddEnabled; }

        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public bool? HardwareProfileCpuHotRemoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotRemoveEnabled; }

        /// <summary>
        /// Gets or sets a value indicating whether memory can be added while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public bool? HardwareProfileMemoryHotAddEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).MemoryHotAddEnabled; }

        /// <summary>Gets or sets memory size in MBs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public int? HardwareProfileMemorySizeMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).MemorySizeMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).MemorySizeMb = value ?? default(int); }

        /// <summary>
        /// Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public int? HardwareProfileNumCoresPerSocket { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).NumCoresPerSocket; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).NumCoresPerSocket = value ?? default(int); }

        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public int? HardwareProfileNumCpUs { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).NumCpUs; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).NumCpUs = value ?? default(int); }

        /// <summary>Internal Acessors for HardwareProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfile Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.HardwareProfile()); set { {_hardwareProfile = value;} } }

        /// <summary>Internal Acessors for HardwareProfileCpuHotAddEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfileCpuHotAddEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotAddEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotAddEnabled = value; }

        /// <summary>Internal Acessors for HardwareProfileCpuHotRemoveEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfileCpuHotRemoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotRemoveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).CpuHotRemoveEnabled = value; }

        /// <summary>Internal Acessors for HardwareProfileMemoryHotAddEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfileMemoryHotAddEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).MemoryHotAddEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfileInternal)HardwareProfile).MemoryHotAddEnabled = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.NetworkProfileUpdate()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualMachineInstanceUpdatePropertiesInternal.StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.StorageProfileUpdate()); set { {_storageProfile = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdate _networkProfile;

        /// <summary>Specifies the network interfaces of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdate NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.NetworkProfileUpdate()); set => this._networkProfile = value; }

        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StorageProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdate _storageProfile;

        /// <summary>Specifies the storage settings for the virtual machine disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdate StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.StorageProfileUpdate()); set => this._storageProfile = value; }

        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskUpdate> StorageProfileDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdateInternal)StorageProfile).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdateInternal)StorageProfile).Disk = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="VirtualMachineInstanceUpdateProperties" /> instance.</summary>
        public VirtualMachineInstanceUpdateProperties()
        {

        }
    }
    /// Describes the properties of a Virtual Machine.
    public partial interface IVirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
        SerializedName = @"cpuHotAddEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HardwareProfileCpuHotAddEnabled { get;  }
        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
        SerializedName = @"cpuHotRemoveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HardwareProfileCpuHotRemoveEnabled { get;  }
        /// <summary>
        /// Gets or sets a value indicating whether memory can be added while this virtual machine is running.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
        SerializedName = @"memoryHotAddEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HardwareProfileMemoryHotAddEnabled { get;  }
        /// <summary>Gets or sets memory size in MBs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets memory size in MBs for the vm.",
        SerializedName = @"memorySizeMB",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileMemorySizeMb { get; set; }
        /// <summary>
        /// Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
        SerializedName = @"numCoresPerSocket",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileNumCoresPerSocket { get; set; }
        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the number of vCPUs for the vm.",
        SerializedName = @"numCPUs",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileNumCpUs { get; set; }
        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the list of network interfaces associated with the virtual machine.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkInterfaceUpdate) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the list of virtual disks associated with the virtual machine.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskUpdate) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskUpdate> StorageProfileDisk { get; set; }

    }
    /// Describes the properties of a Virtual Machine.
    internal partial interface IVirtualMachineInstanceUpdatePropertiesInternal

    {
        /// <summary>Specifies the hardware settings for the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IHardwareProfile HardwareProfile { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.
        /// </summary>
        bool? HardwareProfileCpuHotAddEnabled { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.
        /// </summary>
        bool? HardwareProfileCpuHotRemoveEnabled { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether memory can be added while this virtual machine is running.
        /// </summary>
        bool? HardwareProfileMemoryHotAddEnabled { get; set; }
        /// <summary>Gets or sets memory size in MBs for the vm.</summary>
        int? HardwareProfileMemorySizeMb { get; set; }
        /// <summary>
        /// Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.
        /// </summary>
        int? HardwareProfileNumCoresPerSocket { get; set; }
        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        int? HardwareProfileNumCpUs { get; set; }
        /// <summary>Specifies the network interfaces of the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkProfileUpdate NetworkProfile { get; set; }
        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Specifies the storage settings for the virtual machine disks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IStorageProfileUpdate StorageProfile { get; set; }
        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskUpdate> StorageProfileDisk { get; set; }

    }
}