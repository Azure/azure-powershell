// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Specifies the operating system settings for the virtual machine.</summary>
    public partial class OSProfileForVminstance :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstance,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstanceInternal
    {

        /// <summary>Backing field for <see cref="AdminPassword" /> property.</summary>
        private string _adminPassword;

        /// <summary>Sets administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string AdminPassword { get => this._adminPassword; set => this._adminPassword = value; }

        /// <summary>Backing field for <see cref="AdminUsername" /> property.</summary>
        private string _adminUsername;

        /// <summary>Gets or sets administrator username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string AdminUsername { get => this._adminUsername; set => this._adminUsername = value; }

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>Gets or sets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; set => this._computerName = value; }

        /// <summary>Backing field for <see cref="GuestId" /> property.</summary>
        private string _guestId;

        /// <summary>Gets or sets the guestId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string GuestId { get => this._guestId; set => this._guestId = value; }

        /// <summary>Internal Acessors for OSSku</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstanceInternal.OSSku { get => this._oSSku; set { {_oSSku = value;} } }

        /// <summary>Internal Acessors for ToolsRunningStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstanceInternal.ToolsRunningStatus { get => this._toolsRunningStatus; set { {_toolsRunningStatus = value;} } }

        /// <summary>Internal Acessors for ToolsVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstanceInternal.ToolsVersion { get => this._toolsVersion; set { {_toolsVersion = value;} } }

        /// <summary>Internal Acessors for ToolsVersionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IOSProfileForVminstanceInternal.ToolsVersionStatus { get => this._toolsVersionStatus; set { {_toolsVersionStatus = value;} } }

        /// <summary>Backing field for <see cref="OSSku" /> property.</summary>
        private string _oSSku;

        /// <summary>Gets or sets os sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string OSSku { get => this._oSSku; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Backing field for <see cref="ToolsRunningStatus" /> property.</summary>
        private string _toolsRunningStatus;

        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ToolsRunningStatus { get => this._toolsRunningStatus; }

        /// <summary>Backing field for <see cref="ToolsVersion" /> property.</summary>
        private string _toolsVersion;

        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ToolsVersion { get => this._toolsVersion; }

        /// <summary>Backing field for <see cref="ToolsVersionStatus" /> property.</summary>
        private string _toolsVersionStatus;

        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string ToolsVersionStatus { get => this._toolsVersionStatus; }

        /// <summary>Creates an new <see cref="OSProfileForVminstance" /> instance.</summary>
        public OSProfileForVminstance()
        {

        }
    }
    /// Specifies the operating system settings for the virtual machine.
    public partial interface IOSProfileForVminstance :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>Sets administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = true,
        Update = true,
        Description = @"Sets administrator password.",
        SerializedName = @"adminPassword",
        PossibleTypes = new [] { typeof(string) })]
        string AdminPassword { get; set; }
        /// <summary>Gets or sets administrator username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets administrator username.",
        SerializedName = @"adminUsername",
        PossibleTypes = new [] { typeof(string) })]
        string AdminUsername { get; set; }
        /// <summary>Gets or sets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets computer name.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get; set; }
        /// <summary>Gets or sets the guestId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the guestId.",
        SerializedName = @"guestId",
        PossibleTypes = new [] { typeof(string) })]
        string GuestId { get; set; }
        /// <summary>Gets or sets os sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets os sku.",
        SerializedName = @"osSku",
        PossibleTypes = new [] { typeof(string) })]
        string OSSku { get;  }
        /// <summary>Gets or sets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the current running status of VMware Tools running in the guest operating system.",
        SerializedName = @"toolsRunningStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsRunningStatus { get;  }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the current version of VMware Tools.",
        SerializedName = @"toolsVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersion { get;  }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the current version status of VMware Tools installed in the guest operating system.",
        SerializedName = @"toolsVersionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ToolsVersionStatus { get;  }

    }
    /// Specifies the operating system settings for the virtual machine.
    internal partial interface IOSProfileForVminstanceInternal

    {
        /// <summary>Sets administrator password.</summary>
        string AdminPassword { get; set; }
        /// <summary>Gets or sets administrator username.</summary>
        string AdminUsername { get; set; }
        /// <summary>Gets or sets computer name.</summary>
        string ComputerName { get; set; }
        /// <summary>Gets or sets the guestId.</summary>
        string GuestId { get; set; }
        /// <summary>Gets or sets os sku.</summary>
        string OSSku { get; set; }
        /// <summary>Gets or sets the type of the os.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get; set; }
        /// <summary>
        /// Gets or sets the current running status of VMware Tools running in the guest operating system.
        /// </summary>
        string ToolsRunningStatus { get; set; }
        /// <summary>Gets or sets the current version of VMware Tools.</summary>
        string ToolsVersion { get; set; }
        /// <summary>
        /// Gets or sets the current version status of VMware Tools installed in the guest operating system.
        /// </summary>
        string ToolsVersionStatus { get; set; }

    }
}