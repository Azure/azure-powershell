// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Extensions;

    /// <summary>Virtual disk model</summary>
    public partial class VirtualDisk :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDisk,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskInternal
    {

        /// <summary>Backing field for <see cref="ControllerKey" /> property.</summary>
        private int? _controllerKey;

        /// <summary>Gets or sets the controller id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public int? ControllerKey { get => this._controllerKey; set => this._controllerKey = value; }

        /// <summary>Backing field for <see cref="DeviceKey" /> property.</summary>
        private int? _deviceKey;

        /// <summary>Gets or sets the device key value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public int? DeviceKey { get => this._deviceKey; set => this._deviceKey = value; }

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>Gets or sets the device name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; set => this._deviceName = value; }

        /// <summary>Backing field for <see cref="DiskMode" /> property.</summary>
        private string _diskMode;

        /// <summary>Gets or sets the disk mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string DiskMode { get => this._diskMode; set => this._diskMode = value; }

        /// <summary>Backing field for <see cref="DiskObjectId" /> property.</summary>
        private string _diskObjectId;

        /// <summary>Gets or sets the disk object id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string DiskObjectId { get => this._diskObjectId; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="DiskType" /> property.</summary>
        private string _diskType;

        /// <summary>Gets or sets the disk backing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string DiskType { get => this._diskType; set => this._diskType = value; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private string _label;

        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Label { get => this._label; }

        /// <summary>Internal Acessors for DiskObjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskInternal.DiskObjectId { get => this._diskObjectId; set { {_diskObjectId = value;} } }

        /// <summary>Internal Acessors for Label</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Models.IVirtualDiskInternal.Label { get => this._label; set { {_label = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Gets or sets the name of the virtual disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="UnitNumber" /> property.</summary>
        private int? _unitNumber;

        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PropertyOrigin.Owned)]
        public int? UnitNumber { get => this._unitNumber; set => this._unitNumber = value; }

        /// <summary>Creates an new <see cref="VirtualDisk" /> instance.</summary>
        public VirtualDisk()
        {

        }
    }
    /// Virtual disk model
    public partial interface IVirtualDisk :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the controller id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the controller id.",
        SerializedName = @"controllerKey",
        PossibleTypes = new [] { typeof(int) })]
        int? ControllerKey { get; set; }
        /// <summary>Gets or sets the device key value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the device key value.",
        SerializedName = @"deviceKey",
        PossibleTypes = new [] { typeof(int) })]
        int? DeviceKey { get; set; }
        /// <summary>Gets or sets the device name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the device name.",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>Gets or sets the disk mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk mode.",
        SerializedName = @"diskMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("persistent", "independent_persistent", "independent_nonpersistent")]
        string DiskMode { get; set; }
        /// <summary>Gets or sets the disk object id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the disk object id.",
        SerializedName = @"diskObjectId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskObjectId { get;  }
        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk total size.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get; set; }
        /// <summary>Gets or sets the disk backing type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk backing type.",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("flat", "pmem", "rawphysical", "rawvirtual", "sparse", "sesparse", "unknown")]
        string DiskType { get; set; }
        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets or sets the label of the virtual disk in vCenter.",
        SerializedName = @"label",
        PossibleTypes = new [] { typeof(string) })]
        string Label { get;  }
        /// <summary>Gets or sets the name of the virtual disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the name of the virtual disk.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the unit number of the disk on the controller.",
        SerializedName = @"unitNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? UnitNumber { get; set; }

    }
    /// Virtual disk model
    internal partial interface IVirtualDiskInternal

    {
        /// <summary>Gets or sets the controller id.</summary>
        int? ControllerKey { get; set; }
        /// <summary>Gets or sets the device key value.</summary>
        int? DeviceKey { get; set; }
        /// <summary>Gets or sets the device name.</summary>
        string DeviceName { get; set; }
        /// <summary>Gets or sets the disk mode.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("persistent", "independent_persistent", "independent_nonpersistent")]
        string DiskMode { get; set; }
        /// <summary>Gets or sets the disk object id.</summary>
        string DiskObjectId { get; set; }
        /// <summary>Gets or sets the disk total size.</summary>
        int? DiskSizeGb { get; set; }
        /// <summary>Gets or sets the disk backing type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedVMware.PSArgumentCompleterAttribute("flat", "pmem", "rawphysical", "rawvirtual", "sparse", "sesparse", "unknown")]
        string DiskType { get; set; }
        /// <summary>Gets or sets the label of the virtual disk in vCenter.</summary>
        string Label { get; set; }
        /// <summary>Gets or sets the name of the virtual disk.</summary>
        string Name { get; set; }
        /// <summary>Gets or sets the unit number of the disk on the controller.</summary>
        int? UnitNumber { get; set; }

    }
}