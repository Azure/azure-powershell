// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.PowerShell;

    /// <summary>The common properties of the export.</summary>
    [System.ComponentModel.TypeConverter(typeof(CommonExportPropertiesTypeConverter))]
    public partial class CommonExportProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CommonExportProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CommonExportProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DeliveryInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfo = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDeliveryInfo) content.GetValueForProperty("DeliveryInfo",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfo, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDeliveryInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Definition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Definition = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDefinition) content.GetValueForProperty("Definition",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Definition, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RunHistory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistory = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecutionListResult) content.GetValueForProperty("RunHistory",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistory, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportExecutionListResultTypeConverter.ConvertFrom);
            }
            if (content.Contains("Format"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Format = (string) content.GetValueForProperty("Format",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Format, global::System.Convert.ToString);
            }
            if (content.Contains("PartitionData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).PartitionData = (bool?) content.GetValueForProperty("PartitionData",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).PartitionData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NextRunTimeEstimate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).NextRunTimeEstimate = (global::System.DateTime?) content.GetValueForProperty("NextRunTimeEstimate",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).NextRunTimeEstimate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DeliveryInfoDestination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfoDestination = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDeliveryDestination) content.GetValueForProperty("DeliveryInfoDestination",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfoDestination, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDeliveryDestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionTimePeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimePeriod = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportTimePeriod) content.GetValueForProperty("DefinitionTimePeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimePeriod, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportTimePeriodTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionDataSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionDataSet = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDataset) content.GetValueForProperty("DefinitionDataSet",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionDataSet, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDatasetTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionType = (string) content.GetValueForProperty("DefinitionType",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionType, global::System.Convert.ToString);
            }
            if (content.Contains("DefinitionTimeframe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimeframe = (string) content.GetValueForProperty("DefinitionTimeframe",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimeframe, global::System.Convert.ToString);
            }
            if (content.Contains("RunHistoryValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistoryValue = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecution>) content.GetValueForProperty("RunHistoryValue",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistoryValue, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecution>(__y, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportExecutionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationResourceId = (string) content.GetValueForProperty("DestinationResourceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationContainer = (string) content.GetValueForProperty("DestinationContainer",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationContainer, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationRootFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationRootFolderPath = (string) content.GetValueForProperty("DestinationRootFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationRootFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationSasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationSasToken = (string) content.GetValueForProperty("DestinationSasToken",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationSasToken, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationStorageAccount = (string) content.GetValueForProperty("DestinationStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodFrom = (global::System.DateTime?) content.GetValueForProperty("TimePeriodFrom",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodFrom, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimePeriodTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodTo = (global::System.DateTime?) content.GetValueForProperty("TimePeriodTo",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodTo, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DataSetConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDatasetConfiguration) content.GetValueForProperty("DataSetConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetConfiguration, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDatasetConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSetGranularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetGranularity = (string) content.GetValueForProperty("DataSetGranularity",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetGranularity, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationColumn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).ConfigurationColumn = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConfigurationColumn",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).ConfigurationColumn, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CommonExportProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CommonExportProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DeliveryInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfo = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDeliveryInfo) content.GetValueForProperty("DeliveryInfo",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfo, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDeliveryInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Definition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Definition = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDefinition) content.GetValueForProperty("Definition",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Definition, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RunHistory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistory = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecutionListResult) content.GetValueForProperty("RunHistory",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistory, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportExecutionListResultTypeConverter.ConvertFrom);
            }
            if (content.Contains("Format"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Format = (string) content.GetValueForProperty("Format",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).Format, global::System.Convert.ToString);
            }
            if (content.Contains("PartitionData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).PartitionData = (bool?) content.GetValueForProperty("PartitionData",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).PartitionData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NextRunTimeEstimate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).NextRunTimeEstimate = (global::System.DateTime?) content.GetValueForProperty("NextRunTimeEstimate",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).NextRunTimeEstimate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DeliveryInfoDestination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfoDestination = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDeliveryDestination) content.GetValueForProperty("DeliveryInfoDestination",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DeliveryInfoDestination, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDeliveryDestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionTimePeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimePeriod = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportTimePeriod) content.GetValueForProperty("DefinitionTimePeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimePeriod, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportTimePeriodTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionDataSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionDataSet = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDataset) content.GetValueForProperty("DefinitionDataSet",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionDataSet, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDatasetTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefinitionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionType = (string) content.GetValueForProperty("DefinitionType",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionType, global::System.Convert.ToString);
            }
            if (content.Contains("DefinitionTimeframe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimeframe = (string) content.GetValueForProperty("DefinitionTimeframe",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DefinitionTimeframe, global::System.Convert.ToString);
            }
            if (content.Contains("RunHistoryValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistoryValue = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecution>) content.GetValueForProperty("RunHistoryValue",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).RunHistoryValue, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportExecution>(__y, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportExecutionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationResourceId = (string) content.GetValueForProperty("DestinationResourceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationContainer = (string) content.GetValueForProperty("DestinationContainer",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationContainer, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationRootFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationRootFolderPath = (string) content.GetValueForProperty("DestinationRootFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationRootFolderPath, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationSasToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationSasToken = (string) content.GetValueForProperty("DestinationSasToken",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationSasToken, global::System.Convert.ToString);
            }
            if (content.Contains("DestinationStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationStorageAccount = (string) content.GetValueForProperty("DestinationStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DestinationStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodFrom = (global::System.DateTime?) content.GetValueForProperty("TimePeriodFrom",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodFrom, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimePeriodTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodTo = (global::System.DateTime?) content.GetValueForProperty("TimePeriodTo",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).TimePeriodTo, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DataSetConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IExportDatasetConfiguration) content.GetValueForProperty("DataSetConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetConfiguration, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ExportDatasetConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSetGranularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetGranularity = (string) content.GetValueForProperty("DataSetGranularity",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).DataSetGranularity, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationColumn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).ConfigurationColumn = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConfigurationColumn",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportPropertiesInternal)this).ConfigurationColumn, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CommonExportProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CommonExportProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CommonExportProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CommonExportProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CommonExportProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CommonExportProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICommonExportProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The common properties of the export.
    [System.ComponentModel.TypeConverter(typeof(CommonExportPropertiesTypeConverter))]
    public partial interface ICommonExportProperties

    {

    }
}