// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Extensions;

    /// <summary>An individual alert.</summary>
    public partial class Alert :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlert,
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ProxyResource();

        /// <summary>dateTime in which alert was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string CloseTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CloseTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CloseTime = value ?? null; }

        /// <summary>related budget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string CostEntityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CostEntityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CostEntityId = value ?? null; }

        /// <summary>dateTime in which alert was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).CreationTime = value ?? null; }

        /// <summary>Alert category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DefinitionCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionCategory = value ?? null; }

        /// <summary>Criteria that triggered alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DefinitionCriterion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionCriterion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionCriterion = value ?? null; }

        /// <summary>type of alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DefinitionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DefinitionType = value ?? null; }

        /// <summary>Alert description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>budget threshold amount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public decimal? DetailAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailAmount = value ?? default(decimal); }

        /// <summary>company name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailCompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailCompanyName = value ?? null; }

        /// <summary>list of emails to contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailContactEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactEmail = value ?? null /* arrayOf */; }

        /// <summary>list of action groups to broadcast to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailContactGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactGroup = value ?? null /* arrayOf */; }

        /// <summary>list of contact roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailContactRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailContactRole = value ?? null /* arrayOf */; }

        /// <summary>current spend</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public decimal? DetailCurrentSpend { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailCurrentSpend; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailCurrentSpend = value ?? default(decimal); }

        /// <summary>department name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailDepartmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailDepartmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailDepartmentName = value ?? null; }

        /// <summary>datetime of enrollmentEndDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailEnrollmentEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentEndDate = value ?? null; }

        /// <summary>enrollment number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailEnrollmentNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentNumber = value ?? null; }

        /// <summary>datetime of enrollmentStartDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailEnrollmentStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailEnrollmentStartDate = value ?? null; }

        /// <summary>invoicing threshold</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public decimal? DetailInvoicingThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailInvoicingThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailInvoicingThreshold = value ?? default(decimal); }

        /// <summary>array of meters to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailMeterFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailMeterFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailMeterFilter = value ?? null /* arrayOf */; }

        /// <summary>operator used to compare currentSpend with amount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailOperator = value ?? null; }

        /// <summary>overriding alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailOverridingAlert { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailOverridingAlert; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailOverridingAlert = value ?? null; }

        /// <summary>datetime of periodStartDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailPeriodStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailPeriodStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailPeriodStartDate = value ?? null; }

        /// <summary>array of resources to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailResourceFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailResourceFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailResourceFilter = value ?? null /* arrayOf */; }

        /// <summary>array of resourceGroups to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DetailResourceGroupFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailResourceGroupFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailResourceGroupFilter = value ?? null /* arrayOf */; }

        /// <summary>tags to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAny DetailTagFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTagFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTagFilter = value ?? null /* model class */; }

        /// <summary>notification threshold percentage as a decimal which activated this alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public decimal? DetailThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailThreshold = value ?? default(decimal); }

        /// <summary>Type of timegrain cadence</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailTimeGrainType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTimeGrainType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTimeGrainType = value ?? null; }

        /// <summary>notificationId that triggered this alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailTriggeredBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTriggeredBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailTriggeredBy = value ?? null; }

        /// <summary>unit of currency being used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string DetailUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).DetailUnit = value ?? null; }

        /// <summary>
        /// eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating
        /// the latest version or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).ETag = value ?? null; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>Internal Acessors for Definition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesDefinition Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertInternal.Definition { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Definition; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Definition = value; }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesDetails Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Detail = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertProperties Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.AlertProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>dateTime in which alert was last modified</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string ModificationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).ModificationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).ModificationTime = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertProperties _property;

        /// <summary>Alert properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.AlertProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Source of alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Source = value ?? null; }

        /// <summary>alert status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).Status = value ?? null; }

        /// <summary>dateTime in which the alert status was last modified</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string StatusModificationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).StatusModificationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).StatusModificationTime = value ?? null; }

        /// <summary>User who last modified the alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inlined)]
        public string StatusModificationUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).StatusModificationUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesInternal)Property).StatusModificationUserName = value ?? null; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Origin(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="Alert" /> instance.</summary>
        public Alert()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// An individual alert.
    public partial interface IAlert :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResource
    {
        /// <summary>dateTime in which alert was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"dateTime in which alert was closed",
        SerializedName = @"closeTime",
        PossibleTypes = new [] { typeof(string) })]
        string CloseTime { get; set; }
        /// <summary>related budget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"related budget",
        SerializedName = @"costEntityId",
        PossibleTypes = new [] { typeof(string) })]
        string CostEntityId { get; set; }
        /// <summary>dateTime in which alert was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"dateTime in which alert was created",
        SerializedName = @"creationTime",
        PossibleTypes = new [] { typeof(string) })]
        string CreationTime { get; set; }
        /// <summary>Alert category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Alert category",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Cost", "Usage", "Billing", "System")]
        string DefinitionCategory { get; set; }
        /// <summary>Criteria that triggered alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Criteria that triggered alert",
        SerializedName = @"criteria",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("CostThresholdExceeded", "UsageThresholdExceeded", "CreditThresholdApproaching", "CreditThresholdReached", "QuotaThresholdApproaching", "QuotaThresholdReached", "MultiCurrency", "ForecastCostThresholdExceeded", "ForecastUsageThresholdExceeded", "InvoiceDueDateApproaching", "InvoiceDueDateReached", "CrossCloudNewDataAvailable", "CrossCloudCollectionError", "GeneralThresholdError")]
        string DefinitionCriterion { get; set; }
        /// <summary>type of alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"type of alert",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Budget", "Invoice", "Credit", "Quota", "General", "xCloud", "BudgetForecast")]
        string DefinitionType { get; set; }
        /// <summary>Alert description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Alert description",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>budget threshold amount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"budget threshold amount",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DetailAmount { get; set; }
        /// <summary>company name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"company name",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailCompanyName { get; set; }
        /// <summary>list of emails to contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of emails to contact",
        SerializedName = @"contactEmails",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailContactEmail { get; set; }
        /// <summary>list of action groups to broadcast to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of action groups to broadcast to",
        SerializedName = @"contactGroups",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailContactGroup { get; set; }
        /// <summary>list of contact roles</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of contact roles",
        SerializedName = @"contactRoles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailContactRole { get; set; }
        /// <summary>current spend</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"current spend",
        SerializedName = @"currentSpend",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DetailCurrentSpend { get; set; }
        /// <summary>department name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"department name",
        SerializedName = @"departmentName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailDepartmentName { get; set; }
        /// <summary>datetime of enrollmentEndDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"datetime of enrollmentEndDate",
        SerializedName = @"enrollmentEndDate",
        PossibleTypes = new [] { typeof(string) })]
        string DetailEnrollmentEndDate { get; set; }
        /// <summary>enrollment number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"enrollment number",
        SerializedName = @"enrollmentNumber",
        PossibleTypes = new [] { typeof(string) })]
        string DetailEnrollmentNumber { get; set; }
        /// <summary>datetime of enrollmentStartDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"datetime of enrollmentStartDate",
        SerializedName = @"enrollmentStartDate",
        PossibleTypes = new [] { typeof(string) })]
        string DetailEnrollmentStartDate { get; set; }
        /// <summary>invoicing threshold</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"invoicing threshold",
        SerializedName = @"invoicingThreshold",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DetailInvoicingThreshold { get; set; }
        /// <summary>array of meters to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"array of meters to filter by",
        SerializedName = @"meterFilter",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailMeterFilter { get; set; }
        /// <summary>operator used to compare currentSpend with amount</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"operator used to compare currentSpend with amount",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "EqualTo", "GreaterThan", "GreaterThanOrEqualTo", "LessThan", "LessThanOrEqualTo")]
        string DetailOperator { get; set; }
        /// <summary>overriding alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"overriding alert",
        SerializedName = @"overridingAlert",
        PossibleTypes = new [] { typeof(string) })]
        string DetailOverridingAlert { get; set; }
        /// <summary>datetime of periodStartDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"datetime of periodStartDate",
        SerializedName = @"periodStartDate",
        PossibleTypes = new [] { typeof(string) })]
        string DetailPeriodStartDate { get; set; }
        /// <summary>array of resources to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"array of resources to filter by",
        SerializedName = @"resourceFilter",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailResourceFilter { get; set; }
        /// <summary>array of resourceGroups to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"array of resourceGroups to filter by",
        SerializedName = @"resourceGroupFilter",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DetailResourceGroupFilter { get; set; }
        /// <summary>tags to filter by</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"tags to filter by",
        SerializedName = @"tagFilter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAny DetailTagFilter { get; set; }
        /// <summary>notification threshold percentage as a decimal which activated this alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"notification threshold percentage as a decimal which activated this alert",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? DetailThreshold { get; set; }
        /// <summary>Type of timegrain cadence</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of timegrain cadence",
        SerializedName = @"timeGrainType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "Monthly", "Quarterly", "Annually", "BillingMonth", "BillingQuarter", "BillingAnnual")]
        string DetailTimeGrainType { get; set; }
        /// <summary>notificationId that triggered this alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"notificationId that triggered this alert",
        SerializedName = @"triggeredBy",
        PossibleTypes = new [] { typeof(string) })]
        string DetailTriggeredBy { get; set; }
        /// <summary>unit of currency being used</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"unit of currency being used",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string DetailUnit { get; set; }
        /// <summary>dateTime in which alert was last modified</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"dateTime in which alert was last modified",
        SerializedName = @"modificationTime",
        PossibleTypes = new [] { typeof(string) })]
        string ModificationTime { get; set; }
        /// <summary>Source of alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Source of alert",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Preset", "User")]
        string Source { get; set; }
        /// <summary>alert status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"alert status",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "Active", "Overridden", "Resolved", "Dismissed")]
        string Status { get; set; }
        /// <summary>dateTime in which the alert status was last modified</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"dateTime in which the alert status was last modified",
        SerializedName = @"statusModificationTime",
        PossibleTypes = new [] { typeof(string) })]
        string StatusModificationTime { get; set; }
        /// <summary>User who last modified the alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User who last modified the alert",
        SerializedName = @"statusModificationUserName",
        PossibleTypes = new [] { typeof(string) })]
        string StatusModificationUserName { get; set; }

    }
    /// An individual alert.
    public partial interface IAlertInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IProxyResourceInternal
    {
        /// <summary>dateTime in which alert was closed</summary>
        string CloseTime { get; set; }
        /// <summary>related budget</summary>
        string CostEntityId { get; set; }
        /// <summary>dateTime in which alert was created</summary>
        string CreationTime { get; set; }
        /// <summary>defines the type of alert</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesDefinition Definition { get; set; }
        /// <summary>Alert category</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Cost", "Usage", "Billing", "System")]
        string DefinitionCategory { get; set; }
        /// <summary>Criteria that triggered alert</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("CostThresholdExceeded", "UsageThresholdExceeded", "CreditThresholdApproaching", "CreditThresholdReached", "QuotaThresholdApproaching", "QuotaThresholdReached", "MultiCurrency", "ForecastCostThresholdExceeded", "ForecastUsageThresholdExceeded", "InvoiceDueDateApproaching", "InvoiceDueDateReached", "CrossCloudNewDataAvailable", "CrossCloudCollectionError", "GeneralThresholdError")]
        string DefinitionCriterion { get; set; }
        /// <summary>type of alert</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Budget", "Invoice", "Credit", "Quota", "General", "xCloud", "BudgetForecast")]
        string DefinitionType { get; set; }
        /// <summary>Alert description</summary>
        string Description { get; set; }
        /// <summary>Alert details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertPropertiesDetails Detail { get; set; }
        /// <summary>budget threshold amount</summary>
        decimal? DetailAmount { get; set; }
        /// <summary>company name</summary>
        string DetailCompanyName { get; set; }
        /// <summary>list of emails to contact</summary>
        System.Collections.Generic.List<string> DetailContactEmail { get; set; }
        /// <summary>list of action groups to broadcast to</summary>
        System.Collections.Generic.List<string> DetailContactGroup { get; set; }
        /// <summary>list of contact roles</summary>
        System.Collections.Generic.List<string> DetailContactRole { get; set; }
        /// <summary>current spend</summary>
        decimal? DetailCurrentSpend { get; set; }
        /// <summary>department name</summary>
        string DetailDepartmentName { get; set; }
        /// <summary>datetime of enrollmentEndDate</summary>
        string DetailEnrollmentEndDate { get; set; }
        /// <summary>enrollment number</summary>
        string DetailEnrollmentNumber { get; set; }
        /// <summary>datetime of enrollmentStartDate</summary>
        string DetailEnrollmentStartDate { get; set; }
        /// <summary>invoicing threshold</summary>
        decimal? DetailInvoicingThreshold { get; set; }
        /// <summary>array of meters to filter by</summary>
        System.Collections.Generic.List<string> DetailMeterFilter { get; set; }
        /// <summary>operator used to compare currentSpend with amount</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "EqualTo", "GreaterThan", "GreaterThanOrEqualTo", "LessThan", "LessThanOrEqualTo")]
        string DetailOperator { get; set; }
        /// <summary>overriding alert</summary>
        string DetailOverridingAlert { get; set; }
        /// <summary>datetime of periodStartDate</summary>
        string DetailPeriodStartDate { get; set; }
        /// <summary>array of resources to filter by</summary>
        System.Collections.Generic.List<string> DetailResourceFilter { get; set; }
        /// <summary>array of resourceGroups to filter by</summary>
        System.Collections.Generic.List<string> DetailResourceGroupFilter { get; set; }
        /// <summary>tags to filter by</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAny DetailTagFilter { get; set; }
        /// <summary>notification threshold percentage as a decimal which activated this alert</summary>
        decimal? DetailThreshold { get; set; }
        /// <summary>Type of timegrain cadence</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "Monthly", "Quarterly", "Annually", "BillingMonth", "BillingQuarter", "BillingAnnual")]
        string DetailTimeGrainType { get; set; }
        /// <summary>notificationId that triggered this alert</summary>
        string DetailTriggeredBy { get; set; }
        /// <summary>unit of currency being used</summary>
        string DetailUnit { get; set; }
        /// <summary>dateTime in which alert was last modified</summary>
        string ModificationTime { get; set; }
        /// <summary>Alert properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IAlertProperties Property { get; set; }
        /// <summary>Source of alert</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("Preset", "User")]
        string Source { get; set; }
        /// <summary>alert status</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.CostManagement.PSArgumentCompleterAttribute("None", "Active", "Overridden", "Resolved", "Dismissed")]
        string Status { get; set; }
        /// <summary>dateTime in which the alert status was last modified</summary>
        string StatusModificationTime { get; set; }
        /// <summary>User who last modified the alert</summary>
        string StatusModificationUserName { get; set; }

    }
}