// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.PowerShell;

    /// <summary>The result of the long running operation for cost details Api.</summary>
    [System.ComponentModel.TypeConverter(typeof(CostDetailsOperationResultsTypeConverter))]
    public partial class CostDetailsOperationResults
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsOperationResults"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CostDetailsOperationResults(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Manifest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Manifest = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IReportManifest) content.GetValueForProperty("Manifest",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Manifest, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ReportManifestTypeConverter.ConvertFrom);
            }
            if (content.Contains("Error"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Error = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IErrorDetails) content.GetValueForProperty("Error",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Error, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ErrorDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ValidTill"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ValidTill = (global::System.DateTime?) content.GetValueForProperty("ValidTill",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ValidTill, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ManifestRequestContext"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestRequestContext = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IRequestContext) content.GetValueForProperty("ManifestRequestContext",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestRequestContext, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.RequestContextTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestVersion = (string) content.GetValueForProperty("ManifestVersion",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ManifestDataFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestDataFormat = (string) content.GetValueForProperty("ManifestDataFormat",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestDataFormat, global::System.Convert.ToString);
            }
            if (content.Contains("ManifestByteCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestByteCount = (long?) content.GetValueForProperty("ManifestByteCount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestByteCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ManifestBlobCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlobCount = (int?) content.GetValueForProperty("ManifestBlobCount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlobCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManifestCompressData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestCompressData = (bool?) content.GetValueForProperty("ManifestCompressData",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestCompressData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManifestBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlob = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IBlobInfo>) content.GetValueForProperty("ManifestBlob",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlob, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IBlobInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.BlobInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequestContextRequestScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestScope = (string) content.GetValueForProperty("RequestContextRequestScope",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestScope, global::System.Convert.ToString);
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("RequestContextRequestBody"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestBody = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IGenerateCostDetailsReportRequestDefinition) content.GetValueForProperty("RequestContextRequestBody",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestBody, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.GenerateCostDetailsReportRequestDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestBodyTimePeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyTimePeriod = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsTimePeriod) content.GetValueForProperty("RequestBodyTimePeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyTimePeriod, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsTimePeriodTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestBodyMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyMetric = (string) content.GetValueForProperty("RequestBodyMetric",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyMetric, global::System.Convert.ToString);
            }
            if (content.Contains("RequestBodyBillingPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyBillingPeriod = (string) content.GetValueForProperty("RequestBodyBillingPeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyBillingPeriod, global::System.Convert.ToString);
            }
            if (content.Contains("RequestBodyInvoiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyInvoiceId = (string) content.GetValueForProperty("RequestBodyInvoiceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyInvoiceId, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodStart"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodStart = (string) content.GetValueForProperty("TimePeriodStart",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodStart, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodEnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodEnd = (string) content.GetValueForProperty("TimePeriodEnd",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodEnd, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsOperationResults"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CostDetailsOperationResults(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Manifest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Manifest = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IReportManifest) content.GetValueForProperty("Manifest",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Manifest, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ReportManifestTypeConverter.ConvertFrom);
            }
            if (content.Contains("Error"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Error = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IErrorDetails) content.GetValueForProperty("Error",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Error, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ErrorDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ValidTill"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ValidTill = (global::System.DateTime?) content.GetValueForProperty("ValidTill",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ValidTill, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ManifestRequestContext"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestRequestContext = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IRequestContext) content.GetValueForProperty("ManifestRequestContext",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestRequestContext, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.RequestContextTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestVersion = (string) content.GetValueForProperty("ManifestVersion",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ManifestDataFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestDataFormat = (string) content.GetValueForProperty("ManifestDataFormat",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestDataFormat, global::System.Convert.ToString);
            }
            if (content.Contains("ManifestByteCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestByteCount = (long?) content.GetValueForProperty("ManifestByteCount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestByteCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ManifestBlobCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlobCount = (int?) content.GetValueForProperty("ManifestBlobCount",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlobCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManifestCompressData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestCompressData = (bool?) content.GetValueForProperty("ManifestCompressData",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestCompressData, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ManifestBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlob = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IBlobInfo>) content.GetValueForProperty("ManifestBlob",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).ManifestBlob, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IBlobInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.BlobInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequestContextRequestScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestScope = (string) content.GetValueForProperty("RequestContextRequestScope",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestScope, global::System.Convert.ToString);
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("RequestContextRequestBody"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestBody = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.IGenerateCostDetailsReportRequestDefinition) content.GetValueForProperty("RequestContextRequestBody",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestContextRequestBody, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.GenerateCostDetailsReportRequestDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestBodyTimePeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyTimePeriod = (Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsTimePeriod) content.GetValueForProperty("RequestBodyTimePeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyTimePeriod, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsTimePeriodTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestBodyMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyMetric = (string) content.GetValueForProperty("RequestBodyMetric",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyMetric, global::System.Convert.ToString);
            }
            if (content.Contains("RequestBodyBillingPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyBillingPeriod = (string) content.GetValueForProperty("RequestBodyBillingPeriod",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyBillingPeriod, global::System.Convert.ToString);
            }
            if (content.Contains("RequestBodyInvoiceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyInvoiceId = (string) content.GetValueForProperty("RequestBodyInvoiceId",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).RequestBodyInvoiceId, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodStart"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodStart = (string) content.GetValueForProperty("TimePeriodStart",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodStart, global::System.Convert.ToString);
            }
            if (content.Contains("TimePeriodEnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodEnd = (string) content.GetValueForProperty("TimePeriodEnd",((Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResultsInternal)this).TimePeriodEnd, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsOperationResults"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResults" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResults DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CostDetailsOperationResults(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.CostDetailsOperationResults"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResults" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResults DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CostDetailsOperationResults(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CostDetailsOperationResults" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CostDetailsOperationResults" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Models.ICostDetailsOperationResults FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.CostManagement.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The result of the long running operation for cost details Api.
    [System.ComponentModel.TypeConverter(typeof(CostDetailsOperationResultsTypeConverter))]
    public partial interface ICostDetailsOperationResults

    {

    }
}