// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Extensions;

    /// <summary>The parameters required to create a new subscription.</summary>
    public partial class PutAliasRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequest,
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestInternal
    {

        /// <summary>Management group Id for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string AdditionalPropertyManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertyManagementGroupId = value ?? null; }

        /// <summary>Owner Id of the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string AdditionalPropertySubscriptionOwnerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertySubscriptionOwnerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertySubscriptionOwnerId = value ?? null; }

        /// <summary>Tenant Id of the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string AdditionalPropertySubscriptionTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertySubscriptionTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertySubscriptionTenantId = value ?? null; }

        /// <summary>Tags for the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalPropertiesTags AdditionalPropertyTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertyTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalPropertyTag = value ?? null /* model class */; }

        /// <summary>
        /// Billing scope of the subscription.
        /// For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        /// For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        /// For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string BillingScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).BillingScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).BillingScope = value ?? null; }

        /// <summary>The friendly name of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Internal Acessors for AdditionalProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalProperties Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestInternal.AdditionalProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).AdditionalProperty = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestProperties Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.PutAliasRequestProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestProperties _property;

        /// <summary>Put alias request properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.PutAliasRequestProperties()); set => this._property = value; }

        /// <summary>Reseller Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).ResellerId = value ?? null; }

        /// <summary>This parameter can be used to create alias for existing subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).SubscriptionId = value ?? null; }

        /// <summary>The workload type of the subscription. It can be either Production or DevTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Inlined)]
        public string Workload { get => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).Workload; set => ((Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestPropertiesInternal)Property).Workload = value ?? null; }

        /// <summary>Creates an new <see cref="PutAliasRequest" /> instance.</summary>
        public PutAliasRequest()
        {

        }
    }
    /// The parameters required to create a new subscription.
    public partial interface IPutAliasRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.IJsonSerializable
    {
        /// <summary>Management group Id for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Management group Id for the subscription.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalPropertyManagementGroupId { get; set; }
        /// <summary>Owner Id of the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Owner Id of the subscription",
        SerializedName = @"subscriptionOwnerId",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalPropertySubscriptionOwnerId { get; set; }
        /// <summary>Tenant Id of the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant Id of the subscription",
        SerializedName = @"subscriptionTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalPropertySubscriptionTenantId { get; set; }
        /// <summary>Tags for the subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tags for the subscription",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalPropertiesTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalPropertiesTags AdditionalPropertyTag { get; set; }
        /// <summary>
        /// Billing scope of the subscription.
        /// For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        /// For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        /// For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Billing scope of the subscription.
        For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}",
        SerializedName = @"billingScope",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScope { get; set; }
        /// <summary>The friendly name of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The friendly name of the subscription.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Reseller Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Reseller Id",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get; set; }
        /// <summary>This parameter can be used to create alias for existing subscription Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This parameter can be used to create alias for existing subscription Id",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The workload type of the subscription. It can be either Production or DevTest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The workload type of the subscription. It can be either Production or DevTest.",
        SerializedName = @"workload",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Subscription.PSArgumentCompleterAttribute("Production", "DevTest")]
        string Workload { get; set; }

    }
    /// The parameters required to create a new subscription.
    internal partial interface IPutAliasRequestInternal

    {
        /// <summary>Put alias request additional properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalProperties AdditionalProperty { get; set; }
        /// <summary>Management group Id for the subscription.</summary>
        string AdditionalPropertyManagementGroupId { get; set; }
        /// <summary>Owner Id of the subscription</summary>
        string AdditionalPropertySubscriptionOwnerId { get; set; }
        /// <summary>Tenant Id of the subscription</summary>
        string AdditionalPropertySubscriptionTenantId { get; set; }
        /// <summary>Tags for the subscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestAdditionalPropertiesTags AdditionalPropertyTag { get; set; }
        /// <summary>
        /// Billing scope of the subscription.
        /// For CustomerLed and FieldLed - /billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}
        /// For PartnerLed - /billingAccounts/{billingAccountName}/customers/{customerName}
        /// For Legacy EA - /billingAccounts/{billingAccountName}/enrollmentAccounts/{enrollmentAccountName}
        /// </summary>
        string BillingScope { get; set; }
        /// <summary>The friendly name of the subscription.</summary>
        string DisplayName { get; set; }
        /// <summary>Put alias request properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.IPutAliasRequestProperties Property { get; set; }
        /// <summary>Reseller Id</summary>
        string ResellerId { get; set; }
        /// <summary>This parameter can be used to create alias for existing subscription Id</summary>
        string SubscriptionId { get; set; }
        /// <summary>The workload type of the subscription. It can be either Production or DevTest.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Subscription.PSArgumentCompleterAttribute("Production", "DevTest")]
        string Workload { get; set; }

    }
}