// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Extensions;

    /// <summary>The parameters to provide for the Bot.</summary>
    public partial class BotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings _allSetting;

        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings AllSetting { get => (this._allSetting = this._allSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesAllSettings()); set => this._allSetting = value; }

        /// <summary>Backing field for <see cref="AppPasswordHint" /> property.</summary>
        private string _appPasswordHint;

        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string AppPasswordHint { get => this._appPasswordHint; set => this._appPasswordHint = value; }

        /// <summary>Backing field for <see cref="CmekEncryptionStatus" /> property.</summary>
        private string _cmekEncryptionStatus;

        /// <summary>The CMK encryption status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string CmekEncryptionStatus { get => this._cmekEncryptionStatus; }

        /// <summary>Backing field for <see cref="CmekKeyVaultUrl" /> property.</summary>
        private string _cmekKeyVaultUrl;

        /// <summary>The CMK Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string CmekKeyVaultUrl { get => this._cmekKeyVaultUrl; set => this._cmekKeyVaultUrl = value; }

        /// <summary>Backing field for <see cref="ConfiguredChannel" /> property.</summary>
        private System.Collections.Generic.List<string> _configuredChannel;

        /// <summary>Collection of channels for which the bot is configured</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ConfiguredChannel { get => this._configuredChannel; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DeveloperAppInsightKey" /> property.</summary>
        private string _developerAppInsightKey;

        /// <summary>The Application Insights key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string DeveloperAppInsightKey { get => this._developerAppInsightKey; set => this._developerAppInsightKey = value; }

        /// <summary>Backing field for <see cref="DeveloperAppInsightsApiKey" /> property.</summary>
        private string _developerAppInsightsApiKey;

        /// <summary>The Application Insights Api Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string DeveloperAppInsightsApiKey { get => this._developerAppInsightsApiKey; set => this._developerAppInsightsApiKey = value; }

        /// <summary>Backing field for <see cref="DeveloperAppInsightsApplicationId" /> property.</summary>
        private string _developerAppInsightsApplicationId;

        /// <summary>The Application Insights App Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string DeveloperAppInsightsApplicationId { get => this._developerAppInsightsApplicationId; set => this._developerAppInsightsApplicationId = value; }

        /// <summary>Backing field for <see cref="DisableLocalAuth" /> property.</summary>
        private bool? _disableLocalAuth;

        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? DisableLocalAuth { get => this._disableLocalAuth; set => this._disableLocalAuth = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The Name of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EnabledChannel" /> property.</summary>
        private System.Collections.Generic.List<string> _enabledChannel;

        /// <summary>Collection of channels for which the bot is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> EnabledChannel { get => this._enabledChannel; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>The bot's endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="EndpointVersion" /> property.</summary>
        private string _endpointVersion;

        /// <summary>The bot's endpoint version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string EndpointVersion { get => this._endpointVersion; }

        /// <summary>Backing field for <see cref="IconUrl" /> property.</summary>
        private string _iconUrl;

        /// <summary>The Icon Url of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string IconUrl { get => this._iconUrl; set => this._iconUrl = value; }

        /// <summary>Backing field for <see cref="IsCmekEnabled" /> property.</summary>
        private bool? _isCmekEnabled;

        /// <summary>Whether Cmek is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? IsCmekEnabled { get => this._isCmekEnabled; set => this._isCmekEnabled = value; }

        /// <summary>Backing field for <see cref="IsDeveloperAppInsightsApiKeySet" /> property.</summary>
        private bool? _isDeveloperAppInsightsApiKeySet;

        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? IsDeveloperAppInsightsApiKeySet { get => this._isDeveloperAppInsightsApiKeySet; }

        /// <summary>Backing field for <see cref="IsStreamingSupported" /> property.</summary>
        private bool? _isStreamingSupported;

        /// <summary>Whether the bot is streaming supported</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? IsStreamingSupported { get => this._isStreamingSupported; set => this._isStreamingSupported = value; }

        /// <summary>Backing field for <see cref="LuisAppId" /> property.</summary>
        private System.Collections.Generic.List<string> _luisAppId;

        /// <summary>Collection of LUIS App Ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> LuisAppId { get => this._luisAppId; set => this._luisAppId = value; }

        /// <summary>Backing field for <see cref="LuisKey" /> property.</summary>
        private string _luisKey;

        /// <summary>The LUIS Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string LuisKey { get => this._luisKey; set => this._luisKey = value; }

        /// <summary>Backing field for <see cref="ManifestUrl" /> property.</summary>
        private string _manifestUrl;

        /// <summary>The bot's manifest url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ManifestUrl { get => this._manifestUrl; set => this._manifestUrl = value; }

        /// <summary>Internal Acessors for CmekEncryptionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.CmekEncryptionStatus { get => this._cmekEncryptionStatus; set { {_cmekEncryptionStatus = value;} } }

        /// <summary>Internal Acessors for ConfiguredChannel</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.ConfiguredChannel { get => this._configuredChannel; set { {_configuredChannel = value;} } }

        /// <summary>Internal Acessors for EnabledChannel</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.EnabledChannel { get => this._enabledChannel; set { {_enabledChannel = value;} } }

        /// <summary>Internal Acessors for EndpointVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.EndpointVersion { get => this._endpointVersion; set { {_endpointVersion = value;} } }

        /// <summary>Internal Acessors for IsDeveloperAppInsightsApiKeySet</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.IsDeveloperAppInsightsApiKeySet { get => this._isDeveloperAppInsightsApiKeySet; set { {_isDeveloperAppInsightsApiKeySet = value;} } }

        /// <summary>Internal Acessors for MigrationToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.MigrationToken { get => this._migrationToken; set { {_migrationToken = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection> Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="MigrationToken" /> property.</summary>
        private string _migrationToken;

        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string MigrationToken { get => this._migrationToken; }

        /// <summary>Backing field for <see cref="MsaAppId" /> property.</summary>
        private string _msaAppId;

        /// <summary>Microsoft App Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string MsaAppId { get => this._msaAppId; set => this._msaAppId = value; }

        /// <summary>Backing field for <see cref="MsaAppMsiResourceId" /> property.</summary>
        private string _msaAppMsiResourceId;

        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string MsaAppMsiResourceId { get => this._msaAppMsiResourceId; set => this._msaAppMsiResourceId = value; }

        /// <summary>Backing field for <see cref="MsaAppTenantId" /> property.</summary>
        private string _msaAppTenantId;

        /// <summary>Microsoft App Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string MsaAppTenantId { get => this._msaAppTenantId; set => this._msaAppTenantId = value; }

        /// <summary>Backing field for <see cref="MsaAppType" /> property.</summary>
        private string _msaAppType;

        /// <summary>Microsoft App Type for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string MsaAppType { get => this._msaAppType; set => this._msaAppType = value; }

        /// <summary>Backing field for <see cref="OpenWithHint" /> property.</summary>
        private string _openWithHint;

        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string OpenWithHint { get => this._openWithHint; set => this._openWithHint = value; }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters _parameter;

        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesParameters()); set => this._parameter = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection> _privateEndpointConnection;

        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private string _publicNetworkAccess;

        /// <summary>Whether the bot is in an isolated network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="PublishingCredentials" /> property.</summary>
        private string _publishingCredentials;

        /// <summary>Publishing credentials of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string PublishingCredentials { get => this._publishingCredentials; set => this._publishingCredentials = value; }

        /// <summary>Backing field for <see cref="SchemaTransformationVersion" /> property.</summary>
        private string _schemaTransformationVersion;

        /// <summary>The channel schema transformation version for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string SchemaTransformationVersion { get => this._schemaTransformationVersion; set => this._schemaTransformationVersion = value; }

        /// <summary>Backing field for <see cref="StorageResourceId" /> property.</summary>
        private string _storageResourceId;

        /// <summary>The storage resourceId for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string StorageResourceId { get => this._storageResourceId; set => this._storageResourceId = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>The Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; set => this._tenantId = value; }

        /// <summary>Creates an new <see cref="BotProperties" /> instance.</summary>
        public BotProperties()
        {

        }
    }
    /// The parameters to provide for the Bot.
    public partial interface IBotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IJsonSerializable
    {
        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Contains resource all settings defined as key/value pairs.",
        SerializedName = @"allSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings AllSetting { get; set; }
        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The hint (e.g. keyVault secret resourceId) on how to fetch the app secret",
        SerializedName = @"appPasswordHint",
        PossibleTypes = new [] { typeof(string) })]
        string AppPasswordHint { get; set; }
        /// <summary>The CMK encryption status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The CMK encryption status",
        SerializedName = @"cmekEncryptionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string CmekEncryptionStatus { get;  }
        /// <summary>The CMK Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The CMK Url",
        SerializedName = @"cmekKeyVaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CmekKeyVaultUrl { get; set; }
        /// <summary>Collection of channels for which the bot is configured</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Collection of channels for which the bot is configured",
        SerializedName = @"configuredChannels",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ConfiguredChannel { get;  }
        /// <summary>The description of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The description of the bot",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The Application Insights key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Application Insights key",
        SerializedName = @"developerAppInsightKey",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightKey { get; set; }
        /// <summary>The Application Insights Api Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Application Insights Api Key",
        SerializedName = @"developerAppInsightsApiKey",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightsApiKey { get; set; }
        /// <summary>The Application Insights App Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Application Insights App Id",
        SerializedName = @"developerAppInsightsApplicationId",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightsApplicationId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>The Name of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Name of the bot",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Collection of channels for which the bot is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Collection of channels for which the bot is enabled",
        SerializedName = @"enabledChannels",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> EnabledChannel { get;  }
        /// <summary>The bot's endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The bot's endpoint",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>The bot's endpoint version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The bot's endpoint version",
        SerializedName = @"endpointVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointVersion { get;  }
        /// <summary>The Icon Url of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Icon Url of the bot",
        SerializedName = @"iconUrl",
        PossibleTypes = new [] { typeof(string) })]
        string IconUrl { get; set; }
        /// <summary>Whether Cmek is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether Cmek is enabled",
        SerializedName = @"isCmekEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCmekEnabled { get; set; }
        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Whether the bot is developerAppInsightsApiKey set",
        SerializedName = @"isDeveloperAppInsightsApiKeySet",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDeveloperAppInsightsApiKeySet { get;  }
        /// <summary>Whether the bot is streaming supported</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether the bot is streaming supported",
        SerializedName = @"isStreamingSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsStreamingSupported { get; set; }
        /// <summary>Collection of LUIS App Ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Collection of LUIS App Ids",
        SerializedName = @"luisAppIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LuisAppId { get; set; }
        /// <summary>The LUIS Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The LUIS Key",
        SerializedName = @"luisKey",
        PossibleTypes = new [] { typeof(string) })]
        string LuisKey { get; set; }
        /// <summary>The bot's manifest url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The bot's manifest url",
        SerializedName = @"manifestUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ManifestUrl { get; set; }
        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Token used to migrate non Azure bot to azure subscription",
        SerializedName = @"migrationToken",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationToken { get;  }
        /// <summary>Microsoft App Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Microsoft App Id for the bot",
        SerializedName = @"msaAppId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppId { get; set; }
        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Microsoft App Managed Identity Resource Id for the bot",
        SerializedName = @"msaAppMSIResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppMsiResourceId { get; set; }
        /// <summary>Microsoft App Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Microsoft App Tenant Id for the bot",
        SerializedName = @"msaAppTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppTenantId { get; set; }
        /// <summary>Microsoft App Type for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Microsoft App Type for the bot",
        SerializedName = @"msaAppType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BotService.PSArgumentCompleterAttribute("UserAssignedMSI", "SingleTenant", "MultiTenant")]
        string MsaAppType { get; set; }
        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The hint to browser (e.g. protocol handler) on how to open the bot for authoring",
        SerializedName = @"openWithHint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenWithHint { get; set; }
        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Contains resource parameters defined as key/value pairs.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters Parameter { get; set; }
        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of Private Endpoint Connections configured for the bot",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Whether the bot is in an isolated network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether the bot is in an isolated network",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BotService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }
        /// <summary>Publishing credentials of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Publishing credentials of the resource",
        SerializedName = @"publishingCredentials",
        PossibleTypes = new [] { typeof(string) })]
        string PublishingCredentials { get; set; }
        /// <summary>The channel schema transformation version for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The channel schema transformation version for the bot",
        SerializedName = @"schemaTransformationVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaTransformationVersion { get; set; }
        /// <summary>The storage resourceId for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The storage resourceId for the bot",
        SerializedName = @"storageResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageResourceId { get; set; }
        /// <summary>The Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The Tenant Id for the bot",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// The parameters to provide for the Bot.
    internal partial interface IBotPropertiesInternal

    {
        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings AllSetting { get; set; }
        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        string AppPasswordHint { get; set; }
        /// <summary>The CMK encryption status</summary>
        string CmekEncryptionStatus { get; set; }
        /// <summary>The CMK Url</summary>
        string CmekKeyVaultUrl { get; set; }
        /// <summary>Collection of channels for which the bot is configured</summary>
        System.Collections.Generic.List<string> ConfiguredChannel { get; set; }
        /// <summary>The description of the bot</summary>
        string Description { get; set; }
        /// <summary>The Application Insights key</summary>
        string DeveloperAppInsightKey { get; set; }
        /// <summary>The Application Insights Api Key</summary>
        string DeveloperAppInsightsApiKey { get; set; }
        /// <summary>The Application Insights App Id</summary>
        string DeveloperAppInsightsApplicationId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>The Name of the bot</summary>
        string DisplayName { get; set; }
        /// <summary>Collection of channels for which the bot is enabled</summary>
        System.Collections.Generic.List<string> EnabledChannel { get; set; }
        /// <summary>The bot's endpoint</summary>
        string Endpoint { get; set; }
        /// <summary>The bot's endpoint version</summary>
        string EndpointVersion { get; set; }
        /// <summary>The Icon Url of the bot</summary>
        string IconUrl { get; set; }
        /// <summary>Whether Cmek is enabled</summary>
        bool? IsCmekEnabled { get; set; }
        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        bool? IsDeveloperAppInsightsApiKeySet { get; set; }
        /// <summary>Whether the bot is streaming supported</summary>
        bool? IsStreamingSupported { get; set; }
        /// <summary>Collection of LUIS App Ids</summary>
        System.Collections.Generic.List<string> LuisAppId { get; set; }
        /// <summary>The LUIS Key</summary>
        string LuisKey { get; set; }
        /// <summary>The bot's manifest url</summary>
        string ManifestUrl { get; set; }
        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        string MigrationToken { get; set; }
        /// <summary>Microsoft App Id for the bot</summary>
        string MsaAppId { get; set; }
        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        string MsaAppMsiResourceId { get; set; }
        /// <summary>Microsoft App Tenant Id for the bot</summary>
        string MsaAppTenantId { get; set; }
        /// <summary>Microsoft App Type for the bot</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BotService.PSArgumentCompleterAttribute("UserAssignedMSI", "SingleTenant", "MultiTenant")]
        string MsaAppType { get; set; }
        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        string OpenWithHint { get; set; }
        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters Parameter { get; set; }
        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection> PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the resource</summary>
        string ProvisioningState { get; set; }
        /// <summary>Whether the bot is in an isolated network</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BotService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string PublicNetworkAccess { get; set; }
        /// <summary>Publishing credentials of the resource</summary>
        string PublishingCredentials { get; set; }
        /// <summary>The channel schema transformation version for the bot</summary>
        string SchemaTransformationVersion { get; set; }
        /// <summary>The storage resourceId for the bot</summary>
        string StorageResourceId { get; set; }
        /// <summary>The Tenant Id for the bot</summary>
        string TenantId { get; set; }

    }
}