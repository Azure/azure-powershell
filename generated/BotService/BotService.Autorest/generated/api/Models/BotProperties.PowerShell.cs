// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.PowerShell;

    /// <summary>The parameters to provide for the Bot.</summary>
    [System.ComponentModel.TypeConverter(typeof(BotPropertiesTypeConverter))]
    public partial class BotProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal BotProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EndpointVersion = (string) content.GetValueForProperty("EndpointVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EndpointVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AllSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AllSetting = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings) content.GetValueForProperty("AllSetting",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AllSetting, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesAllSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Parameter, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ManifestUrl = (string) content.GetValueForProperty("ManifestUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ManifestUrl, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppType = (string) content.GetValueForProperty("MsaAppType",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppType, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppId = (string) content.GetValueForProperty("MsaAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppTenantId = (string) content.GetValueForProperty("MsaAppTenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppMsiResourceId = (string) content.GetValueForProperty("MsaAppMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ConfiguredChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ConfiguredChannel = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConfiguredChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ConfiguredChannel, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnabledChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EnabledChannel = (System.Collections.Generic.List<string>) content.GetValueForProperty("EnabledChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EnabledChannel, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DeveloperAppInsightKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightKey = (string) content.GetValueForProperty("DeveloperAppInsightKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApiKey = (string) content.GetValueForProperty("DeveloperAppInsightsApiKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApiKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApplicationId = (string) content.GetValueForProperty("DeveloperAppInsightsApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("LuisAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisAppId = (System.Collections.Generic.List<string>) content.GetValueForProperty("LuisAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisAppId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LuisKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisKey = (string) content.GetValueForProperty("LuisKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsCmekEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsCmekEnabled = (bool?) content.GetValueForProperty("IsCmekEnabled",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsCmekEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CmekKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekKeyVaultUrl = (string) content.GetValueForProperty("CmekKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("CmekEncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekEncryptionStatus = (string) content.GetValueForProperty("CmekEncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekEncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("IsStreamingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsStreamingSupported = (bool?) content.GetValueForProperty("IsStreamingSupported",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsStreamingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsDeveloperAppInsightsApiKeySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsDeveloperAppInsightsApiKeySet = (bool?) content.GetValueForProperty("IsDeveloperAppInsightsApiKeySet",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsDeveloperAppInsightsApiKeySet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MigrationToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MigrationToken = (string) content.GetValueForProperty("MigrationToken",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MigrationToken, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SchemaTransformationVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).SchemaTransformationVersion = (string) content.GetValueForProperty("SchemaTransformationVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).SchemaTransformationVersion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).StorageResourceId = (string) content.GetValueForProperty("StorageResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).StorageResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PrivateEndpointConnection = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection>) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OpenWithHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).OpenWithHint = (string) content.GetValueForProperty("OpenWithHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).OpenWithHint, global::System.Convert.ToString);
            }
            if (content.Contains("AppPasswordHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AppPasswordHint = (string) content.GetValueForProperty("AppPasswordHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AppPasswordHint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublishingCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublishingCredentials = (string) content.GetValueForProperty("PublishingCredentials",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublishingCredentials, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal BotProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EndpointVersion = (string) content.GetValueForProperty("EndpointVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EndpointVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AllSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AllSetting = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesAllSettings) content.GetValueForProperty("AllSetting",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AllSetting, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesAllSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesParameters) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).Parameter, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotPropertiesParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ManifestUrl = (string) content.GetValueForProperty("ManifestUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ManifestUrl, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppType = (string) content.GetValueForProperty("MsaAppType",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppType, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppId = (string) content.GetValueForProperty("MsaAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppTenantId = (string) content.GetValueForProperty("MsaAppTenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppMsiResourceId = (string) content.GetValueForProperty("MsaAppMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MsaAppMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ConfiguredChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ConfiguredChannel = (System.Collections.Generic.List<string>) content.GetValueForProperty("ConfiguredChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ConfiguredChannel, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnabledChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EnabledChannel = (System.Collections.Generic.List<string>) content.GetValueForProperty("EnabledChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).EnabledChannel, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DeveloperAppInsightKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightKey = (string) content.GetValueForProperty("DeveloperAppInsightKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApiKey = (string) content.GetValueForProperty("DeveloperAppInsightsApiKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApiKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApplicationId = (string) content.GetValueForProperty("DeveloperAppInsightsApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DeveloperAppInsightsApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("LuisAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisAppId = (System.Collections.Generic.List<string>) content.GetValueForProperty("LuisAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisAppId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LuisKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisKey = (string) content.GetValueForProperty("LuisKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).LuisKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsCmekEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsCmekEnabled = (bool?) content.GetValueForProperty("IsCmekEnabled",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsCmekEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CmekKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekKeyVaultUrl = (string) content.GetValueForProperty("CmekKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("CmekEncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekEncryptionStatus = (string) content.GetValueForProperty("CmekEncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).CmekEncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("IsStreamingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsStreamingSupported = (bool?) content.GetValueForProperty("IsStreamingSupported",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsStreamingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsDeveloperAppInsightsApiKeySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsDeveloperAppInsightsApiKeySet = (bool?) content.GetValueForProperty("IsDeveloperAppInsightsApiKeySet",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).IsDeveloperAppInsightsApiKeySet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MigrationToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MigrationToken = (string) content.GetValueForProperty("MigrationToken",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).MigrationToken, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SchemaTransformationVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).SchemaTransformationVersion = (string) content.GetValueForProperty("SchemaTransformationVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).SchemaTransformationVersion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).StorageResourceId = (string) content.GetValueForProperty("StorageResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).StorageResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PrivateEndpointConnection = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection>) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OpenWithHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).OpenWithHint = (string) content.GetValueForProperty("OpenWithHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).OpenWithHint, global::System.Convert.ToString);
            }
            if (content.Contains("AppPasswordHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AppPasswordHint = (string) content.GetValueForProperty("AppPasswordHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).AppPasswordHint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublishingCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublishingCredentials = (string) content.GetValueForProperty("PublishingCredentials",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotPropertiesInternal)this).PublishingCredentials, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new BotProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.BotProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new BotProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="BotProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="BotProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.IBotProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The parameters to provide for the Bot.
    [System.ComponentModel.TypeConverter(typeof(BotPropertiesTypeConverter))]
    public partial interface IBotProperties

    {

    }
}