// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Extensions;

    /// <summary>Bot resource definition</summary>
    public partial class Bot :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Resource();

        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings AllSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).AllSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).AllSetting = value ?? null /* model class */; }

        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string AppPasswordHint { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).AppPasswordHint; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).AppPasswordHint = value ?? null; }

        /// <summary>The CMK encryption status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string CmekEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).CmekEncryptionStatus; }

        /// <summary>The CMK Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string CmekKeyVaultUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).CmekKeyVaultUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).CmekKeyVaultUrl = value ?? null; }

        /// <summary>Collection of channels for which the bot is configured</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string[] ConfiguredChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ConfiguredChannel; }

        /// <summary>The description of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>The Application Insights key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string DeveloperAppInsightKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightKey = value ?? null; }

        /// <summary>The Application Insights Api Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string DeveloperAppInsightsApiKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightsApiKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightsApiKey = value ?? null; }

        /// <summary>The Application Insights App Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string DeveloperAppInsightsApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightsApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DeveloperAppInsightsApplicationId = value ?? null; }

        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public bool? DisableLocalAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DisableLocalAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DisableLocalAuth = value ?? default(bool); }

        /// <summary>The Name of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Collection of channels for which the bot is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string[] EnabledChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EnabledChannel; }

        /// <summary>The bot's endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Endpoint = value ?? null; }

        /// <summary>The bot's endpoint version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string EndpointVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EndpointVersion; }

        /// <summary>Entity Tag</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Etag = value ?? null; }

        /// <summary>The Icon Url of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string IconUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IconUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IconUrl = value ?? null; }

        /// <summary>Specifies the resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Id; }

        /// <summary>Whether Cmek is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public bool? IsCmekEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsCmekEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsCmekEnabled = value ?? default(bool); }

        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public bool? IsDeveloperAppInsightsApiKeySet { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsDeveloperAppInsightsApiKeySet; }

        /// <summary>Whether the bot is streaming supported</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public bool? IsStreamingSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsStreamingSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsStreamingSupported = value ?? default(bool); }

        /// <summary>Required. Gets or sets the Kind of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind? Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind)""); }

        /// <summary>Specifies the location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Location = value ?? null; }

        /// <summary>Collection of LUIS App Ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string[] LuisAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).LuisAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).LuisAppId = value ?? null /* arrayOf */; }

        /// <summary>The LUIS Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string LuisKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).LuisKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).LuisKey = value ?? null; }

        /// <summary>The bot's manifest url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string ManifestUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ManifestUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ManifestUrl = value ?? null; }

        /// <summary>Internal Acessors for CmekEncryptionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.CmekEncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).CmekEncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).CmekEncryptionStatus = value; }

        /// <summary>Internal Acessors for ConfiguredChannel</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.ConfiguredChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ConfiguredChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ConfiguredChannel = value; }

        /// <summary>Internal Acessors for EnabledChannel</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.EnabledChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EnabledChannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EnabledChannel = value; }

        /// <summary>Internal Acessors for EndpointVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.EndpointVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EndpointVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).EndpointVersion = value; }

        /// <summary>Internal Acessors for IsDeveloperAppInsightsApiKeySet</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.IsDeveloperAppInsightsApiKeySet { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsDeveloperAppInsightsApiKeySet; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).IsDeveloperAppInsightsApiKeySet = value; }

        /// <summary>Internal Acessors for MigrationToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.MigrationToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MigrationToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MigrationToken = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SkuTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier? Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).SkuTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).SkuTier = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Zone</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal.Zone { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Zone; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Zone = value; }

        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string MigrationToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MigrationToken; }

        /// <summary>Microsoft App Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string MsaAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppId = value ?? null; }

        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string MsaAppMsiResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppMsiResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppMsiResourceId = value ?? null; }

        /// <summary>Microsoft App Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string MsaAppTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppTenantId = value ?? null; }

        /// <summary>Microsoft App Type for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType? MsaAppType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).MsaAppType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType)""); }

        /// <summary>Specifies the name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string OpenWithHint { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).OpenWithHint; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).OpenWithHint = value ?? null; }

        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters Parameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).Parameter = value ?? null /* model class */; }

        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties _property;

        /// <summary>The set of properties specific to bot resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Whether the bot is in an isolated network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess)""); }

        /// <summary>Publishing credentials of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string PublishingCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PublishingCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).PublishingCredentials = value ?? null; }

        /// <summary>The channel schema transformation version for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string SchemaTransformationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).SchemaTransformationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).SchemaTransformationVersion = value ?? null; }

        /// <summary>Gets or sets the SKU of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISku Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Sku = value ?? null /* model class */; }

        /// <summary>The sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName)""); }

        /// <summary>Gets the sku tier. This is based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).SkuTier; }

        /// <summary>The storage resourceId for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string StorageResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).StorageResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).StorageResourceId = value ?? null; }

        /// <summary>Contains resource tags defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>The Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesInternal)Property).TenantId = value ?? null; }

        /// <summary>Specifies the type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Type; }

        /// <summary>Entity zones</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string[] Zone { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)__resource).Zone; }

        /// <summary>Creates an new <see cref="Bot" /> instance.</summary>
        public Bot()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Bot resource definition
    public partial interface IBot :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResource
    {
        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Contains resource all settings defined as key/value pairs.",
        SerializedName = @"allSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings AllSetting { get; set; }
        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hint (e.g. keyVault secret resourceId) on how to fetch the app secret",
        SerializedName = @"appPasswordHint",
        PossibleTypes = new [] { typeof(string) })]
        string AppPasswordHint { get; set; }
        /// <summary>The CMK encryption status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The CMK encryption status",
        SerializedName = @"cmekEncryptionStatus",
        PossibleTypes = new [] { typeof(string) })]
        string CmekEncryptionStatus { get;  }
        /// <summary>The CMK Url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CMK Url",
        SerializedName = @"cmekKeyVaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CmekKeyVaultUrl { get; set; }
        /// <summary>Collection of channels for which the bot is configured</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Collection of channels for which the bot is configured",
        SerializedName = @"configuredChannels",
        PossibleTypes = new [] { typeof(string) })]
        string[] ConfiguredChannel { get;  }
        /// <summary>The description of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the bot",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The Application Insights key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Application Insights key",
        SerializedName = @"developerAppInsightKey",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightKey { get; set; }
        /// <summary>The Application Insights Api Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Application Insights Api Key",
        SerializedName = @"developerAppInsightsApiKey",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightsApiKey { get; set; }
        /// <summary>The Application Insights App Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Application Insights App Id",
        SerializedName = @"developerAppInsightsApplicationId",
        PossibleTypes = new [] { typeof(string) })]
        string DeveloperAppInsightsApplicationId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>The Name of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Name of the bot",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Collection of channels for which the bot is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Collection of channels for which the bot is enabled",
        SerializedName = @"enabledChannels",
        PossibleTypes = new [] { typeof(string) })]
        string[] EnabledChannel { get;  }
        /// <summary>The bot's endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bot's endpoint",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>The bot's endpoint version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The bot's endpoint version",
        SerializedName = @"endpointVersion",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointVersion { get;  }
        /// <summary>The Icon Url of the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Icon Url of the bot",
        SerializedName = @"iconUrl",
        PossibleTypes = new [] { typeof(string) })]
        string IconUrl { get; set; }
        /// <summary>Whether Cmek is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether Cmek is enabled",
        SerializedName = @"isCmekEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsCmekEnabled { get; set; }
        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether the bot is developerAppInsightsApiKey set",
        SerializedName = @"isDeveloperAppInsightsApiKeySet",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDeveloperAppInsightsApiKeySet { get;  }
        /// <summary>Whether the bot is streaming supported</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the bot is streaming supported",
        SerializedName = @"isStreamingSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsStreamingSupported { get; set; }
        /// <summary>Collection of LUIS App Ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of LUIS App Ids",
        SerializedName = @"luisAppIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] LuisAppId { get; set; }
        /// <summary>The LUIS Key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The LUIS Key",
        SerializedName = @"luisKey",
        PossibleTypes = new [] { typeof(string) })]
        string LuisKey { get; set; }
        /// <summary>The bot's manifest url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bot's manifest url",
        SerializedName = @"manifestUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ManifestUrl { get; set; }
        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Token used to migrate non Azure bot to azure subscription",
        SerializedName = @"migrationToken",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationToken { get;  }
        /// <summary>Microsoft App Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Microsoft App Id for the bot",
        SerializedName = @"msaAppId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppId { get; set; }
        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Microsoft App Managed Identity Resource Id for the bot",
        SerializedName = @"msaAppMSIResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppMsiResourceId { get; set; }
        /// <summary>Microsoft App Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Microsoft App Tenant Id for the bot",
        SerializedName = @"msaAppTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string MsaAppTenantId { get; set; }
        /// <summary>Microsoft App Type for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Microsoft App Type for the bot",
        SerializedName = @"msaAppType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType? MsaAppType { get; set; }
        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hint to browser (e.g. protocol handler) on how to open the bot for authoring",
        SerializedName = @"openWithHint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenWithHint { get; set; }
        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Contains resource parameters defined as key/value pairs.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters Parameter { get; set; }
        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Private Endpoint Connections configured for the bot",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Whether the bot is in an isolated network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the bot is in an isolated network",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Publishing credentials of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Publishing credentials of the resource",
        SerializedName = @"publishingCredentials",
        PossibleTypes = new [] { typeof(string) })]
        string PublishingCredentials { get; set; }
        /// <summary>The channel schema transformation version for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The channel schema transformation version for the bot",
        SerializedName = @"schemaTransformationVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SchemaTransformationVersion { get; set; }
        /// <summary>The storage resourceId for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage resourceId for the bot",
        SerializedName = @"storageResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageResourceId { get; set; }
        /// <summary>The Tenant Id for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Tenant Id for the bot",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// Bot resource definition
    internal partial interface IBotInternal :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal
    {
        /// <summary>Contains resource all settings defined as key/value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings AllSetting { get; set; }
        /// <summary>The hint (e.g. keyVault secret resourceId) on how to fetch the app secret</summary>
        string AppPasswordHint { get; set; }
        /// <summary>The CMK encryption status</summary>
        string CmekEncryptionStatus { get; set; }
        /// <summary>The CMK Url</summary>
        string CmekKeyVaultUrl { get; set; }
        /// <summary>Collection of channels for which the bot is configured</summary>
        string[] ConfiguredChannel { get; set; }
        /// <summary>The description of the bot</summary>
        string Description { get; set; }
        /// <summary>The Application Insights key</summary>
        string DeveloperAppInsightKey { get; set; }
        /// <summary>The Application Insights Api Key</summary>
        string DeveloperAppInsightsApiKey { get; set; }
        /// <summary>The Application Insights App Id</summary>
        string DeveloperAppInsightsApplicationId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>The Name of the bot</summary>
        string DisplayName { get; set; }
        /// <summary>Collection of channels for which the bot is enabled</summary>
        string[] EnabledChannel { get; set; }
        /// <summary>The bot's endpoint</summary>
        string Endpoint { get; set; }
        /// <summary>The bot's endpoint version</summary>
        string EndpointVersion { get; set; }
        /// <summary>The Icon Url of the bot</summary>
        string IconUrl { get; set; }
        /// <summary>Whether Cmek is enabled</summary>
        bool? IsCmekEnabled { get; set; }
        /// <summary>Whether the bot is developerAppInsightsApiKey set</summary>
        bool? IsDeveloperAppInsightsApiKeySet { get; set; }
        /// <summary>Whether the bot is streaming supported</summary>
        bool? IsStreamingSupported { get; set; }
        /// <summary>Collection of LUIS App Ids</summary>
        string[] LuisAppId { get; set; }
        /// <summary>The LUIS Key</summary>
        string LuisKey { get; set; }
        /// <summary>The bot's manifest url</summary>
        string ManifestUrl { get; set; }
        /// <summary>Token used to migrate non Azure bot to azure subscription</summary>
        string MigrationToken { get; set; }
        /// <summary>Microsoft App Id for the bot</summary>
        string MsaAppId { get; set; }
        /// <summary>Microsoft App Managed Identity Resource Id for the bot</summary>
        string MsaAppMsiResourceId { get; set; }
        /// <summary>Microsoft App Tenant Id for the bot</summary>
        string MsaAppTenantId { get; set; }
        /// <summary>Microsoft App Type for the bot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType? MsaAppType { get; set; }
        /// <summary>
        /// The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        /// </summary>
        string OpenWithHint { get; set; }
        /// <summary>Contains resource parameters defined as key/value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters Parameter { get; set; }
        /// <summary>List of Private Endpoint Connections configured for the bot</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The set of properties specific to bot resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties Property { get; set; }
        /// <summary>Provisioning state of the resource</summary>
        string ProvisioningState { get; set; }
        /// <summary>Whether the bot is in an isolated network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Publishing credentials of the resource</summary>
        string PublishingCredentials { get; set; }
        /// <summary>The channel schema transformation version for the bot</summary>
        string SchemaTransformationVersion { get; set; }
        /// <summary>The storage resourceId for the bot</summary>
        string StorageResourceId { get; set; }
        /// <summary>The Tenant Id for the bot</summary>
        string TenantId { get; set; }

    }
}