// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>The source IP address and CIDR ranges of the stream</summary>
    public partial class StreamSourceAddresses :
        ADT.Models.IStreamSourceAddresses,
        ADT.Models.IStreamSourceAddressesInternal
    {

        /// <summary>Backing field for <see cref="SourceAddress" /> property.</summary>
        private System.Collections.Generic.List<string> _sourceAddress;

        /// <summary>A source IP address or CIDR range</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SourceAddress { get => this._sourceAddress; set => this._sourceAddress = value; }

        /// <summary>Creates an new <see cref="StreamSourceAddresses" /> instance.</summary>
        public StreamSourceAddresses()
        {

        }
    }
    /// The source IP address and CIDR ranges of the stream
    public partial interface IStreamSourceAddresses :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>A source IP address or CIDR range</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A source IP address or CIDR range",
        SerializedName = @"sourceAddresses",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SourceAddress { get; set; }

    }
    /// The source IP address and CIDR ranges of the stream
    internal partial interface IStreamSourceAddressesInternal

    {
        /// <summary>A source IP address or CIDR range</summary>
        System.Collections.Generic.List<string> SourceAddress { get; set; }

    }
}