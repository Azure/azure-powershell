// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>
    /// Rules for detecting and blocking specific text patterns. If a file contains a text pattern that is part of the configured
    /// deny list, the file will be denied.
    /// </summary>
    public partial class TextMatchingRuleset :
        ADT.Models.ITextMatchingRuleset,
        ADT.Models.ITextMatchingRulesetInternal
    {

        /// <summary>Backing field for <see cref="Deny" /> property.</summary>
        private System.Collections.Generic.List<ADT.Models.ITextMatch> _deny;

        /// <summary>
        /// A list of text patterns to block, each with matching rules and case sensitivity options.
        /// </summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<ADT.Models.ITextMatch> Deny { get => this._deny; set => this._deny = value; }

        /// <summary>Creates an new <see cref="TextMatchingRuleset" /> instance.</summary>
        public TextMatchingRuleset()
        {

        }
    }
    /// Rules for detecting and blocking specific text patterns. If a file contains a text pattern that is part of the configured
    /// deny list, the file will be denied.
    public partial interface ITextMatchingRuleset :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A list of text patterns to block, each with matching rules and case sensitivity options.
        /// </summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of text patterns to block, each with matching rules and case sensitivity options.",
        SerializedName = @"deny",
        PossibleTypes = new [] { typeof(ADT.Models.ITextMatch) })]
        System.Collections.Generic.List<ADT.Models.ITextMatch> Deny { get; set; }

    }
    /// Rules for detecting and blocking specific text patterns. If a file contains a text pattern that is part of the configured
    /// deny list, the file will be denied.
    internal partial interface ITextMatchingRulesetInternal

    {
        /// <summary>
        /// A list of text patterns to block, each with matching rules and case sensitivity options.
        /// </summary>
        System.Collections.Generic.List<ADT.Models.ITextMatch> Deny { get; set; }

    }
}