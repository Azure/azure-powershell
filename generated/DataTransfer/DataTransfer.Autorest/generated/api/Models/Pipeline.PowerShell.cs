// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using ADT.Runtime.PowerShell;

    /// <summary>The pipeline resource definition.</summary>
    [System.ComponentModel.TypeConverter(typeof(PipelineTypeConverter))]
    public partial class Pipeline
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="ADT.Models.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="ADT.Models.IPipeline" />.</returns>
        public static ADT.Models.IPipeline DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Pipeline(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="ADT.Models.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="ADT.Models.IPipeline" />.</returns>
        public static ADT.Models.IPipeline DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Pipeline(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Pipeline" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Pipeline" /> model class.</returns>
        public static ADT.Models.IPipeline FromJsonString(string jsonText) => FromJson(ADT.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="ADT.Models.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Pipeline(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((ADT.Models.IPipelineInternal)this).Property = (ADT.Models.IPipelineProperties) content.GetValueForProperty("Property",((ADT.Models.IPipelineInternal)this).Property, ADT.Models.PipelinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((ADT.Models.IPipelineInternal)this).Identity = (ADT.Models.IManagedServiceIdentity) content.GetValueForProperty("Identity",((ADT.Models.IPipelineInternal)this).Identity, ADT.Models.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((ADT.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((ADT.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((ADT.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((ADT.Models.IResourceInternal)this).SystemData = (ADT.Models.ISystemData) content.GetValueForProperty("SystemData",((ADT.Models.IResourceInternal)this).SystemData, ADT.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((ADT.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((ADT.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((ADT.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((ADT.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((ADT.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((ADT.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((ADT.Models.ITrackedResourceInternal)this).Tag = (ADT.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((ADT.Models.ITrackedResourceInternal)this).Tag, ADT.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((ADT.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((ADT.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((ADT.Models.IPipelineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((ADT.Models.IPipelineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("RemoteCloud"))
            {
                ((ADT.Models.IPipelineInternal)this).RemoteCloud = (string) content.GetValueForProperty("RemoteCloud",((ADT.Models.IPipelineInternal)this).RemoteCloud, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((ADT.Models.IPipelineInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((ADT.Models.IPipelineInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Connection"))
            {
                ((ADT.Models.IPipelineInternal)this).Connection = (System.Collections.Generic.List<ADT.Models.IReadPipelineConnection>) content.GetValueForProperty("Connection",((ADT.Models.IPipelineInternal)this).Connection, __y => TypeConverterExtensions.SelectToList<ADT.Models.IReadPipelineConnection>(__y, ADT.Models.ReadPipelineConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Subscriber"))
            {
                ((ADT.Models.IPipelineInternal)this).Subscriber = (System.Collections.Generic.List<ADT.Models.ISubscriber>) content.GetValueForProperty("Subscriber",((ADT.Models.IPipelineInternal)this).Subscriber, __y => TypeConverterExtensions.SelectToList<ADT.Models.ISubscriber>(__y, ADT.Models.SubscriberTypeConverter.ConvertFrom));
            }
            if (content.Contains("Policy"))
            {
                ((ADT.Models.IPipelineInternal)this).Policy = (System.Collections.Generic.List<string>) content.GetValueForProperty("Policy",((ADT.Models.IPipelineInternal)this).Policy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FlowType"))
            {
                ((ADT.Models.IPipelineInternal)this).FlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("FlowType",((ADT.Models.IPipelineInternal)this).FlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DisabledFlowType"))
            {
                ((ADT.Models.IPipelineInternal)this).DisabledFlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("DisabledFlowType",((ADT.Models.IPipelineInternal)this).DisabledFlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("QuarantineDownloadStorageAccount"))
            {
                ((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageAccount = (string) content.GetValueForProperty("QuarantineDownloadStorageAccount",((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("QuarantineDownloadStorageContainer"))
            {
                ((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageContainer = (string) content.GetValueForProperty("QuarantineDownloadStorageContainer",((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageContainer, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((ADT.Models.IPipelineInternal)this).Status = (string) content.GetValueForProperty("Status",((ADT.Models.IPipelineInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((ADT.Models.IPipelineInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((ADT.Models.IPipelineInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((ADT.Models.IPipelineInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityUserAssignedIdentity = (ADT.Models.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((ADT.Models.IPipelineInternal)this).IdentityUserAssignedIdentity, ADT.Models.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="ADT.Models.Pipeline"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Pipeline(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((ADT.Models.IPipelineInternal)this).Property = (ADT.Models.IPipelineProperties) content.GetValueForProperty("Property",((ADT.Models.IPipelineInternal)this).Property, ADT.Models.PipelinePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((ADT.Models.IPipelineInternal)this).Identity = (ADT.Models.IManagedServiceIdentity) content.GetValueForProperty("Identity",((ADT.Models.IPipelineInternal)this).Identity, ADT.Models.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((ADT.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((ADT.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((ADT.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((ADT.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((ADT.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((ADT.Models.IResourceInternal)this).SystemData = (ADT.Models.ISystemData) content.GetValueForProperty("SystemData",((ADT.Models.IResourceInternal)this).SystemData, ADT.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((ADT.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((ADT.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((ADT.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((ADT.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((ADT.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((ADT.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((ADT.Models.ITrackedResourceInternal)this).Tag = (ADT.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((ADT.Models.ITrackedResourceInternal)this).Tag, ADT.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((ADT.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((ADT.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((ADT.Models.IPipelineInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((ADT.Models.IPipelineInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("RemoteCloud"))
            {
                ((ADT.Models.IPipelineInternal)this).RemoteCloud = (string) content.GetValueForProperty("RemoteCloud",((ADT.Models.IPipelineInternal)this).RemoteCloud, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((ADT.Models.IPipelineInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((ADT.Models.IPipelineInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Connection"))
            {
                ((ADT.Models.IPipelineInternal)this).Connection = (System.Collections.Generic.List<ADT.Models.IReadPipelineConnection>) content.GetValueForProperty("Connection",((ADT.Models.IPipelineInternal)this).Connection, __y => TypeConverterExtensions.SelectToList<ADT.Models.IReadPipelineConnection>(__y, ADT.Models.ReadPipelineConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("Subscriber"))
            {
                ((ADT.Models.IPipelineInternal)this).Subscriber = (System.Collections.Generic.List<ADT.Models.ISubscriber>) content.GetValueForProperty("Subscriber",((ADT.Models.IPipelineInternal)this).Subscriber, __y => TypeConverterExtensions.SelectToList<ADT.Models.ISubscriber>(__y, ADT.Models.SubscriberTypeConverter.ConvertFrom));
            }
            if (content.Contains("Policy"))
            {
                ((ADT.Models.IPipelineInternal)this).Policy = (System.Collections.Generic.List<string>) content.GetValueForProperty("Policy",((ADT.Models.IPipelineInternal)this).Policy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FlowType"))
            {
                ((ADT.Models.IPipelineInternal)this).FlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("FlowType",((ADT.Models.IPipelineInternal)this).FlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DisabledFlowType"))
            {
                ((ADT.Models.IPipelineInternal)this).DisabledFlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("DisabledFlowType",((ADT.Models.IPipelineInternal)this).DisabledFlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("QuarantineDownloadStorageAccount"))
            {
                ((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageAccount = (string) content.GetValueForProperty("QuarantineDownloadStorageAccount",((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageAccount, global::System.Convert.ToString);
            }
            if (content.Contains("QuarantineDownloadStorageContainer"))
            {
                ((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageContainer = (string) content.GetValueForProperty("QuarantineDownloadStorageContainer",((ADT.Models.IPipelineInternal)this).QuarantineDownloadStorageContainer, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((ADT.Models.IPipelineInternal)this).Status = (string) content.GetValueForProperty("Status",((ADT.Models.IPipelineInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((ADT.Models.IPipelineInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((ADT.Models.IPipelineInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((ADT.Models.IPipelineInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((ADT.Models.IPipelineInternal)this).IdentityUserAssignedIdentity = (ADT.Models.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((ADT.Models.IPipelineInternal)this).IdentityUserAssignedIdentity, ADT.Models.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, ADT.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The pipeline resource definition.
    [System.ComponentModel.TypeConverter(typeof(PipelineTypeConverter))]
    public partial interface IPipeline

    {

    }
}