// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>
    /// Defines rules that enforce minimum and maximum file size limits for data replication.
    /// </summary>
    public partial class DataSizeRuleset :
        ADT.Models.IDataSizeRuleset,
        ADT.Models.IDataSizeRulesetInternal
    {

        /// <summary>Backing field for <see cref="Maximum" /> property.</summary>
        private long? _maximum;

        /// <summary>
        /// Optional. Specifies the maximum allowed size (in bytes) for files to be replicated. Any file size greater than maximum
        /// will be denied replication.
        /// </summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public long? Maximum { get => this._maximum; set => this._maximum = value; }

        /// <summary>Backing field for <see cref="Minimum" /> property.</summary>
        private long? _minimum;

        /// <summary>
        /// Optional. Default is 0. Specifies the minimum required size (in bytes) for a file to be eligible for replication. Any
        /// file size less than minimum will be denied replication.
        /// </summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public long? Minimum { get => this._minimum; set => this._minimum = value; }

        /// <summary>Creates an new <see cref="DataSizeRuleset" /> instance.</summary>
        public DataSizeRuleset()
        {

        }
    }
    /// Defines rules that enforce minimum and maximum file size limits for data replication.
    public partial interface IDataSizeRuleset :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional. Specifies the maximum allowed size (in bytes) for files to be replicated. Any file size greater than maximum
        /// will be denied replication.
        /// </summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional. Specifies the maximum allowed size (in bytes) for files to be replicated. Any file size greater than maximum will be denied replication.",
        SerializedName = @"maximum",
        PossibleTypes = new [] { typeof(long) })]
        long? Maximum { get; set; }
        /// <summary>
        /// Optional. Default is 0. Specifies the minimum required size (in bytes) for a file to be eligible for replication. Any
        /// file size less than minimum will be denied replication.
        /// </summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional. Default is 0. Specifies the minimum required size (in bytes) for a file to be eligible for replication. Any file size less than minimum will be denied replication.",
        SerializedName = @"minimum",
        PossibleTypes = new [] { typeof(long) })]
        long? Minimum { get; set; }

    }
    /// Defines rules that enforce minimum and maximum file size limits for data replication.
    internal partial interface IDataSizeRulesetInternal

    {
        /// <summary>
        /// Optional. Specifies the maximum allowed size (in bytes) for files to be replicated. Any file size greater than maximum
        /// will be denied replication.
        /// </summary>
        long? Maximum { get; set; }
        /// <summary>
        /// Optional. Default is 0. Specifies the minimum required size (in bytes) for a file to be eligible for replication. Any
        /// file size less than minimum will be denied replication.
        /// </summary>
        long? Minimum { get; set; }

    }
}