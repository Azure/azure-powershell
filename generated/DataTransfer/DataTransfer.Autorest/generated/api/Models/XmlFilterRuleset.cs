// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>Rules for filtering XML content using XSD schemas.</summary>
    public partial class XmlFilterRuleset :
        ADT.Models.IXmlFilterRuleset,
        ADT.Models.IXmlFilterRulesetInternal
    {

        /// <summary>Backing field for <see cref="DefaultNamespace" /> property.</summary>
        private string _defaultNamespace;

        /// <summary>The default XML namespace used for schema validation.</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public string DefaultNamespace { get => this._defaultNamespace; set => this._defaultNamespace = value; }

        /// <summary>Backing field for <see cref="Reference" /> property.</summary>
        private string _reference;

        /// <summary>Defines the method for referencing the xml schema.</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public string Reference { get => this._reference; set => this._reference = value; }

        /// <summary>Backing field for <see cref="Schema" /> property.</summary>
        private string _schema;

        /// <summary>The inline XSD schema to be used for validation.</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public string Schema { get => this._schema; set => this._schema = value; }

        /// <summary>Creates an new <see cref="XmlFilterRuleset" /> instance.</summary>
        public XmlFilterRuleset()
        {

        }
    }
    /// Rules for filtering XML content using XSD schemas.
    public partial interface IXmlFilterRuleset :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>The default XML namespace used for schema validation.</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default XML namespace used for schema validation.",
        SerializedName = @"defaultNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultNamespace { get; set; }
        /// <summary>Defines the method for referencing the xml schema.</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines the method for referencing the xml schema.",
        SerializedName = @"reference",
        PossibleTypes = new [] { typeof(string) })]
        [global::ADT.PSArgumentCompleterAttribute("Inline")]
        string Reference { get; set; }
        /// <summary>The inline XSD schema to be used for validation.</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The inline XSD schema to be used for validation.",
        SerializedName = @"schema",
        PossibleTypes = new [] { typeof(string) })]
        string Schema { get; set; }

    }
    /// Rules for filtering XML content using XSD schemas.
    internal partial interface IXmlFilterRulesetInternal

    {
        /// <summary>The default XML namespace used for schema validation.</summary>
        string DefaultNamespace { get; set; }
        /// <summary>Defines the method for referencing the xml schema.</summary>
        [global::ADT.PSArgumentCompleterAttribute("Inline")]
        string Reference { get; set; }
        /// <summary>The inline XSD schema to be used for validation.</summary>
        string Schema { get; set; }

    }
}