// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>Properties to configure the destination remote endpoint for API calls.</summary>
    public partial class RemoteEndpointSettings :
        ADT.Models.IRemoteEndpointSettings,
        ADT.Models.IRemoteEndpointSettingsInternal
    {

        /// <summary>Backing field for <see cref="Authentication" /> property.</summary>
        private System.Collections.Generic.List<ADT.Models.IAuthentication> _authentication;

        /// <summary>
        /// Optional and for advanced used only. A list of authentication methods to use when accessing the remote endpoint. If not
        /// provided, the default S2S authentication using Entra (API Flow Managed Identity) and RBAC will be applied.
        /// </summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<ADT.Models.IAuthentication> Authentication { get => this._authentication; set => this._authentication = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>The remote endpoint uri all API calls.</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Creates an new <see cref="RemoteEndpointSettings" /> instance.</summary>
        public RemoteEndpointSettings()
        {

        }
    }
    /// Properties to configure the destination remote endpoint for API calls.
    public partial interface IRemoteEndpointSettings :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional and for advanced used only. A list of authentication methods to use when accessing the remote endpoint. If not
        /// provided, the default S2S authentication using Entra (API Flow Managed Identity) and RBAC will be applied.
        /// </summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional and for advanced used only. A list of authentication methods to use when accessing the remote endpoint. If not provided, the default S2S authentication using Entra (API Flow Managed Identity) and RBAC will be applied.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(ADT.Models.IAuthentication) })]
        System.Collections.Generic.List<ADT.Models.IAuthentication> Authentication { get; set; }
        /// <summary>The remote endpoint uri all API calls.</summary>
        [ADT.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The remote endpoint uri all API calls.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }

    }
    /// Properties to configure the destination remote endpoint for API calls.
    internal partial interface IRemoteEndpointSettingsInternal

    {
        /// <summary>
        /// Optional and for advanced used only. A list of authentication methods to use when accessing the remote endpoint. If not
        /// provided, the default S2S authentication using Entra (API Flow Managed Identity) and RBAC will be applied.
        /// </summary>
        System.Collections.Generic.List<ADT.Models.IAuthentication> Authentication { get; set; }
        /// <summary>The remote endpoint uri all API calls.</summary>
        string Endpoint { get; set; }

    }
}