// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>An individual that would like to subscribe to events that occur on a pipeline.</summary>
    public partial class Subscriber :
        ADT.Models.ISubscriber,
        ADT.Models.ISubscriberInternal
    {

        /// <summary>Backing field for <see cref="Email" /> property.</summary>
        private string _email;

        /// <summary>Email of the subscriber</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public string Email { get => this._email; set => this._email = value; }

        /// <summary>Backing field for <see cref="Notification" /> property.</summary>
        private long? _notification;

        /// <summary>Number specifying what notifications to receive</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public long? Notification { get => this._notification; set => this._notification = value; }

        /// <summary>Creates an new <see cref="Subscriber" /> instance.</summary>
        public Subscriber()
        {

        }
    }
    /// An individual that would like to subscribe to events that occur on a pipeline.
    public partial interface ISubscriber :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>Email of the subscriber</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email of the subscriber",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string Email { get; set; }
        /// <summary>Number specifying what notifications to receive</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number specifying what notifications to receive",
        SerializedName = @"notifications",
        PossibleTypes = new [] { typeof(long) })]
        long? Notification { get; set; }

    }
    /// An individual that would like to subscribe to events that occur on a pipeline.
    internal partial interface ISubscriberInternal

    {
        /// <summary>Email of the subscriber</summary>
        string Email { get; set; }
        /// <summary>Number specifying what notifications to receive</summary>
        long? Notification { get; set; }

    }
}