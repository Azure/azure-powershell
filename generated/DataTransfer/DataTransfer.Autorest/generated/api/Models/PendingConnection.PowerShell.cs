// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using ADT.Runtime.PowerShell;

    /// <summary>Pending connection object</summary>
    [System.ComponentModel.TypeConverter(typeof(PendingConnectionTypeConverter))]
    public partial class PendingConnection
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="ADT.Models.PendingConnection"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>an instance of <see cref="ADT.Models.IPendingConnection" />.</returns>
        public static ADT.Models.IPendingConnection DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PendingConnection(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="ADT.Models.PendingConnection"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>an instance of <see cref="ADT.Models.IPendingConnection" />.</returns>
        public static ADT.Models.IPendingConnection DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PendingConnection(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PendingConnection" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="PendingConnection" /> model class.</returns>
        public static ADT.Models.IPendingConnection FromJsonString(string jsonText) => FromJson(ADT.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="ADT.Models.PendingConnection"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PendingConnection(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SystemData"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemData = (ADT.Models.ISystemData) content.GetValueForProperty("SystemData",((ADT.Models.IPendingConnectionInternal)this).SystemData, ADT.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((ADT.Models.IPendingConnectionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("Pipeline"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Pipeline = (string) content.GetValueForProperty("Pipeline",((ADT.Models.IPendingConnectionInternal)this).Pipeline, global::System.Convert.ToString);
            }
            if (content.Contains("Direction"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Direction = (string) content.GetValueForProperty("Direction",((ADT.Models.IPendingConnectionInternal)this).Direction, global::System.Convert.ToString);
            }
            if (content.Contains("Justification"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Justification = (string) content.GetValueForProperty("Justification",((ADT.Models.IPendingConnectionInternal)this).Justification, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Status = (string) content.GetValueForProperty("Status",((ADT.Models.IPendingConnectionInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ForceDisabledStatus"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).ForceDisabledStatus = (System.Collections.Generic.List<string>) content.GetValueForProperty("ForceDisabledStatus",((ADT.Models.IPendingConnectionInternal)this).ForceDisabledStatus, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("StatusReason"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).StatusReason = (string) content.GetValueForProperty("StatusReason",((ADT.Models.IPendingConnectionInternal)this).StatusReason, global::System.Convert.ToString);
            }
            if (content.Contains("LinkStatus"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).LinkStatus = (string) content.GetValueForProperty("LinkStatus",((ADT.Models.IPendingConnectionInternal)this).LinkStatus, global::System.Convert.ToString);
            }
            if (content.Contains("LinkedConnectionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).LinkedConnectionId = (string) content.GetValueForProperty("LinkedConnectionId",((ADT.Models.IPendingConnectionInternal)this).LinkedConnectionId, global::System.Convert.ToString);
            }
            if (content.Contains("FlowType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).FlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("FlowType",((ADT.Models.IPendingConnectionInternal)this).FlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RequirementId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).RequirementId = (string) content.GetValueForProperty("RequirementId",((ADT.Models.IPendingConnectionInternal)this).RequirementId, global::System.Convert.ToString);
            }
            if (content.Contains("RemoteSubscriptionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).RemoteSubscriptionId = (string) content.GetValueForProperty("RemoteSubscriptionId",((ADT.Models.IPendingConnectionInternal)this).RemoteSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("Approver"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Approver = (string) content.GetValueForProperty("Approver",((ADT.Models.IPendingConnectionInternal)this).Approver, global::System.Convert.ToString);
            }
            if (content.Contains("Pin"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Pin = (string) content.GetValueForProperty("Pin",((ADT.Models.IPendingConnectionInternal)this).Pin, global::System.Convert.ToString);
            }
            if (content.Contains("DateSubmitted"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).DateSubmitted = (global::System.DateTime?) content.GetValueForProperty("DateSubmitted",((ADT.Models.IPendingConnectionInternal)this).DateSubmitted, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PrimaryContact"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).PrimaryContact = (string) content.GetValueForProperty("PrimaryContact",((ADT.Models.IPendingConnectionInternal)this).PrimaryContact, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryContact"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SecondaryContact = (System.Collections.Generic.List<string>) content.GetValueForProperty("SecondaryContact",((ADT.Models.IPendingConnectionInternal)this).SecondaryContact, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((ADT.Models.IPendingConnectionInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Policy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Policy = (System.Collections.Generic.List<string>) content.GetValueForProperty("Policy",((ADT.Models.IPendingConnectionInternal)this).Policy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Schema"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Schema = (System.Collections.Generic.List<ADT.Models.ISchema>) content.GetValueForProperty("Schema",((ADT.Models.IPendingConnectionInternal)this).Schema, __y => TypeConverterExtensions.SelectToList<ADT.Models.ISchema>(__y, ADT.Models.SchemaTypeConverter.ConvertFrom));
            }
            if (content.Contains("SchemaUri"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SchemaUri = (System.Collections.Generic.List<string>) content.GetValueForProperty("SchemaUri",((ADT.Models.IPendingConnectionInternal)this).SchemaUri, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Tag"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Tag = (ADT.Models.IPendingConnectionTags) content.GetValueForProperty("Tag",((ADT.Models.IPendingConnectionInternal)this).Tag, ADT.Models.PendingConnectionTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Location = (string) content.GetValueForProperty("Location",((ADT.Models.IPendingConnectionInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Id = (string) content.GetValueForProperty("Id",((ADT.Models.IPendingConnectionInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Name = (string) content.GetValueForProperty("Name",((ADT.Models.IPendingConnectionInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Type = (string) content.GetValueForProperty("Type",((ADT.Models.IPendingConnectionInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="ADT.Models.PendingConnection"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PendingConnection(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SystemData"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemData = (ADT.Models.ISystemData) content.GetValueForProperty("SystemData",((ADT.Models.IPendingConnectionInternal)this).SystemData, ADT.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubscriptionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((ADT.Models.IPendingConnectionInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("Pipeline"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Pipeline = (string) content.GetValueForProperty("Pipeline",((ADT.Models.IPendingConnectionInternal)this).Pipeline, global::System.Convert.ToString);
            }
            if (content.Contains("Direction"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Direction = (string) content.GetValueForProperty("Direction",((ADT.Models.IPendingConnectionInternal)this).Direction, global::System.Convert.ToString);
            }
            if (content.Contains("Justification"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Justification = (string) content.GetValueForProperty("Justification",((ADT.Models.IPendingConnectionInternal)this).Justification, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Status = (string) content.GetValueForProperty("Status",((ADT.Models.IPendingConnectionInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("ForceDisabledStatus"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).ForceDisabledStatus = (System.Collections.Generic.List<string>) content.GetValueForProperty("ForceDisabledStatus",((ADT.Models.IPendingConnectionInternal)this).ForceDisabledStatus, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("StatusReason"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).StatusReason = (string) content.GetValueForProperty("StatusReason",((ADT.Models.IPendingConnectionInternal)this).StatusReason, global::System.Convert.ToString);
            }
            if (content.Contains("LinkStatus"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).LinkStatus = (string) content.GetValueForProperty("LinkStatus",((ADT.Models.IPendingConnectionInternal)this).LinkStatus, global::System.Convert.ToString);
            }
            if (content.Contains("LinkedConnectionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).LinkedConnectionId = (string) content.GetValueForProperty("LinkedConnectionId",((ADT.Models.IPendingConnectionInternal)this).LinkedConnectionId, global::System.Convert.ToString);
            }
            if (content.Contains("FlowType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).FlowType = (System.Collections.Generic.List<string>) content.GetValueForProperty("FlowType",((ADT.Models.IPendingConnectionInternal)this).FlowType, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RequirementId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).RequirementId = (string) content.GetValueForProperty("RequirementId",((ADT.Models.IPendingConnectionInternal)this).RequirementId, global::System.Convert.ToString);
            }
            if (content.Contains("RemoteSubscriptionId"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).RemoteSubscriptionId = (string) content.GetValueForProperty("RemoteSubscriptionId",((ADT.Models.IPendingConnectionInternal)this).RemoteSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("Approver"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Approver = (string) content.GetValueForProperty("Approver",((ADT.Models.IPendingConnectionInternal)this).Approver, global::System.Convert.ToString);
            }
            if (content.Contains("Pin"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Pin = (string) content.GetValueForProperty("Pin",((ADT.Models.IPendingConnectionInternal)this).Pin, global::System.Convert.ToString);
            }
            if (content.Contains("DateSubmitted"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).DateSubmitted = (global::System.DateTime?) content.GetValueForProperty("DateSubmitted",((ADT.Models.IPendingConnectionInternal)this).DateSubmitted, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PrimaryContact"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).PrimaryContact = (string) content.GetValueForProperty("PrimaryContact",((ADT.Models.IPendingConnectionInternal)this).PrimaryContact, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryContact"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SecondaryContact = (System.Collections.Generic.List<string>) content.GetValueForProperty("SecondaryContact",((ADT.Models.IPendingConnectionInternal)this).SecondaryContact, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((ADT.Models.IPendingConnectionInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Policy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Policy = (System.Collections.Generic.List<string>) content.GetValueForProperty("Policy",((ADT.Models.IPendingConnectionInternal)this).Policy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Schema"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Schema = (System.Collections.Generic.List<ADT.Models.ISchema>) content.GetValueForProperty("Schema",((ADT.Models.IPendingConnectionInternal)this).Schema, __y => TypeConverterExtensions.SelectToList<ADT.Models.ISchema>(__y, ADT.Models.SchemaTypeConverter.ConvertFrom));
            }
            if (content.Contains("SchemaUri"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SchemaUri = (System.Collections.Generic.List<string>) content.GetValueForProperty("SchemaUri",((ADT.Models.IPendingConnectionInternal)this).SchemaUri, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Tag"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Tag = (ADT.Models.IPendingConnectionTags) content.GetValueForProperty("Tag",((ADT.Models.IPendingConnectionInternal)this).Tag, ADT.Models.PendingConnectionTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Location = (string) content.GetValueForProperty("Location",((ADT.Models.IPendingConnectionInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Id = (string) content.GetValueForProperty("Id",((ADT.Models.IPendingConnectionInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Name = (string) content.GetValueForProperty("Name",((ADT.Models.IPendingConnectionInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).Type = (string) content.GetValueForProperty("Type",((ADT.Models.IPendingConnectionInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((ADT.Models.IPendingConnectionInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((ADT.Models.IPendingConnectionInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, ADT.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Pending connection object
    [System.ComponentModel.TypeConverter(typeof(PendingConnectionTypeConverter))]
    public partial interface IPendingConnection

    {

    }
}