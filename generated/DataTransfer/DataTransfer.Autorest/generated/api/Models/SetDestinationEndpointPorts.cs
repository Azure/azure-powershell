// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace ADT.Models
{
    using static ADT.Runtime.Extensions;

    /// <summary>Set the destination endpoint ports for the specified flow.</summary>
    public partial class SetDestinationEndpointPorts :
        ADT.Models.ISetDestinationEndpointPorts,
        ADT.Models.ISetDestinationEndpointPortsInternal
    {

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private System.Collections.Generic.List<long> _port;

        /// <summary>The specified flow destination endpoint ports</summary>
        [ADT.Origin(ADT.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<long> Port { get => this._port; set => this._port = value; }

        /// <summary>Creates an new <see cref="SetDestinationEndpointPorts" /> instance.</summary>
        public SetDestinationEndpointPorts()
        {

        }
    }
    /// Set the destination endpoint ports for the specified flow.
    public partial interface ISetDestinationEndpointPorts :
        ADT.Runtime.IJsonSerializable
    {
        /// <summary>The specified flow destination endpoint ports</summary>
        [ADT.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The specified flow destination endpoint ports",
        SerializedName = @"ports",
        PossibleTypes = new [] { typeof(long) })]
        System.Collections.Generic.List<long> Port { get; set; }

    }
    /// Set the destination endpoint ports for the specified flow.
    internal partial interface ISetDestinationEndpointPortsInternal

    {
        /// <summary>The specified flow destination endpoint ports</summary>
        System.Collections.Generic.List<long> Port { get; set; }

    }
}