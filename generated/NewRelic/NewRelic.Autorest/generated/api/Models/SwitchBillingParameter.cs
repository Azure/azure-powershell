// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Extensions;

    /// <summary>Switch Billing Parameter specification.</summary>
    public partial class SwitchBillingParameter :
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingParameter,
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingParameterInternal
    {

        /// <summary>Internal Acessors for Request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequest Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingParameterInternal.Request { get => (this._request = this._request ?? new Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.SwitchBillingRequest()); set { {_request = value;} } }

        /// <summary>Internal Acessors for RequestPlanData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.IPlanData Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingParameterInternal.RequestPlanData { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanData; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanData = value; }

        /// <summary>Different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string PlanDataBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataBillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataBillingCycle = value ?? null; }

        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public global::System.DateTime? PlanDataEffectiveDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataEffectiveDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataEffectiveDate = value ?? default(global::System.DateTime); }

        /// <summary>plan id as published by NewRelic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string PlanDataPlanDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataPlanDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataPlanDetail = value ?? null; }

        /// <summary>Different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string PlanDataUsageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataUsageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).PlanDataUsageType = value ?? null; }

        /// <summary>Backing field for <see cref="Request" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequest _request;

        /// <summary>The details of the switch billing request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequest Request { get => (this._request = this._request ?? new Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.SwitchBillingRequest()); set => this._request = value; }

        /// <summary>Azure resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string RequestAzureResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).AzureResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).AzureResourceId = value ?? null; }

        /// <summary>Organization id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string RequestOrganizationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).OrganizationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).OrganizationId = value ?? null; }

        /// <summary>User Email</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Origin(Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PropertyOrigin.Inlined)]
        public string RequestUserEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).UserEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequestInternal)Request).UserEmail = value ; }

        /// <summary>Creates an new <see cref="SwitchBillingParameter" /> instance.</summary>
        public SwitchBillingParameter()
        {

        }
    }
    /// Switch Billing Parameter specification.
    public partial interface ISwitchBillingParameter :
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.IJsonSerializable
    {
        /// <summary>Different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Different billing cycles like MONTHLY/WEEKLY. this could be enum",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PSArgumentCompleterAttribute("YEARLY", "MONTHLY", "WEEKLY")]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"date when plan was applied",
        SerializedName = @"effectiveDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by NewRelic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"plan id as published by NewRelic",
        SerializedName = @"planDetails",
        PossibleTypes = new [] { typeof(string) })]
        string PlanDataPlanDetail { get; set; }
        /// <summary>Different usage type like PAYG/COMMITTED. this could be enum</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Different usage type like PAYG/COMMITTED. this could be enum",
        SerializedName = @"usageType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PSArgumentCompleterAttribute("PAYG", "COMMITTED")]
        string PlanDataUsageType { get; set; }
        /// <summary>Azure resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Azure resource Id",
        SerializedName = @"azureResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RequestAzureResourceId { get; set; }
        /// <summary>Organization id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Organization id",
        SerializedName = @"organizationId",
        PossibleTypes = new [] { typeof(string) })]
        string RequestOrganizationId { get; set; }
        /// <summary>User Email</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User Email",
        SerializedName = @"userEmail",
        PossibleTypes = new [] { typeof(string) })]
        string RequestUserEmail { get; set; }

    }
    /// Switch Billing Parameter specification.
    internal partial interface ISwitchBillingParameterInternal

    {
        /// <summary>Different billing cycles like MONTHLY/WEEKLY. this could be enum</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PSArgumentCompleterAttribute("YEARLY", "MONTHLY", "WEEKLY")]
        string PlanDataBillingCycle { get; set; }
        /// <summary>date when plan was applied</summary>
        global::System.DateTime? PlanDataEffectiveDate { get; set; }
        /// <summary>plan id as published by NewRelic</summary>
        string PlanDataPlanDetail { get; set; }
        /// <summary>Different usage type like PAYG/COMMITTED. this could be enum</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NewRelic.PSArgumentCompleterAttribute("PAYG", "COMMITTED")]
        string PlanDataUsageType { get; set; }
        /// <summary>The details of the switch billing request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.ISwitchBillingRequest Request { get; set; }
        /// <summary>Azure resource Id</summary>
        string RequestAzureResourceId { get; set; }
        /// <summary>Organization id</summary>
        string RequestOrganizationId { get; set; }
        /// <summary>Plan details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NewRelic.Models.IPlanData RequestPlanData { get; set; }
        /// <summary>User Email</summary>
        string RequestUserEmail { get; set; }

    }
}