// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>
    /// Describes a DNS record set (a collection of DNS records with the same name and type).
    /// </summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class RecordSet :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSet,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal
    {

        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord[] ARecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).ARecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).ARecord = value ?? null /* arrayOf */; }

        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord[] AaaaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).AaaaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).AaaaRecord = value ?? null /* arrayOf */; }

        /// <summary>The list of CAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord[] CaaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CaaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CaaRecord = value ?? null /* arrayOf */; }

        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string CnameRecordCname { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CnameRecordCname; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CnameRecordCname = value ?? null; }

        /// <summary>The list of DS records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord[] DsRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).DsRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).DsRecord = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The etag of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Fqdn; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ID of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesMetadata Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Metadata = value ?? null /* model class */; }

        /// <summary>Internal Acessors for CnameRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICnameRecord Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.CnameRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CnameRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).CnameRecord = value; }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Fqdn = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.RecordSetProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SoaRecord</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISoaRecord Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.SoaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecord = value; }

        /// <summary>Internal Acessors for TargetResource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.TargetResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TargetResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TargetResource = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord[] MxRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).MxRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).MxRecord = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>The list of NAPTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord[] NaptrRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).NaptrRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).NaptrRecord = value ?? null /* arrayOf */; }

        /// <summary>The list of NS records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord[] NsRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).NsRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).NsRecord = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties _property;

        /// <summary>The properties of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.RecordSetProperties()); set => this._property = value; }

        /// <summary>provisioning State of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord[] PtrRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).PtrRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).PtrRecord = value ?? null /* arrayOf */; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string SoaRecordEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordEmail = value ?? null; }

        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? SoaRecordExpireTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordExpireTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordExpireTime = value ?? default(long); }

        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string SoaRecordHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordHost = value ?? null; }

        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? SoaRecordMinimumTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordMinimumTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordMinimumTtl = value ?? default(long); }

        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? SoaRecordRefreshTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordRefreshTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordRefreshTime = value ?? default(long); }

        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? SoaRecordRetryTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordRetryTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordRetryTime = value ?? default(long); }

        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? SoaRecordSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SoaRecordSerialNumber = value ?? default(long); }

        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord[] SrvRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SrvRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).SrvRecord = value ?? null /* arrayOf */; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string TargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TargetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TargetResourceId = value ?? null; }

        /// <summary>The list of TLSA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord[] TlsaRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TlsaRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TlsaRecord = value ?? null /* arrayOf */; }

        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? Ttl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).Ttl = value ?? default(long); }

        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord[] TxtRecord { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TxtRecord; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesInternal)Property).TxtRecord = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="RecordSet" /> instance.</summary>
        public RecordSet()
        {

        }
    }
    /// Describes a DNS record set (a collection of DNS records with the same name and type).
    public partial interface IRecordSet :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>The list of A records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of A records in the record set.",
        SerializedName = @"ARecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of AAAA records in the record set.",
        SerializedName = @"AAAARecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The list of CAA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of CAA records in the record set.",
        SerializedName = @"caaRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord[] CaaRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The canonical name for this CNAME record.",
        SerializedName = @"cname",
        PossibleTypes = new [] { typeof(string) })]
        string CnameRecordCname { get; set; }
        /// <summary>The list of DS records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of DS records in the record set.",
        SerializedName = @"DSRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord[] DsRecord { get; set; }
        /// <summary>The etag of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The etag of the record set.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fully qualified domain name of the record set.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string Fqdn { get;  }
        /// <summary>The ID of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the record set.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The metadata attached to the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata attached to the record set.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of MX records in the record set.",
        SerializedName = @"MXRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord[] MxRecord { get; set; }
        /// <summary>The name of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the record set.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The list of NAPTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of NAPTR records in the record set.",
        SerializedName = @"NAPTRRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord[] NaptrRecord { get; set; }
        /// <summary>The list of NS records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of NS records in the record set.",
        SerializedName = @"NSRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord[] NsRecord { get; set; }
        /// <summary>provisioning State of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"provisioning State of the record set.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The list of PTR records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of PTR records in the record set.",
        SerializedName = @"PTRRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email contact for this SOA record.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expire time for this SOA record.",
        SerializedName = @"expireTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name of the authoritative name server for this SOA record.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
        SerializedName = @"minimumTTL",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The refresh value for this SOA record.",
        SerializedName = @"refreshTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The retry time for this SOA record.",
        SerializedName = @"retryTime",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The serial number for this SOA record.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(long) })]
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of SRV records in the record set.",
        SerializedName = @"SRVRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceId { get; set; }
        /// <summary>The list of TLSA records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of TLSA records in the record set.",
        SerializedName = @"TLSARecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord[] TlsaRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TTL (time-to-live) of the records in the record set.",
        SerializedName = @"TTL",
        PossibleTypes = new [] { typeof(long) })]
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of TXT records in the record set.",
        SerializedName = @"TXTRecords",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord[] TxtRecord { get; set; }
        /// <summary>The type of the record set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the record set.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Describes a DNS record set (a collection of DNS records with the same name and type).
    internal partial interface IRecordSetInternal

    {
        /// <summary>The list of A records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord[] ARecord { get; set; }
        /// <summary>The list of AAAA records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord[] AaaaRecord { get; set; }
        /// <summary>The list of CAA records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord[] CaaRecord { get; set; }
        /// <summary>The CNAME record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICnameRecord CnameRecord { get; set; }
        /// <summary>The canonical name for this CNAME record.</summary>
        string CnameRecordCname { get; set; }
        /// <summary>The list of DS records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord[] DsRecord { get; set; }
        /// <summary>The etag of the record set.</summary>
        string Etag { get; set; }
        /// <summary>Fully qualified domain name of the record set.</summary>
        string Fqdn { get; set; }
        /// <summary>The ID of the record set.</summary>
        string Id { get; set; }
        /// <summary>The metadata attached to the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetPropertiesMetadata Metadata { get; set; }
        /// <summary>The list of MX records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord[] MxRecord { get; set; }
        /// <summary>The name of the record set.</summary>
        string Name { get; set; }
        /// <summary>The list of NAPTR records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord[] NaptrRecord { get; set; }
        /// <summary>The list of NS records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord[] NsRecord { get; set; }
        /// <summary>The properties of the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties Property { get; set; }
        /// <summary>provisioning State of the record set.</summary>
        string ProvisioningState { get; set; }
        /// <summary>The list of PTR records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord[] PtrRecord { get; set; }
        /// <summary>The SOA record in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISoaRecord SoaRecord { get; set; }
        /// <summary>The email contact for this SOA record.</summary>
        string SoaRecordEmail { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        long? SoaRecordExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        string SoaRecordHost { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        long? SoaRecordMinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        long? SoaRecordRefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        long? SoaRecordRetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        long? SoaRecordSerialNumber { get; set; }
        /// <summary>The list of SRV records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord[] SrvRecord { get; set; }
        /// <summary>A reference to an azure resource from where the dns resource value is taken.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource TargetResource { get; set; }
        /// <summary>Resource Id.</summary>
        string TargetResourceId { get; set; }
        /// <summary>The list of TLSA records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord[] TlsaRecord { get; set; }
        /// <summary>The TTL (time-to-live) of the records in the record set.</summary>
        long? Ttl { get; set; }
        /// <summary>The list of TXT records in the record set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord[] TxtRecord { get; set; }
        /// <summary>The type of the record set.</summary>
        string Type { get; set; }

    }
}