// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>Represents the properties of the records in the record set.</summary>
    public partial class RecordSetProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IRecordSetProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject json ? new RecordSetProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject into a new instance of <see cref="RecordSetProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal RecordSetProperties(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_targetResource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject>("targetResource"), out var __jsonTargetResource) ? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.SubResource.FromJson(__jsonTargetResource) : TargetResource;}
            {_cnameRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject>("CNAMERecord"), out var __jsonCnameRecord) ? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.CnameRecord.FromJson(__jsonCnameRecord) : CnameRecord;}
            {_soaRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject>("SOARecord"), out var __jsonSoaRecord) ? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.SoaRecord.FromJson(__jsonSoaRecord) : SoaRecord;}
            {_metadata = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject>("metadata"), out var __jsonMetadata) ? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.RecordSetPropertiesMetadata.FromJson(__jsonMetadata) : Metadata;}
            {_ttl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNumber>("TTL"), out var __jsonTtl) ? (long?)__jsonTtl : Ttl;}
            {_fqdn = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonString>("fqdn"), out var __jsonFqdn) ? (string)__jsonFqdn : (string)Fqdn;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_aRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("ARecords"), out var __jsonARecords) ? If( __jsonARecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IARecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ARecord.FromJson(__u) )) ))() : null : ARecord;}
            {_aaaaRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("AAAARecords"), out var __jsonAaaaRecords) ? If( __jsonAaaaRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IAaaaRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.AaaaRecord.FromJson(__p) )) ))() : null : AaaaRecord;}
            {_mxRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("MXRecords"), out var __jsonMxRecords) ? If( __jsonMxRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IMxRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.MxRecord.FromJson(__k) )) ))() : null : MxRecord;}
            {_nsRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("NSRecords"), out var __jsonNsRecords) ? If( __jsonNsRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INsRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.NsRecord.FromJson(__f) )) ))() : null : NsRecord;}
            {_ptrRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("PTRRecords"), out var __jsonPtrRecords) ? If( __jsonPtrRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var __b) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__b, (__a)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IPtrRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.PtrRecord.FromJson(__a) )) ))() : null : PtrRecord;}
            {_srvRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("SRVRecords"), out var __jsonSrvRecords) ? If( __jsonSrvRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ___w) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___w, (___v)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISrvRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.SrvRecord.FromJson(___v) )) ))() : null : SrvRecord;}
            {_txtRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("TXTRecords"), out var __jsonTxtRecords) ? If( __jsonTxtRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ___r) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___r, (___q)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITxtRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.TxtRecord.FromJson(___q) )) ))() : null : TxtRecord;}
            {_caaRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("caaRecords"), out var __jsonCaaRecords) ? If( __jsonCaaRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ___m) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___m, (___l)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ICaaRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.CaaRecord.FromJson(___l) )) ))() : null : CaaRecord;}
            {_dsRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("DSRecords"), out var __jsonDsRecords) ? If( __jsonDsRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ___h) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___h, (___g)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IDsRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.DsRecord.FromJson(___g) )) ))() : null : DsRecord;}
            {_tlsaRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("TLSARecords"), out var __jsonTlsaRecords) ? If( __jsonTlsaRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ___c) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(___c, (___b)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ITlsaRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.TlsaRecord.FromJson(___b) )) ))() : null : TlsaRecord;}
            {_naptrRecord = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray>("NAPTRRecords"), out var __jsonNaptrRecords) ? If( __jsonNaptrRecords as Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonArray, out var ____x) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(____x, (____w)=>(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.INaptrRecord) (Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.NaptrRecord.FromJson(____w) )) ))() : null : NaptrRecord;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="RecordSetProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="RecordSetProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._targetResource ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) this._targetResource.ToJson(null,serializationMode) : null, "targetResource" ,container.Add );
            AddIf( null != this._cnameRecord ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) this._cnameRecord.ToJson(null,serializationMode) : null, "CNAMERecord" ,container.Add );
            AddIf( null != this._soaRecord ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) this._soaRecord.ToJson(null,serializationMode) : null, "SOARecord" ,container.Add );
            AddIf( null != this._metadata ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) this._metadata.ToJson(null,serializationMode) : null, "metadata" ,container.Add );
            AddIf( null != this._ttl ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNumber((long)this._ttl) : null, "TTL" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._fqdn)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonString(this._fqdn.ToString()) : null, "fqdn" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (null != this._aRecord)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var __x in this._aRecord )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("ARecords",__w);
            }
            if (null != this._aaaaRecord)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var __s in this._aaaaRecord )
                {
                    AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                }
                container.Add("AAAARecords",__r);
            }
            if (null != this._mxRecord)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var __n in this._mxRecord )
                {
                    AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                }
                container.Add("MXRecords",__m);
            }
            if (null != this._nsRecord)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var __i in this._nsRecord )
                {
                    AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                }
                container.Add("NSRecords",__h);
            }
            if (null != this._ptrRecord)
            {
                var __c = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var __d in this._ptrRecord )
                {
                    AddIf(__d?.ToJson(null, serializationMode) ,__c.Add);
                }
                container.Add("PTRRecords",__c);
            }
            if (null != this._srvRecord)
            {
                var ___x = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ___y in this._srvRecord )
                {
                    AddIf(___y?.ToJson(null, serializationMode) ,___x.Add);
                }
                container.Add("SRVRecords",___x);
            }
            if (null != this._txtRecord)
            {
                var ___s = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ___t in this._txtRecord )
                {
                    AddIf(___t?.ToJson(null, serializationMode) ,___s.Add);
                }
                container.Add("TXTRecords",___s);
            }
            if (null != this._caaRecord)
            {
                var ___n = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ___o in this._caaRecord )
                {
                    AddIf(___o?.ToJson(null, serializationMode) ,___n.Add);
                }
                container.Add("caaRecords",___n);
            }
            if (null != this._dsRecord)
            {
                var ___i = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ___j in this._dsRecord )
                {
                    AddIf(___j?.ToJson(null, serializationMode) ,___i.Add);
                }
                container.Add("DSRecords",___i);
            }
            if (null != this._tlsaRecord)
            {
                var ___d = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ___e in this._tlsaRecord )
                {
                    AddIf(___e?.ToJson(null, serializationMode) ,___d.Add);
                }
                container.Add("TLSARecords",___d);
            }
            if (null != this._naptrRecord)
            {
                var ____y = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Json.XNodeArray();
                foreach( var ____z in this._naptrRecord )
                {
                    AddIf(____z?.ToJson(null, serializationMode) ,____y.Add);
                }
                container.Add("NAPTRRecords",____y);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}