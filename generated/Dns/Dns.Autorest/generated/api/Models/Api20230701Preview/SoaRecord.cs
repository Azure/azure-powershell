// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>An SOA record.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class SoaRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISoaRecord,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISoaRecordInternal
    {

        /// <summary>Backing field for <see cref="Email" /> property.</summary>
        private string _email;

        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Email { get => this._email; set => this._email = value; }

        /// <summary>Backing field for <see cref="ExpireTime" /> property.</summary>
        private long? _expireTime;

        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? ExpireTime { get => this._expireTime; set => this._expireTime = value; }

        /// <summary>Backing field for <see cref="Host" /> property.</summary>
        private string _host;

        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Host { get => this._host; set => this._host = value; }

        /// <summary>Backing field for <see cref="MinimumTtl" /> property.</summary>
        private long? _minimumTtl;

        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? MinimumTtl { get => this._minimumTtl; set => this._minimumTtl = value; }

        /// <summary>Backing field for <see cref="RefreshTime" /> property.</summary>
        private long? _refreshTime;

        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? RefreshTime { get => this._refreshTime; set => this._refreshTime = value; }

        /// <summary>Backing field for <see cref="RetryTime" /> property.</summary>
        private long? _retryTime;

        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? RetryTime { get => this._retryTime; set => this._retryTime = value; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private long? _serialNumber;

        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public long? SerialNumber { get => this._serialNumber; set => this._serialNumber = value; }

        /// <summary>Creates an new <see cref="SoaRecord" /> instance.</summary>
        public SoaRecord()
        {

        }
    }
    /// An SOA record.
    public partial interface ISoaRecord :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable
    {
        /// <summary>The email contact for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email contact for this SOA record.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string Email { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The expire time for this SOA record.",
        SerializedName = @"expireTime",
        PossibleTypes = new [] { typeof(long) })]
        long? ExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name of the authoritative name server for this SOA record.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string Host { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum value for this SOA record. By convention this is used to determine the negative caching duration.",
        SerializedName = @"minimumTTL",
        PossibleTypes = new [] { typeof(long) })]
        long? MinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The refresh value for this SOA record.",
        SerializedName = @"refreshTime",
        PossibleTypes = new [] { typeof(long) })]
        long? RefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The retry time for this SOA record.",
        SerializedName = @"retryTime",
        PossibleTypes = new [] { typeof(long) })]
        long? RetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The serial number for this SOA record.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(long) })]
        long? SerialNumber { get; set; }

    }
    /// An SOA record.
    internal partial interface ISoaRecordInternal

    {
        /// <summary>The email contact for this SOA record.</summary>
        string Email { get; set; }
        /// <summary>The expire time for this SOA record.</summary>
        long? ExpireTime { get; set; }
        /// <summary>The domain name of the authoritative name server for this SOA record.</summary>
        string Host { get; set; }
        /// <summary>
        /// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
        /// </summary>
        long? MinimumTtl { get; set; }
        /// <summary>The refresh value for this SOA record.</summary>
        long? RefreshTime { get; set; }
        /// <summary>The retry time for this SOA record.</summary>
        long? RetryTime { get; set; }
        /// <summary>The serial number for this SOA record.</summary>
        long? SerialNumber { get; set; }

    }
}