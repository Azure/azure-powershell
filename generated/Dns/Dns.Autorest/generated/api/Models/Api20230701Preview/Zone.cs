// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Extensions;

    /// <summary>Describes a DNS zone.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.Dns.DoNotFormat]
    public partial class Zone :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZone,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.Resource();

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private string _etag;

        /// <summary>The etag of the zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string Etag { get => this._etag; set => this._etag = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Id; }

        /// <summary>Resource location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Location = value ; }

        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? MaxNumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordSet; }

        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? MaxNumberOfRecordsPerRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordsPerRecordSet; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for MaxNumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.MaxNumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordSet = value; }

        /// <summary>Internal Acessors for MaxNumberOfRecordsPerRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.MaxNumberOfRecordsPerRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordsPerRecordSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).MaxNumberOfRecordsPerRecordSet = value; }

        /// <summary>Internal Acessors for NameServer</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.NameServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NameServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NameServer = value; }

        /// <summary>Internal Acessors for NumberOfRecordSet</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.NumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NumberOfRecordSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NumberOfRecordSet = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneProperties Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ZoneProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SigningKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.SigningKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).SigningKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).SigningKey = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.SystemData()); set { {_systemData = value;} } }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string[] NameServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NameServer; }

        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public long? NumberOfRecordSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).NumberOfRecordSet; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneProperties _property;

        /// <summary>The properties of the zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ZoneProperties()); set => this._property = value; }

        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).RegistrationVirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).RegistrationVirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).ResolutionVirtualNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).ResolutionVirtualNetwork = value ?? null /* arrayOf */; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The list of signing keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).SigningKey; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal)__resource).Type; }

        /// <summary>The type of this DNS zone (Public or Private).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Origin(Microsoft.Azure.PowerShell.Cmdlets.Dns.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).ZoneType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZonePropertiesInternal)Property).ZoneType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType)""); }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }

        /// <summary>Creates an new <see cref="Zone" /> instance.</summary>
        public Zone()
        {

        }
    }
    /// Describes a DNS zone.
    public partial interface IZone :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResource
    {
        /// <summary>The etag of the zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The etag of the zone.",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(string) })]
        string Etag { get; set; }
        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of record sets that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfRecordSet { get;  }
        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of records per record set that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"maxNumberOfRecordsPerRecordSet",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxNumberOfRecordsPerRecordSet { get;  }
        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"nameServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] NameServer { get;  }
        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current number of record sets in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
        SerializedName = @"numberOfRecordSets",
        PossibleTypes = new [] { typeof(long) })]
        long? NumberOfRecordSet { get;  }
        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.",
        SerializedName = @"registrationVirtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get; set; }
        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.",
        SerializedName = @"resolutionVirtualNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get; set; }
        /// <summary>The list of signing keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of signing keys.",
        SerializedName = @"signingKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of this DNS zone (Public or Private).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Dns.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of this DNS zone (Public or Private).",
        SerializedName = @"zoneType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get; set; }

    }
    /// Describes a DNS zone.
    internal partial interface IZoneInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IResourceInternal
    {
        /// <summary>The etag of the zone.</summary>
        string Etag { get; set; }
        /// <summary>
        /// The maximum number of record sets that can be created in this DNS zone. This is a read-only property and any attempt to
        /// set this value will be ignored.
        /// </summary>
        long? MaxNumberOfRecordSet { get; set; }
        /// <summary>
        /// The maximum number of records per record set that can be created in this DNS zone. This is a read-only property and any
        /// attempt to set this value will be ignored.
        /// </summary>
        long? MaxNumberOfRecordsPerRecordSet { get; set; }
        /// <summary>
        /// The name servers for this DNS zone. This is a read-only property and any attempt to set this value will be ignored.
        /// </summary>
        string[] NameServer { get; set; }
        /// <summary>
        /// The current number of record sets in this DNS zone. This is a read-only property and any attempt to set this value will
        /// be ignored.
        /// </summary>
        long? NumberOfRecordSet { get; set; }
        /// <summary>The properties of the zone.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.IZoneProperties Property { get; set; }
        /// <summary>
        /// A list of references to virtual networks that register hostnames in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] RegistrationVirtualNetwork { get; set; }
        /// <summary>
        /// A list of references to virtual networks that resolve records in this DNS zone. This is a only when ZoneType is Private.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISubResource[] ResolutionVirtualNetwork { get; set; }
        /// <summary>The list of signing keys.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20230701Preview.ISigningKey[] SigningKey { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Models.Api20.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>The type of this DNS zone (Public or Private).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Dns.Support.ZoneType? ZoneType { get; set; }

    }
}