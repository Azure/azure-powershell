// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Extensions;

    /// <summary>Properties of the Contact Resource.</summary>
    public partial class ContactsProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject into a new instance of <see cref="ContactsProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ContactsProperties(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_antennaConfiguration = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject>("antennaConfiguration"), out var __jsonAntennaConfiguration) ? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.ContactsPropertiesAntennaConfiguration.FromJson(__jsonAntennaConfiguration) : AntennaConfiguration;}
            {_contactProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject>("contactProfile"), out var __jsonContactProfile) ? Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.ResourceReference.FromJson(__jsonContactProfile) : ContactProfile;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)Status;}
            {_reservationStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("reservationStartTime"), out var __jsonReservationStartTime) ? global::System.DateTime.TryParse((string)__jsonReservationStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonReservationStartTimeValue) ? __jsonReservationStartTimeValue : ReservationStartTime : ReservationStartTime;}
            {_reservationEndTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("reservationEndTime"), out var __jsonReservationEndTime) ? global::System.DateTime.TryParse((string)__jsonReservationEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonReservationEndTimeValue) ? __jsonReservationEndTimeValue : ReservationEndTime : ReservationEndTime;}
            {_rxStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("rxStartTime"), out var __jsonRxStartTime) ? global::System.DateTime.TryParse((string)__jsonRxStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonRxStartTimeValue) ? __jsonRxStartTimeValue : RxStartTime : RxStartTime;}
            {_rxEndTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("rxEndTime"), out var __jsonRxEndTime) ? global::System.DateTime.TryParse((string)__jsonRxEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonRxEndTimeValue) ? __jsonRxEndTimeValue : RxEndTime : RxEndTime;}
            {_txStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("txStartTime"), out var __jsonTxStartTime) ? global::System.DateTime.TryParse((string)__jsonTxStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTxStartTimeValue) ? __jsonTxStartTimeValue : TxStartTime : TxStartTime;}
            {_txEndTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("txEndTime"), out var __jsonTxEndTime) ? global::System.DateTime.TryParse((string)__jsonTxEndTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTxEndTimeValue) ? __jsonTxEndTimeValue : TxEndTime : TxEndTime;}
            {_errorMessage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("errorMessage"), out var __jsonErrorMessage) ? (string)__jsonErrorMessage : (string)ErrorMessage;}
            {_maximumElevationDegree = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber>("maximumElevationDegrees"), out var __jsonMaximumElevationDegrees) ? (float?)__jsonMaximumElevationDegrees : MaximumElevationDegree;}
            {_startAzimuthDegree = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber>("startAzimuthDegrees"), out var __jsonStartAzimuthDegrees) ? (float?)__jsonStartAzimuthDegrees : StartAzimuthDegree;}
            {_endAzimuthDegree = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber>("endAzimuthDegrees"), out var __jsonEndAzimuthDegrees) ? (float?)__jsonEndAzimuthDegrees : EndAzimuthDegree;}
            {_groundStationName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString>("groundStationName"), out var __jsonGroundStationName) ? (string)__jsonGroundStationName : (string)GroundStationName;}
            {_startElevationDegree = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber>("startElevationDegrees"), out var __jsonStartElevationDegrees) ? (float?)__jsonStartElevationDegrees : StartElevationDegree;}
            {_endElevationDegree = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber>("endElevationDegrees"), out var __jsonEndElevationDegrees) ? (float?)__jsonEndElevationDegrees : EndElevationDegree;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactsProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactsProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20221101.IContactsProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject json ? new ContactsProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="ContactsProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ContactsProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._antennaConfiguration ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) this._antennaConfiguration.ToJson(null,serializationMode) : null, "antennaConfiguration" ,container.Add );
            }
            AddIf( null != this._contactProfile ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) this._contactProfile.ToJson(null,serializationMode) : null, "contactProfile" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._reservationStartTime.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)), "reservationStartTime" ,container.Add );
            AddIf( (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._reservationEndTime.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)), "reservationEndTime" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._rxStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._rxStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "rxStartTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._rxEndTime ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._rxEndTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "rxEndTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._txStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._txStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "txStartTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._txEndTime ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._txEndTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "txEndTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._errorMessage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._errorMessage.ToString()) : null, "errorMessage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._maximumElevationDegree ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber((float)this._maximumElevationDegree) : null, "maximumElevationDegrees" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._startAzimuthDegree ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber((float)this._startAzimuthDegree) : null, "startAzimuthDegrees" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._endAzimuthDegree ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber((float)this._endAzimuthDegree) : null, "endAzimuthDegrees" ,container.Add );
            }
            AddIf( null != (((object)this._groundStationName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonString(this._groundStationName.ToString()) : null, "groundStationName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._startElevationDegree ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber((float)this._startElevationDegree) : null, "startElevationDegrees" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._endElevationDegree ? (Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Orbital.Runtime.Json.JsonNumber((float)this._endElevationDegree) : null, "endElevationDegrees" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}