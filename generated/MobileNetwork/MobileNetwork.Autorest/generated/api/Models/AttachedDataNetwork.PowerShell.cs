// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.PowerShell;

    /// <summary>
    /// Attached data network resource. Must be created in the same location as its parent packet core data plane.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(AttachedDataNetworkTypeConverter))]
    public partial class AttachedDataNetwork
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetwork"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AttachedDataNetwork(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkPropertiesFormat) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetworkPropertiesFormatTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("NaptConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.INaptConfiguration) content.GetValueForProperty("NaptConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.NaptConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterface = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IInterfaceProperties) content.GetValueForProperty("UserPlaneDataInterface",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterface, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.InterfacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DnsAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).DnsAddress = (System.Collections.Generic.List<string>) content.GetValueForProperty("DnsAddress",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).DnsAddress, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("UserEquipmentAddressPoolPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentAddressPoolPrefix = (System.Collections.Generic.List<string>) content.GetValueForProperty("UserEquipmentAddressPoolPrefix",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentAddressPoolPrefix, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("UserEquipmentStaticAddressPoolPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentStaticAddressPoolPrefix = (System.Collections.Generic.List<string>) content.GetValueForProperty("UserEquipmentStaticAddressPoolPrefix",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentStaticAddressPoolPrefix, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NaptConfigurationPortRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortRange = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPortRange) content.GetValueForProperty("NaptConfigurationPortRange",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortRange, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PortRangeTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationPinholeTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeTimeout = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPinholeTimeouts) content.GetValueForProperty("NaptConfigurationPinholeTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeTimeout, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PinholeTimeoutsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationPinholeLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeLimit = (int?) content.GetValueForProperty("NaptConfigurationPinholeLimit",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UserPlaneDataInterfaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceName = (string) content.GetValueForProperty("UserPlaneDataInterfaceName",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceName, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Address = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Address",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Address, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Subnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Subnet = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Subnet",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Subnet, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Gateway"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Gateway = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Gateway",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Gateway, global::System.Convert.ToString);
            }
            if (content.Contains("NaptConfigurationPortReuseHoldTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortReuseHoldTime = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPortReuseHoldTimes) content.GetValueForProperty("NaptConfigurationPortReuseHoldTime",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortReuseHoldTime, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PortReuseHoldTimesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationEnabled = (string) content.GetValueForProperty("NaptConfigurationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("PortRangeMinPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMinPort = (int?) content.GetValueForProperty("PortRangeMinPort",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMinPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortRangeMaxPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMaxPort = (int?) content.GetValueForProperty("PortRangeMaxPort",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMaxPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutTcp = (int?) content.GetValueForProperty("PinholeTimeoutTcp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutUdp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutUdp = (int?) content.GetValueForProperty("PinholeTimeoutUdp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutUdp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutIcmp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutIcmp = (int?) content.GetValueForProperty("PinholeTimeoutIcmp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutIcmp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortReuseHoldTimeTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeTcp = (int?) content.GetValueForProperty("PortReuseHoldTimeTcp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortReuseHoldTimeUdp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeUdp = (int?) content.GetValueForProperty("PortReuseHoldTimeUdp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeUdp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetwork"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AttachedDataNetwork(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkPropertiesFormat) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetworkPropertiesFormatTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("NaptConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.INaptConfiguration) content.GetValueForProperty("NaptConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfiguration, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.NaptConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterface = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IInterfaceProperties) content.GetValueForProperty("UserPlaneDataInterface",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterface, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.InterfacePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DnsAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).DnsAddress = (System.Collections.Generic.List<string>) content.GetValueForProperty("DnsAddress",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).DnsAddress, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("UserEquipmentAddressPoolPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentAddressPoolPrefix = (System.Collections.Generic.List<string>) content.GetValueForProperty("UserEquipmentAddressPoolPrefix",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentAddressPoolPrefix, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("UserEquipmentStaticAddressPoolPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentStaticAddressPoolPrefix = (System.Collections.Generic.List<string>) content.GetValueForProperty("UserEquipmentStaticAddressPoolPrefix",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserEquipmentStaticAddressPoolPrefix, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NaptConfigurationPortRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortRange = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPortRange) content.GetValueForProperty("NaptConfigurationPortRange",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortRange, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PortRangeTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationPinholeTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeTimeout = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPinholeTimeouts) content.GetValueForProperty("NaptConfigurationPinholeTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeTimeout, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PinholeTimeoutsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationPinholeLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeLimit = (int?) content.GetValueForProperty("NaptConfigurationPinholeLimit",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPinholeLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UserPlaneDataInterfaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceName = (string) content.GetValueForProperty("UserPlaneDataInterfaceName",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceName, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Address"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Address = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Address",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Address, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Subnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Subnet = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Subnet",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Subnet, global::System.Convert.ToString);
            }
            if (content.Contains("UserPlaneDataInterfaceIpv4Gateway"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Gateway = (string) content.GetValueForProperty("UserPlaneDataInterfaceIpv4Gateway",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).UserPlaneDataInterfaceIpv4Gateway, global::System.Convert.ToString);
            }
            if (content.Contains("NaptConfigurationPortReuseHoldTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortReuseHoldTime = (Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IPortReuseHoldTimes) content.GetValueForProperty("NaptConfigurationPortReuseHoldTime",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationPortReuseHoldTime, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.PortReuseHoldTimesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NaptConfigurationEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationEnabled = (string) content.GetValueForProperty("NaptConfigurationEnabled",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).NaptConfigurationEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("PortRangeMinPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMinPort = (int?) content.GetValueForProperty("PortRangeMinPort",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMinPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortRangeMaxPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMaxPort = (int?) content.GetValueForProperty("PortRangeMaxPort",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortRangeMaxPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutTcp = (int?) content.GetValueForProperty("PinholeTimeoutTcp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutUdp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutUdp = (int?) content.GetValueForProperty("PinholeTimeoutUdp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutUdp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PinholeTimeoutIcmp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutIcmp = (int?) content.GetValueForProperty("PinholeTimeoutIcmp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PinholeTimeoutIcmp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortReuseHoldTimeTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeTcp = (int?) content.GetValueForProperty("PortReuseHoldTimeTcp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PortReuseHoldTimeUdp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeUdp = (int?) content.GetValueForProperty("PortReuseHoldTimeUdp",((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetworkInternal)this).PortReuseHoldTimeUdp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetwork"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetwork" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetwork DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AttachedDataNetwork(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.AttachedDataNetwork"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetwork" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetwork DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AttachedDataNetwork(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AttachedDataNetwork" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AttachedDataNetwork" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.IAttachedDataNetwork FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Attached data network resource. Must be created in the same location as its parent packet core data plane.
    [System.ComponentModel.TypeConverter(typeof(AttachedDataNetworkTypeConverter))]
    public partial interface IAttachedDataNetwork

    {

    }
}