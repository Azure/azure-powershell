// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMware.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.Extensions;

    /// <summary>The properties of a specialized host.</summary>
    public partial class SpecializedHostProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.ISpecializedHostProperties,
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.ISpecializedHostPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostProperties" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostProperties __hostProperties = new Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.HostProperties();

        /// <summary>Display name of the host in VMware vCenter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).DisplayName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string FaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).FaultDomain; }

        /// <summary>Fully qualified domain name of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Fqdn; }

        /// <summary>The kind of host</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string Kind { get => "Specialized"; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Kind = "Specialized"; }

        /// <summary>
        /// If provided, the host is in maintenance. The value is the reason for maintenance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string Maintenance { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Maintenance; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Maintenance = value ?? null; }

        /// <summary>Internal Acessors for FaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal.FaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).FaultDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).FaultDomain = value ?? null; }

        /// <summary>Internal Acessors for Fqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal.Fqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).Fqdn = value ?? null; }

        /// <summary>Internal Acessors for MoRefId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal.MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).MoRefId; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).MoRefId = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).ProvisioningState = value ?? null; }

        /// <summary>vCenter managed object reference ID of the host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string MoRefId { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).MoRefId; }

        /// <summary>The state of the host provisioning.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.Origin(Microsoft.Azure.PowerShell.Cmdlets.VMware.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal)__hostProperties).ProvisioningState; }

        /// <summary>Creates an new <see cref="SpecializedHostProperties" /> instance.</summary>
        public SpecializedHostProperties()
        {
            this.__hostProperties.Kind = "Specialized";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__hostProperties), __hostProperties);
            await eventListener.AssertObjectIsValid(nameof(__hostProperties), __hostProperties);
        }
    }
    /// The properties of a specialized host.
    public partial interface ISpecializedHostProperties :
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostProperties
    {

    }
    /// The properties of a specialized host.
    internal partial interface ISpecializedHostPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IHostPropertiesInternal
    {

    }
}