// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>Properties of reservation purchase request</summary>
    public partial class PurchaseRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AppliedScopeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties _appliedScopeProperty;

        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.AppliedScopeProperties()); set => this._appliedScopeProperty = value; }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).DisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).ResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string AppliedScopePropertySubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).SubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopePropertiesInternal)AppliedScopeProperty).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="AppliedScopeType" /> property.</summary>
        private string _appliedScopeType;

        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string AppliedScopeType { get => this._appliedScopeType; set => this._appliedScopeType = value; }

        /// <summary>Backing field for <see cref="AppliedScopes" /> property.</summary>
        private System.Collections.Generic.List<string> _appliedScopes;

        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property
        /// will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AppliedScopes { get => this._appliedScopes; set => this._appliedScopes = value; }

        /// <summary>Backing field for <see cref="BillingPlan" /> property.</summary>
        private string _billingPlan;

        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string BillingPlan { get => this._billingPlan; set => this._billingPlan = value; }

        /// <summary>Backing field for <see cref="BillingScopeId" /> property.</summary>
        private string _billingScopeId;

        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string BillingScopeId { get => this._billingScopeId; set => this._billingScopeId = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Friendly name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesInternal.AppliedScopeProperty { get => (this._appliedScopeProperty = this._appliedScopeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.AppliedScopeProperties()); set { {_appliedScopeProperty = value;} } }

        /// <summary>Internal Acessors for ReservedResourceProperties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesInternal.ReservedResourceProperties { get => (this._reservedResourceProperties = this._reservedResourceProperties ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.PurchaseRequestPropertiesReservedResourceProperties()); set { {_reservedResourceProperties = value;} } }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; set => this._quantity = value; }

        /// <summary>Backing field for <see cref="Renew" /> property.</summary>
        private bool? _renew;

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public bool? Renew { get => this._renew; set => this._renew = value; }

        /// <summary>Backing field for <see cref="ReservedResourceProperties" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourceProperties _reservedResourceProperties;

        /// <summary>
        /// Properties specific to each reserved resource type. Not required if not applicable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourceProperties ReservedResourceProperties { get => (this._reservedResourceProperties = this._reservedResourceProperties ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.PurchaseRequestPropertiesReservedResourceProperties()); set => this._reservedResourceProperties = value; }

        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        public string ReservedResourcePropertyInstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourcePropertiesInternal)ReservedResourceProperties).InstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourcePropertiesInternal)ReservedResourceProperties).InstanceFlexibility = value ?? null; }

        /// <summary>Backing field for <see cref="ReservedResourceType" /> property.</summary>
        private string _reservedResourceType;

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string ReservedResourceType { get => this._reservedResourceType; set => this._reservedResourceType = value; }

        /// <summary>Backing field for <see cref="ReviewDateTime" /> property.</summary>
        private global::System.DateTime? _reviewDateTime;

        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public global::System.DateTime? ReviewDateTime { get => this._reviewDateTime; set => this._reviewDateTime = value; }

        /// <summary>Backing field for <see cref="Term" /> property.</summary>
        private string _term;

        /// <summary>Represent the term of reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public string Term { get => this._term; set => this._term = value; }

        /// <summary>Creates an new <see cref="PurchaseRequestProperties" /> instance.</summary>
        public PurchaseRequestProperties()
        {

        }
    }
    /// Properties of reservation purchase request
    public partial interface IPurchaseRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable
    {
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the savings plan should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the Applied Scope.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property
        /// will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType.",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AppliedScopes { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represent the billing plans.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription that will be charged for purchasing reservation or savings plan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }
        /// <summary>Friendly name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Friendly name of the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Quantity of the skus that are part of the reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("On", "Off")]
        string ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("VirtualMachines", "SqlDatabases", "SuseLinux", "CosmosDb", "RedHat", "SqlDataWarehouse", "VMwareCloudSimple", "RedHatOsa", "Databricks", "AppService", "ManagedDisk", "BlockBlob", "RedisCache", "AzureDataExplorer", "MySql", "MariaDb", "PostgreSql", "DedicatedHost", "SapHana", "SqlAzureHybridBenefit", "AVS", "DataFactory", "NetAppStorage", "AzureFiles", "SqlEdge", "VirtualMachineSoftware")]
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the Azure hybrid benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Represent the term of reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represent the term of reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }

    }
    /// Properties of reservation purchase request
    internal partial interface IPurchaseRequestPropertiesInternal

    {
        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties AppliedScopeProperty { get; set; }
        /// <summary>Display name</summary>
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>Type of the Applied Scope.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>
        /// List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property
        /// will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType.
        /// </summary>
        System.Collections.Generic.List<string> AppliedScopes { get; set; }
        /// <summary>Represent the billing plans.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Friendly name of the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>
        /// Properties specific to each reserved resource type. Not required if not applicable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPurchaseRequestPropertiesReservedResourceProperties ReservedResourceProperties { get; set; }
        /// <summary>
        /// Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines
        /// reserved resource type.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("On", "Off")]
        string ReservedResourcePropertyInstanceFlexibility { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("VirtualMachines", "SqlDatabases", "SuseLinux", "CosmosDb", "RedHat", "SqlDataWarehouse", "VMwareCloudSimple", "RedHatOsa", "Databricks", "AppService", "ManagedDisk", "BlockBlob", "RedisCache", "AzureDataExplorer", "MySql", "MariaDb", "PostgreSql", "DedicatedHost", "SapHana", "SqlAzureHybridBenefit", "AVS", "DataFactory", "NetAppStorage", "AzureFiles", "SqlEdge", "VirtualMachineSoftware")]
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure hybrid benefit needs to be reviewed.</summary>
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Represent the term of reservation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }

    }
}