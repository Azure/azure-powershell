// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>billing information</summary>
    public partial class BillingInformation :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IBillingInformation,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IBillingInformationInternal
    {

        /// <summary>Backing field for <see cref="BillingCurrencyProratedAmount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice _billingCurrencyProratedAmount;

        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyProratedAmount { get => (this._billingCurrencyProratedAmount = this._billingCurrencyProratedAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Price()); set => this._billingCurrencyProratedAmount = value; }

        /// <summary>
        /// Backing field for <see cref="BillingCurrencyRemainingCommitmentAmount" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice _billingCurrencyRemainingCommitmentAmount;

        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyRemainingCommitmentAmount { get => (this._billingCurrencyRemainingCommitmentAmount = this._billingCurrencyRemainingCommitmentAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Price()); set => this._billingCurrencyRemainingCommitmentAmount = value; }

        /// <summary>Backing field for <see cref="BillingCurrencyTotalPaidAmount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice _billingCurrencyTotalPaidAmount;

        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyTotalPaidAmount { get => (this._billingCurrencyTotalPaidAmount = this._billingCurrencyTotalPaidAmount ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.Price()); set => this._billingCurrencyTotalPaidAmount = value; }

        /// <summary>Creates an new <see cref="BillingInformation" /> instance.</summary>
        public BillingInformation()
        {

        }
    }
    /// billing information
    public partial interface IBillingInformation :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable
    {
        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Pricing information containing the amount and the currency code",
        SerializedName = @"billingCurrencyProratedAmount",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyProratedAmount { get; set; }
        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Pricing information containing the amount and the currency code",
        SerializedName = @"billingCurrencyRemainingCommitmentAmount",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyRemainingCommitmentAmount { get; set; }
        /// <summary>Pricing information containing the amount and the currency code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Pricing information containing the amount and the currency code",
        SerializedName = @"billingCurrencyTotalPaidAmount",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyTotalPaidAmount { get; set; }

    }
    /// billing information
    internal partial interface IBillingInformationInternal

    {
        /// <summary>Pricing information containing the amount and the currency code</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyProratedAmount { get; set; }
        /// <summary>Pricing information containing the amount and the currency code</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyRemainingCommitmentAmount { get; set; }
        /// <summary>Pricing information containing the amount and the currency code</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IPrice BillingCurrencyTotalPaidAmount { get; set; }

    }
}