// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Extensions;

    /// <summary>The definition of the reservation.</summary>
    public partial class ReservationResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ProxyResource();

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopePropertyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyDisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopePropertyManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopePropertyResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopePropertySubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertySubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertySubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopePropertyTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopePropertyTenantId = value ?? null; }

        /// <summary>The applied scope type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopeType = value ?? null; }

        /// <summary>The list of applied scopes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public System.Collections.Generic.List<string> AppliedScopes { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public bool? Archived { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Archived; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Archived = value ?? default(bool); }

        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 4)]
        public global::System.DateTime? BenefitStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BenefitStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BenefitStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The billing plan options available for this sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BillingPlan = value ?? null; }

        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).BillingScopeId = value ?? null; }

        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string Capability { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Capability; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Capability = value ?? null; }

        /// <summary>Friendly name for user to easily identify the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string DisplayProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).DisplayProvisioningState; }

        /// <summary>DateTime of the reservation starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? EffectiveDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).EffectiveDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).EffectiveDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private int? _etag;

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public int? Etag { get => this._etag; set => this._etag = value; }

        /// <summary>This is the date when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 5)]
        public global::System.DateTime? ExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExpiryDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExpiryDate = value ?? default(global::System.DateTime); }

        /// <summary>This is the date-time when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? ExpiryDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExpiryDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExpiryDateTime = value ?? default(global::System.DateTime); }

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IExtendedStatusInfo ExtendedStatusInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExtendedStatusInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ExtendedStatusInfo = value ?? null /* model class */; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string InstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).InstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).InstanceFlexibility = value ?? null; }

        /// <summary>Backing field for <see cref="InternalSkuName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuName _internalSkuName;

        /// <summary>The sku information associated to this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuName InternalSkuName { get => (this._internalSkuName = this._internalSkuName ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.SkuName()); set => this._internalSkuName = value; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>Resource Provider type to be reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>DateTime of the last time the reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 6)]
        public global::System.DateTime? LastUpdatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).LastUpdatedDateTime; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The Azure region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 0)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Properties of reservation merge</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationMergeProperties MergeProperties { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).MergeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).MergeProperty = value ?? null /* model class */; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.AppliedScopeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).AppliedScopeProperty = value; }

        /// <summary>Internal Acessors for DisplayProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.DisplayProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).DisplayProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).DisplayProvisioningState = value; }

        /// <summary>Internal Acessors for InternalSkuName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuName Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.InternalSkuName { get => (this._internalSkuName = this._internalSkuName ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.SkuName()); set { {_internalSkuName = value;} } }

        /// <summary>Internal Acessors for LastUpdatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.LastUpdatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).LastUpdatedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).LastUpdatedDateTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ReservationsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningSubState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.ProvisioningSubState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ProvisioningSubState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ProvisioningSubState = value; }

        /// <summary>Internal Acessors for SwapProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSwapProperties Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.SwapProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapProperty = value; }

        /// <summary>Internal Acessors for UserFriendlyAppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.UserFriendlyAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyAppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyAppliedScopeType = value; }

        /// <summary>Internal Acessors for UserFriendlyRenewState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.UserFriendlyRenewState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyRenewState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyRenewState = value; }

        /// <summary>Internal Acessors for Utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesUtilization Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.Utilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Utilization; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Utilization = value; }

        /// <summary>Internal Acessors for UtilizationAggregate</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationUtilizationAggregates> Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationAggregate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationAggregate = value; }

        /// <summary>Internal Acessors for UtilizationTrend</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationResponseInternal.UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationTrend; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationTrend = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value; }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 1, Label = @"ReservationOrderId/ReservationId")]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsProperties _property;

        /// <summary>The properties associated to this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ReservationsProperties()); set => this._property = value; }

        /// <summary>Current state of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 3, Label = @"State")]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>The provisioning sub-state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string ProvisioningSubState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ProvisioningSubState; }

        /// <summary>This is the date when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).PurchaseDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).PurchaseDate = value ?? default(global::System.DateTime); }

        /// <summary>This is the date-time when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? PurchaseDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).PurchaseDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).PurchaseDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public int? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Quantity = value ?? default(int); }

        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public bool? Renew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Renew = value ?? default(bool); }

        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string RenewDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewDestination = value ?? null; }

        /// <summary>The renew properties for a reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IRenewPropertiesResponse RenewProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewProperty = value ?? null /* model class */; }

        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string RenewSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).RenewSource = value ?? null; }

        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ReservedResourceType = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? ReviewDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ReviewDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).ReviewDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Description of the sku in english.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.FormatTable(Index = 7)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SkuDescription = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuNameInternal)InternalSkuName).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuNameInternal)InternalSkuName).Name = value ?? null; }

        /// <summary>Properties of reservation split</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSplitProperties SplitProperties { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SplitProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SplitProperty = value ?? null /* model class */; }

        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SwapPropertySwapDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapPropertySwapDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapPropertySwapDestination = value ?? null; }

        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SwapPropertySwapSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapPropertySwapSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).SwapPropertySwapSource = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemData = value ?? null /* model class */; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; }

        /// <summary>Represent the term of reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).Term = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string UserFriendlyAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyAppliedScopeType; }

        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string UserFriendlyRenewState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UserFriendlyRenewState; }

        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationUtilizationAggregates> UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationAggregate; }

        /// <summary>last 7 day utilization trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Origin(Microsoft.Azure.PowerShell.Cmdlets.Reservations.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.DoNotFormat]
        public string UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesInternal)Property).UtilizationTrend; }

        /// <summary>Creates an new <see cref="ReservationResponse" /> instance.</summary>
        public ReservationResponse()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The definition of the reservation.
    public partial interface IReservationResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IProxyResource
    {
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Tenant ID where the savings plan should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>The applied scope type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The applied scope type",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>The list of applied scopes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of applied scopes",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AppliedScopes { get; set; }
        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates if the reservation is archived",
        SerializedName = @"archived",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the DateTime when the reservation benefit started.",
        SerializedName = @"benefitStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>The billing plan options available for this sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The billing plan options available for this sku.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription that will be charged for purchasing reservation or savings plan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get; set; }
        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Capabilities of the reservation",
        SerializedName = @"capabilities",
        PossibleTypes = new [] { typeof(string) })]
        string Capability { get; set; }
        /// <summary>Friendly name for user to easily identify the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Friendly name for user to easily identify the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the reservation for display, e.g. Succeeded",
        SerializedName = @"displayProvisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvisioningState { get;  }
        /// <summary>DateTime of the reservation starting when this version is effective from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"DateTime of the reservation starting when this version is effective from.",
        SerializedName = @"effectiveDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EffectiveDateTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(int) })]
        int? Etag { get; set; }
        /// <summary>This is the date when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date when the reservation will expire.",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>This is the date-time when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the reservation will expire.",
        SerializedName = @"expiryDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"extendedStatusInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IExtendedStatusInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("On", "Off")]
        string InstanceFlexibility { get; set; }
        /// <summary>Resource Provider type to be reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Provider type to be reserved.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Microsoft.Compute")]
        string Kind { get; set; }
        /// <summary>DateTime of the last time the reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"DateTime of the last time the reservation was updated.",
        SerializedName = @"lastUpdatedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedDateTime { get;  }
        /// <summary>The Azure region where the reserved resource lives.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The Azure region where the reserved resource lives.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Properties of reservation merge</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Properties of reservation merge",
        SerializedName = @"mergeProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationMergeProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationMergeProperties MergeProperties { get; set; }
        /// <summary>Current state of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Current state of the reservation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Creating", "PendingResourceHold", "ConfirmedResourceHold", "PendingBilling", "ConfirmedBilling", "Created", "Succeeded", "Cancelled", "Expired", "BillingFailed", "Failed", "Split", "Merged")]
        string ProvisioningState { get; set; }
        /// <summary>The provisioning sub-state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning sub-state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningSubState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningSubState { get;  }
        /// <summary>This is the date when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date when the reservation was purchased.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>This is the date-time when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the reservation was purchased.",
        SerializedName = @"purchaseDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDateTime { get; set; }
        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Quantity of the skus that are part of the reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Setting this to true will automatically purchase a new reservation on the expiration date time.",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get; set; }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
        SerializedName = @"renewDestination",
        PossibleTypes = new [] { typeof(string) })]
        string RenewDestination { get; set; }
        /// <summary>The renew properties for a reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The renew properties for a reservation.",
        SerializedName = @"renewProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IRenewPropertiesResponse) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IRenewPropertiesResponse RenewProperty { get; set; }
        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
        SerializedName = @"renewSource",
        PossibleTypes = new [] { typeof(string) })]
        string RenewSource { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the resource that is being reserved.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("VirtualMachines", "SqlDatabases", "SuseLinux", "CosmosDb", "RedHat", "SqlDataWarehouse", "VMwareCloudSimple", "RedHatOsa", "Databricks", "AppService", "ManagedDisk", "BlockBlob", "RedisCache", "AzureDataExplorer", "MySql", "MariaDb", "PostgreSql", "DedicatedHost", "SapHana", "SqlAzureHybridBenefit", "AVS", "DataFactory", "NetAppStorage", "AzureFiles", "SqlEdge", "VirtualMachineSoftware")]
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This is the date-time when the Azure Hybrid Benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Description of the sku in english.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Description of the sku in english.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>Properties of reservation split</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Properties of reservation split",
        SerializedName = @"splitProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSplitProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSplitProperties SplitProperties { get; set; }
        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"swapDestination",
        PossibleTypes = new [] { typeof(string) })]
        string SwapPropertySwapDestination { get; set; }
        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"swapSource",
        PossibleTypes = new [] { typeof(string) })]
        string SwapPropertySwapSource { get; set; }
        /// <summary>Represent the term of reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Represent the term of reservation.",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The applied scope type of the reservation for display, e.g. Shared",
        SerializedName = @"userFriendlyAppliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyAppliedScopeType { get;  }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The renew state of the reservation for display, e.g. On",
        SerializedName = @"userFriendlyRenewState",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyRenewState { get;  }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The array of aggregates of a reservation's utilization",
        SerializedName = @"aggregates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationUtilizationAggregates) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationUtilizationAggregates> UtilizationAggregate { get;  }
        /// <summary>last 7 day utilization trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Reservations.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"last 7 day utilization trend for a reservation",
        SerializedName = @"trend",
        PossibleTypes = new [] { typeof(string) })]
        string UtilizationTrend { get;  }

    }
    /// The definition of the reservation.
    internal partial interface IReservationResponseInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IProxyResourceInternal
    {
        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IAppliedScopeProperties AppliedScopeProperty { get; set; }
        /// <summary>Display name</summary>
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the savings plan should apply benefit.</summary>
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>The applied scope type</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Single", "Shared", "ManagementGroup")]
        string AppliedScopeType { get; set; }
        /// <summary>The list of applied scopes</summary>
        System.Collections.Generic.List<string> AppliedScopes { get; set; }
        /// <summary>Indicates if the reservation is archived</summary>
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>The billing plan options available for this sku.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Upfront", "Monthly")]
        string BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Capabilities of the reservation</summary>
        string Capability { get; set; }
        /// <summary>Friendly name for user to easily identify the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        string DisplayProvisioningState { get; set; }
        /// <summary>DateTime of the reservation starting when this version is effective from.</summary>
        global::System.DateTime? EffectiveDateTime { get; set; }

        int? Etag { get; set; }
        /// <summary>This is the date when the reservation will expire.</summary>
        global::System.DateTime? ExpiryDate { get; set; }
        /// <summary>This is the date-time when the reservation will expire.</summary>
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IExtendedStatusInfo ExtendedStatusInfo { get; set; }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("On", "Off")]
        string InstanceFlexibility { get; set; }
        /// <summary>The sku information associated to this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.ISkuName InternalSkuName { get; set; }
        /// <summary>Resource Provider type to be reserved.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Microsoft.Compute")]
        string Kind { get; set; }
        /// <summary>DateTime of the last time the reservation was updated.</summary>
        global::System.DateTime? LastUpdatedDateTime { get; set; }
        /// <summary>The Azure region where the reserved resource lives.</summary>
        string Location { get; set; }
        /// <summary>Properties of reservation merge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationMergeProperties MergeProperties { get; set; }
        /// <summary>The properties associated to this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsProperties Property { get; set; }
        /// <summary>Current state of the reservation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("Creating", "PendingResourceHold", "ConfirmedResourceHold", "PendingBilling", "ConfirmedBilling", "Created", "Succeeded", "Cancelled", "Expired", "BillingFailed", "Failed", "Split", "Merged")]
        string ProvisioningState { get; set; }
        /// <summary>The provisioning sub-state of the reservation, e.g. Succeeded</summary>
        string ProvisioningSubState { get; set; }
        /// <summary>This is the date when the reservation was purchased.</summary>
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>This is the date-time when the reservation was purchased.</summary>
        global::System.DateTime? PurchaseDateTime { get; set; }
        /// <summary>Quantity of the skus that are part of the reservation.</summary>
        int? Quantity { get; set; }
        /// <summary>
        /// Setting this to true will automatically purchase a new reservation on the expiration date time.
        /// </summary>
        bool? Renew { get; set; }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        string RenewDestination { get; set; }
        /// <summary>The renew properties for a reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IRenewPropertiesResponse RenewProperty { get; set; }
        /// <summary>
        /// Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        string RenewSource { get; set; }
        /// <summary>The type of the resource that is being reserved.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("VirtualMachines", "SqlDatabases", "SuseLinux", "CosmosDb", "RedHat", "SqlDataWarehouse", "VMwareCloudSimple", "RedHatOsa", "Databricks", "AppService", "ManagedDisk", "BlockBlob", "RedisCache", "AzureDataExplorer", "MySql", "MariaDb", "PostgreSql", "DedicatedHost", "SapHana", "SqlAzureHybridBenefit", "AVS", "DataFactory", "NetAppStorage", "AzureFiles", "SqlEdge", "VirtualMachineSoftware")]
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>Description of the sku in english.</summary>
        string SkuDescription { get; set; }

        string SkuName { get; set; }
        /// <summary>Properties of reservation split</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSplitProperties SplitProperties { get; set; }
        /// <summary>Properties of reservation swap</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationSwapProperties SwapProperty { get; set; }
        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string SwapPropertySwapDestination { get; set; }
        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string SwapPropertySwapSource { get; set; }
        /// <summary>Represent the term of reservation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Reservations.PSArgumentCompleterAttribute("P1Y", "P3Y", "P5Y")]
        string Term { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        string UserFriendlyAppliedScopeType { get; set; }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        string UserFriendlyRenewState { get; set; }
        /// <summary>Reservation utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationsPropertiesUtilization Utilization { get; set; }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Reservations.Models.IReservationUtilizationAggregates> UtilizationAggregate { get; set; }
        /// <summary>last 7 day utilization trend for a reservation</summary>
        string UtilizationTrend { get; set; }

    }
}