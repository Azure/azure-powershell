// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Extensions;

    /// <summary>The security context for the container.</summary>
    public partial class SecurityContextDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextDefinition,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextDefinitionInternal
    {

        /// <summary>Backing field for <see cref="AllowPrivilegeEscalation" /> property.</summary>
        private bool? _allowPrivilegeEscalation;

        /// <summary>A boolean value indicating whether the init process can elevate its privileges</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        public bool? AllowPrivilegeEscalation { get => this._allowPrivilegeEscalation; set => this._allowPrivilegeEscalation = value; }

        /// <summary>Backing field for <see cref="Capability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinition _capability;

        /// <summary>The capabilities to add or drop from a container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinition Capability { get => (this._capability = this._capability ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.SecurityContextCapabilitiesDefinition()); set => this._capability = value; }

        /// <summary>The capabilities to add to the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Inlined)]
        public string[] CapabilityAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinitionInternal)Capability).Add; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinitionInternal)Capability).Add = value ?? null /* arrayOf */; }

        /// <summary>The capabilities to drop from the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Inlined)]
        public string[] CapabilityDrop { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinitionInternal)Capability).Drop; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinitionInternal)Capability).Drop = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Capability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinition Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextDefinitionInternal.Capability { get => (this._capability = this._capability ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.SecurityContextCapabilitiesDefinition()); set { {_capability = value;} } }

        /// <summary>Backing field for <see cref="Privileged" /> property.</summary>
        private bool? _privileged;

        /// <summary>The flag to determine if the container permissions is elevated to Privileged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        public bool? Privileged { get => this._privileged; set => this._privileged = value; }

        /// <summary>Backing field for <see cref="RunAsGroup" /> property.</summary>
        private int? _runAsGroup;

        /// <summary>Sets the User GID for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        public int? RunAsGroup { get => this._runAsGroup; set => this._runAsGroup = value; }

        /// <summary>Backing field for <see cref="RunAsUser" /> property.</summary>
        private int? _runAsUser;

        /// <summary>Sets the User UID for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        public int? RunAsUser { get => this._runAsUser; set => this._runAsUser = value; }

        /// <summary>Backing field for <see cref="SeccompProfile" /> property.</summary>
        private string _seccompProfile;

        /// <summary>
        /// a base64 encoded string containing the contents of the JSON in the seccomp profile
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.PropertyOrigin.Owned)]
        public string SeccompProfile { get => this._seccompProfile; set => this._seccompProfile = value; }

        /// <summary>Creates an new <see cref="SecurityContextDefinition" /> instance.</summary>
        public SecurityContextDefinition()
        {

        }
    }
    /// The security context for the container.
    public partial interface ISecurityContextDefinition :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.IJsonSerializable
    {
        /// <summary>A boolean value indicating whether the init process can elevate its privileges</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A boolean value indicating whether the init process can elevate its privileges",
        SerializedName = @"allowPrivilegeEscalation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowPrivilegeEscalation { get; set; }
        /// <summary>The capabilities to add to the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The capabilities to add to the container.",
        SerializedName = @"add",
        PossibleTypes = new [] { typeof(string) })]
        string[] CapabilityAdd { get; set; }
        /// <summary>The capabilities to drop from the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The capabilities to drop from the container.",
        SerializedName = @"drop",
        PossibleTypes = new [] { typeof(string) })]
        string[] CapabilityDrop { get; set; }
        /// <summary>The flag to determine if the container permissions is elevated to Privileged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag to determine if the container permissions is elevated to Privileged.",
        SerializedName = @"privileged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Privileged { get; set; }
        /// <summary>Sets the User GID for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the User GID for the container.",
        SerializedName = @"runAsGroup",
        PossibleTypes = new [] { typeof(int) })]
        int? RunAsGroup { get; set; }
        /// <summary>Sets the User UID for the container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the User UID for the container.",
        SerializedName = @"runAsUser",
        PossibleTypes = new [] { typeof(int) })]
        int? RunAsUser { get; set; }
        /// <summary>
        /// a base64 encoded string containing the contents of the JSON in the seccomp profile
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"a base64 encoded string containing the contents of the JSON in the seccomp profile",
        SerializedName = @"seccompProfile",
        PossibleTypes = new [] { typeof(string) })]
        string SeccompProfile { get; set; }

    }
    /// The security context for the container.
    internal partial interface ISecurityContextDefinitionInternal

    {
        /// <summary>A boolean value indicating whether the init process can elevate its privileges</summary>
        bool? AllowPrivilegeEscalation { get; set; }
        /// <summary>The capabilities to add or drop from a container.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerInstance.Models.Api20240501Preview.ISecurityContextCapabilitiesDefinition Capability { get; set; }
        /// <summary>The capabilities to add to the container.</summary>
        string[] CapabilityAdd { get; set; }
        /// <summary>The capabilities to drop from the container.</summary>
        string[] CapabilityDrop { get; set; }
        /// <summary>The flag to determine if the container permissions is elevated to Privileged.</summary>
        bool? Privileged { get; set; }
        /// <summary>Sets the User GID for the container.</summary>
        int? RunAsGroup { get; set; }
        /// <summary>Sets the User UID for the container.</summary>
        int? RunAsUser { get; set; }
        /// <summary>
        /// a base64 encoded string containing the contents of the JSON in the seccomp profile
        /// </summary>
        string SeccompProfile { get; set; }

    }
}