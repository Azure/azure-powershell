// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.PowerShell;

    /// <summary>Device definition.</summary>
    [System.ComponentModel.TypeConverter(typeof(NamespaceDeviceTypeConverter))]
    public partial class NamespaceDevice
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevice"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevice" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevice DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new NamespaceDevice(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevice"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevice" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevice DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new NamespaceDevice(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="NamespaceDevice" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="NamespaceDevice" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevice FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevice"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal NamespaceDevice(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevicePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMessagingEndpoints1) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MessagingEndpoints1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("Uuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Uuid = (string) content.GetValueForProperty("Uuid",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Uuid, global::System.Convert.ToString);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExternalDeviceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExternalDeviceId = (string) content.GetValueForProperty("ExternalDeviceId",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExternalDeviceId, global::System.Convert.ToString);
            }
            if (content.Contains("DiscoveredDeviceRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).DiscoveredDeviceRef = (string) content.GetValueForProperty("DiscoveredDeviceRef",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).DiscoveredDeviceRef, global::System.Convert.ToString);
            }
            if (content.Contains("Manufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Manufacturer = (string) content.GetValueForProperty("Manufacturer",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Manufacturer, global::System.Convert.ToString);
            }
            if (content.Contains("Model"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Model = (string) content.GetValueForProperty("Model",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Model, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystem = (string) content.GetValueForProperty("OperatingSystem",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystem, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Attribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Attribute = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevicePropertiesAttributes) content.GetValueForProperty("Attribute",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Attribute, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevicePropertiesAttributesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Version = (long?) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Version, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LastTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).LastTransitionTime = (global::System.DateTime?) content.GetValueForProperty("LastTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).LastTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusConfig = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig) content.GetValueForProperty("StatusConfig",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusConfig, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("EndpointOutbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointOutbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpoints) content.GetValueForProperty("EndpointOutbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointOutbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EndpointsInbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointsInbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMessagingEndpointsInbound) content.GetValueForProperty("EndpointsInbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointsInbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MessagingEndpointsInboundTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints) content.GetValueForProperty("StatusEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpoint, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigVersion = (long?) content.GetValueForProperty("ConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigVersion, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("OutboundAssigned"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundAssigned = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpointsAssigned) content.GetValueForProperty("OutboundAssigned",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundAssigned, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsAssignedTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutboundUnassigned"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundUnassigned = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpointsUnassigned) content.GetValueForProperty("OutboundUnassigned",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundUnassigned, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsUnassignedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigError = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError) content.GetValueForProperty("ConfigError",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigError, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusErrorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigLastTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigLastTransitionTime = (global::System.DateTime?) content.GetValueForProperty("ConfigLastTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigLastTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusEndpointsInbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpointsInbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound) content.GetValueForProperty("StatusEndpointsInbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpointsInbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpointsInboundTypeConverter.ConvertFrom);
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Detail = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails>) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Detail, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ErrorDetailsTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevice"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal NamespaceDevice(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevicePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMessagingEndpoints1) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MessagingEndpoints1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatus) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("Uuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Uuid = (string) content.GetValueForProperty("Uuid",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Uuid, global::System.Convert.ToString);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExternalDeviceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExternalDeviceId = (string) content.GetValueForProperty("ExternalDeviceId",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ExternalDeviceId, global::System.Convert.ToString);
            }
            if (content.Contains("DiscoveredDeviceRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).DiscoveredDeviceRef = (string) content.GetValueForProperty("DiscoveredDeviceRef",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).DiscoveredDeviceRef, global::System.Convert.ToString);
            }
            if (content.Contains("Manufacturer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Manufacturer = (string) content.GetValueForProperty("Manufacturer",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Manufacturer, global::System.Convert.ToString);
            }
            if (content.Contains("Model"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Model = (string) content.GetValueForProperty("Model",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Model, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystem = (string) content.GetValueForProperty("OperatingSystem",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystem, global::System.Convert.ToString);
            }
            if (content.Contains("OperatingSystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystemVersion = (string) content.GetValueForProperty("OperatingSystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OperatingSystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Attribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Attribute = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDevicePropertiesAttributes) content.GetValueForProperty("Attribute",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Attribute, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceDevicePropertiesAttributesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Version = (long?) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Version, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LastTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).LastTransitionTime = (global::System.DateTime?) content.GetValueForProperty("LastTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).LastTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusConfig = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig) content.GetValueForProperty("StatusConfig",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusConfig, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("EndpointOutbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointOutbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpoints) content.GetValueForProperty("EndpointOutbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointOutbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EndpointsInbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointsInbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMessagingEndpointsInbound) content.GetValueForProperty("EndpointsInbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).EndpointsInbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MessagingEndpointsInboundTypeConverter.ConvertFrom);
            }
            if (content.Contains("StatusEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpoint = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints) content.GetValueForProperty("StatusEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpoint, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigVersion = (long?) content.GetValueForProperty("ConfigVersion",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigVersion, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("OutboundAssigned"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundAssigned = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpointsAssigned) content.GetValueForProperty("OutboundAssigned",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundAssigned, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsAssignedTypeConverter.ConvertFrom);
            }
            if (content.Contains("OutboundUnassigned"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundUnassigned = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IOutboundEndpointsUnassigned) content.GetValueForProperty("OutboundUnassigned",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).OutboundUnassigned, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.OutboundEndpointsUnassignedTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigError = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError) content.GetValueForProperty("ConfigError",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigError, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusErrorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigLastTransitionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigLastTransitionTime = (global::System.DateTime?) content.GetValueForProperty("ConfigLastTransitionTime",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).ConfigLastTransitionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StatusEndpointsInbound"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpointsInbound = (Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound) content.GetValueForProperty("StatusEndpointsInbound",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).StatusEndpointsInbound, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpointsInboundTypeConverter.ConvertFrom);
            }
            if (content.Contains("Code"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Code = (string) content.GetValueForProperty("Code",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Code, global::System.Convert.ToString);
            }
            if (content.Contains("Message"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Message = (string) content.GetValueForProperty("Message",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Message, global::System.Convert.ToString);
            }
            if (content.Contains("Detail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Detail = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails>) content.GetValueForProperty("Detail",((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDeviceInternal)this).Detail, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.ErrorDetailsTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Device definition.
    [System.ComponentModel.TypeConverter(typeof(NamespaceDeviceTypeConverter))]
    public partial interface INamespaceDevice

    {

    }
}