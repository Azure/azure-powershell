// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>Defines the asset properties.</summary>
    public partial class NamespaceAssetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AssetTypeRef" /> property.</summary>
        private System.Collections.Generic.List<string> _assetTypeRef;

        /// <summary>URIs or type definition IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AssetTypeRef { get => this._assetTypeRef; set => this._assetTypeRef = value; }

        /// <summary>Backing field for <see cref="Attribute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesAttributes _attribute;

        /// <summary>A set of key-value pairs that contain custom attributes set by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesAttributes Attribute { get => (this._attribute = this._attribute ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceAssetPropertiesAttributes()); set => this._attribute = value; }

        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Code; }

        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ConfigLastTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigLastTransitionTime; }

        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public long? ConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigVersion; }

        /// <summary>Backing field for <see cref="Dataset" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDataset> _dataset;

        /// <summary>
        /// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDataset> Dataset { get => this._dataset; set => this._dataset = value; }

        /// <summary>Backing field for <see cref="DefaultDatasetsConfiguration" /> property.</summary>
        private string _defaultDatasetsConfiguration;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DefaultDatasetsConfiguration { get => this._defaultDatasetsConfiguration; set => this._defaultDatasetsConfiguration = value; }

        /// <summary>Backing field for <see cref="DefaultDatasetsDestination" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDatasetDestination> _defaultDatasetsDestination;

        /// <summary>Default destinations for a dataset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDatasetDestination> DefaultDatasetsDestination { get => this._defaultDatasetsDestination; set => this._defaultDatasetsDestination = value; }

        /// <summary>Backing field for <see cref="DefaultEventsConfiguration" /> property.</summary>
        private string _defaultEventsConfiguration;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration
        /// that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DefaultEventsConfiguration { get => this._defaultEventsConfiguration; set => this._defaultEventsConfiguration = value; }

        /// <summary>Backing field for <see cref="DefaultEventsDestination" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IEventDestination> _defaultEventsDestination;

        /// <summary>Default destinations for an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IEventDestination> DefaultEventsDestination { get => this._defaultEventsDestination; set => this._defaultEventsDestination = value; }

        /// <summary>Backing field for <see cref="DefaultManagementGroupsConfiguration" /> property.</summary>
        private string _defaultManagementGroupsConfiguration;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group
        /// can have its own configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DefaultManagementGroupsConfiguration { get => this._defaultManagementGroupsConfiguration; set => this._defaultManagementGroupsConfiguration = value; }

        /// <summary>Backing field for <see cref="DefaultStreamsConfiguration" /> property.</summary>
        private string _defaultStreamsConfiguration;

        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DefaultStreamsConfiguration { get => this._defaultStreamsConfiguration; set => this._defaultStreamsConfiguration = value; }

        /// <summary>Backing field for <see cref="DefaultStreamsDestination" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination> _defaultStreamsDestination;

        /// <summary>Default destinations for a stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination> DefaultStreamsDestination { get => this._defaultStreamsDestination; set => this._defaultStreamsDestination = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Human-readable description of the asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Detail; }

        /// <summary>Backing field for <see cref="DeviceRef" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRef _deviceRef;

        /// <summary>
        /// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRef DeviceRef { get => (this._deviceRef = this._deviceRef ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceRef()); set => this._deviceRef = value; }

        /// <summary>Name of the device resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string DeviceRefDeviceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRefInternal)DeviceRef).DeviceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRefInternal)DeviceRef).DeviceName = value ?? null; }

        /// <summary>The name of endpoint to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string DeviceRefEndpointName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRefInternal)DeviceRef).EndpointName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRefInternal)DeviceRef).EndpointName = value ?? null; }

        /// <summary>Backing field for <see cref="DiscoveredAssetRef" /> property.</summary>
        private System.Collections.Generic.List<string> _discoveredAssetRef;

        /// <summary>
        /// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered
        /// asset names must be provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> DiscoveredAssetRef { get => this._discoveredAssetRef; set => this._discoveredAssetRef = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Human-readable display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="DocumentationUri" /> property.</summary>
        private string _documentationUri;

        /// <summary>Asset documentation reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string DocumentationUri { get => this._documentationUri; set => this._documentationUri = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Enabled/disabled status of the asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="EventGroup" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceEventGroup> _eventGroup;

        /// <summary>
        /// Array of event groups that are part of the asset. Each event group can have per-event group configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceEventGroup> EventGroup { get => this._eventGroup; set => this._eventGroup = value; }

        /// <summary>Backing field for <see cref="ExternalAssetId" /> property.</summary>
        private string _externalAssetId;

        /// <summary>Asset ID provided by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ExternalAssetId { get => this._externalAssetId; set => this._externalAssetId = value; }

        /// <summary>Backing field for <see cref="HardwareRevision" /> property.</summary>
        private string _hardwareRevision;

        /// <summary>Asset hardware revision number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string HardwareRevision { get => this._hardwareRevision; set => this._hardwareRevision = value; }

        /// <summary>Backing field for <see cref="LastTransitionTime" /> property.</summary>
        private global::System.DateTime? _lastTransitionTime;

        /// <summary>A timestamp (in UTC) that is updated each time the resource is modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastTransitionTime { get => this._lastTransitionTime; }

        /// <summary>Backing field for <see cref="ManagementGroup" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementGroup> _managementGroup;

        /// <summary>
        /// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementGroup> ManagementGroup { get => this._managementGroup; set => this._managementGroup = value; }

        /// <summary>Backing field for <see cref="Manufacturer" /> property.</summary>
        private string _manufacturer;

        /// <summary>Asset manufacturer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Manufacturer { get => this._manufacturer; set => this._manufacturer = value; }

        /// <summary>Backing field for <see cref="ManufacturerUri" /> property.</summary>
        private string _manufacturerUri;

        /// <summary>Asset manufacturer URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ManufacturerUri { get => this._manufacturerUri; set => this._manufacturerUri = value; }

        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Message; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Code = value ?? null; }

        /// <summary>Internal Acessors for ConfigError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.ConfigError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigError = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ConfigLastTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.ConfigLastTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigLastTransitionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigLastTransitionTime = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for ConfigVersion</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.ConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ConfigVersion = value ?? default(long); }

        /// <summary>Internal Acessors for Detail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Detail = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for DeviceRef</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRef Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.DeviceRef { get => (this._deviceRef = this._deviceRef ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceRef()); set { {_deviceRef = value;} } }

        /// <summary>Internal Acessors for LastTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.LastTransitionTime { get => this._lastTransitionTime; set { {_lastTransitionTime = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Message = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatus Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceAssetStatus()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.StatusConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Config; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Config = value ?? null /* model class */; }

        /// <summary>Internal Acessors for StatusDataset</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusDataset> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.StatusDataset { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Dataset; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Dataset = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for StatusEventGroup</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusEventGroup> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.StatusEventGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).EventGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).EventGroup = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for StatusManagementGroup</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusManagementGroup> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.StatusManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ManagementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ManagementGroup = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for StatusStream</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusStream> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.StatusStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Stream; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Stream = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Uuid { get => this._uuid; set { {_uuid = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="Model" /> property.</summary>
        private string _model;

        /// <summary>Asset model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Model { get => this._model; set => this._model = value; }

        /// <summary>Backing field for <see cref="ProductCode" /> property.</summary>
        private string _productCode;

        /// <summary>Asset product code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ProductCode { get => this._productCode; set => this._productCode = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SerialNumber" /> property.</summary>
        private string _serialNumber;

        /// <summary>Asset serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string SerialNumber { get => this._serialNumber; set => this._serialNumber = value; }

        /// <summary>Backing field for <see cref="SoftwareRevision" /> property.</summary>
        private string _softwareRevision;

        /// <summary>Asset software revision number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string SoftwareRevision { get => this._softwareRevision; set => this._softwareRevision = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatus _status;

        /// <summary>
        /// Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.NamespaceAssetStatus()); }

        /// <summary>Array of dataset statuses that describe the status of each dataset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusDataset> StatusDataset { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Dataset; }

        /// <summary>Array of event group statuses that describe the status of each event group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusEventGroup> StatusEventGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).EventGroup; }

        /// <summary>
        /// Array of management group statuses that describe the status of each management group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusManagementGroup> StatusManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).ManagementGroup; }

        /// <summary>Array of stream statuses that describe the status of each stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusStream> StatusStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusInternal)Status).Stream; }

        /// <summary>Backing field for <see cref="Stream" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceStream> _stream;

        /// <summary>
        /// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceStream> Stream { get => this._stream; set => this._stream = value; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Globally unique, immutable, non-reusable ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private long? _version;

        /// <summary>An integer that is incremented each time the resource is modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public long? Version { get => this._version; }

        /// <summary>Creates an new <see cref="NamespaceAssetProperties" /> instance.</summary>
        public NamespaceAssetProperties()
        {

        }
    }
    /// Defines the asset properties.
    public partial interface INamespaceAssetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable
    {
        /// <summary>URIs or type definition IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URIs or type definition IDs.",
        SerializedName = @"assetTypeRefs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AssetTypeRef { get; set; }
        /// <summary>A set of key-value pairs that contain custom attributes set by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A set of key-value pairs that contain custom attributes set by the customer.",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesAttributes) })]
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesAttributes Attribute { get; set; }
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error code for classification of errors (ex: '400', '404', '500', etc.).",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.",
        SerializedName = @"lastTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ConfigLastTransitionTime { get;  }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(long) })]
        long? ConfigVersion { get;  }
        /// <summary>
        /// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
        SerializedName = @"datasets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDataset) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDataset> Dataset { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here.",
        SerializedName = @"defaultDatasetsConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDatasetsConfiguration { get; set; }
        /// <summary>Default destinations for a dataset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Default destinations for a dataset.",
        SerializedName = @"defaultDatasetsDestinations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDatasetDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDatasetDestination> DefaultDatasetsDestination { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration
        /// that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here.",
        SerializedName = @"defaultEventsConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultEventsConfiguration { get; set; }
        /// <summary>Default destinations for an event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Default destinations for an event.",
        SerializedName = @"defaultEventsDestinations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IEventDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IEventDestination> DefaultEventsDestination { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group
        /// can have its own configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here.",
        SerializedName = @"defaultManagementGroupsConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultManagementGroupsConfiguration { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here.",
        SerializedName = @"defaultStreamsConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultStreamsConfiguration { get; set; }
        /// <summary>Default destinations for a stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Default destinations for a stream.",
        SerializedName = @"defaultStreamsDestinations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination> DefaultStreamsDestination { get; set; }
        /// <summary>Human-readable description of the asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Human-readable description of the asset.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of error details that describe the status of each error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get;  }
        /// <summary>Name of the device resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Name of the device resource",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceRefDeviceName { get; set; }
        /// <summary>The name of endpoint to use</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The name of endpoint to use",
        SerializedName = @"endpointName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceRefEndpointName { get; set; }
        /// <summary>
        /// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered
        /// asset names must be provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.",
        SerializedName = @"discoveredAssetRefs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DiscoveredAssetRef { get; set; }
        /// <summary>Human-readable display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Human-readable display name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Asset documentation reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset documentation reference.",
        SerializedName = @"documentationUri",
        PossibleTypes = new [] { typeof(string) })]
        string DocumentationUri { get; set; }
        /// <summary>Enabled/disabled status of the asset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enabled/disabled status of the asset.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>
        /// Array of event groups that are part of the asset. Each event group can have per-event group configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Array of event groups that are part of the asset. Each event group can have per-event group configuration.",
        SerializedName = @"eventGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceEventGroup) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceEventGroup> EventGroup { get; set; }
        /// <summary>Asset ID provided by the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Asset ID provided by the customer.",
        SerializedName = @"externalAssetId",
        PossibleTypes = new [] { typeof(string) })]
        string ExternalAssetId { get; set; }
        /// <summary>Asset hardware revision number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset hardware revision number.",
        SerializedName = @"hardwareRevision",
        PossibleTypes = new [] { typeof(string) })]
        string HardwareRevision { get; set; }
        /// <summary>A timestamp (in UTC) that is updated each time the resource is modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A timestamp (in UTC) that is updated each time the resource is modified.",
        SerializedName = @"lastTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastTransitionTime { get;  }
        /// <summary>
        /// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
        SerializedName = @"managementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementGroup) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementGroup> ManagementGroup { get; set; }
        /// <summary>Asset manufacturer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset manufacturer.",
        SerializedName = @"manufacturer",
        PossibleTypes = new [] { typeof(string) })]
        string Manufacturer { get; set; }
        /// <summary>Asset manufacturer URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset manufacturer URI.",
        SerializedName = @"manufacturerUri",
        PossibleTypes = new [] { typeof(string) })]
        string ManufacturerUri { get; set; }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Asset model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset model.",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(string) })]
        string Model { get; set; }
        /// <summary>Asset product code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset product code.",
        SerializedName = @"productCode",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCode { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Accepted", "Deleting")]
        string ProvisioningState { get;  }
        /// <summary>Asset serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SerialNumber { get; set; }
        /// <summary>Asset software revision number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Asset software revision number.",
        SerializedName = @"softwareRevision",
        PossibleTypes = new [] { typeof(string) })]
        string SoftwareRevision { get; set; }
        /// <summary>Array of dataset statuses that describe the status of each dataset.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of dataset statuses that describe the status of each dataset.",
        SerializedName = @"datasets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusDataset) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusDataset> StatusDataset { get;  }
        /// <summary>Array of event group statuses that describe the status of each event group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of event group statuses that describe the status of each event group.",
        SerializedName = @"eventGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusEventGroup) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusEventGroup> StatusEventGroup { get;  }
        /// <summary>
        /// Array of management group statuses that describe the status of each management group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of management group statuses that describe the status of each management group.",
        SerializedName = @"managementGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusManagementGroup) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusManagementGroup> StatusManagementGroup { get;  }
        /// <summary>Array of stream statuses that describe the status of each stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of stream statuses that describe the status of each stream.",
        SerializedName = @"streams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusStream) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusStream> StatusStream { get;  }
        /// <summary>
        /// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Array of streams that are part of the asset. Each stream can have a per-stream configuration.",
        SerializedName = @"streams",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceStream) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceStream> Stream { get; set; }
        /// <summary>Globally unique, immutable, non-reusable ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Globally unique, immutable, non-reusable ID.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get;  }
        /// <summary>An integer that is incremented each time the resource is modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"An integer that is incremented each time the resource is modified.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(long) })]
        long? Version { get;  }

    }
    /// Defines the asset properties.
    internal partial interface INamespaceAssetPropertiesInternal

    {
        /// <summary>URIs or type definition IDs.</summary>
        System.Collections.Generic.List<string> AssetTypeRef { get; set; }
        /// <summary>A set of key-value pairs that contain custom attributes set by the customer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetPropertiesAttributes Attribute { get; set; }
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        string Code { get; set; }
        /// <summary>Object to transfer and persist errors that originate from the edge.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError ConfigError { get; set; }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        global::System.DateTime? ConfigLastTransitionTime { get; set; }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        long? ConfigVersion { get; set; }
        /// <summary>
        /// Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceDataset> Dataset { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        string DefaultDatasetsConfiguration { get; set; }
        /// <summary>Default destinations for a dataset.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDatasetDestination> DefaultDatasetsDestination { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration
        /// that overrides the default settings here.
        /// </summary>
        string DefaultEventsConfiguration { get; set; }
        /// <summary>Default destinations for an event.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IEventDestination> DefaultEventsDestination { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all management groups. Each management group
        /// can have its own configuration that overrides the default settings here.
        /// </summary>
        string DefaultManagementGroupsConfiguration { get; set; }
        /// <summary>
        /// Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own
        /// configuration that overrides the default settings here.
        /// </summary>
        string DefaultStreamsConfiguration { get; set; }
        /// <summary>Default destinations for a stream.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination> DefaultStreamsDestination { get; set; }
        /// <summary>Human-readable description of the asset.</summary>
        string Description { get; set; }
        /// <summary>Array of error details that describe the status of each error.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get; set; }
        /// <summary>
        /// Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceRef DeviceRef { get; set; }
        /// <summary>Name of the device resource</summary>
        string DeviceRefDeviceName { get; set; }
        /// <summary>The name of endpoint to use</summary>
        string DeviceRefEndpointName { get; set; }
        /// <summary>
        /// Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered
        /// asset names must be provided.
        /// </summary>
        System.Collections.Generic.List<string> DiscoveredAssetRef { get; set; }
        /// <summary>Human-readable display name.</summary>
        string DisplayName { get; set; }
        /// <summary>Asset documentation reference.</summary>
        string DocumentationUri { get; set; }
        /// <summary>Enabled/disabled status of the asset.</summary>
        bool? Enabled { get; set; }
        /// <summary>
        /// Array of event groups that are part of the asset. Each event group can have per-event group configuration.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceEventGroup> EventGroup { get; set; }
        /// <summary>Asset ID provided by the customer.</summary>
        string ExternalAssetId { get; set; }
        /// <summary>Asset hardware revision number.</summary>
        string HardwareRevision { get; set; }
        /// <summary>A timestamp (in UTC) that is updated each time the resource is modified.</summary>
        global::System.DateTime? LastTransitionTime { get; set; }
        /// <summary>
        /// Array of management groups that are part of the asset. Each management group can have a per-group configuration.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementGroup> ManagementGroup { get; set; }
        /// <summary>Asset manufacturer.</summary>
        string Manufacturer { get; set; }
        /// <summary>Asset manufacturer URI.</summary>
        string ManufacturerUri { get; set; }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        string Message { get; set; }
        /// <summary>Asset model.</summary>
        string Model { get; set; }
        /// <summary>Asset product code.</summary>
        string ProductCode { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Accepted", "Deleting")]
        string ProvisioningState { get; set; }
        /// <summary>Asset serial number.</summary>
        string SerialNumber { get; set; }
        /// <summary>Asset software revision number.</summary>
        string SoftwareRevision { get; set; }
        /// <summary>
        /// Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatus Status { get; set; }
        /// <summary>Defines the asset status config properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig StatusConfig { get; set; }
        /// <summary>Array of dataset statuses that describe the status of each dataset.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusDataset> StatusDataset { get; set; }
        /// <summary>Array of event group statuses that describe the status of each event group.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusEventGroup> StatusEventGroup { get; set; }
        /// <summary>
        /// Array of management group statuses that describe the status of each management group.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusManagementGroup> StatusManagementGroup { get; set; }
        /// <summary>Array of stream statuses that describe the status of each stream.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceAssetStatusStream> StatusStream { get; set; }
        /// <summary>
        /// Array of streams that are part of the asset. Each stream can have a per-stream configuration.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.INamespaceStream> Stream { get; set; }
        /// <summary>Globally unique, immutable, non-reusable ID.</summary>
        string Uuid { get; set; }
        /// <summary>An integer that is incremented each time the resource is modified.</summary>
        long? Version { get; set; }

    }
}