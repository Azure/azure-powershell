// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>Defines the status config properties.</summary>
    public partial class StatusConfig :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal
    {

        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Code; }

        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Detail; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError _error;

        /// <summary>Object to transfer and persist errors that originate from the edge.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusError()); }

        /// <summary>Backing field for <see cref="LastTransitionTime" /> property.</summary>
        private global::System.DateTime? _lastTransitionTime;

        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastTransitionTime { get => this._lastTransitionTime; }

        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Message; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Code = value ?? null; }

        /// <summary>Internal Acessors for Detail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Detail = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusError()); set { {_error = value;} } }

        /// <summary>Internal Acessors for LastTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.LastTransitionTime { get => this._lastTransitionTime; set { {_lastTransitionTime = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusErrorInternal)Error).Message = value ?? null; }

        /// <summary>Internal Acessors for Version</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private long? _version;

        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public long? Version { get => this._version; }

        /// <summary>Creates an new <see cref="StatusConfig" /> instance.</summary>
        public StatusConfig()
        {

        }
    }
    /// Defines the status config properties.
    public partial interface IStatusConfig :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable
    {
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error code for classification of errors (ex: '400', '404', '500', etc.).",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of error details that describe the status of each error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get;  }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.",
        SerializedName = @"lastTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastTransitionTime { get;  }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(long) })]
        long? Version { get;  }

    }
    /// Defines the status config properties.
    internal partial interface IStatusConfigInternal

    {
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        string Code { get; set; }
        /// <summary>Array of error details that describe the status of each error.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get; set; }
        /// <summary>Object to transfer and persist errors that originate from the edge.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError Error { get; set; }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        global::System.DateTime? LastTransitionTime { get; set; }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        string Message { get; set; }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        long? Version { get; set; }

    }
}