// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>Defines the device status properties.</summary>
    public partial class DeviceStatus :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatus,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal
    {

        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Code; }

        /// <summary>Backing field for <see cref="Config" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig _config;

        /// <summary>Defines the device status config properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig Config { get => (this._config = this._config ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusConfig()); }

        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ConfigLastTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).LastTransitionTime; }

        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public long? ConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Version; }

        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Detail; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints _endpoint;

        /// <summary>Defines the device status for inbound/outbound endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints Endpoint { get => (this._endpoint = this._endpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpoints()); }

        /// <summary>KeyValue pair representing status of inbound endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound EndpointInbound { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInternal)Endpoint).Inbound; }

        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Message; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Code = value ?? null; }

        /// <summary>Internal Acessors for Config</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.Config { get => (this._config = this._config ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StatusConfig()); set { {_config = value;} } }

        /// <summary>Internal Acessors for ConfigError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.ConfigError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Error = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ConfigLastTransitionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.ConfigLastTransitionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).LastTransitionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).LastTransitionTime = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for ConfigVersion</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.ConfigVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Version = value ?? default(long); }

        /// <summary>Internal Acessors for Detail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Detail = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Endpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.Endpoint { get => (this._endpoint = this._endpoint ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.DeviceStatusEndpoints()); set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for EndpointInbound</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.EndpointInbound { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInternal)Endpoint).Inbound; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInternal)Endpoint).Inbound = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfigInternal)Config).Message = value ?? null; }

        /// <summary>Creates an new <see cref="DeviceStatus" /> instance.</summary>
        public DeviceStatus()
        {

        }
    }
    /// Defines the device status properties.
    public partial interface IDeviceStatus :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable
    {
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error code for classification of errors (ex: '400', '404', '500', etc.).",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.",
        SerializedName = @"lastTransitionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ConfigLastTransitionTime { get;  }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A read-only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(long) })]
        long? ConfigVersion { get;  }
        /// <summary>Array of error details that describe the status of each error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Array of error details that describe the status of each error.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get;  }
        /// <summary>KeyValue pair representing status of inbound endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"KeyValue pair representing status of inbound endpoints.",
        SerializedName = @"inbound",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound) })]
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound EndpointInbound { get;  }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }

    }
    /// Defines the device status properties.
    internal partial interface IDeviceStatusInternal

    {
        /// <summary>Error code for classification of errors (ex: '400', '404', '500', etc.).</summary>
        string Code { get; set; }
        /// <summary>Defines the device status config properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusConfig Config { get; set; }
        /// <summary>Object to transfer and persist errors that originate from the edge.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStatusError ConfigError { get; set; }
        /// <summary>
        /// A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current
        /// actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.
        /// </summary>
        global::System.DateTime? ConfigLastTransitionTime { get; set; }
        /// <summary>
        /// A read-only incremental counter indicating the number of times the configuration has been modified from the perspective
        /// of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the
        /// cloud. In steady state, this should equal version.
        /// </summary>
        long? ConfigVersion { get; set; }
        /// <summary>Array of error details that describe the status of each error.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IErrorDetails> Detail { get; set; }
        /// <summary>Defines the device status for inbound/outbound endpoints.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpoints Endpoint { get; set; }
        /// <summary>KeyValue pair representing status of inbound endpoints.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDeviceStatusEndpointsInbound EndpointInbound { get; set; }
        /// <summary>
        /// Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).
        /// </summary>
        string Message { get; set; }

    }
}