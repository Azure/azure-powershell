// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>The type for a MQTT destination.</summary>
    public partial class StreamMqttDestination :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamMqttDestination,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamMqttDestinationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination __streamDestination = new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.StreamDestination();

        /// <summary>Backing field for <see cref="Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfiguration _configuration;

        /// <summary>The MQTT destination configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfiguration Configuration { get => (this._configuration = this._configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MqttDestinationConfiguration()); set => this._configuration = value; }

        /// <summary>The MQTT QoS setting. Defaults to QoS 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string ConfigurationQo { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Qo; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Qo = value ?? null; }

        /// <summary>
        /// When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string ConfigurationRetain { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Retain; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Retain = value ?? null; }

        /// <summary>The MQTT topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public string ConfigurationTopic { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Topic; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Topic = value ; }

        /// <summary>The MQTT TTL setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inlined)]
        public long? ConfigurationTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfigurationInternal)Configuration).Ttl = value ?? default(long); }

        /// <summary>Internal Acessors for Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfiguration Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamMqttDestinationInternal.Configuration { get => (this._configuration = this._configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.MqttDestinationConfiguration()); set { {_configuration = value;} } }

        /// <summary>Target destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Inherited)]
        public string Target { get => "Mqtt"; set => ((Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestinationInternal)__streamDestination).Target = "Mqtt"; }

        /// <summary>Creates an new <see cref="StreamMqttDestination" /> instance.</summary>
        public StreamMqttDestination()
        {
            this.__streamDestination.Target = "Mqtt";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__streamDestination), __streamDestination);
            await eventListener.AssertObjectIsValid(nameof(__streamDestination), __streamDestination);
        }
    }
    /// The type for a MQTT destination.
    public partial interface IStreamMqttDestination :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestination
    {
        /// <summary>The MQTT QoS setting. Defaults to QoS 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The MQTT QoS setting. Defaults to QoS 1.",
        SerializedName = @"qos",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Qos0", "Qos1")]
        string ConfigurationQo { get; set; }
        /// <summary>
        /// When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
        SerializedName = @"retain",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Keep", "Never")]
        string ConfigurationRetain { get; set; }
        /// <summary>The MQTT topic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The MQTT topic.",
        SerializedName = @"topic",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationTopic { get; set; }
        /// <summary>The MQTT TTL setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The MQTT TTL setting.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(long) })]
        long? ConfigurationTtl { get; set; }

    }
    /// The type for a MQTT destination.
    internal partial interface IStreamMqttDestinationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IStreamDestinationInternal
    {
        /// <summary>The MQTT destination configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IMqttDestinationConfiguration Configuration { get; set; }
        /// <summary>The MQTT QoS setting. Defaults to QoS 1.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Qos0", "Qos1")]
        string ConfigurationQo { get; set; }
        /// <summary>
        /// When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Keep", "Never")]
        string ConfigurationRetain { get; set; }
        /// <summary>The MQTT topic.</summary>
        string ConfigurationTopic { get; set; }
        /// <summary>The MQTT TTL setting.</summary>
        long? ConfigurationTtl { get; set; }

    }
}