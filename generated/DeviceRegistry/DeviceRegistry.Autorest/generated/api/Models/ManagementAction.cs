// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>Defines the action properties.</summary>
    public partial class ManagementAction :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementAction,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IManagementActionInternal
    {

        /// <summary>Backing field for <see cref="ActionConfiguration" /> property.</summary>
        private string _actionConfiguration;

        /// <summary>Stringified JSON that contains connector-specific configuration for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ActionConfiguration { get => this._actionConfiguration; set => this._actionConfiguration = value; }

        /// <summary>Backing field for <see cref="ActionType" /> property.</summary>
        private string _actionType;

        /// <summary>The type of the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string ActionType { get => this._actionType; set => this._actionType = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="TargetUri" /> property.</summary>
        private string _targetUri;

        /// <summary>The target URI on which a client can invoke the specific action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string TargetUri { get => this._targetUri; set => this._targetUri = value; }

        /// <summary>Backing field for <see cref="TimeoutInSecond" /> property.</summary>
        private int? _timeoutInSecond;

        /// <summary>Response timeout for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public int? TimeoutInSecond { get => this._timeoutInSecond; set => this._timeoutInSecond = value; }

        /// <summary>Backing field for <see cref="Topic" /> property.</summary>
        private string _topic;

        /// <summary>The MQTT topic path on which a client will receive the request for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Topic { get => this._topic; set => this._topic = value; }

        /// <summary>Backing field for <see cref="TypeRef" /> property.</summary>
        private string _typeRef;

        /// <summary>URI or type definition ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string TypeRef { get => this._typeRef; set => this._typeRef = value; }

        /// <summary>Creates an new <see cref="ManagementAction" /> instance.</summary>
        public ManagementAction()
        {

        }
    }
    /// Defines the action properties.
    public partial interface IManagementAction :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable
    {
        /// <summary>Stringified JSON that contains connector-specific configuration for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains connector-specific configuration for the action.",
        SerializedName = @"actionConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string ActionConfiguration { get; set; }
        /// <summary>The type of the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the action.",
        SerializedName = @"actionType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Call", "Read", "Write")]
        string ActionType { get; set; }
        /// <summary>Name of the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the action.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The target URI on which a client can invoke the specific action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The target URI on which a client can invoke the specific action.",
        SerializedName = @"targetUri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetUri { get; set; }
        /// <summary>Response timeout for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Response timeout for the action.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }
        /// <summary>The MQTT topic path on which a client will receive the request for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The MQTT topic path on which a client will receive the request for the action.",
        SerializedName = @"topic",
        PossibleTypes = new [] { typeof(string) })]
        string Topic { get; set; }
        /// <summary>URI or type definition ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URI or type definition ID.",
        SerializedName = @"typeRef",
        PossibleTypes = new [] { typeof(string) })]
        string TypeRef { get; set; }

    }
    /// Defines the action properties.
    internal partial interface IManagementActionInternal

    {
        /// <summary>Stringified JSON that contains connector-specific configuration for the action.</summary>
        string ActionConfiguration { get; set; }
        /// <summary>The type of the action.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Call", "Read", "Write")]
        string ActionType { get; set; }
        /// <summary>Name of the action.</summary>
        string Name { get; set; }
        /// <summary>The target URI on which a client can invoke the specific action.</summary>
        string TargetUri { get; set; }
        /// <summary>Response timeout for the action.</summary>
        int? TimeoutInSecond { get; set; }
        /// <summary>The MQTT topic path on which a client will receive the request for the action.</summary>
        string Topic { get; set; }
        /// <summary>URI or type definition ID.</summary>
        string TypeRef { get; set; }

    }
}