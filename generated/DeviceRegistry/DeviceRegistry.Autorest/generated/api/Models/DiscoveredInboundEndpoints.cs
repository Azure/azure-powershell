// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Extensions;

    /// <summary>An endpoint to connect to the device.</summary>
    public partial class DiscoveredInboundEndpoints :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDiscoveredInboundEndpoints,
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Models.IDiscoveredInboundEndpointsInternal
    {

        /// <summary>Backing field for <see cref="AdditionalConfiguration" /> property.</summary>
        private string _additionalConfiguration;

        /// <summary>
        /// Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string AdditionalConfiguration { get => this._additionalConfiguration; set => this._additionalConfiguration = value; }

        /// <summary>Backing field for <see cref="Address" /> property.</summary>
        private string _address;

        /// <summary>
        /// The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN,
        /// e.g., server.example.com).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Address { get => this._address; set => this._address = value; }

        /// <summary>Backing field for <see cref="EndpointType" /> property.</summary>
        private string _endpointType;

        /// <summary>Type of connection endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string EndpointType { get => this._endpointType; set => this._endpointType = value; }

        /// <summary>Backing field for <see cref="LastUpdatedOn" /> property.</summary>
        private global::System.DateTime? _lastUpdatedOn;

        /// <summary>The timestamp (in UTC) when the endpoint was discovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedOn { get => this._lastUpdatedOn; set => this._lastUpdatedOn = value; }

        /// <summary>Backing field for <see cref="SupportedAuthenticationMethod" /> property.</summary>
        private System.Collections.Generic.List<string> _supportedAuthenticationMethod;

        /// <summary>
        /// List of supported authentication methods supported by device for Inbound connections.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SupportedAuthenticationMethod { get => this._supportedAuthenticationMethod; set => this._supportedAuthenticationMethod = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>
        /// Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType
        /// Microsoft.Mqtt etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="DiscoveredInboundEndpoints" /> instance.</summary>
        public DiscoveredInboundEndpoints()
        {

        }
    }
    /// An endpoint to connect to the device.
    public partial interface IDiscoveredInboundEndpoints :
        Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF).",
        SerializedName = @"additionalConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalConfiguration { get; set; }
        /// <summary>
        /// The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN,
        /// e.g., server.example.com).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com).",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get; set; }
        /// <summary>Type of connection endpoint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of connection endpoint.",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointType { get; set; }
        /// <summary>The timestamp (in UTC) when the endpoint was discovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timestamp (in UTC) when the endpoint was discovered.",
        SerializedName = @"lastUpdatedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedOn { get; set; }
        /// <summary>
        /// List of supported authentication methods supported by device for Inbound connections.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of supported authentication methods supported by device for Inbound connections.",
        SerializedName = @"supportedAuthenticationMethods",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Anonymous", "Certificate", "UsernamePassword")]
        System.Collections.Generic.List<string> SupportedAuthenticationMethod { get; set; }
        /// <summary>
        /// Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType
        /// Microsoft.Mqtt etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType Microsoft.Mqtt etc.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// An endpoint to connect to the device.
    internal partial interface IDiscoveredInboundEndpointsInternal

    {
        /// <summary>
        /// Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF).
        /// </summary>
        string AdditionalConfiguration { get; set; }
        /// <summary>
        /// The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN,
        /// e.g., server.example.com).
        /// </summary>
        string Address { get; set; }
        /// <summary>Type of connection endpoint.</summary>
        string EndpointType { get; set; }
        /// <summary>The timestamp (in UTC) when the endpoint was discovered.</summary>
        global::System.DateTime? LastUpdatedOn { get; set; }
        /// <summary>
        /// List of supported authentication methods supported by device for Inbound connections.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DeviceRegistry.PSArgumentCompleterAttribute("Anonymous", "Certificate", "UsernamePassword")]
        System.Collections.Generic.List<string> SupportedAuthenticationMethod { get; set; }
        /// <summary>
        /// Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType
        /// Microsoft.Mqtt etc.
        /// </summary>
        string Version { get; set; }

    }
}