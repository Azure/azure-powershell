// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Extensions;

    /// <summary>Storage Task Preview Action.</summary>
    public partial class StorageTaskPreviewAction :
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewAction,
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionInternal
    {

        /// <summary>Specify whether the else block is present in the condition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Inlined)]
        public bool ActionElseBlockExist { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ActionElseBlockExist; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ActionElseBlockExist = value ; }

        /// <summary>
        /// Properties of some sample blobs in the container to test for matches with the preview action.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewBlobProperties> Blob { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Blob; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Blob = value ; }

        /// <summary>
        /// metadata key value pairs to be tested for a match against the provided condition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewKeyValueProperties> ContainerMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ContainerMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ContainerMetadata = value ?? null /* arrayOf */; }

        /// <summary>Name of test container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Inlined)]
        public string ContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ContainerName = value ?? null; }

        /// <summary>Storage task condition to bes tested for a match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Inlined)]
        public string IfCondition { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).IfCondition; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).IfCondition = value ?? null; }

        /// <summary>Internal Acessors for Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionCondition Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionInternal.Action { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Action = value; }

        /// <summary>Internal Acessors for ActionIf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionIfCondition Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionInternal.ActionIf { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ActionIf; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).ActionIf = value; }

        /// <summary>Internal Acessors for Container</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewContainerProperties Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionInternal.Container { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Container; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionPropertiesInternal)Property).Container = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionProperties Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.StorageTaskPreviewActionProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionProperties _property;

        /// <summary>Properties of the storage task preview.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.StorageTaskPreviewActionProperties()); set => this._property = value; }

        /// <summary>Creates an new <see cref="StorageTaskPreviewAction" /> instance.</summary>
        public StorageTaskPreviewAction()
        {

        }
    }
    /// Storage Task Preview Action.
    public partial interface IStorageTaskPreviewAction :
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.IJsonSerializable
    {
        /// <summary>Specify whether the else block is present in the condition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specify whether the else block is present in the condition.",
        SerializedName = @"elseBlockExists",
        PossibleTypes = new [] { typeof(bool) })]
        bool ActionElseBlockExist { get; set; }
        /// <summary>
        /// Properties of some sample blobs in the container to test for matches with the preview action.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Properties of some sample blobs in the container to test for matches with the preview action.",
        SerializedName = @"blobs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewBlobProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewBlobProperties> Blob { get; set; }
        /// <summary>
        /// metadata key value pairs to be tested for a match against the provided condition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"metadata key value pairs to be tested for a match against the provided condition.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewKeyValueProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewKeyValueProperties> ContainerMetadata { get; set; }
        /// <summary>Name of test container</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of test container",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>Storage task condition to bes tested for a match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage task condition to bes tested for a match.",
        SerializedName = @"condition",
        PossibleTypes = new [] { typeof(string) })]
        string IfCondition { get; set; }

    }
    /// Storage Task Preview Action.
    internal partial interface IStorageTaskPreviewActionInternal

    {
        /// <summary>Preview action to test</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionCondition Action { get; set; }
        /// <summary>Specify whether the else block is present in the condition.</summary>
        bool ActionElseBlockExist { get; set; }
        /// <summary>The condition to be tested for a match with container and blob properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionIfCondition ActionIf { get; set; }
        /// <summary>
        /// Properties of some sample blobs in the container to test for matches with the preview action.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewBlobProperties> Blob { get; set; }
        /// <summary>Properties of a sample container to test for a match with the preview action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewContainerProperties Container { get; set; }
        /// <summary>
        /// metadata key value pairs to be tested for a match against the provided condition.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewKeyValueProperties> ContainerMetadata { get; set; }
        /// <summary>Name of test container</summary>
        string ContainerName { get; set; }
        /// <summary>Storage task condition to bes tested for a match.</summary>
        string IfCondition { get; set; }
        /// <summary>Properties of the storage task preview.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageAction.Models.IStorageTaskPreviewActionProperties Property { get; set; }

    }
}