// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Request body to get the configuration for the region.</summary>
    public partial class RegionConfigurationRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequest,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequestInternal
    {

        /// <summary>Backing field for <see cref="DatacenterAddressRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequest _datacenterAddressRequest;

        /// <summary>Request body to get the datacenter address for given sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequest DatacenterAddressRequest { get => (this._datacenterAddressRequest = this._datacenterAddressRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.DatacenterAddressRequest()); set => this._datacenterAddressRequest = value; }

        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DatacenterAddressRequestModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).Model; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).Model = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName)""); }

        /// <summary>Sku Name for which the data center address requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DatacenterAddressRequestSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName)""); }

        /// <summary>
        /// Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string DatacenterAddressRequestStorageLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).StorageLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequestInternal)DatacenterAddressRequest).StorageLocation = value ?? null; }

        /// <summary>Backing field for <see cref="DeviceCapabilityRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequest _deviceCapabilityRequest;

        /// <summary>Request body to get the device capabilities for a given sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequest DeviceCapabilityRequest { get => (this._deviceCapabilityRequest = this._deviceCapabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.DeviceCapabilityRequest()); set => this._deviceCapabilityRequest = value; }

        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DeviceCapabilityRequestModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequestInternal)DeviceCapabilityRequest).Model; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequestInternal)DeviceCapabilityRequest).Model = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName)""); }

        /// <summary>Type of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DeviceCapabilityRequestSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequestInternal)DeviceCapabilityRequest).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequestInternal)DeviceCapabilityRequest).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName)""); }

        /// <summary>Internal Acessors for DatacenterAddressRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequest Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequestInternal.DatacenterAddressRequest { get => (this._datacenterAddressRequest = this._datacenterAddressRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.DatacenterAddressRequest()); set { {_datacenterAddressRequest = value;} } }

        /// <summary>Internal Acessors for DeviceCapabilityRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequest Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequestInternal.DeviceCapabilityRequest { get => (this._deviceCapabilityRequest = this._deviceCapabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.DeviceCapabilityRequest()); set { {_deviceCapabilityRequest = value;} } }

        /// <summary>Internal Acessors for ScheduleAvailabilityRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequest Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequestInternal.ScheduleAvailabilityRequest { get => (this._scheduleAvailabilityRequest = this._scheduleAvailabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ScheduleAvailabilityRequest()); set { {_scheduleAvailabilityRequest = value;} } }

        /// <summary>Internal Acessors for TransportAvailabilityRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequest Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IRegionConfigurationRequestInternal.TransportAvailabilityRequest { get => (this._transportAvailabilityRequest = this._transportAvailabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.TransportAvailabilityRequest()); set { {_transportAvailabilityRequest = value;} } }

        /// <summary>Backing field for <see cref="ScheduleAvailabilityRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequest _scheduleAvailabilityRequest;

        /// <summary>Request body to get the availability for scheduling orders.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequest ScheduleAvailabilityRequest { get => (this._scheduleAvailabilityRequest = this._scheduleAvailabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ScheduleAvailabilityRequest()); set => this._scheduleAvailabilityRequest = value; }

        /// <summary>Country in which storage location should be supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string ScheduleAvailabilityRequestCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).Country; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).Country = value ?? null; }

        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? ScheduleAvailabilityRequestModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).Model; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).Model = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName)""); }

        /// <summary>Sku Name for which the order is to be scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? ScheduleAvailabilityRequestSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName)""); }

        /// <summary>
        /// Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string ScheduleAvailabilityRequestStorageLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).StorageLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequestInternal)ScheduleAvailabilityRequest).StorageLocation = value ?? null; }

        /// <summary>Backing field for <see cref="TransportAvailabilityRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequest _transportAvailabilityRequest;

        /// <summary>Request body to get the transport availability for given sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequest TransportAvailabilityRequest { get => (this._transportAvailabilityRequest = this._transportAvailabilityRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.TransportAvailabilityRequest()); set => this._transportAvailabilityRequest = value; }

        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? TransportAvailabilityRequestModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequestInternal)TransportAvailabilityRequest).Model; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequestInternal)TransportAvailabilityRequest).Model = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName)""); }

        /// <summary>Type of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? TransportAvailabilityRequestSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequestInternal)TransportAvailabilityRequest).SkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequestInternal)TransportAvailabilityRequest).SkuName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName)""); }

        /// <summary>Creates an new <see cref="RegionConfigurationRequest" /> instance.</summary>
        public RegionConfigurationRequest()
        {

        }
    }
    /// Request body to get the configuration for the region.
    public partial interface IRegionConfigurationRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DatacenterAddressRequestModel { get; set; }
        /// <summary>Sku Name for which the data center address requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sku Name for which the data center address requested.",
        SerializedName = @"skuName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DatacenterAddressRequestSkuName { get; set; }
        /// <summary>
        /// Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01",
        SerializedName = @"storageLocation",
        PossibleTypes = new [] { typeof(string) })]
        string DatacenterAddressRequestStorageLocation { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DeviceCapabilityRequestModel { get; set; }
        /// <summary>Type of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the device.",
        SerializedName = @"skuName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DeviceCapabilityRequestSkuName { get; set; }
        /// <summary>Country in which storage location should be supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country in which storage location should be supported.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleAvailabilityRequestCountry { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? ScheduleAvailabilityRequestModel { get; set; }
        /// <summary>Sku Name for which the order is to be scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sku Name for which the order is to be scheduled.",
        SerializedName = @"skuName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? ScheduleAvailabilityRequestSkuName { get; set; }
        /// <summary>
        /// Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01",
        SerializedName = @"storageLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleAvailabilityRequestStorageLocation { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
        SerializedName = @"model",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? TransportAvailabilityRequestModel { get; set; }
        /// <summary>Type of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the device.",
        SerializedName = @"skuName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? TransportAvailabilityRequestSkuName { get; set; }

    }
    /// Request body to get the configuration for the region.
    internal partial interface IRegionConfigurationRequestInternal

    {
        /// <summary>Request body to get the datacenter address for given sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDatacenterAddressRequest DatacenterAddressRequest { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DatacenterAddressRequestModel { get; set; }
        /// <summary>Sku Name for which the data center address requested.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DatacenterAddressRequestSkuName { get; set; }
        /// <summary>
        /// Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        string DatacenterAddressRequestStorageLocation { get; set; }
        /// <summary>Request body to get the device capabilities for a given sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IDeviceCapabilityRequest DeviceCapabilityRequest { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? DeviceCapabilityRequestModel { get; set; }
        /// <summary>Type of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? DeviceCapabilityRequestSkuName { get; set; }
        /// <summary>Request body to get the availability for scheduling orders.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.IScheduleAvailabilityRequest ScheduleAvailabilityRequest { get; set; }
        /// <summary>Country in which storage location should be supported.</summary>
        string ScheduleAvailabilityRequestCountry { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? ScheduleAvailabilityRequestModel { get; set; }
        /// <summary>Sku Name for which the order is to be scheduled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? ScheduleAvailabilityRequestSkuName { get; set; }
        /// <summary>
        /// Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
        /// </summary>
        string ScheduleAvailabilityRequestStorageLocation { get; set; }
        /// <summary>Request body to get the transport availability for given sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20250201.ITransportAvailabilityRequest TransportAvailabilityRequest { get; set; }
        /// <summary>
        /// The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the
        /// time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ModelName? TransportAvailabilityRequestModel { get; set; }
        /// <summary>Type of the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName? TransportAvailabilityRequestSkuName { get; set; }

    }
}