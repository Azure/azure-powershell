// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Extensions;

    /// <summary>Describes a hybrid machine Update.</summary>
    public partial class MachineUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdate" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdate __resourceUpdate = new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ResourceUpdate();

        /// <summary>The correlation ID associated with an agent upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeCorrelationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeCorrelationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeCorrelationId = value ?? null; }

        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeDesiredVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeDesiredVersion = value ?? null; }

        /// <summary>Specifies if the machine's agent should be upgraded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public bool? AgentUpgradeEnableAutomaticUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeEnableAutomaticUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeEnableAutomaticUpgrade = value ?? default(bool); }

        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptDesiredVersion; }

        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptMessage; }

        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptStatus; }

        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string AgentUpgradeLastAttemptTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptTimestamp; }

        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string CloudMetadataProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).CloudMetadataProvider; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentity _identity;

        /// <summary>Identity for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>
        /// Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>The city or locality where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string LocationDataCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataCity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataCity = value ?? null; }

        /// <summary>The country or region where the resource is located</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string LocationDataCountryOrRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataCountryOrRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataCountryOrRegion = value ?? null; }

        /// <summary>The district, state, or province where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string LocationDataDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataDistrict; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataDistrict = value ?? null; }

        /// <summary>A canonical name for the geographic or physical location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string LocationDataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationDataName = value ?? null; }

        /// <summary>Internal Acessors for AgentUpgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IAgentUpgrade Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.AgentUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgrade = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptDesiredVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.AgentUpgradeLastAttemptDesiredVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptDesiredVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptDesiredVersion = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.AgentUpgradeLastAttemptMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptMessage = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.AgentUpgradeLastAttemptStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptStatus = value; }

        /// <summary>Internal Acessors for AgentUpgradeLastAttemptTimestamp</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.AgentUpgradeLastAttemptTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).AgentUpgradeLastAttemptTimestamp = value; }

        /// <summary>Internal Acessors for CloudMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ICloudMetadata Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.CloudMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).CloudMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).CloudMetadata = value; }

        /// <summary>Internal Acessors for CloudMetadataProvider</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.CloudMetadataProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).CloudMetadataProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).CloudMetadataProvider = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentity Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for LocationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILocationData Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.LocationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).LocationData = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.MachineUpdateProperties()); set { {_property = value;} } }

        /// <summary>Specifies the operating system settings for the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IOSProfile OSProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).OSProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).OSProfile = value ?? null /* model class */; }

        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string ParentClusterResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).ParentClusterResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).ParentClusterResourceId = value ?? null; }

        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inlined)]
        public string PrivateLinkScopeResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).PrivateLinkScopeResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdatePropertiesInternal)Property).PrivateLinkScopeResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateProperties _property;

        /// <summary>Hybrid Compute Machine properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.MachineUpdateProperties()); set => this._property = value; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdateTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdateInternal)__resourceUpdate).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdateInternal)__resourceUpdate).Tag = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="MachineUpdate" /> instance.</summary>
        public MachineUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceUpdate), __resourceUpdate);
            await eventListener.AssertObjectIsValid(nameof(__resourceUpdate), __resourceUpdate);
        }
    }
    /// Describes a hybrid machine Update.
    public partial interface IMachineUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdate
    {
        /// <summary>The correlation ID associated with an agent upgrade operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The correlation ID associated with an agent upgrade operation.",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeCorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the version info w.r.t AgentUpgrade for the machine.",
        SerializedName = @"desiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeDesiredVersion { get; set; }
        /// <summary>Specifies if the machine's agent should be upgraded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies if the machine's agent should be upgraded",
        SerializedName = @"enableAutomaticUpgrade",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AgentUpgradeEnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the version of the last attempt",
        SerializedName = @"lastAttemptDesiredVersion",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptDesiredVersion { get;  }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Failure message of last upgrade attempt if any.",
        SerializedName = @"lastAttemptMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptMessage { get;  }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the status of Agent Upgrade.",
        SerializedName = @"lastAttemptStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("Success", "Failed")]
        string AgentUpgradeLastAttemptStatus { get;  }
        /// <summary>Timestamp of last upgrade attempt</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp of last upgrade attempt",
        SerializedName = @"lastAttemptTimestamp",
        PossibleTypes = new [] { typeof(string) })]
        string AgentUpgradeLastAttemptTimestamp { get;  }
        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the cloud provider (Azure/AWS/GCP...).",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string CloudMetadataProvider { get;  }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("SystemAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("AVS", "HCI", "SCVMM", "VMware", "EPS", "GCP", "AWS")]
        string Kind { get; set; }
        /// <summary>The city or locality where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The city or locality where the resource is located.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataCity { get; set; }
        /// <summary>The country or region where the resource is located</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The country or region where the resource is located",
        SerializedName = @"countryOrRegion",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataCountryOrRegion { get; set; }
        /// <summary>The district, state, or province where the resource is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The district, state, or province where the resource is located.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataDistrict { get; set; }
        /// <summary>A canonical name for the geographic or physical location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A canonical name for the geographic or physical location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string LocationDataName { get; set; }
        /// <summary>Specifies the operating system settings for the hybrid machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the operating system settings for the hybrid machine.",
        SerializedName = @"osProfile",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IOSProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IOSProfile OSProfile { get; set; }
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.",
        SerializedName = @"parentClusterResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentClusterResourceId { get; set; }
        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The resource id of the private link scope this machine is assigned to, if any.",
        SerializedName = @"privateLinkScopeResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkScopeResourceId { get; set; }

    }
    /// Describes a hybrid machine Update.
    internal partial interface IMachineUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IResourceUpdateInternal
    {
        /// <summary>The info of the machine w.r.t Agent Upgrade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IAgentUpgrade AgentUpgrade { get; set; }
        /// <summary>The correlation ID associated with an agent upgrade operation.</summary>
        string AgentUpgradeCorrelationId { get; set; }
        /// <summary>Specifies the version info w.r.t AgentUpgrade for the machine.</summary>
        string AgentUpgradeDesiredVersion { get; set; }
        /// <summary>Specifies if the machine's agent should be upgraded</summary>
        bool? AgentUpgradeEnableAutomaticUpgrade { get; set; }
        /// <summary>Specifies the version of the last attempt</summary>
        string AgentUpgradeLastAttemptDesiredVersion { get; set; }
        /// <summary>Failure message of last upgrade attempt if any.</summary>
        string AgentUpgradeLastAttemptMessage { get; set; }
        /// <summary>Specifies the status of Agent Upgrade.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("Success", "Failed")]
        string AgentUpgradeLastAttemptStatus { get; set; }
        /// <summary>Timestamp of last upgrade attempt</summary>
        string AgentUpgradeLastAttemptTimestamp { get; set; }
        /// <summary>The metadata of the cloud environment (Azure/GCP/AWS/OCI...).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ICloudMetadata CloudMetadata { get; set; }
        /// <summary>Specifies the cloud provider (Azure/AWS/GCP...).</summary>
        string CloudMetadataProvider { get; set; }
        /// <summary>Identity for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("SystemAssigned")]
        string IdentityType { get; set; }
        /// <summary>
        /// Indicates which kind of Arc machine placement on-premises, such as HCI, SCVMM or VMware etc.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.PSArgumentCompleterAttribute("AVS", "HCI", "SCVMM", "VMware", "EPS", "GCP", "AWS")]
        string Kind { get; set; }
        /// <summary>Metadata pertaining to the geographic location of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.ILocationData LocationData { get; set; }
        /// <summary>The city or locality where the resource is located.</summary>
        string LocationDataCity { get; set; }
        /// <summary>The country or region where the resource is located</summary>
        string LocationDataCountryOrRegion { get; set; }
        /// <summary>The district, state, or province where the resource is located.</summary>
        string LocationDataDistrict { get; set; }
        /// <summary>A canonical name for the geographic or physical location.</summary>
        string LocationDataName { get; set; }
        /// <summary>Specifies the operating system settings for the hybrid machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IOSProfile OSProfile { get; set; }
        /// <summary>
        /// The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
        /// </summary>
        string ParentClusterResourceId { get; set; }
        /// <summary>The resource id of the private link scope this machine is assigned to, if any.</summary>
        string PrivateLinkScopeResourceId { get; set; }
        /// <summary>Hybrid Compute Machine properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcGateway.Models.IMachineUpdateProperties Property { get; set; }

    }
}