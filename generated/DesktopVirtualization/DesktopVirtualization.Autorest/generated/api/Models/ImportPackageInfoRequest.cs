// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Extensions;

    /// <summary>Information to import app attach package</summary>
    public partial class ImportPackageInfoRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IImportPackageInfoRequest,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IImportPackageInfoRequestInternal
    {

        /// <summary>Backing field for <see cref="PackageArchitecture" /> property.</summary>
        private string _packageArchitecture;

        /// <summary>Possible device architectures that an app attach package can be configured for</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string PackageArchitecture { get => this._packageArchitecture; set => this._packageArchitecture = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>URI to Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Creates an new <see cref="ImportPackageInfoRequest" /> instance.</summary>
        public ImportPackageInfoRequest()
        {

        }
    }
    /// Information to import app attach package
    public partial interface IImportPackageInfoRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.IJsonSerializable
    {
        /// <summary>Possible device architectures that an app attach package can be configured for</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Possible device architectures that an app attach package can be configured for",
        SerializedName = @"packageArchitecture",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PSArgumentCompleterAttribute("ARM", "ARM64", "x86", "x64", "Neutral", "x86a64", "ALL")]
        string PackageArchitecture { get; set; }
        /// <summary>URI to Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URI to Image",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }

    }
    /// Information to import app attach package
    internal partial interface IImportPackageInfoRequestInternal

    {
        /// <summary>Possible device architectures that an app attach package can be configured for</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PSArgumentCompleterAttribute("ARM", "ARM64", "x86", "x64", "Neutral", "x86a64", "ALL")]
        string PackageArchitecture { get; set; }
        /// <summary>URI to Image</summary>
        string Path { get; set; }

    }
}