// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Extensions;

    /// <summary>Active directory info. Only one should be populated based on the join type.</summary>
    public partial class ActiveDirectoryInfoPatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IActiveDirectoryInfoPatchProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IActiveDirectoryInfoPatchPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DomainCredentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchProperties _domainCredentials;

        /// <summary>Credentials needed to create the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchProperties DomainCredentials { get => (this._domainCredentials = this._domainCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.KeyVaultCredentialsPatchProperties()); set => this._domainCredentials = value; }

        /// <summary>The uri to access the secret that the password is stored in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public string DomainCredentialsPasswordKeyVaultSecretUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchPropertiesInternal)DomainCredentials).PasswordKeyVaultSecretUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchPropertiesInternal)DomainCredentials).PasswordKeyVaultSecretUri = value ?? null; }

        /// <summary>The uri to access the secret that the username is stored in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.PropertyOrigin.Inlined)]
        public string DomainCredentialsUsernameKeyVaultSecretUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchPropertiesInternal)DomainCredentials).UsernameKeyVaultSecretUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchPropertiesInternal)DomainCredentials).UsernameKeyVaultSecretUri = value ?? null; }

        /// <summary>Internal Acessors for DomainCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IActiveDirectoryInfoPatchPropertiesInternal.DomainCredentials { get => (this._domainCredentials = this._domainCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.KeyVaultCredentialsPatchProperties()); set { {_domainCredentials = value;} } }

        /// <summary>Creates an new <see cref="ActiveDirectoryInfoPatchProperties" /> instance.</summary>
        public ActiveDirectoryInfoPatchProperties()
        {

        }
    }
    /// Active directory info. Only one should be populated based on the join type.
    public partial interface IActiveDirectoryInfoPatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.IJsonSerializable
    {
        /// <summary>The uri to access the secret that the password is stored in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The uri to access the secret that the password is stored in.",
        SerializedName = @"passwordKeyVaultSecretUri",
        PossibleTypes = new [] { typeof(string) })]
        string DomainCredentialsPasswordKeyVaultSecretUri { get; set; }
        /// <summary>The uri to access the secret that the username is stored in.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The uri to access the secret that the username is stored in.",
        SerializedName = @"usernameKeyVaultSecretUri",
        PossibleTypes = new [] { typeof(string) })]
        string DomainCredentialsUsernameKeyVaultSecretUri { get; set; }

    }
    /// Active directory info. Only one should be populated based on the join type.
    internal partial interface IActiveDirectoryInfoPatchPropertiesInternal

    {
        /// <summary>Credentials needed to create the virtual machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualization.Models.IKeyVaultCredentialsPatchProperties DomainCredentials { get; set; }
        /// <summary>The uri to access the secret that the password is stored in.</summary>
        string DomainCredentialsPasswordKeyVaultSecretUri { get; set; }
        /// <summary>The uri to access the secret that the username is stored in.</summary>
        string DomainCredentialsUsernameKeyVaultSecretUri { get; set; }

    }
}