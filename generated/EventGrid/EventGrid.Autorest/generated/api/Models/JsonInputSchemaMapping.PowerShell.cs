// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.PowerShell;

    /// <summary>
    /// This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input
    /// JSON schema to the Event Grid event schema.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(JsonInputSchemaMappingTypeConverter))]
    public partial class JsonInputSchemaMapping
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new JsonInputSchemaMapping(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new JsonInputSchemaMapping(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="JsonInputSchemaMapping" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="JsonInputSchemaMapping" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal JsonInputSchemaMapping(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMappingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Id = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Id, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("Topic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Topic = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("Topic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Topic, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("EventTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTime = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("EventTime",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTime, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("EventType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventType = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("EventType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventType, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("Subject"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Subject = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("Subject",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Subject, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersion = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("DataVersion",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersion, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).IdSourceField = (string) content.GetValueForProperty("IdSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).IdSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).TopicSourceField = (string) content.GetValueForProperty("TopicSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).TopicSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTimeSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTimeSourceField = (string) content.GetValueForProperty("EventTimeSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTimeSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTypeSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeSourceField = (string) content.GetValueForProperty("EventTypeSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTypeDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeDefaultValue = (string) content.GetValueForProperty("EventTypeDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeDefaultValue, global::System.Convert.ToString);
            }
            if (content.Contains("SubjectSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectSourceField = (string) content.GetValueForProperty("SubjectSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("SubjectDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectDefaultValue = (string) content.GetValueForProperty("SubjectDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectDefaultValue, global::System.Convert.ToString);
            }
            if (content.Contains("DataVersionSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionSourceField = (string) content.GetValueForProperty("DataVersionSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("DataVersionDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionDefaultValue = (string) content.GetValueForProperty("DataVersionDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionDefaultValue, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMapping"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal JsonInputSchemaMapping(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMappingPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Id = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Id, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("Topic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Topic = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("Topic",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Topic, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("EventTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTime = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField) content.GetValueForProperty("EventTime",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTime, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldTypeConverter.ConvertFrom);
            }
            if (content.Contains("EventType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventType = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("EventType",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventType, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("Subject"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Subject = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("Subject",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).Subject, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersion = (Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault) content.GetValueForProperty("DataVersion",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersion, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonFieldWithDefaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).IdSourceField = (string) content.GetValueForProperty("IdSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).IdSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("TopicSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).TopicSourceField = (string) content.GetValueForProperty("TopicSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).TopicSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTimeSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTimeSourceField = (string) content.GetValueForProperty("EventTimeSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTimeSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTypeSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeSourceField = (string) content.GetValueForProperty("EventTypeSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("EventTypeDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeDefaultValue = (string) content.GetValueForProperty("EventTypeDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).EventTypeDefaultValue, global::System.Convert.ToString);
            }
            if (content.Contains("SubjectSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectSourceField = (string) content.GetValueForProperty("SubjectSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("SubjectDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectDefaultValue = (string) content.GetValueForProperty("SubjectDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).SubjectDefaultValue, global::System.Convert.ToString);
            }
            if (content.Contains("DataVersionSourceField"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionSourceField = (string) content.GetValueForProperty("DataVersionSourceField",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionSourceField, global::System.Convert.ToString);
            }
            if (content.Contains("DataVersionDefaultValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionDefaultValue = (string) content.GetValueForProperty("DataVersionDefaultValue",((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal)this).DataVersionDefaultValue, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input
    /// JSON schema to the Event Grid event schema.
    [System.ComponentModel.TypeConverter(typeof(JsonInputSchemaMappingTypeConverter))]
    public partial interface IJsonInputSchemaMapping

    {

    }
}