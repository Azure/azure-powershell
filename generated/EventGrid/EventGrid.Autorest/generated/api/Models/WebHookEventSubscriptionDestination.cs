// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Information about the webhook destination for an event subscription.</summary>
    public partial class WebHookEventSubscriptionDestination :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestination,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionDestination"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionDestination __eventSubscriptionDestination = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.EventSubscriptionDestination();

        /// <summary>
        /// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in
        /// delivery requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string AzureActiveDirectoryApplicationIdOrUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).AzureActiveDirectoryApplicationIdOrUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).AzureActiveDirectoryApplicationIdOrUri = value ?? null; }

        /// <summary>
        /// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string AzureActiveDirectoryTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).AzureActiveDirectoryTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).AzureActiveDirectoryTenantId = value ?? null; }

        /// <summary>Delivery attribute details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryAttributeMapping> DeliveryAttributeMapping { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).DeliveryAttributeMapping; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).DeliveryAttributeMapping = value ?? null /* arrayOf */; }

        /// <summary>
        /// The base URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EndpointBaseUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).EndpointBaseUrl; }

        /// <summary>Type of the endpoint for the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string EndpointType { get => "WebHook"; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionDestinationInternal)__eventSubscriptionDestination).EndpointType = "WebHook"; }

        /// <summary>
        /// The URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EndpointUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).EndpointUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).EndpointUrl = value ?? null; }

        /// <summary>Maximum number of events per batch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? MaxEventsPerBatch { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).MaxEventsPerBatch; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).MaxEventsPerBatch = value ?? default(int); }

        /// <summary>Internal Acessors for EndpointBaseUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationInternal.EndpointBaseUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).EndpointBaseUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).EndpointBaseUrl = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.WebHookEventSubscriptionDestinationProperties()); set { {_property = value;} } }

        /// <summary>Minimum TLS version that should be supported by webhook endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string MinimumTlsVersionAllowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).MinimumTlsVersionAllowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).MinimumTlsVersionAllowed = value ?? null; }

        /// <summary>Preferred batch size in Kilobytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? PreferredBatchSizeInKilobyte { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).PreferredBatchSizeInKilobyte; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationPropertiesInternal)Property).PreferredBatchSizeInKilobyte = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationProperties _property;

        /// <summary>WebHook Properties of the event subscription destination.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.WebHookEventSubscriptionDestinationProperties()); set => this._property = value; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__eventSubscriptionDestination), __eventSubscriptionDestination);
            await eventListener.AssertObjectIsValid(nameof(__eventSubscriptionDestination), __eventSubscriptionDestination);
        }

        /// <summary>Creates an new <see cref="WebHookEventSubscriptionDestination" /> instance.</summary>
        public WebHookEventSubscriptionDestination()
        {
            this.__eventSubscriptionDestination.EndpointType = "WebHook";
        }
    }
    /// Information about the webhook destination for an event subscription.
    public partial interface IWebHookEventSubscriptionDestination :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionDestination
    {
        /// <summary>
        /// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in
        /// delivery requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
        SerializedName = @"azureActiveDirectoryApplicationIdOrUri",
        PossibleTypes = new [] { typeof(string) })]
        string AzureActiveDirectoryApplicationIdOrUri { get; set; }
        /// <summary>
        /// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
        SerializedName = @"azureActiveDirectoryTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureActiveDirectoryTenantId { get; set; }
        /// <summary>Delivery attribute details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Delivery attribute details.",
        SerializedName = @"deliveryAttributeMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryAttributeMapping),typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IStaticDeliveryAttributeMapping),typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDynamicDeliveryAttributeMapping) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryAttributeMapping> DeliveryAttributeMapping { get; set; }
        /// <summary>
        /// The base URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The base URL that represents the endpoint of the destination of an event subscription.",
        SerializedName = @"endpointBaseUrl",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointBaseUrl { get;  }
        /// <summary>
        /// The URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The URL that represents the endpoint of the destination of an event subscription.",
        SerializedName = @"endpointUrl",
        PossibleTypes = new [] { typeof(string) })]
        string EndpointUrl { get; set; }
        /// <summary>Maximum number of events per batch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum number of events per batch.",
        SerializedName = @"maxEventsPerBatch",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxEventsPerBatch { get; set; }
        /// <summary>Minimum TLS version that should be supported by webhook endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum TLS version that should be supported by webhook endpoint",
        SerializedName = @"minimumTlsVersionAllowed",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("1.0", "1.1", "1.2")]
        string MinimumTlsVersionAllowed { get; set; }
        /// <summary>Preferred batch size in Kilobytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Preferred batch size in Kilobytes.",
        SerializedName = @"preferredBatchSizeInKilobytes",
        PossibleTypes = new [] { typeof(int) })]
        int? PreferredBatchSizeInKilobyte { get; set; }

    }
    /// Information about the webhook destination for an event subscription.
    internal partial interface IWebHookEventSubscriptionDestinationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionDestinationInternal
    {
        /// <summary>
        /// The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in
        /// delivery requests.
        /// </summary>
        string AzureActiveDirectoryApplicationIdOrUri { get; set; }
        /// <summary>
        /// The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
        /// </summary>
        string AzureActiveDirectoryTenantId { get; set; }
        /// <summary>Delivery attribute details.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryAttributeMapping> DeliveryAttributeMapping { get; set; }
        /// <summary>
        /// The base URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        string EndpointBaseUrl { get; set; }
        /// <summary>
        /// The URL that represents the endpoint of the destination of an event subscription.
        /// </summary>
        string EndpointUrl { get; set; }
        /// <summary>Maximum number of events per batch.</summary>
        int? MaxEventsPerBatch { get; set; }
        /// <summary>Minimum TLS version that should be supported by webhook endpoint</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("1.0", "1.1", "1.2")]
        string MinimumTlsVersionAllowed { get; set; }
        /// <summary>Preferred batch size in Kilobytes.</summary>
        int? PreferredBatchSizeInKilobyte { get; set; }
        /// <summary>WebHook Properties of the event subscription destination.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IWebHookEventSubscriptionDestinationProperties Property { get; set; }

    }
}