// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>
    /// This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input
    /// JSON schema to the Event Grid event schema.
    /// </summary>
    public partial class JsonInputSchemaMapping :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMapping,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMapping"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMapping __inputSchemaMapping = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.InputSchemaMapping();

        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DataVersionDefaultValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersionDefaultValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersionDefaultValue = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DataVersionSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersionSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersionSourceField = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EventTimeSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTimeSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTimeSourceField = value ?? null; }

        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EventTypeDefaultValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTypeDefaultValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTypeDefaultValue = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EventTypeSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTypeSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTypeSourceField = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).IdSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).IdSourceField = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)__inputSchemaMapping).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal)__inputSchemaMapping).Type = value; }

        /// <summary>Internal Acessors for DataVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.DataVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).DataVersion = value; }

        /// <summary>Internal Acessors for EventTime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.EventTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventTime = value; }

        /// <summary>Internal Acessors for EventType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.EventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).EventType = value; }

        /// <summary>Internal Acessors for Id</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Id = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMappingProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Subject</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.Subject { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Subject; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Subject = value; }

        /// <summary>Internal Acessors for Topic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingInternal.Topic { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Topic; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).Topic = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties _property;

        /// <summary>JSON Properties of the input schema mapping</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.JsonInputSchemaMappingProperties()); set => this._property = value; }

        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SubjectDefaultValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).SubjectDefaultValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).SubjectDefaultValue = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SubjectSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).SubjectSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).SubjectSourceField = value ?? null; }

        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string TopicSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).TopicSourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingPropertiesInternal)Property).TopicSourceField = value ?? null; }

        /// <summary>Type of the custom mapping</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Type { get => "Json"; }

        /// <summary>Creates an new <see cref="JsonInputSchemaMapping" /> instance.</summary>
        public JsonInputSchemaMapping()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__inputSchemaMapping), __inputSchemaMapping);
            await eventListener.AssertObjectIsValid(nameof(__inputSchemaMapping), __inputSchemaMapping);
        }
    }
    /// This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input
    /// JSON schema to the Event Grid event schema.
    public partial interface IJsonInputSchemaMapping :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMapping
    {
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
        SerializedName = @"defaultValue",
        PossibleTypes = new [] { typeof(string) })]
        string DataVersionDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string DataVersionSourceField { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string EventTimeSourceField { get; set; }
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
        SerializedName = @"defaultValue",
        PossibleTypes = new [] { typeof(string) })]
        string EventTypeDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string EventTypeSourceField { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string IdSourceField { get; set; }
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
        SerializedName = @"defaultValue",
        PossibleTypes = new [] { typeof(string) })]
        string SubjectDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string SubjectSourceField { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of a field in the input event schema that's to be used as the source of a mapping.",
        SerializedName = @"sourceField",
        PossibleTypes = new [] { typeof(string) })]
        string TopicSourceField { get; set; }

    }
    /// This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input
    /// JSON schema to the Event Grid event schema.
    internal partial interface IJsonInputSchemaMappingInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IInputSchemaMappingInternal
    {
        /// <summary>The mapping information for the DataVersion property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault DataVersion { get; set; }
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        string DataVersionDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string DataVersionSourceField { get; set; }
        /// <summary>The mapping information for the EventTime property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField EventTime { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string EventTimeSourceField { get; set; }
        /// <summary>The mapping information for the EventType property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault EventType { get; set; }
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        string EventTypeDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string EventTypeSourceField { get; set; }
        /// <summary>The mapping information for the Id property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField Id { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string IdSourceField { get; set; }
        /// <summary>JSON Properties of the input schema mapping</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonInputSchemaMappingProperties Property { get; set; }
        /// <summary>The mapping information for the Subject property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonFieldWithDefault Subject { get; set; }
        /// <summary>
        /// The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified
        /// name in the published JSON event payload.
        /// </summary>
        string SubjectDefaultValue { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string SubjectSourceField { get; set; }
        /// <summary>The mapping information for the Topic property of the Event Grid Event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IJsonField Topic { get; set; }
        /// <summary>
        /// Name of a field in the input event schema that's to be used as the source of a mapping.
        /// </summary>
        string TopicSourceField { get; set; }

    }
}