// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Namespace regenerate share access key request.</summary>
    public partial class NamespaceRegenerateKeyRequest :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceRegenerateKeyRequest,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.INamespaceRegenerateKeyRequestInternal
    {

        /// <summary>Backing field for <see cref="KeyName" /> property.</summary>
        private string _keyName;

        /// <summary>Key name to regenerate key1 or key2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string KeyName { get => this._keyName; set => this._keyName = value; }

        /// <summary>Creates an new <see cref="NamespaceRegenerateKeyRequest" /> instance.</summary>
        public NamespaceRegenerateKeyRequest()
        {

        }
    }
    /// Namespace regenerate share access key request.
    public partial interface INamespaceRegenerateKeyRequest :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>Key name to regenerate key1 or key2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Key name to regenerate key1 or key2.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }

    }
    /// Namespace regenerate share access key request.
    internal partial interface INamespaceRegenerateKeyRequestInternal

    {
        /// <summary>Key name to regenerate key1 or key2.</summary>
        string KeyName { get; set; }

    }
}