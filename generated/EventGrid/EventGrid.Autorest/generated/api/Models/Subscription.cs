// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Event Subscription.</summary>
    public partial class Subscription :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscription,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.Resource();

        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeadLetterDestinationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationEndpointType; }

        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeadLetterDestination DeadLetterDestinationWithResourceIdentityDeadLetterDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentityDeadLetterDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentityDeadLetterDestination = value ?? null /* model class */; }

        /// <summary>Delivery mode of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string DeliveryConfigurationDeliveryMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfigurationDeliveryMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfigurationDeliveryMode = value ?? null; }

        /// <summary>The event delivery schema for the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string EventDeliverySchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).EventDeliverySchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).EventDeliverySchema = value ?? null; }

        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> FilterConfigurationFilter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FilterConfigurationFilter; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FilterConfigurationFilter = value ?? null /* arrayOf */; }

        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FilterConfigurationIncludedEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FilterConfigurationIncludedEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FilterConfigurationIncludedEventType = value ?? null /* arrayOf */; }

        /// <summary>Fully qualified identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Id; }

        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).IdentityType = value ?? null; }

        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).IdentityUserAssignedIdentity = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for DeadLetterDestinationEndpointType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.DeadLetterDestinationEndpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationEndpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationEndpointType = value; }

        /// <summary>Internal Acessors for DeadLetterDestinationWithResourceIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.DeadLetterDestinationWithResourceIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentity = value; }

        /// <summary>
        /// Internal Acessors for DeadLetterDestinationWithResourceIdentityDeadLetterDestination
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeadLetterDestination Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.DeadLetterDestinationWithResourceIdentityDeadLetterDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentityDeadLetterDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeadLetterDestinationWithResourceIdentityDeadLetterDestination = value; }

        /// <summary>Internal Acessors for DeliveryConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryConfiguration Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.DeliveryConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfiguration = value; }

        /// <summary>Internal Acessors for DeliveryConfigurationQueue</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IQueueInfo Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.DeliveryConfigurationQueue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfigurationQueue; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).DeliveryConfigurationQueue = value; }

        /// <summary>Internal Acessors for FiltersConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFiltersConfiguration Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.FiltersConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FiltersConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).FiltersConfiguration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionProperties Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SubscriptionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for QueueDeadLetterDestinationWithResourceIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeadLetterWithResourceIdentity Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.QueueDeadLetterDestinationWithResourceIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueDeadLetterDestinationWithResourceIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueDeadLetterDestinationWithResourceIdentity = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionProperties _property;

        /// <summary>Properties of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SubscriptionProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time
        /// the message was published.
        /// This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
        /// - (n) is replaced by the value of each time element that follows the (n).
        /// - P is the duration (or Period) designator and is always placed at the beginning of the duration.
        /// - Y is the year designator, and it follows the value for the number of years.
        /// - M is the month designator, and it follows the value for the number of months.
        /// - W is the week designator, and it follows the value for the number of weeks.
        /// - D is the day designator, and it follows the value for the number of days.
        /// - T is the time designator, and it precedes the time components.
        /// - H is the hour designator, and it follows the value for the number of hours.
        /// - M is the minute designator, and it follows the value for the number of minutes.
        /// - S is the second designator, and it follows the value for the number of seconds.
        /// This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its
        /// minimum value is 1 minute, and its maximum is determined
        /// by topic’s EventRetentionInDays value. The followings are examples of valid values:
        /// - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
        /// - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? QueueEventTimeToLive { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueEventTimeToLive; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueEventTimeToLive = value ?? default(global::System.TimeSpan); }

        /// <summary>The maximum delivery count of the events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? QueueMaxDeliveryCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueMaxDeliveryCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueMaxDeliveryCount = value ?? default(int); }

        /// <summary>
        /// Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released
        /// or rejected.
        /// If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed),
        /// released or rejected,
        /// the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds
        /// and maximum is 300 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public int? QueueReceiveLockDurationInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueReceiveLockDurationInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionPropertiesInternal)Property).QueueReceiveLockDurationInSecond = value ?? default(int); }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData _systemData;

        /// <summary>The system metadata relating to Event Subscription resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).CreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemDataInternal)SystemData).LastModifiedByType = value ?? null; }

        /// <summary>Type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Subscription" /> instance.</summary>
        public Subscription()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Event Subscription.
    public partial interface ISubscription :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResource
    {
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the endpoint for the dead letter destination",
        SerializedName = @"endpointType",
        PossibleTypes = new [] { typeof(string) })]
        string DeadLetterDestinationEndpointType { get;  }
        /// <summary>Delivery mode of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Delivery mode of the event subscription.",
        SerializedName = @"deliveryMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Queue")]
        string DeliveryConfigurationDeliveryMode { get; set; }
        /// <summary>The event delivery schema for the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The event delivery schema for the event subscription.",
        SerializedName = @"eventDeliverySchema",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("CloudEventSchemaV1_0")]
        string EventDeliverySchema { get; set; }
        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An array of filters that are used for filtering event subscriptions.",
        SerializedName = @"filters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> FilterConfigurationFilter { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
        SerializedName = @"includedEventTypes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FilterConfigurationIncludedEventType { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The user identity associated with the resource.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>Provisioning state of the event subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the event subscription.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed", "AwaitingManualAction", "Deleted", "DeleteFailed", "CreateFailed", "UpdatedFailed")]
        string ProvisioningState { get;  }
        /// <summary>
        /// Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time
        /// the message was published.
        /// This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
        /// - (n) is replaced by the value of each time element that follows the (n).
        /// - P is the duration (or Period) designator and is always placed at the beginning of the duration.
        /// - Y is the year designator, and it follows the value for the number of years.
        /// - M is the month designator, and it follows the value for the number of months.
        /// - W is the week designator, and it follows the value for the number of weeks.
        /// - D is the day designator, and it follows the value for the number of days.
        /// - T is the time designator, and it precedes the time components.
        /// - H is the hour designator, and it follows the value for the number of hours.
        /// - M is the minute designator, and it follows the value for the number of minutes.
        /// - S is the second designator, and it follows the value for the number of seconds.
        /// This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its
        /// minimum value is 1 minute, and its maximum is determined
        /// by topic’s EventRetentionInDays value. The followings are examples of valid values:
        /// - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
        /// - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.
        This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
            - (n) is replaced by the value of each time element that follows the (n).
            - P is the duration (or Period) designator and is always placed at the beginning of the duration.
            - Y is the year designator, and it follows the value for the number of years.
            - M is the month designator, and it follows the value for the number of months.
            - W is the week designator, and it follows the value for the number of weeks.
            - D is the day designator, and it follows the value for the number of days.
            - T is the time designator, and it precedes the time components.
            - H is the hour designator, and it follows the value for the number of hours.
            - M is the minute designator, and it follows the value for the number of minutes.
            - S is the second designator, and it follows the value for the number of seconds.
        This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined
        by topic’s EventRetentionInDays value. The followings are examples of valid values:
            - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
            - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.",
        SerializedName = @"eventTimeToLive",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? QueueEventTimeToLive { get; set; }
        /// <summary>The maximum delivery count of the events.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum delivery count of the events.",
        SerializedName = @"maxDeliveryCount",
        PossibleTypes = new [] { typeof(int) })]
        int? QueueMaxDeliveryCount { get; set; }
        /// <summary>
        /// Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released
        /// or rejected.
        /// If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed),
        /// released or rejected,
        /// the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds
        /// and maximum is 300 seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.
        If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,
        the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
        SerializedName = @"receiveLockDurationInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? QueueReceiveLockDurationInSecond { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }

    }
    /// Event Subscription.
    internal partial interface ISubscriptionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IResourceInternal
    {
        /// <summary>Type of the endpoint for the dead letter destination</summary>
        string DeadLetterDestinationEndpointType { get; set; }
        /// <summary>The identity to use when dead-lettering events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IEventSubscriptionIdentity DeadLetterDestinationWithResourceIdentity { get; set; }
        /// <summary>
        /// Information about the destination where events have to be delivered for the event subscription.
        /// Uses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens
        /// being used during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeadLetterDestination DeadLetterDestinationWithResourceIdentityDeadLetterDestination { get; set; }
        /// <summary>Information about the delivery configuration of the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeliveryConfiguration DeliveryConfiguration { get; set; }
        /// <summary>Delivery mode of the event subscription.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Queue")]
        string DeliveryConfigurationDeliveryMode { get; set; }
        /// <summary>
        /// This property should be populated when deliveryMode is queue and represents information about the queue subscription.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IQueueInfo DeliveryConfigurationQueue { get; set; }
        /// <summary>The event delivery schema for the event subscription.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("CloudEventSchemaV1_0")]
        string EventDeliverySchema { get; set; }
        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> FilterConfigurationFilter { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        System.Collections.Generic.List<string> FilterConfigurationIncludedEventType { get; set; }
        /// <summary>Information about the filter for the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFiltersConfiguration FiltersConfiguration { get; set; }
        /// <summary>
        /// The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity
        /// and a set of user-assigned identities. The type 'None' will remove any identity.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string IdentityType { get; set; }
        /// <summary>The user identity associated with the resource.</summary>
        string IdentityUserAssignedIdentity { get; set; }
        /// <summary>Properties of the event subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISubscriptionProperties Property { get; set; }
        /// <summary>Provisioning state of the event subscription.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("Creating", "Updating", "Deleting", "Succeeded", "Canceled", "Failed", "AwaitingManualAction", "Deleted", "DeleteFailed", "CreateFailed", "UpdatedFailed")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent
        /// to the dead letter destination.
        /// Uses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used
        /// during delivery / dead-lettering.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IDeadLetterWithResourceIdentity QueueDeadLetterDestinationWithResourceIdentity { get; set; }
        /// <summary>
        /// Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time
        /// the message was published.
        /// This duration value is expressed using the following format: \'P(n)Y(n)M(n)DT(n)H(n)M(n)S\', where:
        /// - (n) is replaced by the value of each time element that follows the (n).
        /// - P is the duration (or Period) designator and is always placed at the beginning of the duration.
        /// - Y is the year designator, and it follows the value for the number of years.
        /// - M is the month designator, and it follows the value for the number of months.
        /// - W is the week designator, and it follows the value for the number of weeks.
        /// - D is the day designator, and it follows the value for the number of days.
        /// - T is the time designator, and it precedes the time components.
        /// - H is the hour designator, and it follows the value for the number of hours.
        /// - M is the minute designator, and it follows the value for the number of minutes.
        /// - S is the second designator, and it follows the value for the number of seconds.
        /// This duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its
        /// minimum value is 1 minute, and its maximum is determined
        /// by topic’s EventRetentionInDays value. The followings are examples of valid values:
        /// - \'P0DT23H12M\' or \'PT23H12M\': for duration of 23 hours and 12 minutes.
        /// - \'P1D\' or \'P1DT0H0M0S\': for duration of 1 day.
        /// </summary>
        global::System.TimeSpan? QueueEventTimeToLive { get; set; }
        /// <summary>The maximum delivery count of the events.</summary>
        int? QueueMaxDeliveryCount { get; set; }
        /// <summary>
        /// Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released
        /// or rejected.
        /// If this time elapsed after a message has been received by the client and not transitioned into accepted (not processed),
        /// released or rejected,
        /// the message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds
        /// and maximum is 300 seconds.
        /// </summary>
        int? QueueReceiveLockDurationInSecond { get; set; }
        /// <summary>The system metadata relating to Event Subscription resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }

    }
}