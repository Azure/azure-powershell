// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Extensions;

    /// <summary>Filters configuration for the Event Subscription.</summary>
    public partial class FiltersConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFiltersConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFiltersConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> _filter;

        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> Filter { get => this._filter; set => this._filter = value; }

        /// <summary>Backing field for <see cref="IncludedEventType" /> property.</summary>
        private System.Collections.Generic.List<string> _includedEventType;

        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> IncludedEventType { get => this._includedEventType; set => this._includedEventType = value; }

        /// <summary>Creates an new <see cref="FiltersConfiguration" /> instance.</summary>
        public FiltersConfiguration()
        {

        }
    }
    /// Filters configuration for the Event Subscription.
    public partial interface IFiltersConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.IJsonSerializable
    {
        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"An array of filters that are used for filtering event subscriptions.",
        SerializedName = @"filters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> Filter { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
        SerializedName = @"includedEventTypes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IncludedEventType { get; set; }

    }
    /// Filters configuration for the Event Subscription.
    internal partial interface IFiltersConfigurationInternal

    {
        /// <summary>An array of filters that are used for filtering event subscriptions.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventGrid.Models.IFilter> Filter { get; set; }
        /// <summary>
        /// A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all
        /// default event types, set the IncludedEventTypes to null.
        /// </summary>
        System.Collections.Generic.List<string> IncludedEventType { get; set; }

    }
}