// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.PowerShell;

    /// <summary>The properties of File services in storage account.</summary>
    [System.ComponentModel.TypeConverter(typeof(FileServicePropertiesTypeConverter))]
    public partial class FileServiceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FileServiceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FileServiceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FileServiceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FileServiceProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServiceProperty = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1) content.GetValueForProperty("FileServiceProperty",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServiceProperty, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("FileServicePropertyProtocolSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyProtocolSetting = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings) content.GetValueForProperty("FileServicePropertyProtocolSetting",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyProtocolSetting, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ProtocolSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("FileServicePropertyCor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyCor = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules) content.GetValueForProperty("FileServicePropertyCor",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyCor, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("FileServicePropertyShareDeleteRetentionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyShareDeleteRetentionPolicy = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy) content.GetValueForProperty("FileServicePropertyShareDeleteRetentionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyShareDeleteRetentionPolicy, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.DeleteRetentionPolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CorCorsRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).CorCorsRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule>) content.GetValueForProperty("CorCorsRule",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).CorCorsRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ShareDeleteRetentionPolicyEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyEnabled = (bool?) content.GetValueForProperty("ShareDeleteRetentionPolicyEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ShareDeleteRetentionPolicyDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyDay = (int?) content.GetValueForProperty("ShareDeleteRetentionPolicyDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ShareDeleteRetentionPolicyAllowPermanentDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyAllowPermanentDelete = (bool?) content.GetValueForProperty("ShareDeleteRetentionPolicyAllowPermanentDelete",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyAllowPermanentDelete, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProtocolSettingSmb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ProtocolSettingSmb = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting) content.GetValueForProperty("ProtocolSettingSmb",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ProtocolSettingSmb, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbSettingTypeConverter.ConvertFrom);
            }
            if (content.Contains("SmbMultichannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbMultichannel = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel) content.GetValueForProperty("SmbMultichannel",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbMultichannel, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.MultichannelTypeConverter.ConvertFrom);
            }
            if (content.Contains("SmbVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbVersion = (string) content.GetValueForProperty("SmbVersion",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SmbAuthenticationMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbAuthenticationMethod = (string) content.GetValueForProperty("SmbAuthenticationMethod",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbAuthenticationMethod, global::System.Convert.ToString);
            }
            if (content.Contains("SmbKerberosTicketEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbKerberosTicketEncryption = (string) content.GetValueForProperty("SmbKerberosTicketEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbKerberosTicketEncryption, global::System.Convert.ToString);
            }
            if (content.Contains("SmbChannelEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbChannelEncryption = (string) content.GetValueForProperty("SmbChannelEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbChannelEncryption, global::System.Convert.ToString);
            }
            if (content.Contains("MultichannelEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).MultichannelEnabled = (bool?) content.GetValueForProperty("MultichannelEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).MultichannelEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FileServiceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FileServiceProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServiceProperty = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1) content.GetValueForProperty("FileServiceProperty",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServiceProperty, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceProperties1TypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("FileServicePropertyProtocolSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyProtocolSetting = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings) content.GetValueForProperty("FileServicePropertyProtocolSetting",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyProtocolSetting, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ProtocolSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuTier = (string) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SkuTier, global::System.Convert.ToString);
            }
            if (content.Contains("FileServicePropertyCor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyCor = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules) content.GetValueForProperty("FileServicePropertyCor",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyCor, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("FileServicePropertyShareDeleteRetentionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyShareDeleteRetentionPolicy = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy) content.GetValueForProperty("FileServicePropertyShareDeleteRetentionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).FileServicePropertyShareDeleteRetentionPolicy, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.DeleteRetentionPolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CorCorsRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).CorCorsRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule>) content.GetValueForProperty("CorCorsRule",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).CorCorsRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ShareDeleteRetentionPolicyEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyEnabled = (bool?) content.GetValueForProperty("ShareDeleteRetentionPolicyEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ShareDeleteRetentionPolicyDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyDay = (int?) content.GetValueForProperty("ShareDeleteRetentionPolicyDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ShareDeleteRetentionPolicyAllowPermanentDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyAllowPermanentDelete = (bool?) content.GetValueForProperty("ShareDeleteRetentionPolicyAllowPermanentDelete",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ShareDeleteRetentionPolicyAllowPermanentDelete, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ProtocolSettingSmb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ProtocolSettingSmb = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting) content.GetValueForProperty("ProtocolSettingSmb",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).ProtocolSettingSmb, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbSettingTypeConverter.ConvertFrom);
            }
            if (content.Contains("SmbMultichannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbMultichannel = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel) content.GetValueForProperty("SmbMultichannel",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbMultichannel, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.MultichannelTypeConverter.ConvertFrom);
            }
            if (content.Contains("SmbVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbVersion = (string) content.GetValueForProperty("SmbVersion",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbVersion, global::System.Convert.ToString);
            }
            if (content.Contains("SmbAuthenticationMethod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbAuthenticationMethod = (string) content.GetValueForProperty("SmbAuthenticationMethod",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbAuthenticationMethod, global::System.Convert.ToString);
            }
            if (content.Contains("SmbKerberosTicketEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbKerberosTicketEncryption = (string) content.GetValueForProperty("SmbKerberosTicketEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbKerberosTicketEncryption, global::System.Convert.ToString);
            }
            if (content.Contains("SmbChannelEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbChannelEncryption = (string) content.GetValueForProperty("SmbChannelEncryption",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).SmbChannelEncryption, global::System.Convert.ToString);
            }
            if (content.Contains("MultichannelEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).MultichannelEnabled = (bool?) content.GetValueForProperty("MultichannelEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServicePropertiesInternal)this).MultichannelEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FileServiceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FileServiceProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The properties of File services in storage account.
    [System.ComponentModel.TypeConverter(typeof(FileServicePropertiesTypeConverter))]
    public partial interface IFileServiceProperties

    {

    }
}