// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Execution context of the storage task assignment.</summary>
    public partial class StorageTaskAssignmentExecutionContext :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContext,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal
    {

        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).EndBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).EndBy = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? Interval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Interval = value ?? default(int); }

        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string IntervalUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).IntervalUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).IntervalUnit = value ?? null; }

        /// <summary>Internal Acessors for Target</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal.Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ExecutionTarget()); set { {_target = value;} } }

        /// <summary>Internal Acessors for Trigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal.Trigger { get => (this._trigger = this._trigger ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ExecutionTrigger()); set { {_trigger = value;} } }

        /// <summary>Internal Acessors for TriggerParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITriggerParameters Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IStorageTaskAssignmentExecutionContextInternal.TriggerParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Parameter = value; }

        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartFrom { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).StartFrom; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).StartFrom = value ?? default(global::System.DateTime); }

        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).StartOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).StartOn = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget _target;

        /// <summary>Execution target of the storage task assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ExecutionTarget()); set => this._target = value; }

        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TargetExcludePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTargetInternal)Target).ExcludePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTargetInternal)Target).ExcludePrefix = value ?? null /* arrayOf */; }

        /// <summary>Required list of object prefixes to be included for task execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TargetPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTargetInternal)Target).Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTargetInternal)Target).Prefix = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Trigger" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger _trigger;

        /// <summary>Execution trigger of the storage task assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger Trigger { get => (this._trigger = this._trigger ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ExecutionTrigger()); set => this._trigger = value; }

        /// <summary>The trigger type of the storage task assignment execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string TriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTriggerInternal)Trigger).Type = value ; }

        /// <summary>Creates an new <see cref="StorageTaskAssignmentExecutionContext" /> instance.</summary>
        public StorageTaskAssignmentExecutionContext()
        {

        }
    }
    /// Execution context of the storage task assignment.
    public partial interface IStorageTaskAssignmentExecutionContext :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"endBy",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndBy { get; set; }
        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? Interval { get; set; }
        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"intervalUnit",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Days")]
        string IntervalUnit { get; set; }
        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property should not be present when ExecutionTrigger.properties.type is 'RunOnce'",
        SerializedName = @"startFrom",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartFrom { get; set; }
        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property should not be present when ExecutionTrigger.properties.type is 'OnSchedule'",
        SerializedName = @"startOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartOn { get; set; }
        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes, the exclude prefix will be the determining factor",
        SerializedName = @"excludePrefix",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TargetExcludePrefix { get; set; }
        /// <summary>Required list of object prefixes to be included for task execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Required list of object prefixes to be included for task execution",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TargetPrefix { get; set; }
        /// <summary>The trigger type of the storage task assignment execution</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The trigger type of the storage task assignment execution",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("RunOnce", "OnSchedule")]
        string TriggerType { get; set; }

    }
    /// Execution context of the storage task assignment.
    internal partial interface IStorageTaskAssignmentExecutionContextInternal

    {
        /// <summary>
        /// When to end task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        global::System.DateTime? EndBy { get; set; }
        /// <summary>
        /// Run interval of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        int? Interval { get; set; }
        /// <summary>
        /// Run interval unit of task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this
        /// property should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Days")]
        string IntervalUnit { get; set; }
        /// <summary>
        /// When to start task execution. This is a required field when ExecutionTrigger.properties.type is 'OnSchedule'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'RunOnce'
        /// </summary>
        global::System.DateTime? StartFrom { get; set; }
        /// <summary>
        /// When to start task execution. This is an optional field when ExecutionTrigger.properties.type is 'RunOnce'; this property
        /// should not be present when ExecutionTrigger.properties.type is 'OnSchedule'
        /// </summary>
        global::System.DateTime? StartOn { get; set; }
        /// <summary>Execution target of the storage task assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTarget Target { get; set; }
        /// <summary>
        /// List of object prefixes to be excluded from task execution. If there is a conflict between include and exclude prefixes,
        /// the exclude prefix will be the determining factor
        /// </summary>
        System.Collections.Generic.List<string> TargetExcludePrefix { get; set; }
        /// <summary>Required list of object prefixes to be included for task execution</summary>
        System.Collections.Generic.List<string> TargetPrefix { get; set; }
        /// <summary>Execution trigger of the storage task assignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IExecutionTrigger Trigger { get; set; }
        /// <summary>The trigger parameters of the storage task assignment execution</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ITriggerParameters TriggerParameter { get; set; }
        /// <summary>The trigger type of the storage task assignment execution</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("RunOnce", "OnSchedule")]
        string TriggerType { get; set; }

    }
}