// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The usage of file service in storage account.</summary>
    public partial class FileServiceUsage :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsage,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Resource();

        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? BurstingConstantBurstFloorIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstFloorIops; }

        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? BurstingConstantBurstIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstIoScalar; }

        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? BurstingConstantBurstTimeframeSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstTimeframeSecond; }

        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedBandwidthMiBPerSec; }

        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedIops; }

        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedStorageGiB; }

        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedBandwidthMiBPerSec; }

        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedIops; }

        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareLimitMinProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedStorageGiB; }

        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? FileShareRecommendationBandwidthScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBandwidthScalar; }

        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareRecommendationBaseBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseBandwidthMiBPerSec; }

        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileShareRecommendationBaseIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseIops; }

        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public double? FileShareRecommendationIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationIoScalar; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Id; }

        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareFileShareCount; }

        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedBandwidthMiBPerSec; }

        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedIops; }

        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LiveShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedStorageGiB; }

        /// <summary>Internal Acessors for BurstingConstant</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.BurstingConstant { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstant; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstant = value; }

        /// <summary>Internal Acessors for BurstingConstantBurstFloorIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.BurstingConstantBurstFloorIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstFloorIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstFloorIops = value; }

        /// <summary>Internal Acessors for BurstingConstantBurstIoScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.BurstingConstantBurstIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstIoScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstIoScalar = value; }

        /// <summary>Internal Acessors for BurstingConstantBurstTimeframeSecond</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.BurstingConstantBurstTimeframeSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstTimeframeSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).BurstingConstantBurstTimeframeSecond = value; }

        /// <summary>Internal Acessors for FileShareLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimit = value; }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMaxProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedIops = value; }

        /// <summary>Internal Acessors for FileShareLimitMaxProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMaxProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMinProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMinProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedIops = value; }

        /// <summary>Internal Acessors for FileShareLimitMinProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareLimitMinProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareLimitMinProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for FileShareRecommendation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareRecommendation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendation = value; }

        /// <summary>Internal Acessors for FileShareRecommendationBandwidthScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareRecommendationBandwidthScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBandwidthScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBandwidthScalar = value; }

        /// <summary>Internal Acessors for FileShareRecommendationBaseBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareRecommendationBaseBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for FileShareRecommendationBaseIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareRecommendationBaseIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationBaseIops = value; }

        /// <summary>Internal Acessors for FileShareRecommendationIoScalar</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.FileShareRecommendationIoScalar { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationIoScalar; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).FileShareRecommendationIoScalar = value; }

        /// <summary>Internal Acessors for LiveShareFileShareCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.LiveShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareFileShareCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareFileShareCount = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.LiveShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.LiveShareProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedIops = value; }

        /// <summary>Internal Acessors for LiveShareProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.LiveShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).LiveShareProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceUsageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SoftDeletedShareFileShareCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.SoftDeletedShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareFileShareCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareFileShareCount = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.SoftDeletedShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.SoftDeletedShareProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedIops = value; }

        /// <summary>Internal Acessors for SoftDeletedShareProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.SoftDeletedShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for StorageAccountLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimit = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxFileShare</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountLimitMaxFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxFileShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxFileShare = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedBandwidthMiBPerSec</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedBandwidthMiBPerSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedBandwidthMiBPerSec = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedIops</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountLimitMaxProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedIops; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedIops = value; }

        /// <summary>Internal Acessors for StorageAccountLimitMaxProvisionedStorageGiB</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedStorageGiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedStorageGiB = value; }

        /// <summary>Internal Acessors for StorageAccountUsage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsage = value; }

        /// <summary>Internal Acessors for StorageAccountUsageLiveShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountUsageLiveShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsageLiveShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsageLiveShare = value; }

        /// <summary>Internal Acessors for StorageAccountUsageSoftDeletedShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageInternal.StorageAccountUsageSoftDeletedShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsageSoftDeletedShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountUsageSoftDeletedShare = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageProperties _property;

        /// <summary>
        /// File service usage in storage account including account limits, file share limits and constants used in recommendations
        /// and bursting formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileServiceUsageProperties()); }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareFileShareCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareFileShareCount; }

        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedBandwidthMiBPerSec; }

        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedIops; }

        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? SoftDeletedShareProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).SoftDeletedShareProvisionedStorageGiB; }

        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxFileShare; }

        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedBandwidthMiBPerSec; }

        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedIops { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedIops; }

        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? StorageAccountLimitMaxProvisionedStorageGiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsagePropertiesInternal)Property).StorageAccountLimitMaxProvisionedStorageGiB; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="FileServiceUsage" /> instance.</summary>
        public FileServiceUsage()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The usage of file service in storage account.
    public partial interface IFileServiceUsage :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResource
    {
        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The guaranteed floor of burst IOPS for small file shares.",
        SerializedName = @"burstFloorIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? BurstingConstantBurstFloorIops { get;  }
        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar against provisioned IOPS in the file share included burst IOPS formula.",
        SerializedName = @"burstIOScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? BurstingConstantBurstIoScalar { get;  }
        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.",
        SerializedName = @"burstTimeframeSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? BurstingConstantBurstTimeframeSecond { get;  }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.",
        SerializedName = @"maxProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned IOPS limit for a file share in the storage account.",
        SerializedName = @"maxProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedIops { get;  }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.",
        SerializedName = @"maxProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMaxProvisionedStorageGiB { get;  }
        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.",
        SerializedName = @"minProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned IOPS limit for a file share in the storage account.",
        SerializedName = @"minProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedIops { get;  }
        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.",
        SerializedName = @"minProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareLimitMinProvisionedStorageGiB { get;  }
        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.",
        SerializedName = @"bandwidthScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? FileShareRecommendationBandwidthScalar { get;  }
        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The base bandwidth in the file share provisioned bandwidth recommendation formula.",
        SerializedName = @"baseBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareRecommendationBaseBandwidthMiBPerSec { get;  }
        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The base IOPS in the file share provisioned IOPS recommendation formula.",
        SerializedName = @"baseIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? FileShareRecommendationBaseIops { get;  }
        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The scalar for IO in the file share provisioned IOPS recommendation formula.",
        SerializedName = @"ioScalar",
        PossibleTypes = new [] { typeof(double) })]
        double? FileShareRecommendationIoScalar { get;  }
        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of file shares.",
        SerializedName = @"fileShareCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareFileShareCount { get;  }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned bandwidth in mebibytes per second.",
        SerializedName = @"provisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned IOPS.",
        SerializedName = @"provisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedIops { get;  }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned storage quota in gibibytes.",
        SerializedName = @"provisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? LiveShareProvisionedStorageGiB { get;  }
        /// <summary>The total number of file shares.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of file shares.",
        SerializedName = @"fileShareCount",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareFileShareCount { get;  }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned bandwidth in mebibytes per second.",
        SerializedName = @"provisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The total provisioned IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned IOPS.",
        SerializedName = @"provisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedIops { get;  }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total provisioned storage quota in gibibytes.",
        SerializedName = @"provisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletedShareProvisionedStorageGiB { get;  }
        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum number of file shares limit for the storage account.",
        SerializedName = @"maxFileShares",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxFileShare { get;  }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned bandwidth limit in mebibytes per second for the storage account.",
        SerializedName = @"maxProvisionedBandwidthMiBPerSec",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get;  }
        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned IOPS limit for the storage account.",
        SerializedName = @"maxProvisionedIOPS",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedIops { get;  }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The maximum provisioned storage quota limit in gibibytes for the storage account.",
        SerializedName = @"maxProvisionedStorageGiB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageAccountLimitMaxProvisionedStorageGiB { get;  }

    }
    /// The usage of file service in storage account.
    internal partial interface IFileServiceUsageInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IResourceInternal
    {
        /// <summary>
        /// Constants used for calculating included burst IOPS and maximum burst credits for IOPS for a file share in the storage
        /// account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IBurstingConstants BurstingConstant { get; set; }
        /// <summary>The guaranteed floor of burst IOPS for small file shares.</summary>
        int? BurstingConstantBurstFloorIops { get; set; }
        /// <summary>
        /// The scalar against provisioned IOPS in the file share included burst IOPS formula.
        /// </summary>
        double? BurstingConstantBurstIoScalar { get; set; }
        /// <summary>
        /// The time frame for bursting in seconds in the file share maximum burst credits for IOPS formula.
        /// </summary>
        int? BurstingConstantBurstTimeframeSecond { get; set; }
        /// <summary>
        /// Minimum and maximum provisioned storage, IOPS and bandwidth limits for a file share in the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareLimits FileShareLimit { get; set; }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMaxProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The maximum provisioned IOPS limit for a file share in the storage account.</summary>
        int? FileShareLimitMaxProvisionedIops { get; set; }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMaxProvisionedStorageGiB { get; set; }
        /// <summary>
        /// The minimum provisioned bandwidth limit in mebibytes per second for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMinProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The minimum provisioned IOPS limit for a file share in the storage account.</summary>
        int? FileShareLimitMinProvisionedIops { get; set; }
        /// <summary>
        /// The minimum provisioned storage quota limit in gibibytes for a file share in the storage account.
        /// </summary>
        int? FileShareLimitMinProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Constants used for calculating recommended provisioned IOPS and bandwidth for a file share in the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareRecommendations FileShareRecommendation { get; set; }
        /// <summary>
        /// The scalar for bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        double? FileShareRecommendationBandwidthScalar { get; set; }
        /// <summary>
        /// The base bandwidth in the file share provisioned bandwidth recommendation formula.
        /// </summary>
        int? FileShareRecommendationBaseBandwidthMiBPerSec { get; set; }
        /// <summary>The base IOPS in the file share provisioned IOPS recommendation formula.</summary>
        int? FileShareRecommendationBaseIops { get; set; }
        /// <summary>The scalar for IO in the file share provisioned IOPS recommendation formula.</summary>
        double? FileShareRecommendationIoScalar { get; set; }
        /// <summary>The total number of file shares.</summary>
        int? LiveShareFileShareCount { get; set; }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        int? LiveShareProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The total provisioned IOPS.</summary>
        int? LiveShareProvisionedIops { get; set; }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        int? LiveShareProvisionedStorageGiB { get; set; }
        /// <summary>
        /// File service usage in storage account including account limits, file share limits and constants used in recommendations
        /// and bursting formula.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceUsageProperties Property { get; set; }
        /// <summary>The total number of file shares.</summary>
        int? SoftDeletedShareFileShareCount { get; set; }
        /// <summary>The total provisioned bandwidth in mebibytes per second.</summary>
        int? SoftDeletedShareProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The total provisioned IOPS.</summary>
        int? SoftDeletedShareProvisionedIops { get; set; }
        /// <summary>The total provisioned storage quota in gibibytes.</summary>
        int? SoftDeletedShareProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Maximum provisioned storage, IOPS, bandwidth and number of file shares limits for the storage account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountLimits StorageAccountLimit { get; set; }
        /// <summary>The maximum number of file shares limit for the storage account.</summary>
        int? StorageAccountLimitMaxFileShare { get; set; }
        /// <summary>
        /// The maximum provisioned bandwidth limit in mebibytes per second for the storage account.
        /// </summary>
        int? StorageAccountLimitMaxProvisionedBandwidthMiBPerSec { get; set; }
        /// <summary>The maximum provisioned IOPS limit for the storage account.</summary>
        int? StorageAccountLimitMaxProvisionedIops { get; set; }
        /// <summary>
        /// The maximum provisioned storage quota limit in gibibytes for the storage account.
        /// </summary>
        int? StorageAccountLimitMaxProvisionedStorageGiB { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares and soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsage StorageAccountUsage { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements StorageAccountUsageLiveShare { get; set; }
        /// <summary>
        /// Usage of provisioned storage, IOPS, bandwidth and number of file shares across all live shares or soft-deleted shares
        /// in the account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAccountUsageElements StorageAccountUsageSoftDeletedShare { get; set; }

    }
}