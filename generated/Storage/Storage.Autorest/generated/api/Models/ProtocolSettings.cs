// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Protocol settings for file service</summary>
    public partial class ProtocolSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal
    {

        /// <summary>Internal Acessors for Smb</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal.Smb { get => (this._smb = this._smb ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbSetting()); set { {_smb = value;} } }

        /// <summary>Internal Acessors for SmbMultichannel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal.SmbMultichannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).Multichannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).Multichannel = value; }

        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? MultichannelEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).MultichannelEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).MultichannelEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Smb" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting _smb;

        /// <summary>Setting for SMB protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting Smb { get => (this._smb = this._smb ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbSetting()); set => this._smb = value; }

        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbAuthenticationMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).AuthenticationMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).AuthenticationMethod = value ?? null; }

        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbChannelEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).ChannelEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).ChannelEncryption = value ?? null; }

        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbKerberosTicketEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).KerberosTicketEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).KerberosTicketEncryption = value ?? null; }

        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSettingInternal)Smb).Version = value ?? null; }

        /// <summary>Creates an new <see cref="ProtocolSettings" /> instance.</summary>
        public ProtocolSettings()
        {

        }
    }
    /// Protocol settings for file service
    public partial interface IProtocolSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether multichannel is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MultichannelEnabled { get; set; }
        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.",
        SerializedName = @"authenticationMethods",
        PossibleTypes = new [] { typeof(string) })]
        string SmbAuthenticationMethod { get; set; }
        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.",
        SerializedName = @"channelEncryption",
        PossibleTypes = new [] { typeof(string) })]
        string SmbChannelEncryption { get; set; }
        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'",
        SerializedName = @"kerberosTicketEncryption",
        PossibleTypes = new [] { typeof(string) })]
        string SmbKerberosTicketEncryption { get; set; }
        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.",
        SerializedName = @"versions",
        PossibleTypes = new [] { typeof(string) })]
        string SmbVersion { get; set; }

    }
    /// Protocol settings for file service
    internal partial interface IProtocolSettingsInternal

    {
        /// <summary>Indicates whether multichannel is enabled</summary>
        bool? MultichannelEnabled { get; set; }
        /// <summary>Setting for SMB protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting Smb { get; set; }
        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        string SmbAuthenticationMethod { get; set; }
        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        string SmbChannelEncryption { get; set; }
        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        string SmbKerberosTicketEncryption { get; set; }
        /// <summary>Multichannel setting. Applies to Premium FileStorage only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel SmbMultichannel { get; set; }
        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        string SmbVersion { get; set; }

    }
}