// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The properties of File services in storage account.</summary>
    public partial class FileServiceProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal
    {

        /// <summary>Backing field for <see cref="Cor" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules _cor;

        /// <summary>
        /// Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules Cor { get => (this._cor = this._cor ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRules()); set => this._cor = value; }

        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule> CorCorsRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRulesInternal)Cor).CorsRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRulesInternal)Cor).CorsRule = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Cor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal.Cor { get => (this._cor = this._cor ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.CorsRules()); set { {_cor = value;} } }

        /// <summary>Internal Acessors for ProtocolSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal.ProtocolSetting { get => (this._protocolSetting = this._protocolSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ProtocolSettings()); set { {_protocolSetting = value;} } }

        /// <summary>Internal Acessors for ProtocolSettingSmb</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal.ProtocolSettingSmb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).Smb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).Smb = value; }

        /// <summary>Internal Acessors for ShareDeleteRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal.ShareDeleteRetentionPolicy { get => (this._shareDeleteRetentionPolicy = this._shareDeleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.DeleteRetentionPolicy()); set { {_shareDeleteRetentionPolicy = value;} } }

        /// <summary>Internal Acessors for SmbMultichannel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileServiceProperties1Internal.SmbMultichannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbMultichannel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbMultichannel = value; }

        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? MultichannelEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).MultichannelEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).MultichannelEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ProtocolSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings _protocolSetting;

        /// <summary>Protocol settings for file service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings ProtocolSetting { get => (this._protocolSetting = this._protocolSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ProtocolSettings()); set => this._protocolSetting = value; }

        /// <summary>Backing field for <see cref="ShareDeleteRetentionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy _shareDeleteRetentionPolicy;

        /// <summary>The file service properties for share soft delete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy ShareDeleteRetentionPolicy { get => (this._shareDeleteRetentionPolicy = this._shareDeleteRetentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.DeleteRetentionPolicy()); set => this._shareDeleteRetentionPolicy = value; }

        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ShareDeleteRetentionPolicyAllowPermanentDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).AllowPermanentDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).AllowPermanentDelete = value ?? default(bool); }

        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ShareDeleteRetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).Day = value ?? default(int); }

        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ShareDeleteRetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicyInternal)ShareDeleteRetentionPolicy).Enabled = value ?? default(bool); }

        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbAuthenticationMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbAuthenticationMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbAuthenticationMethod = value ?? null; }

        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbChannelEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbChannelEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbChannelEncryption = value ?? null; }

        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbKerberosTicketEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbKerberosTicketEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbKerberosTicketEncryption = value ?? null; }

        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SmbVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettingsInternal)ProtocolSetting).SmbVersion = value ?? null; }

        /// <summary>Creates an new <see cref="FileServiceProperties1" /> instance.</summary>
        public FileServiceProperties1()
        {

        }
    }
    /// The properties of File services in storage account.
    public partial interface IFileServiceProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The List of CORS rules. You can include up to five CorsRule elements in the request. ",
        SerializedName = @"corsRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule> CorCorsRule { get; set; }
        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether multichannel is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MultichannelEnabled { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
        SerializedName = @"allowPermanentDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ShareDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? ShareDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether DeleteRetentionPolicy is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ShareDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.",
        SerializedName = @"authenticationMethods",
        PossibleTypes = new [] { typeof(string) })]
        string SmbAuthenticationMethod { get; set; }
        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.",
        SerializedName = @"channelEncryption",
        PossibleTypes = new [] { typeof(string) })]
        string SmbChannelEncryption { get; set; }
        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'",
        SerializedName = @"kerberosTicketEncryption",
        PossibleTypes = new [] { typeof(string) })]
        string SmbKerberosTicketEncryption { get; set; }
        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.",
        SerializedName = @"versions",
        PossibleTypes = new [] { typeof(string) })]
        string SmbVersion { get; set; }

    }
    /// The properties of File services in storage account.
    internal partial interface IFileServiceProperties1Internal

    {
        /// <summary>
        /// Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRules Cor { get; set; }
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ICorsRule> CorCorsRule { get; set; }
        /// <summary>Indicates whether multichannel is enabled</summary>
        bool? MultichannelEnabled { get; set; }
        /// <summary>Protocol settings for file service</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IProtocolSettings ProtocolSetting { get; set; }
        /// <summary>Setting for SMB protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbSetting ProtocolSettingSmb { get; set; }
        /// <summary>The file service properties for share soft delete.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDeleteRetentionPolicy ShareDeleteRetentionPolicy { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        bool? ShareDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        int? ShareDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        bool? ShareDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter
        /// ';'.
        /// </summary>
        string SmbAuthenticationMethod { get; set; }
        /// <summary>
        /// SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as
        /// a string with delimiter ';'.
        /// </summary>
        string SmbChannelEncryption { get; set; }
        /// <summary>
        /// Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with
        /// delimiter ';'
        /// </summary>
        string SmbKerberosTicketEncryption { get; set; }
        /// <summary>Multichannel setting. Applies to Premium FileStorage only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel SmbMultichannel { get; set; }
        /// <summary>
        /// SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with
        /// delimiter ';'.
        /// </summary>
        string SmbVersion { get; set; }

    }
}