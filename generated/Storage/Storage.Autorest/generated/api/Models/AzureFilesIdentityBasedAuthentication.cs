// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Settings for Azure Files identity based authentication.</summary>
    public partial class AzureFilesIdentityBasedAuthentication :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAzureFilesIdentityBasedAuthentication,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAzureFilesIdentityBasedAuthenticationInternal
    {

        /// <summary>Backing field for <see cref="ActiveDirectoryProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryProperties _activeDirectoryProperty;

        /// <summary>
        /// Additional information about the directory service. Required if directoryServiceOptions is AD (AD DS authentication).
        /// Optional for directoryServiceOptions AADDS (Entra DS authentication) and AADKERB (Entra authentication).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryProperties ActiveDirectoryProperty { get => (this._activeDirectoryProperty = this._activeDirectoryProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ActiveDirectoryProperties()); set => this._activeDirectoryProperty = value; }

        /// <summary>
        /// Specifies the Active Directory account type for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, samAccountName should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).AccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).AccountType = value ?? null; }

        /// <summary>
        /// Specifies the security identifier (SID) for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyAzureStorageSid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).AzureStorageSid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).AzureStorageSid = value ?? null; }

        /// <summary>
        /// Specifies the domain GUID. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// If directoryServiceOptions is set to AADDS (Entra DS authentication), this property can be omitted. If directoryServiceOptions
        /// is set to AADKERB (Entra authentication), this property is optional; it is needed to support configuration of directory-
        /// and file-level permissions via Windows File Explorer, but is not required for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyDomainGuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainGuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainGuid = value ?? null; }

        /// <summary>
        /// Specifies the primary domain that the AD DNS server is authoritative for. This property is required if directoryServiceOptions
        /// is set to AD (AD DS authentication). If directoryServiceOptions is set to AADDS (Entra DS authentication), providing this
        /// property is optional, as it will be inferred automatically if omitted. If directoryServiceOptions is set to AADKERB (Entra
        /// authentication), this property is optional; it is needed to support configuration of directory- and file-level permissions
        /// via Windows File Explorer, but is not required for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainName = value ?? null; }

        /// <summary>
        /// Specifies the security identifier (SID) of the AD domain. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyDomainSid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainSid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).DomainSid = value ?? null; }

        /// <summary>
        /// Specifies the Active Directory forest to get. If directoryServiceOptions is set to AD (AD DS authentication), this property
        /// is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyForestName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).ForestName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).ForestName = value ?? null; }

        /// <summary>
        /// Specifies the NetBIOS domain name. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertyNetBiosDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).NetBiosDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).NetBiosDomainName = value ?? null; }

        /// <summary>
        /// Specifies the Active Directory SAMAccountName for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, accountType should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ActiveDirectoryPropertySamAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).SamAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryPropertiesInternal)ActiveDirectoryProperty).SamAccountName = value ?? null; }

        /// <summary>Backing field for <see cref="DefaultSharePermission" /> property.</summary>
        private string _defaultSharePermission;

        /// <summary>
        /// Default share permission for users using Kerberos authentication if RBAC role is not assigned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string DefaultSharePermission { get => this._defaultSharePermission; set => this._defaultSharePermission = value; }

        /// <summary>Backing field for <see cref="DirectoryServiceOption" /> property.</summary>
        private string _directoryServiceOption;

        /// <summary>
        /// Indicates the directory service used. Note that this enum may be extended in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string DirectoryServiceOption { get => this._directoryServiceOption; set => this._directoryServiceOption = value; }

        /// <summary>Internal Acessors for ActiveDirectoryProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAzureFilesIdentityBasedAuthenticationInternal.ActiveDirectoryProperty { get => (this._activeDirectoryProperty = this._activeDirectoryProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ActiveDirectoryProperties()); set { {_activeDirectoryProperty = value;} } }

        /// <summary>Internal Acessors for SmbOAuthSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettings Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IAzureFilesIdentityBasedAuthenticationInternal.SmbOAuthSetting { get => (this._smbOAuthSetting = this._smbOAuthSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbOAuthSettings()); set { {_smbOAuthSetting = value;} } }

        /// <summary>Backing field for <see cref="SmbOAuthSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettings _smbOAuthSetting;

        /// <summary>Required for Managed Identities access using OAuth over SMB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettings SmbOAuthSetting { get => (this._smbOAuthSetting = this._smbOAuthSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SmbOAuthSettings()); set => this._smbOAuthSetting = value; }

        /// <summary>
        /// Specifies if managed identities can access SMB shares using OAuth. The default interpretation is false for this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? SmbOAuthSettingIsSmbOauthEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettingsInternal)SmbOAuthSetting).IsSmbOAuthEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettingsInternal)SmbOAuthSetting).IsSmbOAuthEnabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="AzureFilesIdentityBasedAuthentication" /> instance.</summary>
        public AzureFilesIdentityBasedAuthentication()
        {

        }
    }
    /// Settings for Azure Files identity based authentication.
    public partial interface IAzureFilesIdentityBasedAuthentication :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the Active Directory account type for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, samAccountName should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Active Directory account type for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication), this property is optional. If provided, samAccountName should also be provided. For directoryServiceOptions AADDS (Entra DS authentication) or AADKERB (Entra authentication), this property can be omitted.",
        SerializedName = @"accountType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("User", "Computer")]
        string ActiveDirectoryPropertyAccountType { get; set; }
        /// <summary>
        /// Specifies the security identifier (SID) for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the security identifier (SID) for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication), this property is required. Otherwise, it can be omitted.",
        SerializedName = @"azureStorageSid",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyAzureStorageSid { get; set; }
        /// <summary>
        /// Specifies the domain GUID. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// If directoryServiceOptions is set to AADDS (Entra DS authentication), this property can be omitted. If directoryServiceOptions
        /// is set to AADKERB (Entra authentication), this property is optional; it is needed to support configuration of directory-
        /// and file-level permissions via Windows File Explorer, but is not required for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the domain GUID. If directoryServiceOptions is set to AD (AD DS authentication), this property is required. If directoryServiceOptions is set to AADDS (Entra DS authentication), this property can be omitted. If directoryServiceOptions is set to AADKERB (Entra authentication), this property is optional; it is needed to support configuration of directory- and file-level permissions via Windows File Explorer, but is not required for authentication.",
        SerializedName = @"domainGuid",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyDomainGuid { get; set; }
        /// <summary>
        /// Specifies the primary domain that the AD DNS server is authoritative for. This property is required if directoryServiceOptions
        /// is set to AD (AD DS authentication). If directoryServiceOptions is set to AADDS (Entra DS authentication), providing this
        /// property is optional, as it will be inferred automatically if omitted. If directoryServiceOptions is set to AADKERB (Entra
        /// authentication), this property is optional; it is needed to support configuration of directory- and file-level permissions
        /// via Windows File Explorer, but is not required for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the primary domain that the AD DNS server is authoritative for. This property is required if directoryServiceOptions is set to AD (AD DS authentication). If directoryServiceOptions is set to AADDS (Entra DS authentication), providing this property is optional, as it will be inferred automatically if omitted. If directoryServiceOptions is set to AADKERB (Entra authentication), this property is optional; it is needed to support configuration of directory- and file-level permissions via Windows File Explorer, but is not required for authentication.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyDomainName { get; set; }
        /// <summary>
        /// Specifies the security identifier (SID) of the AD domain. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the security identifier (SID) of the AD domain. If directoryServiceOptions is set to AD (AD DS authentication), this property is required. Otherwise, it can be omitted.",
        SerializedName = @"domainSid",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyDomainSid { get; set; }
        /// <summary>
        /// Specifies the Active Directory forest to get. If directoryServiceOptions is set to AD (AD DS authentication), this property
        /// is required. Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Active Directory forest to get. If directoryServiceOptions is set to AD (AD DS authentication), this property is required. Otherwise, it can be omitted.",
        SerializedName = @"forestName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyForestName { get; set; }
        /// <summary>
        /// Specifies the NetBIOS domain name. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// Otherwise, it can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the NetBIOS domain name. If directoryServiceOptions is set to AD (AD DS authentication), this property is required. Otherwise, it can be omitted.",
        SerializedName = @"netBiosDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertyNetBiosDomainName { get; set; }
        /// <summary>
        /// Specifies the Active Directory SAMAccountName for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, accountType should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the Active Directory SAMAccountName for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication), this property is optional. If provided, accountType should also be provided. For directoryServiceOptions AADDS (Entra DS authentication) or AADKERB (Entra authentication), this property can be omitted.",
        SerializedName = @"samAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveDirectoryPropertySamAccountName { get; set; }
        /// <summary>
        /// Default share permission for users using Kerberos authentication if RBAC role is not assigned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
        SerializedName = @"defaultSharePermission",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("None", "StorageFileDataSmbShareReader", "StorageFileDataSmbShareContributor", "StorageFileDataSmbShareElevatedContributor")]
        string DefaultSharePermission { get; set; }
        /// <summary>
        /// Indicates the directory service used. Note that this enum may be extended in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates the directory service used. Note that this enum may be extended in the future.",
        SerializedName = @"directoryServiceOptions",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("None", "AADDS", "AD", "AADKERB")]
        string DirectoryServiceOption { get; set; }
        /// <summary>
        /// Specifies if managed identities can access SMB shares using OAuth. The default interpretation is false for this property.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies if managed identities can access SMB shares using OAuth. The default interpretation is false for this property.",
        SerializedName = @"isSmbOAuthEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmbOAuthSettingIsSmbOauthEnabled { get; set; }

    }
    /// Settings for Azure Files identity based authentication.
    internal partial interface IAzureFilesIdentityBasedAuthenticationInternal

    {
        /// <summary>
        /// Additional information about the directory service. Required if directoryServiceOptions is AD (AD DS authentication).
        /// Optional for directoryServiceOptions AADDS (Entra DS authentication) and AADKERB (Entra authentication).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IActiveDirectoryProperties ActiveDirectoryProperty { get; set; }
        /// <summary>
        /// Specifies the Active Directory account type for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, samAccountName should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("User", "Computer")]
        string ActiveDirectoryPropertyAccountType { get; set; }
        /// <summary>
        /// Specifies the security identifier (SID) for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        string ActiveDirectoryPropertyAzureStorageSid { get; set; }
        /// <summary>
        /// Specifies the domain GUID. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// If directoryServiceOptions is set to AADDS (Entra DS authentication), this property can be omitted. If directoryServiceOptions
        /// is set to AADKERB (Entra authentication), this property is optional; it is needed to support configuration of directory-
        /// and file-level permissions via Windows File Explorer, but is not required for authentication.
        /// </summary>
        string ActiveDirectoryPropertyDomainGuid { get; set; }
        /// <summary>
        /// Specifies the primary domain that the AD DNS server is authoritative for. This property is required if directoryServiceOptions
        /// is set to AD (AD DS authentication). If directoryServiceOptions is set to AADDS (Entra DS authentication), providing this
        /// property is optional, as it will be inferred automatically if omitted. If directoryServiceOptions is set to AADKERB (Entra
        /// authentication), this property is optional; it is needed to support configuration of directory- and file-level permissions
        /// via Windows File Explorer, but is not required for authentication.
        /// </summary>
        string ActiveDirectoryPropertyDomainName { get; set; }
        /// <summary>
        /// Specifies the security identifier (SID) of the AD domain. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is required. Otherwise, it can be omitted.
        /// </summary>
        string ActiveDirectoryPropertyDomainSid { get; set; }
        /// <summary>
        /// Specifies the Active Directory forest to get. If directoryServiceOptions is set to AD (AD DS authentication), this property
        /// is required. Otherwise, it can be omitted.
        /// </summary>
        string ActiveDirectoryPropertyForestName { get; set; }
        /// <summary>
        /// Specifies the NetBIOS domain name. If directoryServiceOptions is set to AD (AD DS authentication), this property is required.
        /// Otherwise, it can be omitted.
        /// </summary>
        string ActiveDirectoryPropertyNetBiosDomainName { get; set; }
        /// <summary>
        /// Specifies the Active Directory SAMAccountName for Azure Storage. If directoryServiceOptions is set to AD (AD DS authentication),
        /// this property is optional. If provided, accountType should also be provided. For directoryServiceOptions AADDS (Entra
        /// DS authentication) or AADKERB (Entra authentication), this property can be omitted.
        /// </summary>
        string ActiveDirectoryPropertySamAccountName { get; set; }
        /// <summary>
        /// Default share permission for users using Kerberos authentication if RBAC role is not assigned.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("None", "StorageFileDataSmbShareReader", "StorageFileDataSmbShareContributor", "StorageFileDataSmbShareElevatedContributor")]
        string DefaultSharePermission { get; set; }
        /// <summary>
        /// Indicates the directory service used. Note that this enum may be extended in the future.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("None", "AADDS", "AD", "AADKERB")]
        string DirectoryServiceOption { get; set; }
        /// <summary>Required for Managed Identities access using OAuth over SMB.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISmbOAuthSettings SmbOAuthSetting { get; set; }
        /// <summary>
        /// Specifies if managed identities can access SMB shares using OAuth. The default interpretation is false for this property.
        /// </summary>
        bool? SmbOAuthSettingIsSmbOauthEnabled { get; set; }

    }
}