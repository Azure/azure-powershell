// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.PowerShell;

    /// <summary>The properties of the file share.</summary>
    [System.ComponentModel.TypeConverter(typeof(FileSharePropertiesTypeConverter))]
    public partial class FileShareProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new FileShareProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new FileShareProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal FileShareProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FileSharePaidBursting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBursting = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting) content.GetValueForProperty("FileSharePaidBursting",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBursting, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesFileSharePaidBurstingTypeConverter.ConvertFrom);
            }
            if (content.Contains("LastModifiedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LastModifiedTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LastModifiedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShareQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareQuota = (int?) content.GetValueForProperty("ShareQuota",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProvisionedIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedIop = (int?) content.GetValueForProperty("ProvisionedIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProvisionedBandwidthMibp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedBandwidthMibp = (int?) content.GetValueForProperty("ProvisionedBandwidthMibp",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedBandwidthMibp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IncludedBurstIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).IncludedBurstIop = (int?) content.GetValueForProperty("IncludedBurstIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).IncludedBurstIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaxBurstCreditsForIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).MaxBurstCreditsForIop = (long?) content.GetValueForProperty("MaxBurstCreditsForIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).MaxBurstCreditsForIop, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NextAllowedQuotaDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedQuotaDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedQuotaDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedQuotaDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextAllowedProvisionedIopsDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedIopsDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedProvisionedIopsDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedIopsDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextAllowedProvisionedBandwidthDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedBandwidthDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedProvisionedBandwidthDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedBandwidthDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).EnabledProtocol = (string) content.GetValueForProperty("EnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).EnabledProtocol, global::System.Convert.ToString);
            }
            if (content.Contains("RootSquash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RootSquash = (string) content.GetValueForProperty("RootSquash",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RootSquash, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("Deleted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Deleted = (bool?) content.GetValueForProperty("Deleted",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Deleted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).DeletedTime = (global::System.DateTime?) content.GetValueForProperty("DeletedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).DeletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemainingRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RemainingRetentionDay = (int?) content.GetValueForProperty("RemainingRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RemainingRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTier = (string) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTier, global::System.Convert.ToString);
            }
            if (content.Contains("AccessTierChangeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierChangeTime = (global::System.DateTime?) content.GetValueForProperty("AccessTierChangeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierChangeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AccessTierStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierStatus = (string) content.GetValueForProperty("AccessTierStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ShareUsageByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareUsageByte = (long?) content.GetValueForProperty("ShareUsageByte",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareUsageByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LeaseStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseStatus = (string) content.GetValueForProperty("LeaseStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseStatus, global::System.Convert.ToString);
            }
            if (content.Contains("LeaseState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseState = (string) content.GetValueForProperty("LeaseState",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseState, global::System.Convert.ToString);
            }
            if (content.Contains("LeaseDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseDuration = (string) content.GetValueForProperty("LeaseDuration",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseDuration, global::System.Convert.ToString);
            }
            if (content.Contains("SignedIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SignedIdentifier = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier>) content.GetValueForProperty("SignedIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SignedIdentifier, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SignedIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SnapshotTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SnapshotTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FileSharePaidBurstingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingEnabled = (bool?) content.GetValueForProperty("FileSharePaidBurstingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileSharePaidBurstingMaxIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxIop = (int?) content.GetValueForProperty("FileSharePaidBurstingMaxIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSharePaidBurstingMaxBandwidthMibp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxBandwidthMibp = (int?) content.GetValueForProperty("FileSharePaidBurstingMaxBandwidthMibp",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxBandwidthMibp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileShareProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal FileShareProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("FileSharePaidBursting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBursting = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting) content.GetValueForProperty("FileSharePaidBursting",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBursting, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesFileSharePaidBurstingTypeConverter.ConvertFrom);
            }
            if (content.Contains("LastModifiedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LastModifiedTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LastModifiedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("ShareQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareQuota = (int?) content.GetValueForProperty("ShareQuota",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProvisionedIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedIop = (int?) content.GetValueForProperty("ProvisionedIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ProvisionedBandwidthMibp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedBandwidthMibp = (int?) content.GetValueForProperty("ProvisionedBandwidthMibp",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ProvisionedBandwidthMibp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IncludedBurstIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).IncludedBurstIop = (int?) content.GetValueForProperty("IncludedBurstIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).IncludedBurstIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaxBurstCreditsForIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).MaxBurstCreditsForIop = (long?) content.GetValueForProperty("MaxBurstCreditsForIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).MaxBurstCreditsForIop, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NextAllowedQuotaDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedQuotaDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedQuotaDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedQuotaDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextAllowedProvisionedIopsDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedIopsDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedProvisionedIopsDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedIopsDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextAllowedProvisionedBandwidthDowngradeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedBandwidthDowngradeTime = (global::System.DateTime?) content.GetValueForProperty("NextAllowedProvisionedBandwidthDowngradeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).NextAllowedProvisionedBandwidthDowngradeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EnabledProtocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).EnabledProtocol = (string) content.GetValueForProperty("EnabledProtocol",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).EnabledProtocol, global::System.Convert.ToString);
            }
            if (content.Contains("RootSquash"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RootSquash = (string) content.GetValueForProperty("RootSquash",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RootSquash, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("Deleted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Deleted = (bool?) content.GetValueForProperty("Deleted",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).Deleted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DeletedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).DeletedTime = (global::System.DateTime?) content.GetValueForProperty("DeletedTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).DeletedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RemainingRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RemainingRetentionDay = (int?) content.GetValueForProperty("RemainingRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).RemainingRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTier = (string) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTier, global::System.Convert.ToString);
            }
            if (content.Contains("AccessTierChangeTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierChangeTime = (global::System.DateTime?) content.GetValueForProperty("AccessTierChangeTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierChangeTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AccessTierStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierStatus = (string) content.GetValueForProperty("AccessTierStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).AccessTierStatus, global::System.Convert.ToString);
            }
            if (content.Contains("ShareUsageByte"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareUsageByte = (long?) content.GetValueForProperty("ShareUsageByte",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).ShareUsageByte, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("LeaseStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseStatus = (string) content.GetValueForProperty("LeaseStatus",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseStatus, global::System.Convert.ToString);
            }
            if (content.Contains("LeaseState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseState = (string) content.GetValueForProperty("LeaseState",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseState, global::System.Convert.ToString);
            }
            if (content.Contains("LeaseDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseDuration = (string) content.GetValueForProperty("LeaseDuration",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).LeaseDuration, global::System.Convert.ToString);
            }
            if (content.Contains("SignedIdentifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SignedIdentifier = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier>) content.GetValueForProperty("SignedIdentifier",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SignedIdentifier, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier>(__y, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.SignedIdentifierTypeConverter.ConvertFrom));
            }
            if (content.Contains("SnapshotTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SnapshotTime = (global::System.DateTime?) content.GetValueForProperty("SnapshotTime",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).SnapshotTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FileSharePaidBurstingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingEnabled = (bool?) content.GetValueForProperty("FileSharePaidBurstingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileSharePaidBurstingMaxIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxIop = (int?) content.GetValueForProperty("FileSharePaidBurstingMaxIop",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSharePaidBurstingMaxBandwidthMibp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxBandwidthMibp = (int?) content.GetValueForProperty("FileSharePaidBurstingMaxBandwidthMibp",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal)this).FileSharePaidBurstingMaxBandwidthMibp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="FileShareProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="FileShareProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The properties of the file share.
    [System.ComponentModel.TypeConverter(typeof(FileSharePropertiesTypeConverter))]
    public partial interface IFileShareProperties

    {

    }
}