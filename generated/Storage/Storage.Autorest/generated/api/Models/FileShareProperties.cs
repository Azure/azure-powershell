// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The properties of the file share.</summary>
    public partial class FileShareProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileShareProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccessTier" /> property.</summary>
        private string _accessTier;

        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string AccessTier { get => this._accessTier; set => this._accessTier = value; }

        /// <summary>Backing field for <see cref="AccessTierChangeTime" /> property.</summary>
        private global::System.DateTime? _accessTierChangeTime;

        /// <summary>Indicates the last modification time for share access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? AccessTierChangeTime { get => this._accessTierChangeTime; }

        /// <summary>Backing field for <see cref="AccessTierStatus" /> property.</summary>
        private string _accessTierStatus;

        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string AccessTierStatus { get => this._accessTierStatus; }

        /// <summary>Backing field for <see cref="Deleted" /> property.</summary>
        private bool? _deleted;

        /// <summary>Indicates whether the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? Deleted { get => this._deleted; }

        /// <summary>Backing field for <see cref="DeletedTime" /> property.</summary>
        private global::System.DateTime? _deletedTime;

        /// <summary>The deleted time if the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? DeletedTime { get => this._deletedTime; }

        /// <summary>Backing field for <see cref="EnabledProtocol" /> property.</summary>
        private string _enabledProtocol;

        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string EnabledProtocol { get => this._enabledProtocol; set => this._enabledProtocol = value; }

        /// <summary>Backing field for <see cref="FileSharePaidBursting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting _fileSharePaidBursting;

        /// <summary>File Share Paid Bursting properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting FileSharePaidBursting { get => (this._fileSharePaidBursting = this._fileSharePaidBursting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesFileSharePaidBursting()); set => this._fileSharePaidBursting = value; }

        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? FileSharePaidBurstingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingEnabled = value ?? default(bool); }

        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileSharePaidBurstingMaxBandwidthMibp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingMaxBandwidthMibp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingMaxBandwidthMibp = value ?? default(int); }

        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? FileSharePaidBurstingMaxIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingMaxIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBurstingInternal)FileSharePaidBursting).PaidBurstingMaxIop = value ?? default(int); }

        /// <summary>Backing field for <see cref="IncludedBurstIop" /> property.</summary>
        private int? _includedBurstIop;

        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? IncludedBurstIop { get => this._includedBurstIop; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>Returns the date and time the share was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Backing field for <see cref="LeaseDuration" /> property.</summary>
        private string _leaseDuration;

        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string LeaseDuration { get => this._leaseDuration; }

        /// <summary>Backing field for <see cref="LeaseState" /> property.</summary>
        private string _leaseState;

        /// <summary>Lease state of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string LeaseState { get => this._leaseState; }

        /// <summary>Backing field for <see cref="LeaseStatus" /> property.</summary>
        private string _leaseStatus;

        /// <summary>The lease status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string LeaseStatus { get => this._leaseStatus; }

        /// <summary>Backing field for <see cref="MaxBurstCreditsForIop" /> property.</summary>
        private long? _maxBurstCreditsForIop;

        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public long? MaxBurstCreditsForIop { get => this._maxBurstCreditsForIop; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata _metadata;

        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesMetadata()); set => this._metadata = value; }

        /// <summary>Internal Acessors for AccessTierChangeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.AccessTierChangeTime { get => this._accessTierChangeTime; set { {_accessTierChangeTime = value;} } }

        /// <summary>Internal Acessors for AccessTierStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.AccessTierStatus { get => this._accessTierStatus; set { {_accessTierStatus = value;} } }

        /// <summary>Internal Acessors for Deleted</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.Deleted { get => this._deleted; set { {_deleted = value;} } }

        /// <summary>Internal Acessors for DeletedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.DeletedTime { get => this._deletedTime; set { {_deletedTime = value;} } }

        /// <summary>Internal Acessors for FileSharePaidBursting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.FileSharePaidBursting { get => (this._fileSharePaidBursting = this._fileSharePaidBursting ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.FileSharePropertiesFileSharePaidBursting()); set { {_fileSharePaidBursting = value;} } }

        /// <summary>Internal Acessors for IncludedBurstIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.IncludedBurstIop { get => this._includedBurstIop; set { {_includedBurstIop = value;} } }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Internal Acessors for LeaseDuration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.LeaseDuration { get => this._leaseDuration; set { {_leaseDuration = value;} } }

        /// <summary>Internal Acessors for LeaseState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.LeaseState { get => this._leaseState; set { {_leaseState = value;} } }

        /// <summary>Internal Acessors for LeaseStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.LeaseStatus { get => this._leaseStatus; set { {_leaseStatus = value;} } }

        /// <summary>Internal Acessors for MaxBurstCreditsForIop</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.MaxBurstCreditsForIop { get => this._maxBurstCreditsForIop; set { {_maxBurstCreditsForIop = value;} } }

        /// <summary>Internal Acessors for NextAllowedProvisionedBandwidthDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.NextAllowedProvisionedBandwidthDowngradeTime { get => this._nextAllowedProvisionedBandwidthDowngradeTime; set { {_nextAllowedProvisionedBandwidthDowngradeTime = value;} } }

        /// <summary>Internal Acessors for NextAllowedProvisionedIopsDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.NextAllowedProvisionedIopsDowngradeTime { get => this._nextAllowedProvisionedIopsDowngradeTime; set { {_nextAllowedProvisionedIopsDowngradeTime = value;} } }

        /// <summary>Internal Acessors for NextAllowedQuotaDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.NextAllowedQuotaDowngradeTime { get => this._nextAllowedQuotaDowngradeTime; set { {_nextAllowedQuotaDowngradeTime = value;} } }

        /// <summary>Internal Acessors for RemainingRetentionDay</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.RemainingRetentionDay { get => this._remainingRetentionDay; set { {_remainingRetentionDay = value;} } }

        /// <summary>Internal Acessors for ShareUsageByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.ShareUsageByte { get => this._shareUsageByte; set { {_shareUsageByte = value;} } }

        /// <summary>Internal Acessors for SnapshotTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.SnapshotTime { get => this._snapshotTime; set { {_snapshotTime = value;} } }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>
        /// Backing field for <see cref="NextAllowedProvisionedBandwidthDowngradeTime" /> property.
        /// </summary>
        private global::System.DateTime? _nextAllowedProvisionedBandwidthDowngradeTime;

        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get => this._nextAllowedProvisionedBandwidthDowngradeTime; }

        /// <summary>
        /// Backing field for <see cref="NextAllowedProvisionedIopsDowngradeTime" /> property.
        /// </summary>
        private global::System.DateTime? _nextAllowedProvisionedIopsDowngradeTime;

        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get => this._nextAllowedProvisionedIopsDowngradeTime; }

        /// <summary>Backing field for <see cref="NextAllowedQuotaDowngradeTime" /> property.</summary>
        private global::System.DateTime? _nextAllowedQuotaDowngradeTime;

        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? NextAllowedQuotaDowngradeTime { get => this._nextAllowedQuotaDowngradeTime; }

        /// <summary>Backing field for <see cref="ProvisionedBandwidthMibp" /> property.</summary>
        private int? _provisionedBandwidthMibp;

        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? ProvisionedBandwidthMibp { get => this._provisionedBandwidthMibp; set => this._provisionedBandwidthMibp = value; }

        /// <summary>Backing field for <see cref="ProvisionedIop" /> property.</summary>
        private int? _provisionedIop;

        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? ProvisionedIop { get => this._provisionedIop; set => this._provisionedIop = value; }

        /// <summary>Backing field for <see cref="RemainingRetentionDay" /> property.</summary>
        private int? _remainingRetentionDay;

        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? RemainingRetentionDay { get => this._remainingRetentionDay; }

        /// <summary>Backing field for <see cref="RootSquash" /> property.</summary>
        private string _rootSquash;

        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string RootSquash { get => this._rootSquash; set => this._rootSquash = value; }

        /// <summary>Backing field for <see cref="ShareQuota" /> property.</summary>
        private int? _shareQuota;

        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public int? ShareQuota { get => this._shareQuota; set => this._shareQuota = value; }

        /// <summary>Backing field for <see cref="ShareUsageByte" /> property.</summary>
        private long? _shareUsageByte;

        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public long? ShareUsageByte { get => this._shareUsageByte; }

        /// <summary>Backing field for <see cref="SignedIdentifier" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier> _signedIdentifier;

        /// <summary>List of stored access policies specified on the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier> SignedIdentifier { get => this._signedIdentifier; set => this._signedIdentifier = value; }

        /// <summary>Backing field for <see cref="SnapshotTime" /> property.</summary>
        private global::System.DateTime? _snapshotTime;

        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public global::System.DateTime? SnapshotTime { get => this._snapshotTime; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>The version of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="FileShareProperties" /> instance.</summary>
        public FileShareProperties()
        {

        }
    }
    /// The properties of the file share.
    public partial interface IFileShareProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
        SerializedName = @"accessTier",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("TransactionOptimized", "Hot", "Cool", "Premium")]
        string AccessTier { get; set; }
        /// <summary>Indicates the last modification time for share access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the last modification time for share access tier.",
        SerializedName = @"accessTierChangeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AccessTierChangeTime { get;  }
        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates if there is a pending transition for access tier.",
        SerializedName = @"accessTierStatus",
        PossibleTypes = new [] { typeof(string) })]
        string AccessTierStatus { get;  }
        /// <summary>Indicates whether the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates whether the share was deleted.",
        SerializedName = @"deleted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Deleted { get;  }
        /// <summary>The deleted time if the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The deleted time if the share was deleted.",
        SerializedName = @"deletedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DeletedTime { get;  }
        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The authentication protocol that is used for the file share. Can only be specified when creating a share.",
        SerializedName = @"enabledProtocols",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("SMB", "NFS")]
        string EnabledProtocol { get; set; }
        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type.",
        SerializedName = @"paidBurstingEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FileSharePaidBurstingEnabled { get; set; }
        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share.",
        SerializedName = @"paidBurstingMaxBandwidthMibps",
        PossibleTypes = new [] { typeof(int) })]
        int? FileSharePaidBurstingMaxBandwidthMibp { get; set; }
        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.",
        SerializedName = @"paidBurstingMaxIops",
        PossibleTypes = new [] { typeof(int) })]
        int? FileSharePaidBurstingMaxIop { get; set; }
        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"includedBurstIops",
        PossibleTypes = new [] { typeof(int) })]
        int? IncludedBurstIop { get;  }
        /// <summary>Returns the date and time the share was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Returns the date and time the share was last modified.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.",
        SerializedName = @"leaseDuration",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Infinite", "Fixed")]
        string LeaseDuration { get;  }
        /// <summary>Lease state of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Lease state of the share.",
        SerializedName = @"leaseState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Available", "Leased", "Expired", "Breaking", "Broken")]
        string LeaseState { get;  }
        /// <summary>The lease status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The lease status of the share.",
        SerializedName = @"leaseStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Locked", "Unlocked")]
        string LeaseStatus { get;  }
        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"maxBurstCreditsForIops",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxBurstCreditsForIop { get;  }
        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A name-value pair to associate with the share as metadata.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata Metadata { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"nextAllowedProvisionedBandwidthDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get;  }
        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"nextAllowedProvisionedIopsDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get;  }
        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares created under Files Provisioned v1 SSD and Files Provisioned v2 account type",
        SerializedName = @"nextAllowedQuotaDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedQuotaDowngradeTime { get;  }
        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth.",
        SerializedName = @"provisionedBandwidthMibps",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedBandwidthMibp { get; set; }
        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.",
        SerializedName = @"provisionedIops",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedIop { get; set; }
        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Remaining retention days for share that was soft deleted.",
        SerializedName = @"remainingRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? RemainingRetentionDay { get;  }
        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The property is for NFS share only. The default is NoRootSquash.",
        SerializedName = @"rootSquash",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("NoRootSquash", "RootSquash", "AllSquash")]
        string RootSquash { get; set; }
        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.",
        SerializedName = @"shareQuota",
        PossibleTypes = new [] { typeof(int) })]
        int? ShareQuota { get; set; }
        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.",
        SerializedName = @"shareUsageBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ShareUsageByte { get;  }
        /// <summary>List of stored access policies specified on the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of stored access policies specified on the share.",
        SerializedName = @"signedIdentifiers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier> SignedIdentifier { get; set; }
        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Creation time of share snapshot returned in the response of list shares with expand param ""snapshots"".",
        SerializedName = @"snapshotTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SnapshotTime { get;  }
        /// <summary>The version of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The version of the share.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// The properties of the file share.
    internal partial interface IFileSharePropertiesInternal

    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("TransactionOptimized", "Hot", "Cool", "Premium")]
        string AccessTier { get; set; }
        /// <summary>Indicates the last modification time for share access tier.</summary>
        global::System.DateTime? AccessTierChangeTime { get; set; }
        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        string AccessTierStatus { get; set; }
        /// <summary>Indicates whether the share was deleted.</summary>
        bool? Deleted { get; set; }
        /// <summary>The deleted time if the share was deleted.</summary>
        global::System.DateTime? DeletedTime { get; set; }
        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("SMB", "NFS")]
        string EnabledProtocol { get; set; }
        /// <summary>File Share Paid Bursting properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesFileSharePaidBursting FileSharePaidBursting { get; set; }
        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        bool? FileSharePaidBurstingEnabled { get; set; }
        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        int? FileSharePaidBurstingMaxBandwidthMibp { get; set; }
        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        int? FileSharePaidBurstingMaxIop { get; set; }
        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        int? IncludedBurstIop { get; set; }
        /// <summary>Returns the date and time the share was last modified.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Infinite", "Fixed")]
        string LeaseDuration { get; set; }
        /// <summary>Lease state of the share.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Available", "Leased", "Expired", "Breaking", "Broken")]
        string LeaseState { get; set; }
        /// <summary>The lease status of the share.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("Locked", "Unlocked")]
        string LeaseStatus { get; set; }
        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        long? MaxBurstCreditsForIop { get; set; }
        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IFileSharePropertiesMetadata Metadata { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        global::System.DateTime? NextAllowedQuotaDowngradeTime { get; set; }
        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        int? ProvisionedBandwidthMibp { get; set; }
        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        int? ProvisionedIop { get; set; }
        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        int? RemainingRetentionDay { get; set; }
        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Storage.PSArgumentCompleterAttribute("NoRootSquash", "RootSquash", "AllSquash")]
        string RootSquash { get; set; }
        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        int? ShareQuota { get; set; }
        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        long? ShareUsageByte { get; set; }
        /// <summary>List of stored access policies specified on the share.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.ISignedIdentifier> SignedIdentifier { get; set; }
        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        global::System.DateTime? SnapshotTime { get; set; }
        /// <summary>The version of the share.</summary>
        string Version { get; set; }

    }
}