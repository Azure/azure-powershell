// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Multichannel setting. Applies to Premium FileStorage only.</summary>
    public partial class Multichannel :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannel,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IMultichannelInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Creates an new <see cref="Multichannel" /> instance.</summary>
        public Multichannel()
        {

        }
    }
    /// Multichannel setting. Applies to Premium FileStorage only.
    public partial interface IMultichannel :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether multichannel is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether multichannel is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }

    }
    /// Multichannel setting. Applies to Premium FileStorage only.
    internal partial interface IMultichannelInternal

    {
        /// <summary>Indicates whether multichannel is enabled</summary>
        bool? Enabled { get; set; }

    }
}