// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>
    /// Dual-stack endpoint preference defines whether IPv6 endpoints are going to be published.
    /// </summary>
    public partial class DualStackEndpointPreference :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDualStackEndpointPreference,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IDualStackEndpointPreferenceInternal
    {

        /// <summary>Backing field for <see cref="PublishIpv6Endpoint" /> property.</summary>
        private bool? _publishIpv6Endpoint;

        /// <summary>
        /// A boolean flag which indicates whether IPv6 storage endpoints are to be published.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public bool? PublishIpv6Endpoint { get => this._publishIpv6Endpoint; set => this._publishIpv6Endpoint = value; }

        /// <summary>Creates an new <see cref="DualStackEndpointPreference" /> instance.</summary>
        public DualStackEndpointPreference()
        {

        }
    }
    /// Dual-stack endpoint preference defines whether IPv6 endpoints are going to be published.
    public partial interface IDualStackEndpointPreference :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A boolean flag which indicates whether IPv6 storage endpoints are to be published.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A boolean flag which indicates whether IPv6 storage endpoints are to be published.",
        SerializedName = @"publishIpv6Endpoint",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PublishIpv6Endpoint { get; set; }

    }
    /// Dual-stack endpoint preference defines whether IPv6 endpoints are going to be published.
    internal partial interface IDualStackEndpointPreferenceInternal

    {
        /// <summary>
        /// A boolean flag which indicates whether IPv6 storage endpoints are to be published.
        /// </summary>
        bool? PublishIpv6Endpoint { get; set; }

    }
}