// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Setting for NFS protocol</summary>
    public partial class NfsSetting :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.INfsSetting,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.INfsSettingInternal
    {

        /// <summary>Backing field for <see cref="EncryptionInTransit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransit _encryptionInTransit;

        /// <summary>Encryption in transit setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransit EncryptionInTransit { get => (this._encryptionInTransit = this._encryptionInTransit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.EncryptionInTransit()); set => this._encryptionInTransit = value; }

        /// <summary>Indicates whether encryption in transit is required</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? EncryptionInTransitRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransitInternal)EncryptionInTransit).Required; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransitInternal)EncryptionInTransit).Required = value ?? default(bool); }

        /// <summary>Internal Acessors for EncryptionInTransit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransit Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.INfsSettingInternal.EncryptionInTransit { get => (this._encryptionInTransit = this._encryptionInTransit ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.EncryptionInTransit()); set { {_encryptionInTransit = value;} } }

        /// <summary>Creates an new <see cref="NfsSetting" /> instance.</summary>
        public NfsSetting()
        {

        }
    }
    /// Setting for NFS protocol
    public partial interface INfsSetting :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether encryption in transit is required</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether encryption in transit is required",
        SerializedName = @"required",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionInTransitRequired { get; set; }

    }
    /// Setting for NFS protocol
    internal partial interface INfsSettingInternal

    {
        /// <summary>Encryption in transit setting.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.IEncryptionInTransit EncryptionInTransit { get; set; }
        /// <summary>Indicates whether encryption in transit is required</summary>
        bool? EncryptionInTransitRequired { get; set; }

    }
}