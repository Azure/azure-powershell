// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Properties of the auto export job.</summary>
    public partial class AutoExportJobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdminStatus" /> property.</summary>
        private string _adminStatus;

        /// <summary>
        /// The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable'
        /// will disable the current active auto export job. By default it is set to 'Enable'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string AdminStatus { get => this._adminStatus; set => this._adminStatus = value; }

        /// <summary>Backing field for <see cref="AutoExportPrefix" /> property.</summary>
        private System.Collections.Generic.List<string> _autoExportPrefix;

        /// <summary>
        /// An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number
        /// of maximum allowed paths for now is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AutoExportPrefix { get => this._autoExportPrefix; set => this._autoExportPrefix = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatus Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.AutoExportJobPropertiesStatus()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusCode = value ?? null; }

        /// <summary>Internal Acessors for StatusCurrentIterationFilesDiscovered</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCurrentIterationFilesDiscovered { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesDiscovered; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesDiscovered = value ?? default(long); }

        /// <summary>Internal Acessors for StatusCurrentIterationFilesExported</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCurrentIterationFilesExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesExported; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesExported = value ?? default(long); }

        /// <summary>Internal Acessors for StatusCurrentIterationFilesFailed</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCurrentIterationFilesFailed { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesFailed; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesFailed = value ?? default(long); }

        /// <summary>Internal Acessors for StatusCurrentIterationMiBDiscovered</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCurrentIterationMiBDiscovered { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBDiscovered; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBDiscovered = value ?? default(long); }

        /// <summary>Internal Acessors for StatusCurrentIterationMiBExported</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusCurrentIterationMiBExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBExported; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBExported = value ?? default(long); }

        /// <summary>Internal Acessors for StatusExportIterationCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusExportIterationCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).ExportIterationCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).ExportIterationCount = value ?? default(int); }

        /// <summary>Internal Acessors for StatusLastCompletionTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusLastCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastCompletionTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastCompletionTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for StatusLastStartedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusLastStartedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastStartedTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastStartedTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for StatusLastSuccessfulIterationCompletionTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusLastSuccessfulIterationCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastSuccessfulIterationCompletionTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastSuccessfulIterationCompletionTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for StatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusMessage = value ?? null; }

        /// <summary>Internal Acessors for StatusState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).State = value ?? null; }

        /// <summary>Internal Acessors for StatusTotalFilesExported</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusTotalFilesExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesExported; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesExported = value ?? default(long); }

        /// <summary>Internal Acessors for StatusTotalFilesFailed</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusTotalFilesFailed { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesFailed; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesFailed = value ?? default(long); }

        /// <summary>Internal Acessors for StatusTotalMiBExported</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesInternal.StatusTotalMiBExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalMiBExported; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalMiBExported = value ?? default(long); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>ARM provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatus _status;

        /// <summary>The status of the auto export</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.AutoExportJobPropertiesStatus()); }

        /// <summary>Server-defined status code for auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string StatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusCode; }

        /// <summary>
        /// Files discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusCurrentIterationFilesDiscovered { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesDiscovered; }

        /// <summary>Files that have been exported in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusCurrentIterationFilesExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesExported; }

        /// <summary>Files failed to export in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusCurrentIterationFilesFailed { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationFilesFailed; }

        /// <summary>
        /// Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusCurrentIterationMiBDiscovered { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBDiscovered; }

        /// <summary>Data (in MiB) that have been exported in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusCurrentIterationMiBExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).CurrentIterationMiBExported; }

        /// <summary>Number of iterations completed since the start of the export.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public int? StatusExportIterationCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).ExportIterationCount; }

        /// <summary>The time (in UTC) of the last completed auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusLastCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastCompletionTimeUtc; }

        /// <summary>The time (in UTC) the latest auto export job started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusLastStartedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastStartedTimeUtc; }

        /// <summary>
        /// Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public global::System.DateTime? StatusLastSuccessfulIterationCompletionTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).LastSuccessfulIterationCompletionTimeUtc; }

        /// <summary>Server-defined status message for auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).StatusMessage; }

        /// <summary>
        /// The operational state of auto export. InProgress indicates the export is running. Disabling indicates the user has requested
        /// to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled. DisableFailed
        /// indicates the disabling has failed. Failed means the export was unable to continue, due to a fatal error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string StatusState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).State; }

        /// <summary>
        /// Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusTotalFilesExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesExported; }

        /// <summary>
        /// Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may
        /// be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusTotalFilesFailed { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalFilesFailed; }

        /// <summary>
        /// Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public long? StatusTotalMiBExported { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatusInternal)Status).TotalMiBExported; }

        /// <summary>Creates an new <see cref="AutoExportJobProperties" /> instance.</summary>
        public AutoExportJobProperties()
        {

        }
    }
    /// Properties of the auto export job.
    public partial interface IAutoExportJobProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable'
        /// will disable the current active auto export job. By default it is set to 'Enable'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto export job. By default it is set to 'Enable'.",
        SerializedName = @"adminStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("Enable", "Disable")]
        string AdminStatus { get; set; }
        /// <summary>
        /// An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number
        /// of maximum allowed paths for now is 1.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths for now is 1.",
        SerializedName = @"autoExportPrefixes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AutoExportPrefix { get; set; }
        /// <summary>ARM provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ARM provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("Succeeded", "Failed", "Creating", "Deleting", "Updating", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>Server-defined status code for auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Server-defined status code for auto export job.",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string StatusCode { get;  }
        /// <summary>
        /// Files discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Files discovered for export in current iteration. It may increase while more export items are found.",
        SerializedName = @"currentIterationFilesDiscovered",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusCurrentIterationFilesDiscovered { get;  }
        /// <summary>Files that have been exported in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Files that have been exported in current iteration.",
        SerializedName = @"currentIterationFilesExported",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusCurrentIterationFilesExported { get;  }
        /// <summary>Files failed to export in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Files failed to export in current iteration.",
        SerializedName = @"currentIterationFilesFailed",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusCurrentIterationFilesFailed { get;  }
        /// <summary>
        /// Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.",
        SerializedName = @"currentIterationMiBDiscovered",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusCurrentIterationMiBDiscovered { get;  }
        /// <summary>Data (in MiB) that have been exported in current iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Data (in MiB) that have been exported in current iteration.",
        SerializedName = @"currentIterationMiBExported",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusCurrentIterationMiBExported { get;  }
        /// <summary>Number of iterations completed since the start of the export.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of iterations completed since the start of the export.",
        SerializedName = @"exportIterationCount",
        PossibleTypes = new [] { typeof(int) })]
        int? StatusExportIterationCount { get;  }
        /// <summary>The time (in UTC) of the last completed auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time (in UTC) of the last completed auto export job.",
        SerializedName = @"lastCompletionTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusLastCompletionTimeUtc { get;  }
        /// <summary>The time (in UTC) the latest auto export job started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time (in UTC) the latest auto export job started.",
        SerializedName = @"lastStartedTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusLastStartedTimeUtc { get;  }
        /// <summary>
        /// Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.",
        SerializedName = @"lastSuccessfulIterationCompletionTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusLastSuccessfulIterationCompletionTimeUtc { get;  }
        /// <summary>Server-defined status message for auto export job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Server-defined status message for auto export job.",
        SerializedName = @"statusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get;  }
        /// <summary>
        /// The operational state of auto export. InProgress indicates the export is running. Disabling indicates the user has requested
        /// to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled. DisableFailed
        /// indicates the disabling has failed. Failed means the export was unable to continue, due to a fatal error.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The operational state of auto export. InProgress indicates the export is running.  Disabling indicates the user has requested to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled.  DisableFailed indicates the disabling has failed.  Failed means the export was unable to continue, due to a fatal error.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("InProgress", "Disabling", "Disabled", "DisableFailed", "Failed")]
        string StatusState { get;  }
        /// <summary>
        /// Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
        SerializedName = @"totalFilesExported",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusTotalFilesExported { get;  }
        /// <summary>
        /// Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may
        /// be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may be counted repeatedly.",
        SerializedName = @"totalFilesFailed",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusTotalFilesFailed { get;  }
        /// <summary>
        /// Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.",
        SerializedName = @"totalMiBExported",
        PossibleTypes = new [] { typeof(long) })]
        long? StatusTotalMiBExported { get;  }

    }
    /// Properties of the auto export job.
    internal partial interface IAutoExportJobPropertiesInternal

    {
        /// <summary>
        /// The administrative status of the auto export job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable'
        /// will disable the current active auto export job. By default it is set to 'Enable'.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("Enable", "Disable")]
        string AdminStatus { get; set; }
        /// <summary>
        /// An array of blob paths/prefixes that get auto exported to the cluster namespace. It has '/' as the default value. Number
        /// of maximum allowed paths for now is 1.
        /// </summary>
        System.Collections.Generic.List<string> AutoExportPrefix { get; set; }
        /// <summary>ARM provisioning state.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("Succeeded", "Failed", "Creating", "Deleting", "Updating", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>The status of the auto export</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.IAutoExportJobPropertiesStatus Status { get; set; }
        /// <summary>Server-defined status code for auto export job.</summary>
        string StatusCode { get; set; }
        /// <summary>
        /// Files discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        long? StatusCurrentIterationFilesDiscovered { get; set; }
        /// <summary>Files that have been exported in current iteration.</summary>
        long? StatusCurrentIterationFilesExported { get; set; }
        /// <summary>Files failed to export in current iteration.</summary>
        long? StatusCurrentIterationFilesFailed { get; set; }
        /// <summary>
        /// Data (in MiB) discovered for export in current iteration. It may increase while more export items are found.
        /// </summary>
        long? StatusCurrentIterationMiBDiscovered { get; set; }
        /// <summary>Data (in MiB) that have been exported in current iteration.</summary>
        long? StatusCurrentIterationMiBExported { get; set; }
        /// <summary>Number of iterations completed since the start of the export.</summary>
        int? StatusExportIterationCount { get; set; }
        /// <summary>The time (in UTC) of the last completed auto export job.</summary>
        global::System.DateTime? StatusLastCompletionTimeUtc { get; set; }
        /// <summary>The time (in UTC) the latest auto export job started.</summary>
        global::System.DateTime? StatusLastStartedTimeUtc { get; set; }
        /// <summary>
        /// Time (in UTC) of the last successfully completed export iteration. Look at logging container for details.
        /// </summary>
        global::System.DateTime? StatusLastSuccessfulIterationCompletionTimeUtc { get; set; }
        /// <summary>Server-defined status message for auto export job.</summary>
        string StatusMessage { get; set; }
        /// <summary>
        /// The operational state of auto export. InProgress indicates the export is running. Disabling indicates the user has requested
        /// to disable the export but the disabling is still in progress. Disabled indicates auto export has been disabled. DisableFailed
        /// indicates the disabling has failed. Failed means the export was unable to continue, due to a fatal error.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PSArgumentCompleterAttribute("InProgress", "Disabling", "Disabled", "DisableFailed", "Failed")]
        string StatusState { get; set; }
        /// <summary>
        /// Total files exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        long? StatusTotalFilesExported { get; set; }
        /// <summary>
        /// Total files failed to be export since the last successfully completed iteration. This is accumulative, some files may
        /// be counted repeatedly.
        /// </summary>
        long? StatusTotalFilesFailed { get; set; }
        /// <summary>
        /// Total data (in MiB) exported since the start of the export. This is accumulative, some files may be counted repeatedly.
        /// </summary>
        long? StatusTotalMiBExported { get; set; }

    }
}