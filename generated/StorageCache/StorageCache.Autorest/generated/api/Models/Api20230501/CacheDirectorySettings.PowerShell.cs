// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.PowerShell;

    /// <summary>Cache Directory Services settings.</summary>
    [System.ComponentModel.TypeConverter(typeof(CacheDirectorySettingsTypeConverter))]
    public partial class CacheDirectorySettings
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CacheDirectorySettings(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ActiveDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectory = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettings) content.GetValueForProperty("ActiveDirectory",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectory, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownload = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUsernameDownloadSettings) content.GetValueForProperty("UsernameDownload",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownload, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUsernameDownloadSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownloadUsernameSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameSource = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameSource?) content.GetValueForProperty("UsernameDownloadUsernameSource",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameSource, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameSource.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials) content.GetValueForProperty("ActiveDirectoryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCredentials, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryPrimaryDnsIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryPrimaryDnsIPAddress = (string) content.GetValueForProperty("ActiveDirectoryPrimaryDnsIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryPrimaryDnsIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectorySecondaryDnsIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectorySecondaryDnsIPAddress = (string) content.GetValueForProperty("ActiveDirectorySecondaryDnsIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectorySecondaryDnsIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainName = (string) content.GetValueForProperty("ActiveDirectoryDomainName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainNetBiosName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainNetBiosName = (string) content.GetValueForProperty("ActiveDirectoryDomainNetBiosName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainNetBiosName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryCacheNetBiosName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCacheNetBiosName = (string) content.GetValueForProperty("ActiveDirectoryCacheNetBiosName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCacheNetBiosName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainJoined"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainJoined = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType?) content.GetValueForProperty("ActiveDirectoryDomainJoined",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainJoined, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType.CreateFrom);
            }
            if (content.Contains("UsernameDownloadCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCredentials = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUsernameDownloadSettingsCredentials) content.GetValueForProperty("UsernameDownloadCredentials",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCredentials, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUsernameDownloadSettingsCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownloadExtendedGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadExtendedGroup = (bool?) content.GetValueForProperty("UsernameDownloadExtendedGroup",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadExtendedGroup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadGroupFileUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadGroupFileUri = (string) content.GetValueForProperty("UsernameDownloadGroupFileUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadGroupFileUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadUserFileUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUserFileUri = (string) content.GetValueForProperty("UsernameDownloadUserFileUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUserFileUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadLdapServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapServer = (string) content.GetValueForProperty("UsernameDownloadLdapServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapServer, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadLdapBaseDn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapBaseDn = (string) content.GetValueForProperty("UsernameDownloadLdapBaseDn",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapBaseDn, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadEncryptLdapConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadEncryptLdapConnection = (bool?) content.GetValueForProperty("UsernameDownloadEncryptLdapConnection",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadEncryptLdapConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadRequireValidCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadRequireValidCertificate = (bool?) content.GetValueForProperty("UsernameDownloadRequireValidCertificate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadRequireValidCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadAutoDownloadCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadAutoDownloadCertificate = (bool?) content.GetValueForProperty("UsernameDownloadAutoDownloadCertificate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadAutoDownloadCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadCaCertificateUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCaCertificateUri = (string) content.GetValueForProperty("UsernameDownloadCaCertificateUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCaCertificateUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadUsernameDownloaded"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameDownloaded = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameDownloadedType?) content.GetValueForProperty("UsernameDownloadUsernameDownloaded",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameDownloaded, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameDownloadedType.CreateFrom);
            }
            if (content.Contains("CredentialsUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsUsername = (string) content.GetValueForProperty("CredentialsUsername",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsUsername, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsPassword = (string) content.GetValueForProperty("CredentialsPassword",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsBindDn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindDn = (string) content.GetValueForProperty("CredentialsBindDn",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindDn, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsBindPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindPassword = (string) content.GetValueForProperty("CredentialsBindPassword",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindPassword, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CacheDirectorySettings(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ActiveDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectory = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettings) content.GetValueForProperty("ActiveDirectory",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectory, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownload = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUsernameDownloadSettings) content.GetValueForProperty("UsernameDownload",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownload, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUsernameDownloadSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownloadUsernameSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameSource = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameSource?) content.GetValueForProperty("UsernameDownloadUsernameSource",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameSource, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameSource.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials) content.GetValueForProperty("ActiveDirectoryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCredentials, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ActiveDirectoryPrimaryDnsIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryPrimaryDnsIPAddress = (string) content.GetValueForProperty("ActiveDirectoryPrimaryDnsIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryPrimaryDnsIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectorySecondaryDnsIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectorySecondaryDnsIPAddress = (string) content.GetValueForProperty("ActiveDirectorySecondaryDnsIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectorySecondaryDnsIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainName = (string) content.GetValueForProperty("ActiveDirectoryDomainName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainNetBiosName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainNetBiosName = (string) content.GetValueForProperty("ActiveDirectoryDomainNetBiosName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainNetBiosName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryCacheNetBiosName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCacheNetBiosName = (string) content.GetValueForProperty("ActiveDirectoryCacheNetBiosName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryCacheNetBiosName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryDomainJoined"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainJoined = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType?) content.GetValueForProperty("ActiveDirectoryDomainJoined",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).ActiveDirectoryDomainJoined, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType.CreateFrom);
            }
            if (content.Contains("UsernameDownloadCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCredentials = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUsernameDownloadSettingsCredentials) content.GetValueForProperty("UsernameDownloadCredentials",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCredentials, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUsernameDownloadSettingsCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UsernameDownloadExtendedGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadExtendedGroup = (bool?) content.GetValueForProperty("UsernameDownloadExtendedGroup",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadExtendedGroup, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadGroupFileUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadGroupFileUri = (string) content.GetValueForProperty("UsernameDownloadGroupFileUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadGroupFileUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadUserFileUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUserFileUri = (string) content.GetValueForProperty("UsernameDownloadUserFileUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUserFileUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadLdapServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapServer = (string) content.GetValueForProperty("UsernameDownloadLdapServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapServer, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadLdapBaseDn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapBaseDn = (string) content.GetValueForProperty("UsernameDownloadLdapBaseDn",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadLdapBaseDn, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadEncryptLdapConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadEncryptLdapConnection = (bool?) content.GetValueForProperty("UsernameDownloadEncryptLdapConnection",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadEncryptLdapConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadRequireValidCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadRequireValidCertificate = (bool?) content.GetValueForProperty("UsernameDownloadRequireValidCertificate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadRequireValidCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadAutoDownloadCertificate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadAutoDownloadCertificate = (bool?) content.GetValueForProperty("UsernameDownloadAutoDownloadCertificate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadAutoDownloadCertificate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UsernameDownloadCaCertificateUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCaCertificateUri = (string) content.GetValueForProperty("UsernameDownloadCaCertificateUri",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadCaCertificateUri, global::System.Convert.ToString);
            }
            if (content.Contains("UsernameDownloadUsernameDownloaded"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameDownloaded = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameDownloadedType?) content.GetValueForProperty("UsernameDownloadUsernameDownloaded",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).UsernameDownloadUsernameDownloaded, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.UsernameDownloadedType.CreateFrom);
            }
            if (content.Contains("CredentialsUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsUsername = (string) content.GetValueForProperty("CredentialsUsername",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsUsername, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsPassword = (string) content.GetValueForProperty("CredentialsPassword",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsPassword, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsBindDn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindDn = (string) content.GetValueForProperty("CredentialsBindDn",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindDn, global::System.Convert.ToString);
            }
            if (content.Contains("CredentialsBindPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindPassword = (string) content.GetValueForProperty("CredentialsBindPassword",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettingsInternal)this).CredentialsBindPassword, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CacheDirectorySettings(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CacheDirectorySettings(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CacheDirectorySettings" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CacheDirectorySettings" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Cache Directory Services settings.
    [System.ComponentModel.TypeConverter(typeof(CacheDirectorySettingsTypeConverter))]
    public partial interface ICacheDirectorySettings

    {

    }
}