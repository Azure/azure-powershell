// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>AML file system client information</summary>
    public partial class AmlFilesystemClientInfo :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfo,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal
    {

        /// <summary>Backing field for <see cref="ContainerStorageInterface" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface _containerStorageInterface;

        /// <summary>Container Storage Interface information for the AML file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface ContainerStorageInterface { get => (this._containerStorageInterface = this._containerStorageInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemContainerStorageInterface()); }

        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string ContainerStorageInterfacePersistentVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolume; }

        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string ContainerStorageInterfacePersistentVolumeClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolumeClaim; }

        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string ContainerStorageInterfaceStorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).StorageClass; }

        /// <summary>Backing field for <see cref="LustreVersion" /> property.</summary>
        private string _lustreVersion;

        /// <summary>The version of Lustre running in the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string LustreVersion { get => this._lustreVersion; }

        /// <summary>Backing field for <see cref="MgsAddress" /> property.</summary>
        private string _mgsAddress;

        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string MgsAddress { get => this._mgsAddress; }

        /// <summary>Internal Acessors for ContainerStorageInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.ContainerStorageInterface { get => (this._containerStorageInterface = this._containerStorageInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemContainerStorageInterface()); set { {_containerStorageInterface = value;} } }

        /// <summary>Internal Acessors for ContainerStorageInterfacePersistentVolume</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.ContainerStorageInterfacePersistentVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolume = value; }

        /// <summary>Internal Acessors for ContainerStorageInterfacePersistentVolumeClaim</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.ContainerStorageInterfacePersistentVolumeClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolumeClaim; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).PersistentVolumeClaim = value; }

        /// <summary>Internal Acessors for ContainerStorageInterfaceStorageClass</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.ContainerStorageInterfaceStorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).StorageClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterfaceInternal)ContainerStorageInterface).StorageClass = value; }

        /// <summary>Internal Acessors for LustreVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.LustreVersion { get => this._lustreVersion; set { {_lustreVersion = value;} } }

        /// <summary>Internal Acessors for MgsAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.MgsAddress { get => this._mgsAddress; set { {_mgsAddress = value;} } }

        /// <summary>Internal Acessors for MountCommand</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfoInternal.MountCommand { get => this._mountCommand; set { {_mountCommand = value;} } }

        /// <summary>Backing field for <see cref="MountCommand" /> property.</summary>
        private string _mountCommand;

        /// <summary>Recommended command to mount the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string MountCommand { get => this._mountCommand; }

        /// <summary>Creates an new <see cref="AmlFilesystemClientInfo" /> instance.</summary>
        public AmlFilesystemClientInfo()
        {

        }
    }
    /// AML file system client information
    public partial interface IAmlFilesystemClientInfo :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"persistentVolume",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfacePersistentVolume { get;  }
        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"persistentVolumeClaim",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfacePersistentVolumeClaim { get;  }
        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"storageClass",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfaceStorageClass { get;  }
        /// <summary>The version of Lustre running in the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Lustre running in the AML file system",
        SerializedName = @"lustreVersion",
        PossibleTypes = new [] { typeof(string) })]
        string LustreVersion { get;  }
        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
        SerializedName = @"mgsAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MgsAddress { get;  }
        /// <summary>Recommended command to mount the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended command to mount the AML file system",
        SerializedName = @"mountCommand",
        PossibleTypes = new [] { typeof(string) })]
        string MountCommand { get;  }

    }
    /// AML file system client information
    internal partial interface IAmlFilesystemClientInfoInternal

    {
        /// <summary>Container Storage Interface information for the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface ContainerStorageInterface { get; set; }
        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        string ContainerStorageInterfacePersistentVolume { get; set; }
        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        string ContainerStorageInterfacePersistentVolumeClaim { get; set; }
        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        string ContainerStorageInterfaceStorageClass { get; set; }
        /// <summary>The version of Lustre running in the AML file system</summary>
        string LustreVersion { get; set; }
        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        string MgsAddress { get; set; }
        /// <summary>Recommended command to mount the AML file system</summary>
        string MountCommand { get; set; }

    }
}