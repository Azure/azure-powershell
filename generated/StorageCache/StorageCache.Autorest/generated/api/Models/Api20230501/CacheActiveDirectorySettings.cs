// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Active Directory settings used to join a cache to a domain.</summary>
    public partial class CacheActiveDirectorySettings :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettings,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsInternal
    {

        /// <summary>Backing field for <see cref="CacheNetBiosName" /> property.</summary>
        private string _cacheNetBiosName;

        /// <summary>
        /// The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters
        /// from the class [-0-9a-zA-Z].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string CacheNetBiosName { get => this._cacheNetBiosName; set => this._cacheNetBiosName = value; }

        /// <summary>Backing field for <see cref="Credentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials _credentials;

        /// <summary>Active Directory admin credentials used to join the HPC Cache to a domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsCredentials()); set => this._credentials = value; }

        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string CredentialsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentialsInternal)Credentials).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentialsInternal)Credentials).Password = value ?? null; }

        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string CredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentialsInternal)Credentials).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentialsInternal)Credentials).Username = value ?? null; }

        /// <summary>Backing field for <see cref="DomainJoined" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType? _domainJoined;

        /// <summary>True if the HPC Cache is joined to the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType? DomainJoined { get => this._domainJoined; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>The fully qualified domain name of the Active Directory domain controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; set => this._domainName = value; }

        /// <summary>Backing field for <see cref="DomainNetBiosName" /> property.</summary>
        private string _domainNetBiosName;

        /// <summary>The Active Directory domain's NetBIOS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string DomainNetBiosName { get => this._domainNetBiosName; set => this._domainNetBiosName = value; }

        /// <summary>Internal Acessors for Credentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsInternal.Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheActiveDirectorySettingsCredentials()); set { {_credentials = value;} } }

        /// <summary>Internal Acessors for DomainJoined</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsInternal.DomainJoined { get => this._domainJoined; set { {_domainJoined = value;} } }

        /// <summary>Backing field for <see cref="PrimaryDnsIPAddress" /> property.</summary>
        private string _primaryDnsIPAddress;

        /// <summary>
        /// Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string PrimaryDnsIPAddress { get => this._primaryDnsIPAddress; set => this._primaryDnsIPAddress = value; }

        /// <summary>Backing field for <see cref="SecondaryDnsIPAddress" /> property.</summary>
        private string _secondaryDnsIPAddress;

        /// <summary>
        /// Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string SecondaryDnsIPAddress { get => this._secondaryDnsIPAddress; set => this._secondaryDnsIPAddress = value; }

        /// <summary>Creates an new <see cref="CacheActiveDirectorySettings" /> instance.</summary>
        public CacheActiveDirectorySettings()
        {

        }
    }
    /// Active Directory settings used to join a cache to a domain.
    public partial interface ICacheActiveDirectorySettings :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters
        /// from the class [-0-9a-zA-Z].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters from the class [-0-9a-zA-Z].",
        SerializedName = @"cacheNetBiosName",
        PossibleTypes = new [] { typeof(string) })]
        string CacheNetBiosName { get; set; }
        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsPassword { get; set; }
        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsUsername { get; set; }
        /// <summary>True if the HPC Cache is joined to the Active Directory domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"True if the HPC Cache is joined to the Active Directory domain.",
        SerializedName = @"domainJoined",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType? DomainJoined { get;  }
        /// <summary>The fully qualified domain name of the Active Directory domain controller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The fully qualified domain name of the Active Directory domain controller.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>The Active Directory domain's NetBIOS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The Active Directory domain's NetBIOS name.",
        SerializedName = @"domainNetBiosName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainNetBiosName { get; set; }
        /// <summary>
        /// Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
        SerializedName = @"primaryDnsIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryDnsIPAddress { get; set; }
        /// <summary>
        /// Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.",
        SerializedName = @"secondaryDnsIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string SecondaryDnsIPAddress { get; set; }

    }
    /// Active Directory settings used to join a cache to a domain.
    internal partial interface ICacheActiveDirectorySettingsInternal

    {
        /// <summary>
        /// The NetBIOS name to assign to the HPC Cache when it joins the Active Directory domain as a server. Length must 1-15 characters
        /// from the class [-0-9a-zA-Z].
        /// </summary>
        string CacheNetBiosName { get; set; }
        /// <summary>Active Directory admin credentials used to join the HPC Cache to a domain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials Credentials { get; set; }
        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        string CredentialsPassword { get; set; }
        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        string CredentialsUsername { get; set; }
        /// <summary>True if the HPC Cache is joined to the Active Directory domain.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.DomainJoinedType? DomainJoined { get; set; }
        /// <summary>The fully qualified domain name of the Active Directory domain controller.</summary>
        string DomainName { get; set; }
        /// <summary>The Active Directory domain's NetBIOS name.</summary>
        string DomainNetBiosName { get; set; }
        /// <summary>
        /// Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        string PrimaryDnsIPAddress { get; set; }
        /// <summary>
        /// Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name.
        /// </summary>
        string SecondaryDnsIPAddress { get; set; }

    }
}