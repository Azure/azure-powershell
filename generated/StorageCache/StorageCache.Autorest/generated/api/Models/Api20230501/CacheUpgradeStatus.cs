// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Properties describing the software upgrade state of the cache.</summary>
    public partial class CacheUpgradeStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatus,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal
    {

        /// <summary>Backing field for <see cref="CurrentFirmwareVersion" /> property.</summary>
        private string _currentFirmwareVersion;

        /// <summary>Version string of the firmware currently installed on this cache.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string CurrentFirmwareVersion { get => this._currentFirmwareVersion; }

        /// <summary>Backing field for <see cref="FirmwareUpdateDeadline" /> property.</summary>
        private global::System.DateTime? _firmwareUpdateDeadline;

        /// <summary>
        /// Time at which the pending firmware update will automatically be installed on the cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public global::System.DateTime? FirmwareUpdateDeadline { get => this._firmwareUpdateDeadline; }

        /// <summary>Backing field for <see cref="FirmwareUpdateStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType? _firmwareUpdateStatus;

        /// <summary>
        /// True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after
        /// firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType? FirmwareUpdateStatus { get => this._firmwareUpdateStatus; }

        /// <summary>Backing field for <see cref="LastFirmwareUpdate" /> property.</summary>
        private global::System.DateTime? _lastFirmwareUpdate;

        /// <summary>Time of the last successful firmware update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public global::System.DateTime? LastFirmwareUpdate { get => this._lastFirmwareUpdate; }

        /// <summary>Internal Acessors for CurrentFirmwareVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal.CurrentFirmwareVersion { get => this._currentFirmwareVersion; set { {_currentFirmwareVersion = value;} } }

        /// <summary>Internal Acessors for FirmwareUpdateDeadline</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal.FirmwareUpdateDeadline { get => this._firmwareUpdateDeadline; set { {_firmwareUpdateDeadline = value;} } }

        /// <summary>Internal Acessors for FirmwareUpdateStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal.FirmwareUpdateStatus { get => this._firmwareUpdateStatus; set { {_firmwareUpdateStatus = value;} } }

        /// <summary>Internal Acessors for LastFirmwareUpdate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal.LastFirmwareUpdate { get => this._lastFirmwareUpdate; set { {_lastFirmwareUpdate = value;} } }

        /// <summary>Internal Acessors for PendingFirmwareVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatusInternal.PendingFirmwareVersion { get => this._pendingFirmwareVersion; set { {_pendingFirmwareVersion = value;} } }

        /// <summary>Backing field for <see cref="PendingFirmwareVersion" /> property.</summary>
        private string _pendingFirmwareVersion;

        /// <summary>
        /// When firmwareUpdateAvailable is true, this field holds the version string for the update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string PendingFirmwareVersion { get => this._pendingFirmwareVersion; }

        /// <summary>Creates an new <see cref="CacheUpgradeStatus" /> instance.</summary>
        public CacheUpgradeStatus()
        {

        }
    }
    /// Properties describing the software upgrade state of the cache.
    public partial interface ICacheUpgradeStatus :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>Version string of the firmware currently installed on this cache.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version string of the firmware currently installed on this cache.",
        SerializedName = @"currentFirmwareVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentFirmwareVersion { get;  }
        /// <summary>
        /// Time at which the pending firmware update will automatically be installed on the cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time at which the pending firmware update will automatically be installed on the cache.",
        SerializedName = @"firmwareUpdateDeadline",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirmwareUpdateDeadline { get;  }
        /// <summary>
        /// True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after
        /// firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
        SerializedName = @"firmwareUpdateStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType? FirmwareUpdateStatus { get;  }
        /// <summary>Time of the last successful firmware update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time of the last successful firmware update.",
        SerializedName = @"lastFirmwareUpdate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastFirmwareUpdate { get;  }
        /// <summary>
        /// When firmwareUpdateAvailable is true, this field holds the version string for the update.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"When firmwareUpdateAvailable is true, this field holds the version string for the update.",
        SerializedName = @"pendingFirmwareVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PendingFirmwareVersion { get;  }

    }
    /// Properties describing the software upgrade state of the cache.
    internal partial interface ICacheUpgradeStatusInternal

    {
        /// <summary>Version string of the firmware currently installed on this cache.</summary>
        string CurrentFirmwareVersion { get; set; }
        /// <summary>
        /// Time at which the pending firmware update will automatically be installed on the cache.
        /// </summary>
        global::System.DateTime? FirmwareUpdateDeadline { get; set; }
        /// <summary>
        /// True if there is a firmware update ready to install on this cache. The firmware will automatically be installed after
        /// firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType? FirmwareUpdateStatus { get; set; }
        /// <summary>Time of the last successful firmware update.</summary>
        global::System.DateTime? LastFirmwareUpdate { get; set; }
        /// <summary>
        /// When firmwareUpdateAvailable is true, this field holds the version string for the update.
        /// </summary>
        string PendingFirmwareVersion { get; set; }

    }
}