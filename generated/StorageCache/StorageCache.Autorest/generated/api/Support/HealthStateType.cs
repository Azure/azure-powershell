// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support
{

    /// <summary>
    /// List of cache health states. Down is when the cluster is not responding. Degraded is when its functioning but has some
    /// alerts. Transitioning when it is creating or deleting. Unknown will be returned in old api versions when a new value is
    /// added in future versions. WaitingForKey is when the create is waiting for the system assigned identity to be given access
    /// to the encryption key in the encryption settings.
    /// </summary>
    public partial struct HealthStateType :
        System.IEquatable<HealthStateType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Degraded = @"Degraded";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Down = @"Down";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Flushing = @"Flushing";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Healthy = @"Healthy";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType StartFailed = @"StartFailed";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Stopped = @"Stopped";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Stopping = @"Stopping";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Transitioning = @"Transitioning";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Unknown = @"Unknown";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType UpgradeFailed = @"UpgradeFailed";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType Upgrading = @"Upgrading";

        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType WaitingForKey = @"WaitingForKey";

        /// <summary>the value for an instance of the <see cref="HealthStateType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to HealthStateType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="HealthStateType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new HealthStateType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type HealthStateType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type HealthStateType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is HealthStateType && Equals((HealthStateType)obj);
        }

        /// <summary>Returns hashCode for enum HealthStateType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="HealthStateType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private HealthStateType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for HealthStateType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to HealthStateType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="HealthStateType" />.</param>

        public static implicit operator HealthStateType(string value)
        {
            return new HealthStateType(value);
        }

        /// <summary>Implicit operator to convert HealthStateType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="HealthStateType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum HealthStateType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e1, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum HealthStateType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e1, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType e2)
        {
            return e2.Equals(e1);
        }
    }
}