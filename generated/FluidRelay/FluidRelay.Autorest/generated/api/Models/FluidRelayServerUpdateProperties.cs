// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Extensions;

    /// <summary>The properties that can be provided when updating FluidRelayServer resource</summary>
    public partial class FluidRelayServerUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerUpdatePropertiesInternal
    {

        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string CustomerManagedKeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryptionKeyUrl = value ?? null; }

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties _encryption;

        /// <summary>All encryption configuration for a resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.EncryptionProperties()); set => this._encryption = value; }

        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).KeyEncryptionKeyIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).KeyEncryptionKeyIdentityType = value ?? null; }

        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for CustomerManagedKeyEncryptionKeyIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerUpdatePropertiesInternal.CustomerManagedKeyEncryptionKeyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryptionKeyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryptionKeyIdentity = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerUpdatePropertiesInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.EncryptionProperties()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionCustomerManagedKeyEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerUpdatePropertiesInternal.EncryptionCustomerManagedKeyEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionPropertiesInternal)Encryption).CustomerManagedKeyEncryption = value; }

        /// <summary>Creates an new <see cref="FluidRelayServerUpdateProperties" /> instance.</summary>
        public FluidRelayServerUpdateProperties()
        {

        }
    }
    /// The properties that can be provided when updating FluidRelayServer resource
    public partial interface IFluidRelayServerUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IJsonSerializable
    {
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url.",
        SerializedName = @"keyEncryptionKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Values can be SystemAssigned or UserAssigned",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }

    }
    /// The properties that can be provided when updating FluidRelayServer resource
    internal partial interface IFluidRelayServerUpdatePropertiesInternal

    {
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity CustomerManagedKeyEncryptionKeyIdentity { get; set; }
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>All encryption configuration for a resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties Encryption { get; set; }
        /// <summary>All Customer-managed key encryption properties for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionProperties EncryptionCustomerManagedKeyEncryption { get; set; }
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }

    }
}