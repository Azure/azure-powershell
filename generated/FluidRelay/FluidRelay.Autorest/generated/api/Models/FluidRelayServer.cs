// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Extensions;

    /// <summary>A FluidRelay Server.</summary>
    public partial class FluidRelayServer :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServer,
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.TrackedResource();

        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string CustomerManagedKeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyUrl = value ?? null; }

        /// <summary>The Fluid Relay Orderer endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FluidRelayEndpointOrdererEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointOrdererEndpoint; }

        /// <summary>The Fluid Relay service endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FluidRelayEndpointServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointServiceEndpoint; }

        /// <summary>The Fluid Relay storage endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FluidRelayEndpointStorageEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointStorageEndpoint; }

        /// <summary>The Fluid tenantId for this server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string FrsTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FrsTenantId; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentity _identity;

        /// <summary>The type of identity used for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Identity()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>The list of user identities associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).KeyEncryptionKeyIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).KeyEncryptionKeyIdentityType = value ?? null; }

        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for CustomerManagedKeyEncryptionKeyIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.CustomerManagedKeyEncryptionKeyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).CustomerManagedKeyEncryptionKeyIdentity = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionCustomerManagedKeyEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.EncryptionCustomerManagedKeyEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).EncryptionCustomerManagedKeyEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).EncryptionCustomerManagedKeyEncryption = value; }

        /// <summary>Internal Acessors for FluidRelayEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayEndpoints Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.FluidRelayEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpoint = value; }

        /// <summary>Internal Acessors for FluidRelayEndpointOrdererEndpoint</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.FluidRelayEndpointOrdererEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointOrdererEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointOrdererEndpoint = value; }

        /// <summary>Internal Acessors for FluidRelayEndpointServiceEndpoint</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.FluidRelayEndpointServiceEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointServiceEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointServiceEndpoint = value; }

        /// <summary>Internal Acessors for FluidRelayEndpointStorageEndpoint</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.FluidRelayEndpointStorageEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointStorageEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FluidRelayEndpointStorageEndpoint = value; }

        /// <summary>Internal Acessors for FrsTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.FrsTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FrsTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).FrsTenantId = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentity Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.Identity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerProperties Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.FluidRelayServerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedAt = value; }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedBy = value; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedByType = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedAt = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedBy = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedByType = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.FluidRelayServerProperties()); set => this._property = value; }

        /// <summary>Provision states for FluidRelay RP</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Sku of the storage associated with the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string Storagesku { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).Storagesku; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerPropertiesInternal)Property).Storagesku = value ?? null; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemData _systemData;

        /// <summary>
        /// System meta data for this resource, including creation and modification information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).CreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemDataInternal)SystemData).LastModifiedByType; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Origin(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="FluidRelayServer" /> instance.</summary>
        public FluidRelayServer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// A FluidRelay Server.
    public partial interface IFluidRelayServer :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResource
    {
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url.",
        SerializedName = @"keyEncryptionKeyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>The Fluid Relay Orderer endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Fluid Relay Orderer endpoints.",
        SerializedName = @"ordererEndpoints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FluidRelayEndpointOrdererEndpoint { get;  }
        /// <summary>The Fluid Relay service endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Fluid Relay service endpoints.",
        SerializedName = @"serviceEndpoints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FluidRelayEndpointServiceEndpoint { get;  }
        /// <summary>The Fluid Relay storage endpoints.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Fluid Relay storage endpoints.",
        SerializedName = @"storageEndpoints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FluidRelayEndpointStorageEndpoint { get;  }
        /// <summary>The Fluid tenantId for this server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Fluid tenantId for this server",
        SerializedName = @"frsTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string FrsTenantId { get;  }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned", "None")]
        string IdentityType { get; set; }
        /// <summary>The list of user identities associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of user identities associated with the resource.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Values can be SystemAssigned or UserAssigned",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>Provision states for FluidRelay RP</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Provision states for FluidRelay RP",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>Sku of the storage associated with the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Sku of the storage associated with the resource",
        SerializedName = @"storagesku",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("standard", "basic")]
        string Storagesku { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }

    }
    /// A FluidRelay Server.
    internal partial interface IFluidRelayServerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ITrackedResourceInternal
    {
        /// <summary>
        /// All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity CustomerManagedKeyEncryptionKeyIdentity { get; set; }
        /// <summary>
        /// key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78
        /// or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version.
        /// Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned)
        /// should have permission to access this key url.
        /// </summary>
        string CustomerManagedKeyEncryptionKeyUrl { get; set; }
        /// <summary>All encryption configuration for a resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IEncryptionProperties Encryption { get; set; }
        /// <summary>All Customer-managed key encryption properties for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ICustomerManagedKeyEncryptionProperties EncryptionCustomerManagedKeyEncryption { get; set; }
        /// <summary>The Fluid Relay Service endpoints for this server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayEndpoints FluidRelayEndpoint { get; set; }
        /// <summary>The Fluid Relay Orderer endpoints.</summary>
        System.Collections.Generic.List<string> FluidRelayEndpointOrdererEndpoint { get; set; }
        /// <summary>The Fluid Relay service endpoints.</summary>
        System.Collections.Generic.List<string> FluidRelayEndpointServiceEndpoint { get; set; }
        /// <summary>The Fluid Relay storage endpoints.</summary>
        System.Collections.Generic.List<string> FluidRelayEndpointStorageEndpoint { get; set; }
        /// <summary>The Fluid tenantId for this server</summary>
        string FrsTenantId { get; set; }
        /// <summary>The type of identity used for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentity Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned", "None")]
        string IdentityType { get; set; }
        /// <summary>The list of user identities associated with the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Values can be SystemAssigned or UserAssigned</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("SystemAssigned", "UserAssigned")]
        string KeyEncryptionKeyIdentityType { get; set; }
        /// <summary>
        /// user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource
        /// group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.
        /// </summary>
        string KeyEncryptionKeyIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.IFluidRelayServerProperties Property { get; set; }
        /// <summary>Provision states for FluidRelay RP</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>Sku of the storage associated with the resource</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("standard", "basic")]
        string Storagesku { get; set; }
        /// <summary>
        /// System meta data for this resource, including creation and modification information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FluidRelay.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }

    }
}