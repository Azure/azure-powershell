// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Support.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Extensions;

    /// <summary>Describes the properties of a file.</summary>
    public partial class FileDetailsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Support.Models.IFileDetailsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Support.Models.IFileDetailsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ChunkSize" /> property.</summary>
        private int? _chunkSize;

        /// <summary>
        /// Size of each chunk. The size of each chunk should be provided in bytes and must not exceed 2.5 megabytes (MB).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Origin(Microsoft.Azure.PowerShell.Cmdlets.Support.PropertyOrigin.Owned)]
        public int? ChunkSize { get => this._chunkSize; set => this._chunkSize = value; }

        /// <summary>Backing field for <see cref="CreatedOn" /> property.</summary>
        private global::System.DateTime? _createdOn;

        /// <summary>Time in UTC (ISO 8601 format) when file workspace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Origin(Microsoft.Azure.PowerShell.Cmdlets.Support.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedOn { get => this._createdOn; }

        /// <summary>Backing field for <see cref="FileSize" /> property.</summary>
        private int? _fileSize;

        /// <summary>
        /// Size of the file to be uploaded. The file size must not exceed 5 MB and should be provided in bytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Origin(Microsoft.Azure.PowerShell.Cmdlets.Support.PropertyOrigin.Owned)]
        public int? FileSize { get => this._fileSize; set => this._fileSize = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.IFileDetailsPropertiesInternal.CreatedOn { get => this._createdOn; set { {_createdOn = value;} } }

        /// <summary>Backing field for <see cref="NumberOfChunk" /> property.</summary>
        private int? _numberOfChunk;

        /// <summary>Number of chunks to be uploaded. The maximum number of allowed chunks is 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Origin(Microsoft.Azure.PowerShell.Cmdlets.Support.PropertyOrigin.Owned)]
        public int? NumberOfChunk { get => this._numberOfChunk; set => this._numberOfChunk = value; }

        /// <summary>Creates an new <see cref="FileDetailsProperties" /> instance.</summary>
        public FileDetailsProperties()
        {

        }
    }
    /// Describes the properties of a file.
    public partial interface IFileDetailsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Size of each chunk. The size of each chunk should be provided in bytes and must not exceed 2.5 megabytes (MB).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Size of each chunk. The size of each chunk should be provided in bytes and must not exceed 2.5 megabytes (MB).",
        SerializedName = @"chunkSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ChunkSize { get; set; }
        /// <summary>Time in UTC (ISO 8601 format) when file workspace was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Time in UTC (ISO 8601 format) when file workspace was created.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>
        /// Size of the file to be uploaded. The file size must not exceed 5 MB and should be provided in bytes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Size of the file to be uploaded. The file size must not exceed 5 MB and should be provided in bytes.",
        SerializedName = @"fileSize",
        PossibleTypes = new [] { typeof(int) })]
        int? FileSize { get; set; }
        /// <summary>Number of chunks to be uploaded. The maximum number of allowed chunks is 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of chunks to be uploaded. The maximum number of allowed chunks is 2.",
        SerializedName = @"numberOfChunks",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfChunk { get; set; }

    }
    /// Describes the properties of a file.
    internal partial interface IFileDetailsPropertiesInternal

    {
        /// <summary>
        /// Size of each chunk. The size of each chunk should be provided in bytes and must not exceed 2.5 megabytes (MB).
        /// </summary>
        int? ChunkSize { get; set; }
        /// <summary>Time in UTC (ISO 8601 format) when file workspace was created.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>
        /// Size of the file to be uploaded. The file size must not exceed 5 MB and should be provided in bytes.
        /// </summary>
        int? FileSize { get; set; }
        /// <summary>Number of chunks to be uploaded. The maximum number of allowed chunks is 2.</summary>
        int? NumberOfChunk { get; set; }

    }
}