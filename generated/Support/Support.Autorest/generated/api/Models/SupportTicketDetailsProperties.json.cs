// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Support.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Extensions;

    /// <summary>Describes the properties of a support ticket.</summary>
    public partial class SupportTicketDetailsProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ISupportTicketDetailsProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ISupportTicketDetailsProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ISupportTicketDetailsProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject json ? new SupportTicketDetailsProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject into a new instance of <see cref="SupportTicketDetailsProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal SupportTicketDetailsProperties(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_contactDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject>("contactDetails"), out var __jsonContactDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ContactProfile.FromJson(__jsonContactDetails) : _contactDetail;}
            {_serviceLevelAgreement = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject>("serviceLevelAgreement"), out var __jsonServiceLevelAgreement) ? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ServiceLevelAgreement.FromJson(__jsonServiceLevelAgreement) : _serviceLevelAgreement;}
            {_supportEngineer = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject>("supportEngineer"), out var __jsonSupportEngineer) ? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.SupportEngineer.FromJson(__jsonSupportEngineer) : _supportEngineer;}
            {_technicalTicketDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject>("technicalTicketDetails"), out var __jsonTechnicalTicketDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.TechnicalTicketDetails.FromJson(__jsonTechnicalTicketDetails) : _technicalTicketDetail;}
            {_quotaTicketDetail = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject>("quotaTicketDetails"), out var __jsonQuotaTicketDetails) ? Microsoft.Azure.PowerShell.Cmdlets.Support.Models.QuotaTicketDetails.FromJson(__jsonQuotaTicketDetails) : _quotaTicketDetail;}
            {_supportTicketId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("supportTicketId"), out var __jsonSupportTicketId) ? (string)__jsonSupportTicketId : (string)_supportTicketId;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)_description;}
            {_problemClassificationId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("problemClassificationId"), out var __jsonProblemClassificationId) ? (string)__jsonProblemClassificationId : (string)_problemClassificationId;}
            {_problemClassificationDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("problemClassificationDisplayName"), out var __jsonProblemClassificationDisplayName) ? (string)__jsonProblemClassificationDisplayName : (string)_problemClassificationDisplayName;}
            {_severity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("severity"), out var __jsonSeverity) ? (string)__jsonSeverity : (string)_severity;}
            {_enrollmentId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("enrollmentId"), out var __jsonEnrollmentId) ? (string)__jsonEnrollmentId : (string)_enrollmentId;}
            {_require24X7Response = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonBoolean>("require24X7Response"), out var __jsonRequire24X7Response) ? (bool?)__jsonRequire24X7Response : _require24X7Response;}
            {_advancedDiagnosticConsent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("advancedDiagnosticConsent"), out var __jsonAdvancedDiagnosticConsent) ? (string)__jsonAdvancedDiagnosticConsent : (string)_advancedDiagnosticConsent;}
            {_problemScopingQuestion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("problemScopingQuestions"), out var __jsonProblemScopingQuestions) ? (string)__jsonProblemScopingQuestions : (string)_problemScopingQuestion;}
            {_supportPlanId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("supportPlanId"), out var __jsonSupportPlanId) ? (string)__jsonSupportPlanId : (string)_supportPlanId;}
            {_supportPlanType = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("supportPlanType"), out var __jsonSupportPlanType) ? (string)__jsonSupportPlanType : (string)_supportPlanType;}
            {_supportPlanDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("supportPlanDisplayName"), out var __jsonSupportPlanDisplayName) ? (string)__jsonSupportPlanDisplayName : (string)_supportPlanDisplayName;}
            {_title = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("title"), out var __jsonTitle) ? (string)__jsonTitle : (string)_title;}
            {_problemStartTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("problemStartTime"), out var __jsonProblemStartTime) ? global::System.DateTime.TryParse((string)__jsonProblemStartTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonProblemStartTimeValue) ? __jsonProblemStartTimeValue : _problemStartTime : _problemStartTime;}
            {_serviceId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("serviceId"), out var __jsonServiceId) ? (string)__jsonServiceId : (string)_serviceId;}
            {_serviceDisplayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("serviceDisplayName"), out var __jsonServiceDisplayName) ? (string)__jsonServiceDisplayName : (string)_serviceDisplayName;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("status"), out var __jsonStatus) ? (string)__jsonStatus : (string)_status;}
            {_createdDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("createdDate"), out var __jsonCreatedDate) ? global::System.DateTime.TryParse((string)__jsonCreatedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonCreatedDateValue) ? __jsonCreatedDateValue : _createdDate : _createdDate;}
            {_modifiedDate = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("modifiedDate"), out var __jsonModifiedDate) ? global::System.DateTime.TryParse((string)__jsonModifiedDate, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonModifiedDateValue) ? __jsonModifiedDateValue : _modifiedDate : _modifiedDate;}
            {_fileWorkspaceName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("fileWorkspaceName"), out var __jsonFileWorkspaceName) ? (string)__jsonFileWorkspaceName : (string)_fileWorkspaceName;}
            {_isTemporaryTicket = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString>("isTemporaryTicket"), out var __jsonIsTemporaryTicket) ? (string)__jsonIsTemporaryTicket : (string)_isTemporaryTicket;}
            {_secondaryConsent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonArray>("secondaryConsent"), out var __jsonSecondaryConsent) ? If( __jsonSecondaryConsent as Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ISecondaryConsent>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.Support.Models.ISecondaryConsent) (Microsoft.Azure.PowerShell.Cmdlets.Support.Models.SecondaryConsent.FromJson(__u) )) ))() : null : _secondaryConsent;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="SupportTicketDetailsProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="SupportTicketDetailsProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._contactDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) this._contactDetail.ToJson(null,serializationMode) : null, "contactDetails" ,container.Add );
            AddIf( null != this._serviceLevelAgreement ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) this._serviceLevelAgreement.ToJson(null,serializationMode) : null, "serviceLevelAgreement" ,container.Add );
            AddIf( null != this._supportEngineer ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) this._supportEngineer.ToJson(null,serializationMode) : null, "supportEngineer" ,container.Add );
            AddIf( null != this._technicalTicketDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) this._technicalTicketDetail.ToJson(null,serializationMode) : null, "technicalTicketDetails" ,container.Add );
            AddIf( null != this._quotaTicketDetail ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) this._quotaTicketDetail.ToJson(null,serializationMode) : null, "quotaTicketDetails" ,container.Add );
            AddIf( null != (((object)this._supportTicketId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._supportTicketId.ToString()) : null, "supportTicketId" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( null != (((object)this._problemClassificationId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._problemClassificationId.ToString()) : null, "problemClassificationId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._problemClassificationDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._problemClassificationDisplayName.ToString()) : null, "problemClassificationDisplayName" ,container.Add );
            }
            AddIf( null != (((object)this._severity)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._severity.ToString()) : null, "severity" ,container.Add );
            AddIf( null != (((object)this._enrollmentId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._enrollmentId.ToString()) : null, "enrollmentId" ,container.Add );
            AddIf( null != this._require24X7Response ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonBoolean((bool)this._require24X7Response) : null, "require24X7Response" ,container.Add );
            AddIf( null != (((object)this._advancedDiagnosticConsent)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._advancedDiagnosticConsent.ToString()) : null, "advancedDiagnosticConsent" ,container.Add );
            AddIf( null != (((object)this._problemScopingQuestion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._problemScopingQuestion.ToString()) : null, "problemScopingQuestions" ,container.Add );
            AddIf( null != (((object)this._supportPlanId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._supportPlanId.ToString()) : null, "supportPlanId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._supportPlanType)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._supportPlanType.ToString()) : null, "supportPlanType" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._supportPlanDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._supportPlanDisplayName.ToString()) : null, "supportPlanDisplayName" ,container.Add );
            }
            AddIf( null != (((object)this._title)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._title.ToString()) : null, "title" ,container.Add );
            AddIf( null != this._problemStartTime ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._problemStartTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "problemStartTime" ,container.Add );
            AddIf( null != (((object)this._serviceId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._serviceId.ToString()) : null, "serviceId" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._serviceDisplayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._serviceDisplayName.ToString()) : null, "serviceDisplayName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._status)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._status.ToString()) : null, "status" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._createdDate ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._createdDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "createdDate" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._modifiedDate ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._modifiedDate?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "modifiedDate" ,container.Add );
            }
            AddIf( null != (((object)this._fileWorkspaceName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._fileWorkspaceName.ToString()) : null, "fileWorkspaceName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._isTemporaryTicket)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.JsonString(this._isTemporaryTicket.ToString()) : null, "isTemporaryTicket" ,container.Add );
            }
            if (null != this._secondaryConsent)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Support.Runtime.Json.XNodeArray();
                foreach( var __x in this._secondaryConsent )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("secondaryConsent",__w);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}