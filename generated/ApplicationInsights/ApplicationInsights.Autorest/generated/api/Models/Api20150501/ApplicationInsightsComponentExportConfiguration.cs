// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Extensions;

    /// <summary>Properties that define a Continuous Export configuration.</summary>
    public partial class ApplicationInsightsComponentExportConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ApplicationName" /> property.</summary>
        private string _applicationName;

        /// <summary>The name of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ApplicationName { get => this._applicationName; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>The name of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; }

        /// <summary>Backing field for <see cref="DestinationAccountId" /> property.</summary>
        private string _destinationAccountId;

        /// <summary>The name of destination account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationAccountId { get => this._destinationAccountId; }

        /// <summary>Backing field for <see cref="DestinationStorageLocationId" /> property.</summary>
        private string _destinationStorageLocationId;

        /// <summary>The destination account location ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationStorageLocationId { get => this._destinationStorageLocationId; }

        /// <summary>Backing field for <see cref="DestinationStorageSubscriptionId" /> property.</summary>
        private string _destinationStorageSubscriptionId;

        /// <summary>The destination storage account subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationStorageSubscriptionId { get => this._destinationStorageSubscriptionId; }

        /// <summary>Backing field for <see cref="DestinationType" /> property.</summary>
        private string _destinationType;

        /// <summary>The destination type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string DestinationType { get => this._destinationType; }

        /// <summary>Backing field for <see cref="ExportId" /> property.</summary>
        private string _exportId;

        /// <summary>
        /// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous
        /// Export configuration is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ExportId { get => this._exportId; }

        /// <summary>Backing field for <see cref="ExportStatus" /> property.</summary>
        private string _exportStatus;

        /// <summary>
        /// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ExportStatus { get => this._exportStatus; }

        /// <summary>Backing field for <see cref="InstrumentationKey" /> property.</summary>
        private string _instrumentationKey;

        /// <summary>The instrumentation key of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string InstrumentationKey { get => this._instrumentationKey; }

        /// <summary>Backing field for <see cref="IsUserEnabled" /> property.</summary>
        private string _isUserEnabled;

        /// <summary>
        /// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string IsUserEnabled { get => this._isUserEnabled; }

        /// <summary>Backing field for <see cref="LastGapTime" /> property.</summary>
        private string _lastGapTime;

        /// <summary>The last time the Continuous Export configuration started failing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string LastGapTime { get => this._lastGapTime; }

        /// <summary>Backing field for <see cref="LastSuccessTime" /> property.</summary>
        private string _lastSuccessTime;

        /// <summary>
        /// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string LastSuccessTime { get => this._lastSuccessTime; }

        /// <summary>Backing field for <see cref="LastUserUpdate" /> property.</summary>
        private string _lastUserUpdate;

        /// <summary>Last time the Continuous Export configuration was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string LastUserUpdate { get => this._lastUserUpdate; }

        /// <summary>Internal Acessors for ApplicationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.ApplicationName { get => this._applicationName; set { {_applicationName = value;} } }

        /// <summary>Internal Acessors for ContainerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.ContainerName { get => this._containerName; set { {_containerName = value;} } }

        /// <summary>Internal Acessors for DestinationAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.DestinationAccountId { get => this._destinationAccountId; set { {_destinationAccountId = value;} } }

        /// <summary>Internal Acessors for DestinationStorageLocationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.DestinationStorageLocationId { get => this._destinationStorageLocationId; set { {_destinationStorageLocationId = value;} } }

        /// <summary>Internal Acessors for DestinationStorageSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.DestinationStorageSubscriptionId { get => this._destinationStorageSubscriptionId; set { {_destinationStorageSubscriptionId = value;} } }

        /// <summary>Internal Acessors for DestinationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.DestinationType { get => this._destinationType; set { {_destinationType = value;} } }

        /// <summary>Internal Acessors for ExportId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.ExportId { get => this._exportId; set { {_exportId = value;} } }

        /// <summary>Internal Acessors for ExportStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.ExportStatus { get => this._exportStatus; set { {_exportStatus = value;} } }

        /// <summary>Internal Acessors for InstrumentationKey</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.InstrumentationKey { get => this._instrumentationKey; set { {_instrumentationKey = value;} } }

        /// <summary>Internal Acessors for IsUserEnabled</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.IsUserEnabled { get => this._isUserEnabled; set { {_isUserEnabled = value;} } }

        /// <summary>Internal Acessors for LastGapTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.LastGapTime { get => this._lastGapTime; set { {_lastGapTime = value;} } }

        /// <summary>Internal Acessors for LastSuccessTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.LastSuccessTime { get => this._lastSuccessTime; set { {_lastSuccessTime = value;} } }

        /// <summary>Internal Acessors for LastUserUpdate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.LastUserUpdate { get => this._lastUserUpdate; set { {_lastUserUpdate = value;} } }

        /// <summary>Internal Acessors for PermanentErrorReason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.PermanentErrorReason { get => this._permanentErrorReason; set { {_permanentErrorReason = value;} } }

        /// <summary>Internal Acessors for ResourceGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.ResourceGroup { get => this._resourceGroup; set { {_resourceGroup = value;} } }

        /// <summary>Internal Acessors for StorageName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.StorageName { get => this._storageName; set { {_storageName = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Models.Api20150501.IApplicationInsightsComponentExportConfigurationInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Backing field for <see cref="NotificationQueueEnabled" /> property.</summary>
        private string _notificationQueueEnabled;

        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string NotificationQueueEnabled { get => this._notificationQueueEnabled; set => this._notificationQueueEnabled = value; }

        /// <summary>Backing field for <see cref="PermanentErrorReason" /> property.</summary>
        private string _permanentErrorReason;

        /// <summary>
        /// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string PermanentErrorReason { get => this._permanentErrorReason; }

        /// <summary>Backing field for <see cref="RecordType" /> property.</summary>
        private string _recordType;

        /// <summary>
        /// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string RecordType { get => this._recordType; set => this._recordType = value; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>The resource group of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; }

        /// <summary>Backing field for <see cref="StorageName" /> property.</summary>
        private string _storageName;

        /// <summary>The name of the destination storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string StorageName { get => this._storageName; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscription of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>
        /// Creates an new <see cref="ApplicationInsightsComponentExportConfiguration" /> instance.
        /// </summary>
        public ApplicationInsightsComponentExportConfiguration()
        {

        }
    }
    /// Properties that define a Continuous Export configuration.
    public partial interface IApplicationInsightsComponentExportConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.IJsonSerializable
    {
        /// <summary>The name of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the Application Insights component.",
        SerializedName = @"ApplicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicationName { get;  }
        /// <summary>The name of the destination storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the destination storage container.",
        SerializedName = @"ContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get;  }
        /// <summary>The name of destination account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of destination account.",
        SerializedName = @"DestinationAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationAccountId { get;  }
        /// <summary>The destination account location ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The destination account location ID.",
        SerializedName = @"DestinationStorageLocationId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationStorageLocationId { get;  }
        /// <summary>The destination storage account subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The destination storage account subscription ID.",
        SerializedName = @"DestinationStorageSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationStorageSubscriptionId { get;  }
        /// <summary>The destination type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The destination type.",
        SerializedName = @"DestinationType",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationType { get;  }
        /// <summary>
        /// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous
        /// Export configuration is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous Export configuration is created.",
        SerializedName = @"ExportId",
        PossibleTypes = new [] { typeof(string) })]
        string ExportId { get;  }
        /// <summary>
        /// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.",
        SerializedName = @"ExportStatus",
        PossibleTypes = new [] { typeof(string) })]
        string ExportStatus { get;  }
        /// <summary>The instrumentation key of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The instrumentation key of the Application Insights component.",
        SerializedName = @"InstrumentationKey",
        PossibleTypes = new [] { typeof(string) })]
        string InstrumentationKey { get;  }
        /// <summary>
        /// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.",
        SerializedName = @"IsUserEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string IsUserEnabled { get;  }
        /// <summary>The last time the Continuous Export configuration started failing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time the Continuous Export configuration started failing.",
        SerializedName = @"LastGapTime",
        PossibleTypes = new [] { typeof(string) })]
        string LastGapTime { get;  }
        /// <summary>
        /// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.",
        SerializedName = @"LastSuccessTime",
        PossibleTypes = new [] { typeof(string) })]
        string LastSuccessTime { get;  }
        /// <summary>Last time the Continuous Export configuration was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last time the Continuous Export configuration was updated.",
        SerializedName = @"LastUserUpdate",
        PossibleTypes = new [] { typeof(string) })]
        string LastUserUpdate { get;  }
        /// <summary>Deprecated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deprecated",
        SerializedName = @"NotificationQueueEnabled",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationQueueEnabled { get; set; }
        /// <summary>
        /// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.",
        SerializedName = @"PermanentErrorReason",
        PossibleTypes = new [] { typeof(string) })]
        string PermanentErrorReason { get;  }
        /// <summary>
        /// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.",
        SerializedName = @"RecordTypes",
        PossibleTypes = new [] { typeof(string) })]
        string RecordType { get; set; }
        /// <summary>The resource group of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource group of the Application Insights component.",
        SerializedName = @"ResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get;  }
        /// <summary>The name of the destination storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the destination storage account.",
        SerializedName = @"StorageName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageName { get;  }
        /// <summary>The subscription of the Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ApplicationInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription of the Application Insights component.",
        SerializedName = @"SubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }

    }
    /// Properties that define a Continuous Export configuration.
    internal partial interface IApplicationInsightsComponentExportConfigurationInternal

    {
        /// <summary>The name of the Application Insights component.</summary>
        string ApplicationName { get; set; }
        /// <summary>The name of the destination storage container.</summary>
        string ContainerName { get; set; }
        /// <summary>The name of destination account.</summary>
        string DestinationAccountId { get; set; }
        /// <summary>The destination account location ID.</summary>
        string DestinationStorageLocationId { get; set; }
        /// <summary>The destination storage account subscription ID.</summary>
        string DestinationStorageSubscriptionId { get; set; }
        /// <summary>The destination type.</summary>
        string DestinationType { get; set; }
        /// <summary>
        /// The unique ID of the export configuration inside an Application Insights component. It is auto generated when the Continuous
        /// Export configuration is created.
        /// </summary>
        string ExportId { get; set; }
        /// <summary>
        /// This indicates current Continuous Export configuration status. The possible values are 'Preparing', 'Success', 'Failure'.
        /// </summary>
        string ExportStatus { get; set; }
        /// <summary>The instrumentation key of the Application Insights component.</summary>
        string InstrumentationKey { get; set; }
        /// <summary>
        /// This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be 'false'.
        /// </summary>
        string IsUserEnabled { get; set; }
        /// <summary>The last time the Continuous Export configuration started failing.</summary>
        string LastGapTime { get; set; }
        /// <summary>
        /// The last time data was successfully delivered to the destination storage container for this Continuous Export configuration.
        /// </summary>
        string LastSuccessTime { get; set; }
        /// <summary>Last time the Continuous Export configuration was updated.</summary>
        string LastUserUpdate { get; set; }
        /// <summary>Deprecated</summary>
        string NotificationQueueEnabled { get; set; }
        /// <summary>
        /// This is the reason the Continuous Export configuration started failing. It can be 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
        /// </summary>
        string PermanentErrorReason { get; set; }
        /// <summary>
        /// This comma separated list of document types that will be exported. The possible values include 'Requests', 'Event', 'Exceptions',
        /// 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd', 'PerformanceCounters', 'Availability', 'Messages'.
        /// </summary>
        string RecordType { get; set; }
        /// <summary>The resource group of the Application Insights component.</summary>
        string ResourceGroup { get; set; }
        /// <summary>The name of the destination storage account.</summary>
        string StorageName { get; set; }
        /// <summary>The subscription of the Application Insights component.</summary>
        string SubscriptionId { get; set; }

    }
}