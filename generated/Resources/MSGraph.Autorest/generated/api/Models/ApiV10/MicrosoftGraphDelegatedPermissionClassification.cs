// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>delegatedPermissionClassification</summary>
    public partial class MicrosoftGraphDelegatedPermissionClassification :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDelegatedPermissionClassification,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphDelegatedPermissionClassificationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGenerated"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGenerated __microsoftGraphEntityAutoGenerated = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphEntityAutoGenerated();

        /// <summary>Backing field for <see cref="Classification" /> property.</summary>
        private string _classification;

        /// <summary>permissionClassificationType</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string Classification { get => this._classification; set => this._classification = value; }

        /// <summary>Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGeneratedInternal)__microsoftGraphEntityAutoGenerated).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGeneratedInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGeneratedInternal)__microsoftGraphEntityAutoGenerated).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGeneratedInternal)__microsoftGraphEntityAutoGenerated).Id = value; }

        /// <summary>Backing field for <see cref="PermissionId" /> property.</summary>
        private string _permissionId;

        /// <summary>
        /// The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Required on create. Does not support $filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PermissionId { get => this._permissionId; set => this._permissionId = value; }

        /// <summary>Backing field for <see cref="PermissionName" /> property.</summary>
        private string _permissionName;

        /// <summary>
        /// The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Does not support $filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PermissionName { get => this._permissionName; set => this._permissionName = value; }

        /// <summary>
        /// Creates an new <see cref="MicrosoftGraphDelegatedPermissionClassification" /> instance.
        /// </summary>
        public MicrosoftGraphDelegatedPermissionClassification()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphEntityAutoGenerated), __microsoftGraphEntityAutoGenerated);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphEntityAutoGenerated), __microsoftGraphEntityAutoGenerated);
        }
    }
    /// delegatedPermissionClassification
    public partial interface IMicrosoftGraphDelegatedPermissionClassification :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>permissionClassificationType</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"permissionClassificationType",
        SerializedName = @"classification",
        PossibleTypes = new [] { typeof(string) })]
        string Classification { get; set; }
        /// <summary>
        /// The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Required on create. Does not support $filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal. Required on create. Does not support $filter.",
        SerializedName = @"permissionId",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionId { get; set; }
        /// <summary>
        /// The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Does not support $filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal. Does not support $filter.",
        SerializedName = @"permissionName",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionName { get; set; }

    }
    /// delegatedPermissionClassification
    internal partial interface IMicrosoftGraphDelegatedPermissionClassificationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityAutoGeneratedInternal
    {
        /// <summary>permissionClassificationType</summary>
        string Classification { get; set; }
        /// <summary>
        /// The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Required on create. Does not support $filter.
        /// </summary>
        string PermissionId { get; set; }
        /// <summary>
        /// The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
        /// Does not support $filter.
        /// </summary>
        string PermissionName { get; set; }

    }
}