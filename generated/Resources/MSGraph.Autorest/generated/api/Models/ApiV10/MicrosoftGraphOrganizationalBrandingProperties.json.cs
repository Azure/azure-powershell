// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>organizationalBrandingProperties</summary>
    public partial class MicrosoftGraphOrganizationalBrandingProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOrganizationalBrandingProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOrganizationalBrandingProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphOrganizationalBrandingProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject json ? new MicrosoftGraphOrganizationalBrandingProperties(json, new global::System.Collections.Generic.HashSet<string>(){ @"id",@"backgroundColor",@"backgroundImage",@"backgroundImageRelativeUrl",@"bannerLogo",@"bannerLogoRelativeUrl",@"cdnList",@"signInPageText",@"squareLogo",@"squareLogoRelativeUrl",@"usernameHintText" }) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject into a new instance of <see cref="MicrosoftGraphOrganizationalBrandingProperties"
        /// />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject instance to deserialize from.</param>
        /// <param name="exclusions"></param>
        internal MicrosoftGraphOrganizationalBrandingProperties(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject json, global::System.Collections.Generic.HashSet<string> exclusions = null)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __microsoftGraphEntity = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphEntity(json,new global::System.Collections.Generic.HashSet<string>(){ @"id",@"backgroundColor",@"backgroundImage",@"backgroundImageRelativeUrl",@"bannerLogo",@"bannerLogoRelativeUrl",@"cdnList",@"signInPageText",@"squareLogo",@"squareLogoRelativeUrl",@"usernameHintText" });
            {_backgroundColor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("backgroundColor"), out var __jsonBackgroundColor) ? (string)__jsonBackgroundColor : (string)BackgroundColor;}
            {_backgroundImage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("backgroundImage"), out var __w) ?  System.Convert.FromBase64String( ((string)__w).Replace("_","/").Replace("-","+").PadRight(  ((string)__w).Length  + ((string)__w).Length * 3 % 4, '=') ) : null;}
            {_backgroundImageRelativeUrl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("backgroundImageRelativeUrl"), out var __jsonBackgroundImageRelativeUrl) ? (string)__jsonBackgroundImageRelativeUrl : (string)BackgroundImageRelativeUrl;}
            {_bannerLogo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("bannerLogo"), out var __u) ?  System.Convert.FromBase64String( ((string)__u).Replace("_","/").Replace("-","+").PadRight(  ((string)__u).Length  + ((string)__u).Length * 3 % 4, '=') ) : null;}
            {_bannerLogoRelativeUrl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("bannerLogoRelativeUrl"), out var __jsonBannerLogoRelativeUrl) ? (string)__jsonBannerLogoRelativeUrl : (string)BannerLogoRelativeUrl;}
            {_cdnList = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonArray>("cdnList"), out var __jsonCdnList) ? If( __jsonCdnList as Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonArray, out var __r) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__r, (__q)=>(string) (__q is Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString __p ? (string)(__p.ToString()) : null)) ))() : null : CdnList;}
            {_signInPageText = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("signInPageText"), out var __jsonSignInPageText) ? (string)__jsonSignInPageText : (string)SignInPageText;}
            {_squareLogo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("squareLogo"), out var __n) ?  System.Convert.FromBase64String( ((string)__n).Replace("_","/").Replace("-","+").PadRight(  ((string)__n).Length  + ((string)__n).Length * 3 % 4, '=') ) : null;}
            {_squareLogoRelativeUrl = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("squareLogoRelativeUrl"), out var __jsonSquareLogoRelativeUrl) ? (string)__jsonSquareLogoRelativeUrl : (string)SquareLogoRelativeUrl;}
            {_usernameHintText = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString>("usernameHintText"), out var __jsonUsernameHintText) ? (string)__jsonUsernameHintText : (string)UsernameHintText;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MicrosoftGraphOrganizationalBrandingProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MicrosoftGraphOrganizationalBrandingProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __microsoftGraphEntity?.ToJson(container, serializationMode);
            AddIf( null != (((object)this._backgroundColor)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._backgroundColor.ToString()) : null, "backgroundColor" ,container.Add );
            AddIf( null != this._backgroundImage ? global::System.Convert.ToBase64String( this._backgroundImage).TrimEnd(new char[] {'='}).Replace('+', '-').Replace('/', '_') : null ,(v)=> container.Add( "backgroundImage",v) );
            AddIf( null != (((object)this._backgroundImageRelativeUrl)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._backgroundImageRelativeUrl.ToString()) : null, "backgroundImageRelativeUrl" ,container.Add );
            AddIf( null != this._bannerLogo ? global::System.Convert.ToBase64String( this._bannerLogo).TrimEnd(new char[] {'='}).Replace('+', '-').Replace('/', '_') : null ,(v)=> container.Add( "bannerLogo",v) );
            AddIf( null != (((object)this._bannerLogoRelativeUrl)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._bannerLogoRelativeUrl.ToString()) : null, "bannerLogoRelativeUrl" ,container.Add );
            if (null != this._cdnList)
            {
                var __s = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.XNodeArray();
                foreach( var __t in this._cdnList )
                {
                    AddIf(null != (((object)__t)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(__t.ToString()) : null ,__s.Add);
                }
                container.Add("cdnList",__s);
            }
            AddIf( null != (((object)this._signInPageText)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._signInPageText.ToString()) : null, "signInPageText" ,container.Add );
            AddIf( null != this._squareLogo ? global::System.Convert.ToBase64String( this._squareLogo).TrimEnd(new char[] {'='}).Replace('+', '-').Replace('/', '_') : null ,(v)=> container.Add( "squareLogo",v) );
            AddIf( null != (((object)this._squareLogoRelativeUrl)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._squareLogoRelativeUrl.ToString()) : null, "squareLogoRelativeUrl" ,container.Add );
            AddIf( null != (((object)this._usernameHintText)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Json.JsonString(this._usernameHintText.ToString()) : null, "usernameHintText" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}