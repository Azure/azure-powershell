// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Extensions;

    /// <summary>samlOrWsFedProvider</summary>
    public partial class MicrosoftGraphSamlOrWsFedProvider :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProvider,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphSamlOrWsFedProviderInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBase __microsoftGraphIdentityProviderBase = new Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.MicrosoftGraphIdentityProviderBase();

        /// <summary>The display name of the identity provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBaseInternal)__microsoftGraphIdentityProviderBase).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBaseInternal)__microsoftGraphIdentityProviderBase).DisplayName = value ?? null; }

        /// <summary>The unique idenfier for an entity. Read-only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphIdentityProviderBase).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphEntityInternal)__microsoftGraphIdentityProviderBase).Id = value ?? null; }

        /// <summary>Backing field for <see cref="IssuerUri" /> property.</summary>
        private string _issuerUri;

        /// <summary>Issuer URI of the federation server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string IssuerUri { get => this._issuerUri; set => this._issuerUri = value; }

        /// <summary>Backing field for <see cref="MetadataExchangeUri" /> property.</summary>
        private string _metadataExchangeUri;

        /// <summary>
        /// URI of the metadata exchange endpoint used for authentication from rich client applications.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string MetadataExchangeUri { get => this._metadataExchangeUri; set => this._metadataExchangeUri = value; }

        /// <summary>Backing field for <see cref="PassiveSignInUri" /> property.</summary>
        private string _passiveSignInUri;

        /// <summary>
        /// URI that web-based clients are directed to when signing in to Azure Active Directory (Azure AD) services.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PassiveSignInUri { get => this._passiveSignInUri; set => this._passiveSignInUri = value; }

        /// <summary>Backing field for <see cref="PreferredAuthenticationProtocol" /> property.</summary>
        private string _preferredAuthenticationProtocol;

        /// <summary>authenticationProtocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string PreferredAuthenticationProtocol { get => this._preferredAuthenticationProtocol; set => this._preferredAuthenticationProtocol = value; }

        /// <summary>Backing field for <see cref="SigningCertificate" /> property.</summary>
        private string _signingCertificate;

        /// <summary>
        /// Current certificate used to sign tokens passed to the Microsoft identity platform. The certificate is formatted as a Base64
        /// encoded string of the public portion of the federated IdP's token signing certificate and must be compatible with the
        /// X509Certificate2 class. This property is used in the following scenarios: if a rollover is required outside of the autorollover
        /// update a new federation service is being set up if the new token signing certificate isn't present in the federation properties
        /// after the federation service certificate has been updated. Azure AD updates certificates via an autorollover process in
        /// which it attempts to retrieve a new certificate from the federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD monitors the metadata daily and will update the federation
        /// settings for the domain when a new certificate is available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Origin(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.PropertyOrigin.Owned)]
        public string SigningCertificate { get => this._signingCertificate; set => this._signingCertificate = value; }

        /// <summary>Creates an new <see cref="MicrosoftGraphSamlOrWsFedProvider" /> instance.</summary>
        public MicrosoftGraphSamlOrWsFedProvider()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__microsoftGraphIdentityProviderBase), __microsoftGraphIdentityProviderBase);
            await eventListener.AssertObjectIsValid(nameof(__microsoftGraphIdentityProviderBase), __microsoftGraphIdentityProviderBase);
        }
    }
    /// samlOrWsFedProvider
    public partial interface IMicrosoftGraphSamlOrWsFedProvider :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBase
    {
        /// <summary>Issuer URI of the federation server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Issuer URI of the federation server.",
        SerializedName = @"issuerUri",
        PossibleTypes = new [] { typeof(string) })]
        string IssuerUri { get; set; }
        /// <summary>
        /// URI of the metadata exchange endpoint used for authentication from rich client applications.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URI of the metadata exchange endpoint used for authentication from rich client applications.",
        SerializedName = @"metadataExchangeUri",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataExchangeUri { get; set; }
        /// <summary>
        /// URI that web-based clients are directed to when signing in to Azure Active Directory (Azure AD) services.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"URI that web-based clients are directed to when signing in to Azure Active Directory (Azure AD) services.",
        SerializedName = @"passiveSignInUri",
        PossibleTypes = new [] { typeof(string) })]
        string PassiveSignInUri { get; set; }
        /// <summary>authenticationProtocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"authenticationProtocol",
        SerializedName = @"preferredAuthenticationProtocol",
        PossibleTypes = new [] { typeof(string) })]
        string PreferredAuthenticationProtocol { get; set; }
        /// <summary>
        /// Current certificate used to sign tokens passed to the Microsoft identity platform. The certificate is formatted as a Base64
        /// encoded string of the public portion of the federated IdP's token signing certificate and must be compatible with the
        /// X509Certificate2 class. This property is used in the following scenarios: if a rollover is required outside of the autorollover
        /// update a new federation service is being set up if the new token signing certificate isn't present in the federation properties
        /// after the federation service certificate has been updated. Azure AD updates certificates via an autorollover process in
        /// which it attempts to retrieve a new certificate from the federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD monitors the metadata daily and will update the federation
        /// settings for the domain when a new certificate is available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Current certificate used to sign tokens passed to the Microsoft identity platform. The certificate is formatted as a Base64 encoded string of the public portion of the federated IdP's token signing certificate and must be compatible with the X509Certificate2 class.   This property is used in the following scenarios:  if a rollover is required outside of the autorollover update a new federation service is being set up  if the new token signing certificate isn't present in the federation properties after the federation service certificate has been updated.   Azure AD updates certificates via an autorollover process in which it attempts to retrieve a new certificate from the federation service metadata, 30 days before expiry of the current certificate. If a new certificate isn't available, Azure AD monitors the metadata daily and will update the federation settings for the domain when a new certificate is available.",
        SerializedName = @"signingCertificate",
        PossibleTypes = new [] { typeof(string) })]
        string SigningCertificate { get; set; }

    }
    /// samlOrWsFedProvider
    internal partial interface IMicrosoftGraphSamlOrWsFedProviderInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Resources.MSGraph.Models.ApiV10.IMicrosoftGraphIdentityProviderBaseInternal
    {
        /// <summary>Issuer URI of the federation server.</summary>
        string IssuerUri { get; set; }
        /// <summary>
        /// URI of the metadata exchange endpoint used for authentication from rich client applications.
        /// </summary>
        string MetadataExchangeUri { get; set; }
        /// <summary>
        /// URI that web-based clients are directed to when signing in to Azure Active Directory (Azure AD) services.
        /// </summary>
        string PassiveSignInUri { get; set; }
        /// <summary>authenticationProtocol</summary>
        string PreferredAuthenticationProtocol { get; set; }
        /// <summary>
        /// Current certificate used to sign tokens passed to the Microsoft identity platform. The certificate is formatted as a Base64
        /// encoded string of the public portion of the federated IdP's token signing certificate and must be compatible with the
        /// X509Certificate2 class. This property is used in the following scenarios: if a rollover is required outside of the autorollover
        /// update a new federation service is being set up if the new token signing certificate isn't present in the federation properties
        /// after the federation service certificate has been updated. Azure AD updates certificates via an autorollover process in
        /// which it attempts to retrieve a new certificate from the federation service metadata, 30 days before expiry of the current
        /// certificate. If a new certificate isn't available, Azure AD monitors the metadata daily and will update the federation
        /// settings for the domain when a new certificate is available.
        /// </summary>
        string SigningCertificate { get; set; }

    }
}