// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>
    /// The configuration settings of the app registration for the custom Open ID Connect provider.
    /// </summary>
    public partial class OpenIdConnectRegistration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectRegistration,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectRegistrationInternal
    {

        /// <summary>Backing field for <see cref="ClientCredential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredential _clientCredential;

        /// <summary>The authentication credentials of the custom Open ID Connect provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredential ClientCredential { get => (this._clientCredential = this._clientCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.OpenIdConnectClientCredential()); set => this._clientCredential = value; }

        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ClientCredentialClientSecretSettingName { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredentialInternal)ClientCredential).ClientSecretSettingName; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredentialInternal)ClientCredential).ClientSecretSettingName = value ?? null; }

        /// <summary>The method that should be used to authenticate the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ClientCredentialMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredentialInternal)ClientCredential).Method; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredentialInternal)ClientCredential).Method = value ?? null; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Internal Acessors for ClientCredential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredential Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectRegistrationInternal.ClientCredential { get => (this._clientCredential = this._clientCredential ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.OpenIdConnectClientCredential()); set { {_clientCredential = value;} } }

        /// <summary>Internal Acessors for OpenIdConnectConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfig Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectRegistrationInternal.OpenIdConnectConfiguration { get => (this._openIdConnectConfiguration = this._openIdConnectConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.OpenIdConnectConfig()); set { {_openIdConnectConfiguration = value;} } }

        /// <summary>Backing field for <see cref="OpenIdConnectConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfig _openIdConnectConfiguration;

        /// <summary>
        /// The configuration settings of the endpoints used for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfig OpenIdConnectConfiguration { get => (this._openIdConnectConfiguration = this._openIdConnectConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.OpenIdConnectConfig()); set => this._openIdConnectConfiguration = value; }

        /// <summary>The endpoint to be used to make an authorization request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationAuthorizationEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).AuthorizationEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).AuthorizationEndpoint = value ?? null; }

        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationCertificationUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).CertificationUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).CertificationUri = value ?? null; }

        /// <summary>The endpoint that issues the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationIssuer { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).Issuer; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).Issuer = value ?? null; }

        /// <summary>The endpoint to be used to request a token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationTokenEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).TokenEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).TokenEndpoint = value ?? null; }

        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).WellKnownOpenIdConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfigInternal)OpenIdConnectConfiguration).WellKnownOpenIdConfiguration = value ?? null; }

        /// <summary>Creates an new <see cref="OpenIdConnectRegistration" /> instance.</summary>
        public OpenIdConnectRegistration()
        {

        }
    }
    /// The configuration settings of the app registration for the custom Open ID Connect provider.
    public partial interface IOpenIdConnectRegistration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The app setting that contains the client secret for the custom Open ID Connect provider.",
        SerializedName = @"clientSecretSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string ClientCredentialClientSecretSettingName { get; set; }
        /// <summary>The method that should be used to authenticate the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The method that should be used to authenticate the user.",
        SerializedName = @"method",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("ClientSecretPost")]
        string ClientCredentialMethod { get; set; }
        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The client id of the custom Open ID Connect provider.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>The endpoint to be used to make an authorization request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint to be used to make an authorization request.",
        SerializedName = @"authorizationEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationAuthorizationEndpoint { get; set; }
        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint that provides the keys necessary to validate the token.",
        SerializedName = @"certificationUri",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationCertificationUri { get; set; }
        /// <summary>The endpoint that issues the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint that issues the token.",
        SerializedName = @"issuer",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationIssuer { get; set; }
        /// <summary>The endpoint to be used to request a token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint to be used to request a token.",
        SerializedName = @"tokenEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationTokenEndpoint { get; set; }
        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The endpoint that contains all the configuration endpoints for the provider.",
        SerializedName = @"wellKnownOpenIdConfiguration",
        PossibleTypes = new [] { typeof(string) })]
        string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get; set; }

    }
    /// The configuration settings of the app registration for the custom Open ID Connect provider.
    internal partial interface IOpenIdConnectRegistrationInternal

    {
        /// <summary>The authentication credentials of the custom Open ID Connect provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectClientCredential ClientCredential { get; set; }
        /// <summary>
        /// The app setting that contains the client secret for the custom Open ID Connect provider.
        /// </summary>
        string ClientCredentialClientSecretSettingName { get; set; }
        /// <summary>The method that should be used to authenticate the user.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("ClientSecretPost")]
        string ClientCredentialMethod { get; set; }
        /// <summary>The client id of the custom Open ID Connect provider.</summary>
        string ClientId { get; set; }
        /// <summary>
        /// The configuration settings of the endpoints used for the custom Open ID Connect provider.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IOpenIdConnectConfig OpenIdConnectConfiguration { get; set; }
        /// <summary>The endpoint to be used to make an authorization request.</summary>
        string OpenIdConnectConfigurationAuthorizationEndpoint { get; set; }
        /// <summary>The endpoint that provides the keys necessary to validate the token.</summary>
        string OpenIdConnectConfigurationCertificationUri { get; set; }
        /// <summary>The endpoint that issues the token.</summary>
        string OpenIdConnectConfigurationIssuer { get; set; }
        /// <summary>The endpoint to be used to request a token.</summary>
        string OpenIdConnectConfigurationTokenEndpoint { get; set; }
        /// <summary>The endpoint that contains all the configuration endpoints for the provider.</summary>
        string OpenIdConnectConfigurationWellKnownOpenIdConfiguration { get; set; }

    }
}