// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Non versioned Container Apps Job configuration properties</summary>
    public partial class JobConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationInternal
    {

        /// <summary>Backing field for <see cref="EventTriggerConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfig _eventTriggerConfig;

        /// <summary>Trigger configuration of an event driven job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfig EventTriggerConfig { get => (this._eventTriggerConfig = this._eventTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationEventTriggerConfig()); set => this._eventTriggerConfig = value; }

        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? EventTriggerConfigParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).Parallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).Parallelism = value ?? default(int); }

        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? EventTriggerConfigReplicaCompletionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ReplicaCompletionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ReplicaCompletionCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="ManualTriggerConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfig _manualTriggerConfig;

        /// <summary>
        /// Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set
        /// to 1 by default
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfig ManualTriggerConfig { get => (this._manualTriggerConfig = this._manualTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationManualTriggerConfig()); set => this._manualTriggerConfig = value; }

        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ManualTriggerConfigParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfigInternal)ManualTriggerConfig).Parallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfigInternal)ManualTriggerConfig).Parallelism = value ?? default(int); }

        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ManualTriggerConfigReplicaCompletionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfigInternal)ManualTriggerConfig).ReplicaCompletionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfigInternal)ManualTriggerConfig).ReplicaCompletionCount = value ?? default(int); }

        /// <summary>Internal Acessors for EventTriggerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfig Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationInternal.EventTriggerConfig { get => (this._eventTriggerConfig = this._eventTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationEventTriggerConfig()); set { {_eventTriggerConfig = value;} } }

        /// <summary>Internal Acessors for EventTriggerConfigScale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScale Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationInternal.EventTriggerConfigScale { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).Scale; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).Scale = value; }

        /// <summary>Internal Acessors for ManualTriggerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfig Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationInternal.ManualTriggerConfig { get => (this._manualTriggerConfig = this._manualTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationManualTriggerConfig()); set { {_manualTriggerConfig = value;} } }

        /// <summary>Internal Acessors for ScheduleTriggerConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfig Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationInternal.ScheduleTriggerConfig { get => (this._scheduleTriggerConfig = this._scheduleTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationScheduleTriggerConfig()); set { {_scheduleTriggerConfig = value;} } }

        /// <summary>Backing field for <see cref="Registry" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IRegistryCredentials> _registry;

        /// <summary>
        /// Collection of private container registry credentials used by a Container apps job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IRegistryCredentials> Registry { get => this._registry; set => this._registry = value; }

        /// <summary>Backing field for <see cref="ReplicaRetryLimit" /> property.</summary>
        private int? _replicaRetryLimit;

        /// <summary>Maximum number of retries before failing the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public int? ReplicaRetryLimit { get => this._replicaRetryLimit; set => this._replicaRetryLimit = value; }

        /// <summary>Backing field for <see cref="ReplicaTimeout" /> property.</summary>
        private int _replicaTimeout;

        /// <summary>Maximum number of seconds a replica is allowed to run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public int ReplicaTimeout { get => this._replicaTimeout; set => this._replicaTimeout = value; }

        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ScaleMaxExecution { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleMaxExecution; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleMaxExecution = value ?? default(int); }

        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ScaleMinExecution { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleMinExecution; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleMinExecution = value ?? default(int); }

        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ScalePollingInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScalePollingInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScalePollingInterval = value ?? default(int); }

        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> ScaleRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfigInternal)EventTriggerConfig).ScaleRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ScheduleTriggerConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfig _scheduleTriggerConfig;

        /// <summary>
        /// Cron formatted repeating trigger schedule ("* * * * *") for cronjobs. Properties completions and parallelism would be
        /// set to 1 by default
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfig ScheduleTriggerConfig { get => (this._scheduleTriggerConfig = this._scheduleTriggerConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.App.Models.JobConfigurationScheduleTriggerConfig()); set => this._scheduleTriggerConfig = value; }

        /// <summary>Cron formatted repeating schedule ("* * * * *") of a Cron Job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public string ScheduleTriggerConfigCronExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).CronExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).CronExpression = value ?? null; }

        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ScheduleTriggerConfigParallelism { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).Parallelism; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).Parallelism = value ?? default(int); }

        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Inlined)]
        public int? ScheduleTriggerConfigReplicaCompletionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).ReplicaCompletionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfigInternal)ScheduleTriggerConfig).ReplicaCompletionCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecret> _secret;

        /// <summary>Collection of secrets used by a Container Apps Job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecret> Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="TriggerType" /> property.</summary>
        private string _triggerType;

        /// <summary>Trigger type of the job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string TriggerType { get => this._triggerType; set => this._triggerType = value; }

        /// <summary>Creates an new <see cref="JobConfiguration" /> instance.</summary>
        public JobConfiguration()
        {

        }
    }
    /// Non versioned Container Apps Job configuration properties
    public partial interface IJobConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of parallel replicas of a job that can run at a given time.",
        SerializedName = @"parallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? EventTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum number of successful replica completions before overall job completion.",
        SerializedName = @"replicaCompletionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? EventTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of parallel replicas of a job that can run at a given time.",
        SerializedName = @"parallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? ManualTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum number of successful replica completions before overall job completion.",
        SerializedName = @"replicaCompletionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ManualTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>
        /// Collection of private container registry credentials used by a Container apps job
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Collection of private container registry credentials used by a Container apps job",
        SerializedName = @"registries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IRegistryCredentials) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IRegistryCredentials> Registry { get; set; }
        /// <summary>Maximum number of retries before failing the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum number of retries before failing the job.",
        SerializedName = @"replicaRetryLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaRetryLimit { get; set; }
        /// <summary>Maximum number of seconds a replica is allowed to run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum number of seconds a replica is allowed to run.",
        SerializedName = @"replicaTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int ReplicaTimeout { get; set; }
        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum number of job executions that are created for a trigger, default 100.",
        SerializedName = @"maxExecutions",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMaxExecution { get; set; }
        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum number of job executions that are created for a trigger, default 0",
        SerializedName = @"minExecutions",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMinExecution { get; set; }
        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Interval to check each event source in seconds. Defaults to 30s",
        SerializedName = @"pollingInterval",
        PossibleTypes = new [] { typeof(int) })]
        int? ScalePollingInterval { get; set; }
        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Scaling rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> ScaleRule { get; set; }
        /// <summary>Cron formatted repeating schedule ("* * * * *") of a Cron Job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Cron formatted repeating schedule (""* * * * *"") of a Cron Job.",
        SerializedName = @"cronExpression",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduleTriggerConfigCronExpression { get; set; }
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of parallel replicas of a job that can run at a given time.",
        SerializedName = @"parallelism",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum number of successful replica completions before overall job completion.",
        SerializedName = @"replicaCompletionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>Collection of secrets used by a Container Apps Job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Collection of secrets used by a Container Apps Job",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecret) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecret> Secret { get; set; }
        /// <summary>Trigger type of the job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Trigger type of the job",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("Schedule", "Event", "Manual")]
        string TriggerType { get; set; }

    }
    /// Non versioned Container Apps Job configuration properties
    internal partial interface IJobConfigurationInternal

    {
        /// <summary>Trigger configuration of an event driven job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationEventTriggerConfig EventTriggerConfig { get; set; }
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        int? EventTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        int? EventTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>Scaling configurations for event driven jobs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScale EventTriggerConfigScale { get; set; }
        /// <summary>
        /// Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set
        /// to 1 by default
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationManualTriggerConfig ManualTriggerConfig { get; set; }
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        int? ManualTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        int? ManualTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>
        /// Collection of private container registry credentials used by a Container apps job
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IRegistryCredentials> Registry { get; set; }
        /// <summary>Maximum number of retries before failing the job.</summary>
        int? ReplicaRetryLimit { get; set; }
        /// <summary>Maximum number of seconds a replica is allowed to run.</summary>
        int ReplicaTimeout { get; set; }
        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        int? ScaleMaxExecution { get; set; }
        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        int? ScaleMinExecution { get; set; }
        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        int? ScalePollingInterval { get; set; }
        /// <summary>Scaling rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> ScaleRule { get; set; }
        /// <summary>
        /// Cron formatted repeating trigger schedule ("* * * * *") for cronjobs. Properties completions and parallelism would be
        /// set to 1 by default
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobConfigurationScheduleTriggerConfig ScheduleTriggerConfig { get; set; }
        /// <summary>Cron formatted repeating schedule ("* * * * *") of a Cron Job.</summary>
        string ScheduleTriggerConfigCronExpression { get; set; }
        /// <summary>Number of parallel replicas of a job that can run at a given time.</summary>
        int? ScheduleTriggerConfigParallelism { get; set; }
        /// <summary>Minimum number of successful replica completions before overall job completion.</summary>
        int? ScheduleTriggerConfigReplicaCompletionCount { get; set; }
        /// <summary>Collection of secrets used by a Container Apps Job</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecret> Secret { get; set; }
        /// <summary>Trigger type of the job</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("Schedule", "Event", "Manual")]
        string TriggerType { get; set; }

    }
}