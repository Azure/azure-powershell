// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Volume definitions for the Container App.</summary>
    public partial class Volume :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolume,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IVolumeInternal
    {

        /// <summary>Backing field for <see cref="MountOption" /> property.</summary>
        private string _mountOption;

        /// <summary>
        /// Mount options used while mounting the AzureFile. Must be a comma-separated string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string MountOption { get => this._mountOption; set => this._mountOption = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Volume name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecretVolumeItem> _secret;

        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecretVolumeItem> Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="StorageName" /> property.</summary>
        private string _storageName;

        /// <summary>Name of storage resource. No need to provide for EmptyDir and Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string StorageName { get => this._storageName; set => this._storageName = value; }

        /// <summary>Backing field for <see cref="StorageType" /> property.</summary>
        private string _storageType;

        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public string StorageType { get => this._storageType; set => this._storageType = value; }

        /// <summary>Creates an new <see cref="Volume" /> instance.</summary>
        public Volume()
        {

        }
    }
    /// Volume definitions for the Container App.
    public partial interface IVolume :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Mount options used while mounting the AzureFile. Must be a comma-separated string.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Mount options used while mounting the AzureFile. Must be a comma-separated string.",
        SerializedName = @"mountOptions",
        PossibleTypes = new [] { typeof(string) })]
        string MountOption { get; set; }
        /// <summary>Volume name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Volume name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecretVolumeItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecretVolumeItem> Secret { get; set; }
        /// <summary>Name of storage resource. No need to provide for EmptyDir and Secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of storage resource. No need to provide for EmptyDir and Secret.",
        SerializedName = @"storageName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageName { get; set; }
        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage type for the volume. If not provided, use EmptyDir.",
        SerializedName = @"storageType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("AzureFile", "EmptyDir", "Secret")]
        string StorageType { get; set; }

    }
    /// Volume definitions for the Container App.
    internal partial interface IVolumeInternal

    {
        /// <summary>
        /// Mount options used while mounting the AzureFile. Must be a comma-separated string.
        /// </summary>
        string MountOption { get; set; }
        /// <summary>Volume name.</summary>
        string Name { get; set; }
        /// <summary>
        /// List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.ISecretVolumeItem> Secret { get; set; }
        /// <summary>Name of storage resource. No need to provide for EmptyDir and Secret.</summary>
        string StorageName { get; set; }
        /// <summary>Storage type for the volume. If not provided, use EmptyDir.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.App.PSArgumentCompleterAttribute("AzureFile", "EmptyDir", "Secret")]
        string StorageType { get; set; }

    }
}