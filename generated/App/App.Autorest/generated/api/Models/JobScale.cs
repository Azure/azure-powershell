// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.App.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Extensions;

    /// <summary>Scaling configurations for event driven jobs.</summary>
    public partial class JobScale :
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScale,
        Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleInternal
    {

        /// <summary>Backing field for <see cref="MaxExecution" /> property.</summary>
        private int? _maxExecution;

        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public int? MaxExecution { get => this._maxExecution; set => this._maxExecution = value; }

        /// <summary>Backing field for <see cref="MinExecution" /> property.</summary>
        private int? _minExecution;

        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public int? MinExecution { get => this._minExecution; set => this._minExecution = value; }

        /// <summary>Backing field for <see cref="PollingInterval" /> property.</summary>
        private int? _pollingInterval;

        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public int? PollingInterval { get => this._pollingInterval; set => this._pollingInterval = value; }

        /// <summary>Backing field for <see cref="Rule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> _rule;

        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Origin(Microsoft.Azure.PowerShell.Cmdlets.App.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> Rule { get => this._rule; set => this._rule = value; }

        /// <summary>Creates an new <see cref="JobScale" /> instance.</summary>
        public JobScale()
        {

        }
    }
    /// Scaling configurations for event driven jobs.
    public partial interface IJobScale :
        Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.IJsonSerializable
    {
        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum number of job executions that are created for a trigger, default 100.",
        SerializedName = @"maxExecutions",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxExecution { get; set; }
        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum number of job executions that are created for a trigger, default 0",
        SerializedName = @"minExecutions",
        PossibleTypes = new [] { typeof(int) })]
        int? MinExecution { get; set; }
        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Interval to check each event source in seconds. Defaults to 30s",
        SerializedName = @"pollingInterval",
        PossibleTypes = new [] { typeof(int) })]
        int? PollingInterval { get; set; }
        /// <summary>Scaling rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.App.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Scaling rules.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> Rule { get; set; }

    }
    /// Scaling configurations for event driven jobs.
    internal partial interface IJobScaleInternal

    {
        /// <summary>Maximum number of job executions that are created for a trigger, default 100.</summary>
        int? MaxExecution { get; set; }
        /// <summary>Minimum number of job executions that are created for a trigger, default 0</summary>
        int? MinExecution { get; set; }
        /// <summary>Interval to check each event source in seconds. Defaults to 30s</summary>
        int? PollingInterval { get; set; }
        /// <summary>Scaling rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.App.Models.IJobScaleRule> Rule { get; set; }

    }
}