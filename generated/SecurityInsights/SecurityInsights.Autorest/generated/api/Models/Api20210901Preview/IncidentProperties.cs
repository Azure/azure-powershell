// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Describes incident properties</summary>
    public partial class IncidentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdditionalData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData _additionalData;

        /// <summary>Additional data on the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData AdditionalData { get => (this._additionalData = this._additionalData ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentAdditionalData()); }

        /// <summary>List of product names of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] AdditionalDataAlertProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertProductName; }

        /// <summary>The number of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataAlertsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertsCount; }

        /// <summary>The number of bookmarks in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataBookmarksCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).BookmarksCount; }

        /// <summary>The number of comments in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataCommentsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).CommentsCount; }

        /// <summary>The tactics associated with incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).Tactic; }

        /// <summary>Backing field for <see cref="Classification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? _classification;

        /// <summary>The reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get => this._classification; set => this._classification = value; }

        /// <summary>Backing field for <see cref="ClassificationComment" /> property.</summary>
        private string _classificationComment;

        /// <summary>Describes the reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ClassificationComment { get => this._classificationComment; set => this._classificationComment = value; }

        /// <summary>Backing field for <see cref="ClassificationReason" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? _classificationReason;

        /// <summary>The classification reason the incident was closed with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get => this._classificationReason; set => this._classificationReason = value; }

        /// <summary>Backing field for <see cref="CreatedTimeUtc" /> property.</summary>
        private global::System.DateTime? _createdTimeUtc;

        /// <summary>The time the incident was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedTimeUtc { get => this._createdTimeUtc; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="FirstActivityTimeUtc" /> property.</summary>
        private global::System.DateTime? _firstActivityTimeUtc;

        /// <summary>The time of the first activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? FirstActivityTimeUtc { get => this._firstActivityTimeUtc; set => this._firstActivityTimeUtc = value; }

        /// <summary>Backing field for <see cref="IncidentNumber" /> property.</summary>
        private int? _incidentNumber;

        /// <summary>A sequential number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? IncidentNumber { get => this._incidentNumber; }

        /// <summary>Backing field for <see cref="IncidentUrl" /> property.</summary>
        private string _incidentUrl;

        /// <summary>The deep-link url to the incident in Azure portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string IncidentUrl { get => this._incidentUrl; }

        /// <summary>Backing field for <see cref="Label" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] _label;

        /// <summary>List of labels relevant to this incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get => this._label; set => this._label = value; }

        /// <summary>Backing field for <see cref="LastActivityTimeUtc" /> property.</summary>
        private global::System.DateTime? _lastActivityTimeUtc;

        /// <summary>The time of the last activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? LastActivityTimeUtc { get => this._lastActivityTimeUtc; set => this._lastActivityTimeUtc = value; }

        /// <summary>Backing field for <see cref="LastModifiedTimeUtc" /> property.</summary>
        private global::System.DateTime? _lastModifiedTimeUtc;

        /// <summary>The last time the incident was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTimeUtc { get => this._lastModifiedTimeUtc; }

        /// <summary>Internal Acessors for AdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalData { get => (this._additionalData = this._additionalData ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentAdditionalData()); set { {_additionalData = value;} } }

        /// <summary>Internal Acessors for AdditionalDataAlertProductName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalDataAlertProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertProductName = value; }

        /// <summary>Internal Acessors for AdditionalDataAlertsCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalDataAlertsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).AlertsCount = value; }

        /// <summary>Internal Acessors for AdditionalDataBookmarksCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalDataBookmarksCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).BookmarksCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).BookmarksCount = value; }

        /// <summary>Internal Acessors for AdditionalDataCommentsCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalDataCommentsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).CommentsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).CommentsCount = value; }

        /// <summary>Internal Acessors for AdditionalDataTactic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.AdditionalDataTactic { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).Tactic; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalDataInternal)AdditionalData).Tactic = value; }

        /// <summary>Internal Acessors for CreatedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.CreatedTimeUtc { get => this._createdTimeUtc; set { {_createdTimeUtc = value;} } }

        /// <summary>Internal Acessors for IncidentNumber</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.IncidentNumber { get => this._incidentNumber; set { {_incidentNumber = value;} } }

        /// <summary>Internal Acessors for IncidentUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.IncidentUrl { get => this._incidentUrl; set { {_incidentUrl = value;} } }

        /// <summary>Internal Acessors for LastModifiedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.LastModifiedTimeUtc { get => this._lastModifiedTimeUtc; set { {_lastModifiedTimeUtc = value;} } }

        /// <summary>Internal Acessors for Owner</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.Owner { get => (this._owner = this._owner ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentOwnerInfo()); set { {_owner = value;} } }

        /// <summary>Internal Acessors for OwnerType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.OwnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).OwnerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).OwnerType = value; }

        /// <summary>Internal Acessors for RelatedAnalyticRuleId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.RelatedAnalyticRuleId { get => this._relatedAnalyticRuleId; set { {_relatedAnalyticRuleId = value;} } }

        /// <summary>Internal Acessors for TeamInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformation { get => (this._teamInformation = this._teamInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.TeamInformation()); set { {_teamInformation = value;} } }

        /// <summary>Internal Acessors for TeamInformationDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformationDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Description = value; }

        /// <summary>Internal Acessors for TeamInformationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Name = value; }

        /// <summary>Internal Acessors for TeamInformationPrimaryChannelUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformationPrimaryChannelUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).PrimaryChannelUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).PrimaryChannelUrl = value; }

        /// <summary>Internal Acessors for TeamInformationTeamCreationTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformationTeamCreationTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamCreationTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamCreationTimeUtc = value; }

        /// <summary>Internal Acessors for TeamInformationTeamId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal.TeamInformationTeamId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamId = value; }

        /// <summary>Backing field for <see cref="Owner" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo _owner;

        /// <summary>Describes a user that the incident is assigned to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo Owner { get => (this._owner = this._owner ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentOwnerInfo()); set => this._owner = value; }

        /// <summary>The name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerAssignedTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).AssignedTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).AssignedTo = value ?? null; }

        /// <summary>The email of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).Email; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).Email = value ?? null; }

        /// <summary>The object id of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).ObjectId = value ?? null; }

        /// <summary>The type of the owner the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).OwnerType; }

        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).UserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfoInternal)Owner).UserPrincipalName = value ?? null; }

        /// <summary>Backing field for <see cref="ProviderIncidentId" /> property.</summary>
        private string _providerIncidentId;

        /// <summary>The incident ID assigned by the incident provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ProviderIncidentId { get => this._providerIncidentId; set => this._providerIncidentId = value; }

        /// <summary>Backing field for <see cref="ProviderName" /> property.</summary>
        private string _providerName;

        /// <summary>The name of the source provider that generated the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ProviderName { get => this._providerName; set => this._providerName = value; }

        /// <summary>Backing field for <see cref="RelatedAnalyticRuleId" /> property.</summary>
        private string[] _relatedAnalyticRuleId;

        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] RelatedAnalyticRuleId { get => this._relatedAnalyticRuleId; }

        /// <summary>Backing field for <see cref="Severity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity _severity;

        /// <summary>The severity of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity Severity { get => this._severity; set => this._severity = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus _status;

        /// <summary>The status of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TeamInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation _teamInformation;

        /// <summary>Describes a team for the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation TeamInformation { get => (this._teamInformation = this._teamInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.TeamInformation()); set => this._teamInformation = value; }

        /// <summary>The description of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Description; }

        /// <summary>The name of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).Name; }

        /// <summary>The primary channel URL of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationPrimaryChannelUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).PrimaryChannelUrl; }

        /// <summary>The time the team was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? TeamInformationTeamCreationTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamCreationTimeUtc; }

        /// <summary>Team ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationTeamId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformationInternal)TeamInformation).TeamId; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>The title of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Creates an new <see cref="IncidentProperties" /> instance.</summary>
        public IncidentProperties()
        {

        }
    }
    /// Describes incident properties
    public partial interface IIncidentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>List of product names of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of product names of alerts in the incident",
        SerializedName = @"alertProductNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] AdditionalDataAlertProductName { get;  }
        /// <summary>The number of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of alerts in the incident",
        SerializedName = @"alertsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataAlertsCount { get;  }
        /// <summary>The number of bookmarks in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of bookmarks in the incident",
        SerializedName = @"bookmarksCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataBookmarksCount { get;  }
        /// <summary>The number of comments in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of comments in the incident",
        SerializedName = @"commentsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataCommentsCount { get;  }
        /// <summary>The tactics associated with incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tactics associated with incident",
        SerializedName = @"tactics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get;  }
        /// <summary>The reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reason the incident was closed",
        SerializedName = @"classification",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get; set; }
        /// <summary>Describes the reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the reason the incident was closed",
        SerializedName = @"classificationComment",
        PossibleTypes = new [] { typeof(string) })]
        string ClassificationComment { get; set; }
        /// <summary>The classification reason the incident was closed with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The classification reason the incident was closed with",
        SerializedName = @"classificationReason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get; set; }
        /// <summary>The time the incident was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the incident was created",
        SerializedName = @"createdTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimeUtc { get;  }
        /// <summary>The description of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the incident",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The time of the first activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the first activity in the incident",
        SerializedName = @"firstActivityTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstActivityTimeUtc { get; set; }
        /// <summary>A sequential number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A sequential number",
        SerializedName = @"incidentNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? IncidentNumber { get;  }
        /// <summary>The deep-link url to the incident in Azure portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deep-link url to the incident in Azure portal",
        SerializedName = @"incidentUrl",
        PossibleTypes = new [] { typeof(string) })]
        string IncidentUrl { get;  }
        /// <summary>List of labels relevant to this incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of labels relevant to this incident",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get; set; }
        /// <summary>The time of the last activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the last activity in the incident",
        SerializedName = @"lastActivityTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastActivityTimeUtc { get; set; }
        /// <summary>The last time the incident was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time the incident was updated",
        SerializedName = @"lastModifiedTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTimeUtc { get;  }
        /// <summary>The name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the user the incident is assigned to.",
        SerializedName = @"assignedTo",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerAssignedTo { get; set; }
        /// <summary>The email of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email of the user the incident is assigned to.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerEmail { get; set; }
        /// <summary>The object id of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object id of the user the incident is assigned to.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerObjectId { get; set; }
        /// <summary>The type of the owner the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the owner the incident is assigned to.",
        SerializedName = @"ownerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get;  }
        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name of the user the incident is assigned to.",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The incident ID assigned by the incident provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The incident ID assigned by the incident provider",
        SerializedName = @"providerIncidentId",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderIncidentId { get; set; }
        /// <summary>The name of the source provider that generated the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the source provider that generated the incident",
        SerializedName = @"providerName",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderName { get; set; }
        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of resource ids of Analytic rules related to the incident",
        SerializedName = @"relatedAnalyticRuleIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelatedAnalyticRuleId { get;  }
        /// <summary>The severity of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The severity of the incident",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity Severity { get; set; }
        /// <summary>The status of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The status of the incident",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus Status { get; set; }
        /// <summary>The description of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the team",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationDescription { get;  }
        /// <summary>The name of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the team",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationName { get;  }
        /// <summary>The primary channel URL of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The primary channel URL of the team",
        SerializedName = @"primaryChannelUrl",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationPrimaryChannelUrl { get;  }
        /// <summary>The time the team was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the team was created",
        SerializedName = @"teamCreationTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TeamInformationTeamCreationTimeUtc { get;  }
        /// <summary>Team ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Team ID",
        SerializedName = @"teamId",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationTeamId { get;  }
        /// <summary>The title of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The title of the incident",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    /// Describes incident properties
    internal partial interface IIncidentPropertiesInternal

    {
        /// <summary>Additional data on the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData AdditionalData { get; set; }
        /// <summary>List of product names of alerts in the incident</summary>
        string[] AdditionalDataAlertProductName { get; set; }
        /// <summary>The number of alerts in the incident</summary>
        int? AdditionalDataAlertsCount { get; set; }
        /// <summary>The number of bookmarks in the incident</summary>
        int? AdditionalDataBookmarksCount { get; set; }
        /// <summary>The number of comments in the incident</summary>
        int? AdditionalDataCommentsCount { get; set; }
        /// <summary>The tactics associated with incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get; set; }
        /// <summary>The reason the incident was closed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get; set; }
        /// <summary>Describes the reason the incident was closed</summary>
        string ClassificationComment { get; set; }
        /// <summary>The classification reason the incident was closed with</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get; set; }
        /// <summary>The time the incident was created</summary>
        global::System.DateTime? CreatedTimeUtc { get; set; }
        /// <summary>The description of the incident</summary>
        string Description { get; set; }
        /// <summary>The time of the first activity in the incident</summary>
        global::System.DateTime? FirstActivityTimeUtc { get; set; }
        /// <summary>A sequential number</summary>
        int? IncidentNumber { get; set; }
        /// <summary>The deep-link url to the incident in Azure portal</summary>
        string IncidentUrl { get; set; }
        /// <summary>List of labels relevant to this incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get; set; }
        /// <summary>The time of the last activity in the incident</summary>
        global::System.DateTime? LastActivityTimeUtc { get; set; }
        /// <summary>The last time the incident was updated</summary>
        global::System.DateTime? LastModifiedTimeUtc { get; set; }
        /// <summary>Describes a user that the incident is assigned to</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo Owner { get; set; }
        /// <summary>The name of the user the incident is assigned to.</summary>
        string OwnerAssignedTo { get; set; }
        /// <summary>The email of the user the incident is assigned to.</summary>
        string OwnerEmail { get; set; }
        /// <summary>The object id of the user the incident is assigned to.</summary>
        string OwnerObjectId { get; set; }
        /// <summary>The type of the owner the incident is assigned to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get; set; }
        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The incident ID assigned by the incident provider</summary>
        string ProviderIncidentId { get; set; }
        /// <summary>The name of the source provider that generated the incident</summary>
        string ProviderName { get; set; }
        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        string[] RelatedAnalyticRuleId { get; set; }
        /// <summary>The severity of the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity Severity { get; set; }
        /// <summary>The status of the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus Status { get; set; }
        /// <summary>Describes a team for the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation TeamInformation { get; set; }
        /// <summary>The description of the team</summary>
        string TeamInformationDescription { get; set; }
        /// <summary>The name of the team</summary>
        string TeamInformationName { get; set; }
        /// <summary>The primary channel URL of the team</summary>
        string TeamInformationPrimaryChannelUrl { get; set; }
        /// <summary>The time the team was created</summary>
        global::System.DateTime? TeamInformationTeamCreationTimeUtc { get; set; }
        /// <summary>Team ID</summary>
        string TeamInformationTeamId { get; set; }
        /// <summary>The title of the incident</summary>
        string Title { get; set; }

    }
}