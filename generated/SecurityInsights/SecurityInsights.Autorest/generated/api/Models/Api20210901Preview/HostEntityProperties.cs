// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Host entity property bag.</summary>
    public partial class HostEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties __entityCommonProperties = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.EntityCommonProperties();

        /// <summary>
        /// A bag of custom fields that should be part of the entity and will be presented to the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; }

        /// <summary>Backing field for <see cref="AzureId" /> property.</summary>
        private string _azureId;

        /// <summary>The azure resource id of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string AzureId { get => this._azureId; }

        /// <summary>Backing field for <see cref="DnsDomain" /> property.</summary>
        private string _dnsDomain;

        /// <summary>
        /// The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string DnsDomain { get => this._dnsDomain; }

        /// <summary>
        /// The graph item display name which is a short humanly readable description of the graph item instance. This property is
        /// optional and might be system generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>The hostname without the domain suffix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; }

        /// <summary>Backing field for <see cref="IsDomainJoined" /> property.</summary>
        private bool? _isDomainJoined;

        /// <summary>Determines whether this host belongs to a domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public bool? IsDomainJoined { get => this._isDomainJoined; }

        /// <summary>Internal Acessors for AdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData = value; }

        /// <summary>Internal Acessors for FriendlyName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName = value; }

        /// <summary>Internal Acessors for AzureId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.AzureId { get => this._azureId; set { {_azureId = value;} } }

        /// <summary>Internal Acessors for DnsDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.DnsDomain { get => this._dnsDomain; set { {_dnsDomain = value;} } }

        /// <summary>Internal Acessors for HostName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.HostName { get => this._hostName; set { {_hostName = value;} } }

        /// <summary>Internal Acessors for IsDomainJoined</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.IsDomainJoined { get => this._isDomainJoined; set { {_isDomainJoined = value;} } }

        /// <summary>Internal Acessors for NetBiosName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.NetBiosName { get => this._netBiosName; set { {_netBiosName = value;} } }

        /// <summary>Internal Acessors for NtDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.NtDomain { get => this._ntDomain; set { {_ntDomain = value;} } }

        /// <summary>Internal Acessors for OSVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.OSVersion { get => this._oSVersion; set { {_oSVersion = value;} } }

        /// <summary>Internal Acessors for OmsAgentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IHostEntityPropertiesInternal.OmsAgentId { get => this._omsAgentId; set { {_omsAgentId = value;} } }

        /// <summary>Backing field for <see cref="NetBiosName" /> property.</summary>
        private string _netBiosName;

        /// <summary>The host name (pre-windows2000).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string NetBiosName { get => this._netBiosName; }

        /// <summary>Backing field for <see cref="NtDomain" /> property.</summary>
        private string _ntDomain;

        /// <summary>The NT domain that this host belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string NtDomain { get => this._ntDomain; }

        /// <summary>Backing field for <see cref="OSFamily" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OSFamily? _oSFamily;

        /// <summary>The operating system type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OSFamily? OSFamily { get => this._oSFamily; set => this._oSFamily = value; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>
        /// A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained
        /// than OSFamily or future values not supported by OSFamily enumeration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; }

        /// <summary>Backing field for <see cref="OmsAgentId" /> property.</summary>
        private string _omsAgentId;

        /// <summary>The OMS agent id, if the host has OMS agent installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string OmsAgentId { get => this._omsAgentId; }

        /// <summary>Creates an new <see cref="HostEntityProperties" /> instance.</summary>
        public HostEntityProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__entityCommonProperties), __entityCommonProperties);
            await eventListener.AssertObjectIsValid(nameof(__entityCommonProperties), __entityCommonProperties);
        }
    }
    /// Host entity property bag.
    public partial interface IHostEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties
    {
        /// <summary>The azure resource id of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The azure resource id of the VM.",
        SerializedName = @"azureID",
        PossibleTypes = new [] { typeof(string) })]
        string AzureId { get;  }
        /// <summary>
        /// The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain",
        SerializedName = @"dnsDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DnsDomain { get;  }
        /// <summary>The hostname without the domain suffix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The hostname without the domain suffix.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get;  }
        /// <summary>Determines whether this host belongs to a domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Determines whether this host belongs to a domain.",
        SerializedName = @"isDomainJoined",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDomainJoined { get;  }
        /// <summary>The host name (pre-windows2000).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The host name (pre-windows2000).",
        SerializedName = @"netBiosName",
        PossibleTypes = new [] { typeof(string) })]
        string NetBiosName { get;  }
        /// <summary>The NT domain that this host belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The NT domain that this host belongs to.",
        SerializedName = @"ntDomain",
        PossibleTypes = new [] { typeof(string) })]
        string NtDomain { get;  }
        /// <summary>The operating system type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operating system type.",
        SerializedName = @"osFamily",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OSFamily) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OSFamily? OSFamily { get; set; }
        /// <summary>
        /// A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained
        /// than OSFamily or future values not supported by OSFamily enumeration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get;  }
        /// <summary>The OMS agent id, if the host has OMS agent installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OMS agent id, if the host has OMS agent installed.",
        SerializedName = @"omsAgentID",
        PossibleTypes = new [] { typeof(string) })]
        string OmsAgentId { get;  }

    }
    /// Host entity property bag.
    internal partial interface IHostEntityPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal
    {
        /// <summary>The azure resource id of the VM.</summary>
        string AzureId { get; set; }
        /// <summary>
        /// The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain
        /// </summary>
        string DnsDomain { get; set; }
        /// <summary>The hostname without the domain suffix.</summary>
        string HostName { get; set; }
        /// <summary>Determines whether this host belongs to a domain.</summary>
        bool? IsDomainJoined { get; set; }
        /// <summary>The host name (pre-windows2000).</summary>
        string NetBiosName { get; set; }
        /// <summary>The NT domain that this host belongs to.</summary>
        string NtDomain { get; set; }
        /// <summary>The operating system type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OSFamily? OSFamily { get; set; }
        /// <summary>
        /// A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained
        /// than OSFamily or future values not supported by OSFamily enumeration
        /// </summary>
        string OSVersion { get; set; }
        /// <summary>The OMS agent id, if the host has OMS agent installed.</summary>
        string OmsAgentId { get; set; }

    }
}