// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Represents an incident in Azure Security Insights.</summary>
    public partial class Incident :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncident,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag __resourceWithEtag = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.ResourceWithEtag();

        /// <summary>List of product names of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] AdditionalDataAlertProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertProductName; }

        /// <summary>The number of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataAlertsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertsCount; }

        /// <summary>The number of bookmarks in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataBookmarksCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataBookmarksCount; }

        /// <summary>The number of comments in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AdditionalDataCommentsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataCommentsCount; }

        /// <summary>The tactics associated with incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataTactic; }

        /// <summary>The reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Classification; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Classification = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification)""); }

        /// <summary>Describes the reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ClassificationComment { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ClassificationComment; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ClassificationComment = value ?? null; }

        /// <summary>The classification reason the incident was closed with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ClassificationReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ClassificationReason = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason)""); }

        /// <summary>The time the incident was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).CreatedTimeUtc; }

        /// <summary>The description of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>Etag of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__resourceWithEtag).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__resourceWithEtag).Etag = value ?? null; }

        /// <summary>The time of the first activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? FirstActivityTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).FirstActivityTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).FirstActivityTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id; }

        /// <summary>List of labels relevant to this incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Label; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Label = value ?? null /* arrayOf */; }

        /// <summary>The time of the last activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastActivityTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).LastActivityTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).LastActivityTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>The last time the incident was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModifiedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).LastModifiedTimeUtc; }

        /// <summary>Internal Acessors for AdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalData = value; }

        /// <summary>Internal Acessors for AdditionalDataAlertProductName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalDataAlertProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertProductName = value; }

        /// <summary>Internal Acessors for AdditionalDataAlertsCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalDataAlertsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataAlertsCount = value; }

        /// <summary>Internal Acessors for AdditionalDataBookmarksCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalDataBookmarksCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataBookmarksCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataBookmarksCount = value; }

        /// <summary>Internal Acessors for AdditionalDataCommentsCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalDataCommentsCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataCommentsCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataCommentsCount = value; }

        /// <summary>Internal Acessors for AdditionalDataTactic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.AdditionalDataTactic { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataTactic; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).AdditionalDataTactic = value; }

        /// <summary>Internal Acessors for CreatedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.CreatedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).CreatedTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).CreatedTimeUtc = value; }

        /// <summary>Internal Acessors for LastModifiedTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.LastModifiedTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).LastModifiedTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).LastModifiedTimeUtc = value; }

        /// <summary>Internal Acessors for Number</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.Number { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentNumber = value; }

        /// <summary>Internal Acessors for Owner</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.Owner { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Owner; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Owner = value; }

        /// <summary>Internal Acessors for OwnerType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.OwnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RelatedAnalyticRuleId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.RelatedAnalyticRuleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).RelatedAnalyticRuleId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).RelatedAnalyticRuleId = value; }

        /// <summary>Internal Acessors for TeamInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformation { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformation; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformation = value; }

        /// <summary>Internal Acessors for TeamInformationDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformationDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationDescription = value; }

        /// <summary>Internal Acessors for TeamInformationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationName = value; }

        /// <summary>Internal Acessors for TeamInformationPrimaryChannelUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformationPrimaryChannelUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationPrimaryChannelUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationPrimaryChannelUrl = value; }

        /// <summary>Internal Acessors for TeamInformationTeamCreationTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformationTeamCreationTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamCreationTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamCreationTimeUtc = value; }

        /// <summary>Internal Acessors for TeamInformationTeamId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.TeamInformationTeamId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamId = value; }

        /// <summary>Internal Acessors for Url</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentInternal.Url { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentUrl = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name; }

        /// <summary>A sequential number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? Number { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentNumber; }

        /// <summary>The name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerAssignedTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerAssignedTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerAssignedTo = value ?? null; }

        /// <summary>The email of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerEmail = value ?? null; }

        /// <summary>The object id of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerObjectId = value ?? null; }

        /// <summary>The type of the owner the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerType; }

        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string OwnerUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerUserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).OwnerUserPrincipalName = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentProperties _property;

        /// <summary>Incident properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IncidentProperties()); set => this._property = value; }

        /// <summary>The incident ID assigned by the incident provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ProviderIncidentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ProviderIncidentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ProviderIncidentId = value ?? null; }

        /// <summary>The name of the source provider that generated the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ProviderName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ProviderName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).ProviderName = value ?? null; }

        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] RelatedAnalyticRuleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).RelatedAnalyticRuleId; }

        /// <summary>The severity of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity? Severity { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Severity; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Severity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity)""); }

        /// <summary>The status of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>The description of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationDescription; }

        /// <summary>The name of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationName; }

        /// <summary>The primary channel URL of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationPrimaryChannelUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationPrimaryChannelUrl; }

        /// <summary>The time the team was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? TeamInformationTeamCreationTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamCreationTimeUtc; }

        /// <summary>Team ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string TeamInformationTeamId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).TeamInformationTeamId; }

        /// <summary>The title of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Title { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).Title = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type; }

        /// <summary>The deep-link url to the incident in Azure portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Url { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentPropertiesInternal)Property).IncidentUrl; }

        /// <summary>Creates an new <see cref="Incident" /> instance.</summary>
        public Incident()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceWithEtag), __resourceWithEtag);
            await eventListener.AssertObjectIsValid(nameof(__resourceWithEtag), __resourceWithEtag);
        }
    }
    /// Represents an incident in Azure Security Insights.
    public partial interface IIncident :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag
    {
        /// <summary>List of product names of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of product names of alerts in the incident",
        SerializedName = @"alertProductNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] AdditionalDataAlertProductName { get;  }
        /// <summary>The number of alerts in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of alerts in the incident",
        SerializedName = @"alertsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataAlertsCount { get;  }
        /// <summary>The number of bookmarks in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of bookmarks in the incident",
        SerializedName = @"bookmarksCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataBookmarksCount { get;  }
        /// <summary>The number of comments in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of comments in the incident",
        SerializedName = @"commentsCount",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalDataCommentsCount { get;  }
        /// <summary>The tactics associated with incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tactics associated with incident",
        SerializedName = @"tactics",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get;  }
        /// <summary>The reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reason the incident was closed",
        SerializedName = @"classification",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get; set; }
        /// <summary>Describes the reason the incident was closed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the reason the incident was closed",
        SerializedName = @"classificationComment",
        PossibleTypes = new [] { typeof(string) })]
        string ClassificationComment { get; set; }
        /// <summary>The classification reason the incident was closed with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The classification reason the incident was closed with",
        SerializedName = @"classificationReason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get; set; }
        /// <summary>The time the incident was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the incident was created",
        SerializedName = @"createdTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimeUtc { get;  }
        /// <summary>The description of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the incident",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The time of the first activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the first activity in the incident",
        SerializedName = @"firstActivityTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstActivityTimeUtc { get; set; }
        /// <summary>List of labels relevant to this incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of labels relevant to this incident",
        SerializedName = @"labels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get; set; }
        /// <summary>The time of the last activity in the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of the last activity in the incident",
        SerializedName = @"lastActivityTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastActivityTimeUtc { get; set; }
        /// <summary>The last time the incident was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time the incident was updated",
        SerializedName = @"lastModifiedTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTimeUtc { get;  }
        /// <summary>A sequential number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A sequential number",
        SerializedName = @"incidentNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? Number { get;  }
        /// <summary>The name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the user the incident is assigned to.",
        SerializedName = @"assignedTo",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerAssignedTo { get; set; }
        /// <summary>The email of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email of the user the incident is assigned to.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerEmail { get; set; }
        /// <summary>The object id of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object id of the user the incident is assigned to.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerObjectId { get; set; }
        /// <summary>The type of the owner the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the owner the incident is assigned to.",
        SerializedName = @"ownerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get;  }
        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user principal name of the user the incident is assigned to.",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string OwnerUserPrincipalName { get; set; }
        /// <summary>The incident ID assigned by the incident provider</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The incident ID assigned by the incident provider",
        SerializedName = @"providerIncidentId",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderIncidentId { get; set; }
        /// <summary>The name of the source provider that generated the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the source provider that generated the incident",
        SerializedName = @"providerName",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderName { get; set; }
        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of resource ids of Analytic rules related to the incident",
        SerializedName = @"relatedAnalyticRuleIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] RelatedAnalyticRuleId { get;  }
        /// <summary>The severity of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The severity of the incident",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity? Severity { get; set; }
        /// <summary>The status of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the incident",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus? Status { get; set; }
        /// <summary>The description of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The description of the team",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationDescription { get;  }
        /// <summary>The name of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the team",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationName { get;  }
        /// <summary>The primary channel URL of the team</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The primary channel URL of the team",
        SerializedName = @"primaryChannelUrl",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationPrimaryChannelUrl { get;  }
        /// <summary>The time the team was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the team was created",
        SerializedName = @"teamCreationTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TeamInformationTeamCreationTimeUtc { get;  }
        /// <summary>Team ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Team ID",
        SerializedName = @"teamId",
        PossibleTypes = new [] { typeof(string) })]
        string TeamInformationTeamId { get;  }
        /// <summary>The title of the incident</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The title of the incident",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }
        /// <summary>The deep-link url to the incident in Azure portal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deep-link url to the incident in Azure portal",
        SerializedName = @"incidentUrl",
        PossibleTypes = new [] { typeof(string) })]
        string Url { get;  }

    }
    /// Represents an incident in Azure Security Insights.
    internal partial interface IIncidentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal
    {
        /// <summary>Additional data on the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentAdditionalData AdditionalData { get; set; }
        /// <summary>List of product names of alerts in the incident</summary>
        string[] AdditionalDataAlertProductName { get; set; }
        /// <summary>The number of alerts in the incident</summary>
        int? AdditionalDataAlertsCount { get; set; }
        /// <summary>The number of bookmarks in the incident</summary>
        int? AdditionalDataBookmarksCount { get; set; }
        /// <summary>The number of comments in the incident</summary>
        int? AdditionalDataCommentsCount { get; set; }
        /// <summary>The tactics associated with incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AttackTactic[] AdditionalDataTactic { get; set; }
        /// <summary>The reason the incident was closed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassification? Classification { get; set; }
        /// <summary>Describes the reason the incident was closed</summary>
        string ClassificationComment { get; set; }
        /// <summary>The classification reason the incident was closed with</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentClassificationReason? ClassificationReason { get; set; }
        /// <summary>The time the incident was created</summary>
        global::System.DateTime? CreatedTimeUtc { get; set; }
        /// <summary>The description of the incident</summary>
        string Description { get; set; }
        /// <summary>The time of the first activity in the incident</summary>
        global::System.DateTime? FirstActivityTimeUtc { get; set; }
        /// <summary>List of labels relevant to this incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentLabel[] Label { get; set; }
        /// <summary>The time of the last activity in the incident</summary>
        global::System.DateTime? LastActivityTimeUtc { get; set; }
        /// <summary>The last time the incident was updated</summary>
        global::System.DateTime? LastModifiedTimeUtc { get; set; }
        /// <summary>A sequential number</summary>
        int? Number { get; set; }
        /// <summary>Describes a user that the incident is assigned to</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentOwnerInfo Owner { get; set; }
        /// <summary>The name of the user the incident is assigned to.</summary>
        string OwnerAssignedTo { get; set; }
        /// <summary>The email of the user the incident is assigned to.</summary>
        string OwnerEmail { get; set; }
        /// <summary>The object id of the user the incident is assigned to.</summary>
        string OwnerObjectId { get; set; }
        /// <summary>The type of the owner the incident is assigned to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.OwnerType? OwnerType { get; set; }
        /// <summary>The user principal name of the user the incident is assigned to.</summary>
        string OwnerUserPrincipalName { get; set; }
        /// <summary>Incident properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIncidentProperties Property { get; set; }
        /// <summary>The incident ID assigned by the incident provider</summary>
        string ProviderIncidentId { get; set; }
        /// <summary>The name of the source provider that generated the incident</summary>
        string ProviderName { get; set; }
        /// <summary>List of resource ids of Analytic rules related to the incident</summary>
        string[] RelatedAnalyticRuleId { get; set; }
        /// <summary>The severity of the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentSeverity? Severity { get; set; }
        /// <summary>The status of the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.IncidentStatus? Status { get; set; }
        /// <summary>Describes a team for the incident</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ITeamInformation TeamInformation { get; set; }
        /// <summary>The description of the team</summary>
        string TeamInformationDescription { get; set; }
        /// <summary>The name of the team</summary>
        string TeamInformationName { get; set; }
        /// <summary>The primary channel URL of the team</summary>
        string TeamInformationPrimaryChannelUrl { get; set; }
        /// <summary>The time the team was created</summary>
        global::System.DateTime? TeamInformationTeamCreationTimeUtc { get; set; }
        /// <summary>Team ID</summary>
        string TeamInformationTeamId { get; set; }
        /// <summary>The title of the incident</summary>
        string Title { get; set; }
        /// <summary>The deep-link url to the incident in Azure portal</summary>
        string Url { get; set; }

    }
}