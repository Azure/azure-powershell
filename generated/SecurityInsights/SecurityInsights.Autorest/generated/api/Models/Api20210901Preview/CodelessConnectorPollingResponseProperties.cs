// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Describes the response from the external server</summary>
    public partial class CodelessConnectorPollingResponseProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingResponseProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingResponsePropertiesInternal
    {

        /// <summary>Backing field for <see cref="EventsJsonPath" /> property.</summary>
        private string[] _eventsJsonPath;

        /// <summary>Describes the path we should extract the data in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] EventsJsonPath { get => this._eventsJsonPath; set => this._eventsJsonPath = value; }

        /// <summary>Backing field for <see cref="IsGzipCompressed" /> property.</summary>
        private bool? _isGzipCompressed;

        /// <summary>Describes if the data in the response is Gzip</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public bool? IsGzipCompressed { get => this._isGzipCompressed; set => this._isGzipCompressed = value; }

        /// <summary>Backing field for <see cref="SuccessStatusJsonPath" /> property.</summary>
        private string _successStatusJsonPath;

        /// <summary>Describes the path we should extract the status code in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string SuccessStatusJsonPath { get => this._successStatusJsonPath; set => this._successStatusJsonPath = value; }

        /// <summary>Backing field for <see cref="SuccessStatusValue" /> property.</summary>
        private string _successStatusValue;

        /// <summary>Describes the path we should extract the status value in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string SuccessStatusValue { get => this._successStatusValue; set => this._successStatusValue = value; }

        /// <summary>
        /// Creates an new <see cref="CodelessConnectorPollingResponseProperties" /> instance.
        /// </summary>
        public CodelessConnectorPollingResponseProperties()
        {

        }
    }
    /// Describes the response from the external server
    public partial interface ICodelessConnectorPollingResponseProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>Describes the path we should extract the data in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Describes the path we should extract the data in the response",
        SerializedName = @"eventsJsonPaths",
        PossibleTypes = new [] { typeof(string) })]
        string[] EventsJsonPath { get; set; }
        /// <summary>Describes if the data in the response is Gzip</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes if the data in the response is Gzip",
        SerializedName = @"isGzipCompressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsGzipCompressed { get; set; }
        /// <summary>Describes the path we should extract the status code in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the path we should extract the status code in the response",
        SerializedName = @"successStatusJsonPath",
        PossibleTypes = new [] { typeof(string) })]
        string SuccessStatusJsonPath { get; set; }
        /// <summary>Describes the path we should extract the status value in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the path we should extract the status value in the response",
        SerializedName = @"successStatusValue",
        PossibleTypes = new [] { typeof(string) })]
        string SuccessStatusValue { get; set; }

    }
    /// Describes the response from the external server
    internal partial interface ICodelessConnectorPollingResponsePropertiesInternal

    {
        /// <summary>Describes the path we should extract the data in the response</summary>
        string[] EventsJsonPath { get; set; }
        /// <summary>Describes if the data in the response is Gzip</summary>
        bool? IsGzipCompressed { get; set; }
        /// <summary>Describes the path we should extract the status code in the response</summary>
        string SuccessStatusJsonPath { get; set; }
        /// <summary>Describes the path we should extract the status value in the response</summary>
        string SuccessStatusValue { get; set; }

    }
}