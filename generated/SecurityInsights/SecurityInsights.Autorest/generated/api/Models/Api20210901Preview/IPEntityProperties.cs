// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Ip entity property bag.</summary>
    public partial class IPEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties __entityCommonProperties = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.EntityCommonProperties();

        /// <summary>
        /// A bag of custom fields that should be part of the entity and will be presented to the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; }

        /// <summary>Backing field for <see cref="Address" /> property.</summary>
        private string _address;

        /// <summary>The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Address { get => this._address; }

        /// <summary>
        /// The graph item display name which is a short humanly readable description of the graph item instance. This property is
        /// optional and might be system generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocation _location;

        /// <summary>The geo-location context attached to the ip entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocation Location { get => (this._location = this._location ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.GeoLocation()); }

        /// <summary>Autonomous System Number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? LocationAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Asn; }

        /// <summary>City name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string LocationCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).City; }

        /// <summary>The country code according to ISO 3166 format</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string LocationCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryCode; }

        /// <summary>
        /// Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string LocationCountryName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryName; }

        /// <summary>
        /// The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive
        /// numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public double? LocationLatitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Latitude; }

        /// <summary>
        /// The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive
        /// numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public double? LocationLongitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Longitude; }

        /// <summary>State name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string LocationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).State; }

        /// <summary>Internal Acessors for AdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData = value; }

        /// <summary>Internal Acessors for FriendlyName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName = value; }

        /// <summary>Internal Acessors for Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.Address { get => this._address; set { {_address = value;} } }

        /// <summary>Internal Acessors for Location</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocation Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.Location { get => (this._location = this._location ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.GeoLocation()); set { {_location = value;} } }

        /// <summary>Internal Acessors for LocationAsn</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Asn; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Asn = value; }

        /// <summary>Internal Acessors for LocationCity</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).City; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).City = value; }

        /// <summary>Internal Acessors for LocationCountryCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryCode = value; }

        /// <summary>Internal Acessors for LocationCountryName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationCountryName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).CountryName = value; }

        /// <summary>Internal Acessors for LocationLatitude</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationLatitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Latitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Latitude = value; }

        /// <summary>Internal Acessors for LocationLongitude</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationLongitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Longitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).Longitude = value; }

        /// <summary>Internal Acessors for LocationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.LocationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocationInternal)Location).State = value; }

        /// <summary>Internal Acessors for ThreatIntelligence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence[] Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IIPEntityPropertiesInternal.ThreatIntelligence { get => this._threatIntelligence; set { {_threatIntelligence = value;} } }

        /// <summary>Backing field for <see cref="ThreatIntelligence" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence[] _threatIntelligence;

        /// <summary>A list of TI contexts attached to the ip entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence[] ThreatIntelligence { get => this._threatIntelligence; }

        /// <summary>Creates an new <see cref="IPEntityProperties" /> instance.</summary>
        public IPEntityProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__entityCommonProperties), __entityCommonProperties);
            await eventListener.AssertObjectIsValid(nameof(__entityCommonProperties), __entityCommonProperties);
        }
    }
    /// Ip entity property bag.
    public partial interface IIPEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties
    {
        /// <summary>The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get;  }
        /// <summary>Autonomous System Number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Autonomous System Number",
        SerializedName = @"asn",
        PossibleTypes = new [] { typeof(int) })]
        int? LocationAsn { get;  }
        /// <summary>City name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"City name",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string LocationCity { get;  }
        /// <summary>The country code according to ISO 3166 format</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The country code according to ISO 3166 format",
        SerializedName = @"countryCode",
        PossibleTypes = new [] { typeof(string) })]
        string LocationCountryCode { get;  }
        /// <summary>
        /// Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name",
        SerializedName = @"countryName",
        PossibleTypes = new [] { typeof(string) })]
        string LocationCountryName { get;  }
        /// <summary>
        /// The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive
        /// numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(double) })]
        double? LocationLatitude { get;  }
        /// <summary>
        /// The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive
        /// numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(double) })]
        double? LocationLongitude { get;  }
        /// <summary>State name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State name",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string LocationState { get;  }
        /// <summary>A list of TI contexts attached to the ip entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A list of TI contexts attached to the ip entity.",
        SerializedName = @"threatIntelligence",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence[] ThreatIntelligence { get;  }

    }
    /// Ip entity property bag.
    internal partial interface IIPEntityPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal
    {
        /// <summary>The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)</summary>
        string Address { get; set; }
        /// <summary>The geo-location context attached to the ip entity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGeoLocation Location { get; set; }
        /// <summary>Autonomous System Number</summary>
        int? LocationAsn { get; set; }
        /// <summary>City name</summary>
        string LocationCity { get; set; }
        /// <summary>The country code according to ISO 3166 format</summary>
        string LocationCountryCode { get; set; }
        /// <summary>
        /// Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name
        /// </summary>
        string LocationCountryName { get; set; }
        /// <summary>
        /// The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive
        /// numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        double? LocationLatitude { get; set; }
        /// <summary>
        /// The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive
        /// numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or
        /// postal code.
        /// </summary>
        double? LocationLongitude { get; set; }
        /// <summary>State name</summary>
        string LocationState { get; set; }
        /// <summary>A list of TI contexts attached to the ip entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligence[] ThreatIntelligence { get; set; }

    }
}