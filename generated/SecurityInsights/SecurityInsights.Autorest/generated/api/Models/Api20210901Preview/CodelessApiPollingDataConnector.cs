// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Represents Codeless API Polling data connector.</summary>
    public partial class CodelessApiPollingDataConnector :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnector,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnector"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnector __dataConnector = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.DataConnector();

        /// <summary>A prefix send in the header before the actual token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthApiKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthApiKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthApiKeyIdentifier = value ?? null; }

        /// <summary>The header name which the token is sent with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthApiKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthApiKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthApiKeyName = value ?? null; }

        /// <summary>The endpoint used to authorize the user, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthAuthorizationEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthAuthorizationEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthAuthorizationEndpoint = value ?? null; }

        /// <summary>The query parameters used in authorization request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthAuthorizationEndpointQueryParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthAuthorizationEndpointQueryParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthAuthorizationEndpointQueryParameter = value ?? null /* model class */; }

        /// <summary>Describes the flow name, for example 'AuthCode' for Oauth 2.0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthFlowName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthFlowName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthFlowName = value ?? null; }

        /// <summary>Marks if the key should sent in header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthIsApiKeyInPostPayload { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthIsApiKeyInPostPayload; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthIsApiKeyInPostPayload = value ?? null; }

        /// <summary>
        /// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? AuthIsClientSecretInHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthIsClientSecretInHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthIsClientSecretInHeader = value ?? default(bool); }

        /// <summary>
        /// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthRedirectionEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthRedirectionEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthRedirectionEndpoint = value ?? null; }

        /// <summary>The OAuth token scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthScope = value ?? null; }

        /// <summary>The endpoint used to issue a token, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthTokenEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpoint = value ?? null; }

        /// <summary>The query headers used in token request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpointHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpointHeader = value ?? null /* model class */; }

        /// <summary>The query parameters used in token request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointQueryParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpointQueryParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthTokenEndpointQueryParameter = value ?? null /* model class */; }

        /// <summary>The authentication type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AuthType = value ?? null; }

        /// <summary>Set connector as preview</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? AvailabilityIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AvailabilityIsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AvailabilityIsPreview = value ?? default(bool); }

        /// <summary>The connector Availability Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? AvailabilityStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AvailabilityStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).AvailabilityStatus = value ?? default(int); }

        /// <summary>Define the way the connector check connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IConnectivityCriteria[] ConnectorUiConfigConnectivityCriterion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigConnectivityCriterion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigConnectivityCriterion = value ?? null /* arrayOf */; }

        /// <summary>
        /// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ConnectorUiConfigCustomImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigCustomImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigCustomImage = value ?? null; }

        /// <summary>Data types to check for last data received</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ILastDataReceivedDataType[] ConnectorUiConfigDataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigDataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigDataType = value ?? null /* arrayOf */; }

        /// <summary>Connector description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ConnectorUiConfigDescriptionMarkdown { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigDescriptionMarkdown; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigDescriptionMarkdown = value ?? null; }

        /// <summary>Name of the table the connector will insert the data to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ConnectorUiConfigGraphQueriesTableName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigGraphQueriesTableName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigGraphQueriesTableName = value ?? null; }

        /// <summary>The graph query to show the current data status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGraphQueries[] ConnectorUiConfigGraphQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigGraphQuery; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigGraphQuery = value ?? null /* arrayOf */; }

        /// <summary>Instruction steps to enable the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IInstructionSteps[] ConnectorUiConfigInstructionStep { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigInstructionStep; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigInstructionStep = value ?? null /* arrayOf */; }

        /// <summary>Connector publisher name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ConnectorUiConfigPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigPublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigPublisher = value ?? null; }

        /// <summary>The sample queries for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ISampleQueries[] ConnectorUiConfigSampleQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigSampleQuery; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigSampleQuery = value ?? null /* arrayOf */; }

        /// <summary>Connector blade title</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ConnectorUiConfigTitle { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigTitle; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigTitle = value ?? null; }

        /// <summary>Etag of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__dataConnector).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__dataConnector).Etag = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Id; }

        /// <summary>The data connector kind</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataConnectorKind Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnectorInternal)__dataConnector).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnectorInternal)__dataConnector).Kind = value ; }

        /// <summary>Internal Acessors for ConnectorUiConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessUiConnectorConfigProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.ConnectorUiConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfig = value; }

        /// <summary>Internal Acessors for ConnectorUiConfigAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAvailability Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.ConnectorUiConfigAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigAvailability = value; }

        /// <summary>Internal Acessors for ConnectorUiConfigPermission</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IPermissions Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.ConnectorUiConfigPermission { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigPermission; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ConnectorUiConfigPermission = value; }

        /// <summary>Internal Acessors for PollingConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingConfigProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.PollingConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfig = value; }

        /// <summary>Internal Acessors for PollingConfigAuth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingAuthProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.PollingConfigAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigAuth = value; }

        /// <summary>Internal Acessors for PollingConfigPaging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingPagingProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.PollingConfigPaging { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigPaging; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigPaging = value; }

        /// <summary>Internal Acessors for PollingConfigRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingRequestProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.PollingConfigRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigRequest = value; }

        /// <summary>Internal Acessors for PollingConfigResponse</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingResponseProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.PollingConfigResponse { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigResponse; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigResponse = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParameters Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessApiPollingDataConnectorInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ApiPollingParameters()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Name; }

        /// <summary>Defines the name of a next page attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingNextPageParaName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingNextPageParaName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingNextPageParaName = value ?? null; }

        /// <summary>Defines the path to a next page token JSON</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingNextPageTokenJsonPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingNextPageTokenJsonPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingNextPageTokenJsonPath = value ?? null; }

        /// <summary>Defines the path to a page count attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingPageCountAttributePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageCountAttributePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageCountAttributePath = value ?? null; }

        /// <summary>Defines the paging size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? PagingPageSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageSize = value ?? default(int); }

        /// <summary>Defines the name of the page size parameter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingPageSizeParaName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageSizeParaName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageSizeParaName = value ?? null; }

        /// <summary>Defines the path to a paging time stamp attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingPageTimeStampAttributePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageTimeStampAttributePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageTimeStampAttributePath = value ?? null; }

        /// <summary>Defines the path to a page total count attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingPageTotalCountAttributePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageTotalCountAttributePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingPageTotalCountAttributePath = value ?? null; }

        /// <summary>Determines whether to search for the latest time stamp in the events list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingSearchTheLatestTimeStampFromEventsList { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingSearchTheLatestTimeStampFromEventsList; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingSearchTheLatestTimeStampFromEventsList = value ?? null; }

        /// <summary>Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PagingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PagingType = value ?? null; }

        /// <summary>Customs permissions required for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICustomsPermission[] PermissionCustom { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PermissionCustom; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PermissionCustom = value ?? null /* arrayOf */; }

        /// <summary>Resource provider permissions required for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProvider[] PermissionResourceProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PermissionResourceProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PermissionResourceProvider = value ?? null /* arrayOf */; }

        /// <summary>The poller active status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? PollingConfigIsActive { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigIsActive; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).PollingConfigIsActive = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParameters _property;

        /// <summary>Codeless poling data connector properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParameters Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ApiPollingParameters()); set => this._property = value; }

        /// <summary>Describe the endpoint we should pull the data from</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestApiEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestApiEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestApiEndpoint = value ?? null; }

        /// <summary>This will be used the query events from the end of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestEndTimeAttributeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestEndTimeAttributeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestEndTimeAttributeName = value ?? null; }

        /// <summary>Describe the headers sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestHeader = value ?? null /* model class */; }

        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestHttpMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestHttpMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestHttpMethod = value ?? null; }

        /// <summary>Describe the query parameters sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestQueryParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryParameter = value ?? null /* model class */; }

        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestQueryParametersTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryParametersTemplate; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryParametersTemplate = value ?? null; }

        /// <summary>The time format will be used the query events in a specific window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestQueryTimeFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryTimeFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryTimeFormat = value ?? null; }

        /// <summary>The window interval we will use the pull the data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? RequestQueryWindowInMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryWindowInMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestQueryWindowInMin = value ?? default(int); }

        /// <summary>Defines the rate limit QPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? RequestRateLimitQp { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestRateLimitQp; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestRateLimitQp = value ?? default(int); }

        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? RequestRetryCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestRetryCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestRetryCount = value ?? default(int); }

        /// <summary>This will be used the query events from a start of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string RequestStartTimeAttributeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestStartTimeAttributeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestStartTimeAttributeName = value ?? null; }

        /// <summary>The number of seconds we will consider as a request timeout</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public int? RequestTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).RequestTimeoutInSecond = value ?? default(int); }

        /// <summary>Describes the path we should extract the data in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] ResponseEventsJsonPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseEventsJsonPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseEventsJsonPath = value ?? null /* arrayOf */; }

        /// <summary>Describes if the data in the response is Gzip</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? ResponseIsGzipCompressed { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseIsGzipCompressed; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseIsGzipCompressed = value ?? default(bool); }

        /// <summary>Describes the path we should extract the status code in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ResponseSuccessStatusJsonPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseSuccessStatusJsonPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseSuccessStatusJsonPath = value ?? null; }

        /// <summary>Describes the path we should extract the status value in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ResponseSuccessStatusValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseSuccessStatusValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParametersInternal)Property).ResponseSuccessStatusValue = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__dataConnector).Type; }

        /// <summary>Creates an new <see cref="CodelessApiPollingDataConnector" /> instance.</summary>
        public CodelessApiPollingDataConnector()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__dataConnector), __dataConnector);
            await eventListener.AssertObjectIsValid(nameof(__dataConnector), __dataConnector);
        }
    }
    /// Represents Codeless API Polling data connector.
    public partial interface ICodelessApiPollingDataConnector :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnector
    {
        /// <summary>A prefix send in the header before the actual token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A prefix send in the header before the actual token",
        SerializedName = @"apiKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string AuthApiKeyIdentifier { get; set; }
        /// <summary>The header name which the token is sent with</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The header name which the token is sent with",
        SerializedName = @"apiKeyName",
        PossibleTypes = new [] { typeof(string) })]
        string AuthApiKeyName { get; set; }
        /// <summary>The endpoint used to authorize the user, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint used to authorize the user, used in Oauth 2.0 flow",
        SerializedName = @"authorizationEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthAuthorizationEndpoint { get; set; }
        /// <summary>The query parameters used in authorization request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters used in authorization request, used in Oauth 2.0 flow",
        SerializedName = @"authorizationEndpointQueryParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthAuthorizationEndpointQueryParameter { get; set; }
        /// <summary>Describes the flow name, for example 'AuthCode' for Oauth 2.0</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the flow name, for example 'AuthCode' for Oauth 2.0",
        SerializedName = @"flowName",
        PossibleTypes = new [] { typeof(string) })]
        string AuthFlowName { get; set; }
        /// <summary>Marks if the key should sent in header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Marks if the key should sent in header",
        SerializedName = @"isApiKeyInPostPayload",
        PossibleTypes = new [] { typeof(string) })]
        string AuthIsApiKeyInPostPayload { get; set; }
        /// <summary>
        /// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow",
        SerializedName = @"isClientSecretInHeader",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AuthIsClientSecretInHeader { get; set; }
        /// <summary>
        /// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow",
        SerializedName = @"redirectionEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthRedirectionEndpoint { get; set; }
        /// <summary>The OAuth token scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OAuth token scope",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string AuthScope { get; set; }
        /// <summary>The endpoint used to issue a token, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The endpoint used to issue a token, used in Oauth 2.0 flow",
        SerializedName = @"tokenEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string AuthTokenEndpoint { get; set; }
        /// <summary>The query headers used in token request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query headers used in token request, used in Oauth 2.0 flow",
        SerializedName = @"tokenEndpointHeaders",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointHeader { get; set; }
        /// <summary>The query parameters used in token request, used in Oauth 2.0 flow</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The query parameters used in token request, used in Oauth 2.0 flow",
        SerializedName = @"tokenEndpointQueryParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointQueryParameter { get; set; }
        /// <summary>The authentication type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthType { get; set; }
        /// <summary>Set connector as preview</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set connector as preview",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailabilityIsPreview { get; set; }
        /// <summary>The connector Availability Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The connector Availability Status",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(int) })]
        int? AvailabilityStatus { get; set; }
        /// <summary>Define the way the connector check connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Define the way the connector check connectivity",
        SerializedName = @"connectivityCriteria",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IConnectivityCriteria) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IConnectivityCriteria[] ConnectorUiConfigConnectivityCriterion { get; set; }
        /// <summary>
        /// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery",
        SerializedName = @"customImage",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorUiConfigCustomImage { get; set; }
        /// <summary>Data types to check for last data received</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data types to check for last data received",
        SerializedName = @"dataTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ILastDataReceivedDataType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ILastDataReceivedDataType[] ConnectorUiConfigDataType { get; set; }
        /// <summary>Connector description</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector description",
        SerializedName = @"descriptionMarkdown",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorUiConfigDescriptionMarkdown { get; set; }
        /// <summary>Name of the table the connector will insert the data to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the table the connector will insert the data to",
        SerializedName = @"graphQueriesTableName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorUiConfigGraphQueriesTableName { get; set; }
        /// <summary>The graph query to show the current data status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The graph query to show the current data status",
        SerializedName = @"graphQueries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGraphQueries) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGraphQueries[] ConnectorUiConfigGraphQuery { get; set; }
        /// <summary>Instruction steps to enable the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Instruction steps to enable the connector",
        SerializedName = @"instructionSteps",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IInstructionSteps) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IInstructionSteps[] ConnectorUiConfigInstructionStep { get; set; }
        /// <summary>Connector publisher name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector publisher name",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorUiConfigPublisher { get; set; }
        /// <summary>The sample queries for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sample queries for the connector",
        SerializedName = @"sampleQueries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ISampleQueries) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ISampleQueries[] ConnectorUiConfigSampleQuery { get; set; }
        /// <summary>Connector blade title</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Connector blade title",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectorUiConfigTitle { get; set; }
        /// <summary>Defines the name of a next page attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the name of a next page attribute",
        SerializedName = @"nextPageParaName",
        PossibleTypes = new [] { typeof(string) })]
        string PagingNextPageParaName { get; set; }
        /// <summary>Defines the path to a next page token JSON</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the path to a next page token JSON",
        SerializedName = @"nextPageTokenJsonPath",
        PossibleTypes = new [] { typeof(string) })]
        string PagingNextPageTokenJsonPath { get; set; }
        /// <summary>Defines the path to a page count attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the path to a page count attribute",
        SerializedName = @"pageCountAttributePath",
        PossibleTypes = new [] { typeof(string) })]
        string PagingPageCountAttributePath { get; set; }
        /// <summary>Defines the paging size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the paging size",
        SerializedName = @"pageSize",
        PossibleTypes = new [] { typeof(int) })]
        int? PagingPageSize { get; set; }
        /// <summary>Defines the name of the page size parameter</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the name of the page size parameter",
        SerializedName = @"pageSizeParaName",
        PossibleTypes = new [] { typeof(string) })]
        string PagingPageSizeParaName { get; set; }
        /// <summary>Defines the path to a paging time stamp attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the path to a paging time stamp attribute",
        SerializedName = @"pageTimeStampAttributePath",
        PossibleTypes = new [] { typeof(string) })]
        string PagingPageTimeStampAttributePath { get; set; }
        /// <summary>Defines the path to a page total count attribute</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the path to a page total count attribute",
        SerializedName = @"pageTotalCountAttributePath",
        PossibleTypes = new [] { typeof(string) })]
        string PagingPageTotalCountAttributePath { get; set; }
        /// <summary>Determines whether to search for the latest time stamp in the events list</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether to search for the latest time stamp in the events list",
        SerializedName = @"searchTheLatestTimeStampFromEventsList",
        PossibleTypes = new [] { typeof(string) })]
        string PagingSearchTheLatestTimeStampFromEventsList { get; set; }
        /// <summary>Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'",
        SerializedName = @"pagingType",
        PossibleTypes = new [] { typeof(string) })]
        string PagingType { get; set; }
        /// <summary>Customs permissions required for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customs permissions required for the connector",
        SerializedName = @"customs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICustomsPermission) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICustomsPermission[] PermissionCustom { get; set; }
        /// <summary>Resource provider permissions required for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource provider permissions required for the connector",
        SerializedName = @"resourceProvider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProvider) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProvider[] PermissionResourceProvider { get; set; }
        /// <summary>The poller active status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The poller active status",
        SerializedName = @"isActive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PollingConfigIsActive { get; set; }
        /// <summary>Describe the endpoint we should pull the data from</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the endpoint we should pull the data from",
        SerializedName = @"apiEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string RequestApiEndpoint { get; set; }
        /// <summary>This will be used the query events from the end of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This will be used the query events from the end of the time window",
        SerializedName = @"endTimeAttributeName",
        PossibleTypes = new [] { typeof(string) })]
        string RequestEndTimeAttributeName { get; set; }
        /// <summary>Describe the headers sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the headers sent in the poll request",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestHeader { get; set; }
        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The http method type we will use in the poll request, GET or POST",
        SerializedName = @"httpMethod",
        PossibleTypes = new [] { typeof(string) })]
        string RequestHttpMethod { get; set; }
        /// <summary>Describe the query parameters sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the query parameters sent in the poll request",
        SerializedName = @"queryParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestQueryParameter { get; set; }
        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For advanced scenarios for example user name/password embedded in nested JSON payload",
        SerializedName = @"queryParametersTemplate",
        PossibleTypes = new [] { typeof(string) })]
        string RequestQueryParametersTemplate { get; set; }
        /// <summary>The time format will be used the query events in a specific window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time format will be used the query events in a specific window",
        SerializedName = @"queryTimeFormat",
        PossibleTypes = new [] { typeof(string) })]
        string RequestQueryTimeFormat { get; set; }
        /// <summary>The window interval we will use the pull the data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The window interval we will use the pull the data",
        SerializedName = @"queryWindowInMin",
        PossibleTypes = new [] { typeof(int) })]
        int? RequestQueryWindowInMin { get; set; }
        /// <summary>Defines the rate limit QPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the rate limit QPS",
        SerializedName = @"rateLimitQps",
        PossibleTypes = new [] { typeof(int) })]
        int? RequestRateLimitQp { get; set; }
        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the amount of time we should try and poll the data in case of failure",
        SerializedName = @"retryCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RequestRetryCount { get; set; }
        /// <summary>This will be used the query events from a start of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This will be used the query events from a start of the time window",
        SerializedName = @"startTimeAttributeName",
        PossibleTypes = new [] { typeof(string) })]
        string RequestStartTimeAttributeName { get; set; }
        /// <summary>The number of seconds we will consider as a request timeout</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of seconds we will consider as a request timeout",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? RequestTimeoutInSecond { get; set; }
        /// <summary>Describes the path we should extract the data in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the path we should extract the data in the response",
        SerializedName = @"eventsJsonPaths",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResponseEventsJsonPath { get; set; }
        /// <summary>Describes if the data in the response is Gzip</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes if the data in the response is Gzip",
        SerializedName = @"isGzipCompressed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResponseIsGzipCompressed { get; set; }
        /// <summary>Describes the path we should extract the status code in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the path we should extract the status code in the response",
        SerializedName = @"successStatusJsonPath",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseSuccessStatusJsonPath { get; set; }
        /// <summary>Describes the path we should extract the status value in the response</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the path we should extract the status value in the response",
        SerializedName = @"successStatusValue",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseSuccessStatusValue { get; set; }

    }
    /// Represents Codeless API Polling data connector.
    internal partial interface ICodelessApiPollingDataConnectorInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IDataConnectorInternal
    {
        /// <summary>A prefix send in the header before the actual token</summary>
        string AuthApiKeyIdentifier { get; set; }
        /// <summary>The header name which the token is sent with</summary>
        string AuthApiKeyName { get; set; }
        /// <summary>The endpoint used to authorize the user, used in Oauth 2.0 flow</summary>
        string AuthAuthorizationEndpoint { get; set; }
        /// <summary>The query parameters used in authorization request, used in Oauth 2.0 flow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthAuthorizationEndpointQueryParameter { get; set; }
        /// <summary>Describes the flow name, for example 'AuthCode' for Oauth 2.0</summary>
        string AuthFlowName { get; set; }
        /// <summary>Marks if the key should sent in header</summary>
        string AuthIsApiKeyInPostPayload { get; set; }
        /// <summary>
        /// Marks if we should send the client secret in header or payload, used in Oauth 2.0 flow
        /// </summary>
        bool? AuthIsClientSecretInHeader { get; set; }
        /// <summary>
        /// The redirect endpoint where we will get the authorization code, used in Oauth 2.0 flow
        /// </summary>
        string AuthRedirectionEndpoint { get; set; }
        /// <summary>The OAuth token scope</summary>
        string AuthScope { get; set; }
        /// <summary>The endpoint used to issue a token, used in Oauth 2.0 flow</summary>
        string AuthTokenEndpoint { get; set; }
        /// <summary>The query headers used in token request, used in Oauth 2.0 flow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointHeader { get; set; }
        /// <summary>The query parameters used in token request, used in Oauth 2.0 flow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny AuthTokenEndpointQueryParameter { get; set; }
        /// <summary>The authentication type</summary>
        string AuthType { get; set; }
        /// <summary>Set connector as preview</summary>
        bool? AvailabilityIsPreview { get; set; }
        /// <summary>The connector Availability Status</summary>
        int? AvailabilityStatus { get; set; }
        /// <summary>Config to describe the instructions blade</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessUiConnectorConfigProperties ConnectorUiConfig { get; set; }
        /// <summary>Connector Availability Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAvailability ConnectorUiConfigAvailability { get; set; }
        /// <summary>Define the way the connector check connectivity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IConnectivityCriteria[] ConnectorUiConfigConnectivityCriterion { get; set; }
        /// <summary>
        /// An optional custom image to be used when displaying the connector within Azure Sentinel's connector's gallery
        /// </summary>
        string ConnectorUiConfigCustomImage { get; set; }
        /// <summary>Data types to check for last data received</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ILastDataReceivedDataType[] ConnectorUiConfigDataType { get; set; }
        /// <summary>Connector description</summary>
        string ConnectorUiConfigDescriptionMarkdown { get; set; }
        /// <summary>Name of the table the connector will insert the data to</summary>
        string ConnectorUiConfigGraphQueriesTableName { get; set; }
        /// <summary>The graph query to show the current data status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IGraphQueries[] ConnectorUiConfigGraphQuery { get; set; }
        /// <summary>Instruction steps to enable the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IInstructionSteps[] ConnectorUiConfigInstructionStep { get; set; }
        /// <summary>Permissions required for the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IPermissions ConnectorUiConfigPermission { get; set; }
        /// <summary>Connector publisher name</summary>
        string ConnectorUiConfigPublisher { get; set; }
        /// <summary>The sample queries for the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ISampleQueries[] ConnectorUiConfigSampleQuery { get; set; }
        /// <summary>Connector blade title</summary>
        string ConnectorUiConfigTitle { get; set; }
        /// <summary>Defines the name of a next page attribute</summary>
        string PagingNextPageParaName { get; set; }
        /// <summary>Defines the path to a next page token JSON</summary>
        string PagingNextPageTokenJsonPath { get; set; }
        /// <summary>Defines the path to a page count attribute</summary>
        string PagingPageCountAttributePath { get; set; }
        /// <summary>Defines the paging size</summary>
        int? PagingPageSize { get; set; }
        /// <summary>Defines the name of the page size parameter</summary>
        string PagingPageSizeParaName { get; set; }
        /// <summary>Defines the path to a paging time stamp attribute</summary>
        string PagingPageTimeStampAttributePath { get; set; }
        /// <summary>Defines the path to a page total count attribute</summary>
        string PagingPageTotalCountAttributePath { get; set; }
        /// <summary>Determines whether to search for the latest time stamp in the events list</summary>
        string PagingSearchTheLatestTimeStampFromEventsList { get; set; }
        /// <summary>Describes the type. could be 'None', 'PageToken', 'PageCount', 'TimeStamp'</summary>
        string PagingType { get; set; }
        /// <summary>Customs permissions required for the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICustomsPermission[] PermissionCustom { get; set; }
        /// <summary>Resource provider permissions required for the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProvider[] PermissionResourceProvider { get; set; }
        /// <summary>Config to describe the polling instructions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingConfigProperties PollingConfig { get; set; }
        /// <summary>Describe the authentication type of the poller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingAuthProperties PollingConfigAuth { get; set; }
        /// <summary>The poller active status</summary>
        bool? PollingConfigIsActive { get; set; }
        /// <summary>Describe the poll request paging config of the poller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingPagingProperties PollingConfigPaging { get; set; }
        /// <summary>Describe the poll request config parameters of the poller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingRequestProperties PollingConfigRequest { get; set; }
        /// <summary>Describe the response config parameters of the poller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingResponseProperties PollingConfigResponse { get; set; }
        /// <summary>Codeless poling data connector properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IApiPollingParameters Property { get; set; }
        /// <summary>Describe the endpoint we should pull the data from</summary>
        string RequestApiEndpoint { get; set; }
        /// <summary>This will be used the query events from the end of the time window</summary>
        string RequestEndTimeAttributeName { get; set; }
        /// <summary>Describe the headers sent in the poll request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestHeader { get; set; }
        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        string RequestHttpMethod { get; set; }
        /// <summary>Describe the query parameters sent in the poll request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny RequestQueryParameter { get; set; }
        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        string RequestQueryParametersTemplate { get; set; }
        /// <summary>The time format will be used the query events in a specific window</summary>
        string RequestQueryTimeFormat { get; set; }
        /// <summary>The window interval we will use the pull the data</summary>
        int? RequestQueryWindowInMin { get; set; }
        /// <summary>Defines the rate limit QPS</summary>
        int? RequestRateLimitQp { get; set; }
        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        int? RequestRetryCount { get; set; }
        /// <summary>This will be used the query events from a start of the time window</summary>
        string RequestStartTimeAttributeName { get; set; }
        /// <summary>The number of seconds we will consider as a request timeout</summary>
        int? RequestTimeoutInSecond { get; set; }
        /// <summary>Describes the path we should extract the data in the response</summary>
        string[] ResponseEventsJsonPath { get; set; }
        /// <summary>Describes if the data in the response is Gzip</summary>
        bool? ResponseIsGzipCompressed { get; set; }
        /// <summary>Describes the path we should extract the status code in the response</summary>
        string ResponseSuccessStatusJsonPath { get; set; }
        /// <summary>Describes the path we should extract the status value in the response</summary>
        string ResponseSuccessStatusValue { get; set; }

    }
}