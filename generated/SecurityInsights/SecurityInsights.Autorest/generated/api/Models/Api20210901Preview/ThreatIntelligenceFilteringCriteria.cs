// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Filtering criteria for querying threat intelligence indicators.</summary>
    public partial class ThreatIntelligenceFilteringCriteria :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceFilteringCriteria,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceFilteringCriteriaInternal
    {

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string[] _id;

        /// <summary>Ids of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="IncludeDisabled" /> property.</summary>
        private bool? _includeDisabled;

        /// <summary>Parameter to include/exclude disabled indicators.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public bool? IncludeDisabled { get => this._includeDisabled; set => this._includeDisabled = value; }

        /// <summary>Backing field for <see cref="Keyword" /> property.</summary>
        private string[] _keyword;

        /// <summary>Keywords for searching threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] Keyword { get => this._keyword; set => this._keyword = value; }

        /// <summary>Backing field for <see cref="MaxConfidence" /> property.</summary>
        private int? _maxConfidence;

        /// <summary>Maximum confidence.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? MaxConfidence { get => this._maxConfidence; set => this._maxConfidence = value; }

        /// <summary>Backing field for <see cref="MaxValidUntil" /> property.</summary>
        private string _maxValidUntil;

        /// <summary>End time for ValidUntil filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string MaxValidUntil { get => this._maxValidUntil; set => this._maxValidUntil = value; }

        /// <summary>Backing field for <see cref="MinConfidence" /> property.</summary>
        private int? _minConfidence;

        /// <summary>Minimum confidence.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? MinConfidence { get => this._minConfidence; set => this._minConfidence = value; }

        /// <summary>Backing field for <see cref="MinValidUntil" /> property.</summary>
        private string _minValidUntil;

        /// <summary>Start time for ValidUntil filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string MinValidUntil { get => this._minValidUntil; set => this._minValidUntil = value; }

        /// <summary>Backing field for <see cref="PageSize" /> property.</summary>
        private int? _pageSize;

        /// <summary>Page size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? PageSize { get => this._pageSize; set => this._pageSize = value; }

        /// <summary>Backing field for <see cref="PatternType" /> property.</summary>
        private string[] _patternType;

        /// <summary>Pattern types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] PatternType { get => this._patternType; set => this._patternType = value; }

        /// <summary>Backing field for <see cref="SkipToken" /> property.</summary>
        private string _skipToken;

        /// <summary>Skip token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string SkipToken { get => this._skipToken; set => this._skipToken = value; }

        /// <summary>Backing field for <see cref="SortBy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceSortingCriteria[] _sortBy;

        /// <summary>Columns to sort by and sorting order</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceSortingCriteria[] SortBy { get => this._sortBy; set => this._sortBy = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private string[] _source;

        /// <summary>Sources of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] Source { get => this._source; set => this._source = value; }

        /// <summary>Backing field for <see cref="ThreatType" /> property.</summary>
        private string[] _threatType;

        /// <summary>Threat types of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] ThreatType { get => this._threatType; set => this._threatType = value; }

        /// <summary>Creates an new <see cref="ThreatIntelligenceFilteringCriteria" /> instance.</summary>
        public ThreatIntelligenceFilteringCriteria()
        {

        }
    }
    /// Filtering criteria for querying threat intelligence indicators.
    public partial interface IThreatIntelligenceFilteringCriteria :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>Ids of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ids of threat intelligence indicators",
        SerializedName = @"ids",
        PossibleTypes = new [] { typeof(string) })]
        string[] Id { get; set; }
        /// <summary>Parameter to include/exclude disabled indicators.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter to include/exclude disabled indicators.",
        SerializedName = @"includeDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IncludeDisabled { get; set; }
        /// <summary>Keywords for searching threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Keywords for searching threat intelligence indicators",
        SerializedName = @"keywords",
        PossibleTypes = new [] { typeof(string) })]
        string[] Keyword { get; set; }
        /// <summary>Maximum confidence.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum confidence.",
        SerializedName = @"maxConfidence",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConfidence { get; set; }
        /// <summary>End time for ValidUntil filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End time for ValidUntil filter.",
        SerializedName = @"maxValidUntil",
        PossibleTypes = new [] { typeof(string) })]
        string MaxValidUntil { get; set; }
        /// <summary>Minimum confidence.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum confidence.",
        SerializedName = @"minConfidence",
        PossibleTypes = new [] { typeof(int) })]
        int? MinConfidence { get; set; }
        /// <summary>Start time for ValidUntil filter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start time for ValidUntil filter.",
        SerializedName = @"minValidUntil",
        PossibleTypes = new [] { typeof(string) })]
        string MinValidUntil { get; set; }
        /// <summary>Page size</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Page size",
        SerializedName = @"pageSize",
        PossibleTypes = new [] { typeof(int) })]
        int? PageSize { get; set; }
        /// <summary>Pattern types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Pattern types",
        SerializedName = @"patternTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] PatternType { get; set; }
        /// <summary>Skip token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Skip token.",
        SerializedName = @"skipToken",
        PossibleTypes = new [] { typeof(string) })]
        string SkipToken { get; set; }
        /// <summary>Columns to sort by and sorting order</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Columns to sort by and sorting order",
        SerializedName = @"sortBy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceSortingCriteria) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceSortingCriteria[] SortBy { get; set; }
        /// <summary>Sources of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sources of threat intelligence indicators",
        SerializedName = @"sources",
        PossibleTypes = new [] { typeof(string) })]
        string[] Source { get; set; }
        /// <summary>Threat types of threat intelligence indicators</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Threat types of threat intelligence indicators",
        SerializedName = @"threatTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatType { get; set; }

    }
    /// Filtering criteria for querying threat intelligence indicators.
    internal partial interface IThreatIntelligenceFilteringCriteriaInternal

    {
        /// <summary>Ids of threat intelligence indicators</summary>
        string[] Id { get; set; }
        /// <summary>Parameter to include/exclude disabled indicators.</summary>
        bool? IncludeDisabled { get; set; }
        /// <summary>Keywords for searching threat intelligence indicators</summary>
        string[] Keyword { get; set; }
        /// <summary>Maximum confidence.</summary>
        int? MaxConfidence { get; set; }
        /// <summary>End time for ValidUntil filter.</summary>
        string MaxValidUntil { get; set; }
        /// <summary>Minimum confidence.</summary>
        int? MinConfidence { get; set; }
        /// <summary>Start time for ValidUntil filter.</summary>
        string MinValidUntil { get; set; }
        /// <summary>Page size</summary>
        int? PageSize { get; set; }
        /// <summary>Pattern types</summary>
        string[] PatternType { get; set; }
        /// <summary>Skip token.</summary>
        string SkipToken { get; set; }
        /// <summary>Columns to sort by and sorting order</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceSortingCriteria[] SortBy { get; set; }
        /// <summary>Sources of threat intelligence indicators</summary>
        string[] Source { get; set; }
        /// <summary>Threat types of threat intelligence indicators</summary>
        string[] ThreatType { get; set; }

    }
}