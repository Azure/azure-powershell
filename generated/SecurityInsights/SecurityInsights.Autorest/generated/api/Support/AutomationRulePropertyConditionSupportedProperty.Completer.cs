// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>The property to evaluate in an automation rule property condition</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedPropertyTypeConverter))]
    public partial struct AutomationRulePropertyConditionSupportedProperty :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentTitle".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentTitle'", "IncidentTitle", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentTitle");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentDescription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentDescription'", "IncidentDescription", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentDescription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentSeverity".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentSeverity'", "IncidentSeverity", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentSeverity");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentStatus".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentStatus'", "IncidentStatus", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentStatus");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentTactics".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentTactics'", "IncidentTactics", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentTactics");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentRelatedAnalyticRuleIds".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentRelatedAnalyticRuleIds'", "IncidentRelatedAnalyticRuleIds", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentRelatedAnalyticRuleIds");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IncidentProviderName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IncidentProviderName'", "IncidentProviderName", global::System.Management.Automation.CompletionResultType.ParameterValue, "IncidentProviderName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountAadTenantId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountAadTenantId'", "AccountAadTenantId", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountAadTenantId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountAadUserId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountAadUserId'", "AccountAadUserId", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountAadUserId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountName'", "AccountName", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountNTDomain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountNTDomain'", "AccountNTDomain", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountNTDomain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountPUID".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountPUID'", "AccountPUID", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountPUID");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountSid".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountSid'", "AccountSid", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountSid");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountObjectGuid".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountObjectGuid'", "AccountObjectGuid", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountObjectGuid");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AccountUPNSuffix".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AccountUPNSuffix'", "AccountUPNSuffix", global::System.Management.Automation.CompletionResultType.ParameterValue, "AccountUPNSuffix");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureResourceResourceId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureResourceResourceId'", "AzureResourceResourceId", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureResourceResourceId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureResourceSubscriptionId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureResourceSubscriptionId'", "AzureResourceSubscriptionId", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureResourceSubscriptionId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CloudApplicationAppId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CloudApplicationAppId'", "CloudApplicationAppId", global::System.Management.Automation.CompletionResultType.ParameterValue, "CloudApplicationAppId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CloudApplicationAppName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CloudApplicationAppName'", "CloudApplicationAppName", global::System.Management.Automation.CompletionResultType.ParameterValue, "CloudApplicationAppName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DNSDomainName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DNSDomainName'", "DNSDomainName", global::System.Management.Automation.CompletionResultType.ParameterValue, "DNSDomainName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FileDirectory".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FileDirectory'", "FileDirectory", global::System.Management.Automation.CompletionResultType.ParameterValue, "FileDirectory");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FileName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FileName'", "FileName", global::System.Management.Automation.CompletionResultType.ParameterValue, "FileName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FileHashValue".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FileHashValue'", "FileHashValue", global::System.Management.Automation.CompletionResultType.ParameterValue, "FileHashValue");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostAzureID".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostAzureID'", "HostAzureID", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostAzureID");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostName'", "HostName", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostNetBiosName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostNetBiosName'", "HostNetBiosName", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostNetBiosName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostNTDomain".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostNTDomain'", "HostNTDomain", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostNTDomain");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HostOSVersion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HostOSVersion'", "HostOSVersion", global::System.Management.Automation.CompletionResultType.ParameterValue, "HostOSVersion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceId'", "IoTDeviceId", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceName'", "IoTDeviceName", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceType".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceType'", "IoTDeviceType", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceType");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceVendor".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceVendor'", "IoTDeviceVendor", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceVendor");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceModel".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceModel'", "IoTDeviceModel", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceModel");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IoTDeviceOperatingSystem".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IoTDeviceOperatingSystem'", "IoTDeviceOperatingSystem", global::System.Management.Automation.CompletionResultType.ParameterValue, "IoTDeviceOperatingSystem");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPAddress".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPAddress'", "IPAddress", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPAddress");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailboxDisplayName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailboxDisplayName'", "MailboxDisplayName", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailboxDisplayName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailboxPrimaryAddress".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailboxPrimaryAddress'", "MailboxPrimaryAddress", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailboxPrimaryAddress");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailboxUPN".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailboxUPN'", "MailboxUPN", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailboxUPN");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageDeliveryAction".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageDeliveryAction'", "MailMessageDeliveryAction", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageDeliveryAction");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageDeliveryLocation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageDeliveryLocation'", "MailMessageDeliveryLocation", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageDeliveryLocation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageRecipient".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageRecipient'", "MailMessageRecipient", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageRecipient");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageSenderIP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageSenderIP'", "MailMessageSenderIP", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageSenderIP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageSubject".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageSubject'", "MailMessageSubject", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageSubject");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageP1Sender".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageP1Sender'", "MailMessageP1Sender", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageP1Sender");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MailMessageP2Sender".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MailMessageP2Sender'", "MailMessageP2Sender", global::System.Management.Automation.CompletionResultType.ParameterValue, "MailMessageP2Sender");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MalwareCategory".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MalwareCategory'", "MalwareCategory", global::System.Management.Automation.CompletionResultType.ParameterValue, "MalwareCategory");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MalwareName".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MalwareName'", "MalwareName", global::System.Management.Automation.CompletionResultType.ParameterValue, "MalwareName");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ProcessCommandLine".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ProcessCommandLine'", "ProcessCommandLine", global::System.Management.Automation.CompletionResultType.ParameterValue, "ProcessCommandLine");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ProcessId".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ProcessId'", "ProcessId", global::System.Management.Automation.CompletionResultType.ParameterValue, "ProcessId");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RegistryKey".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RegistryKey'", "RegistryKey", global::System.Management.Automation.CompletionResultType.ParameterValue, "RegistryKey");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RegistryValueData".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RegistryValueData'", "RegistryValueData", global::System.Management.Automation.CompletionResultType.ParameterValue, "RegistryValueData");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Url".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Url'", "Url", global::System.Management.Automation.CompletionResultType.ParameterValue, "Url");
            }
        }
    }
}