// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>the hive that holds the registry key.</summary>
    public partial struct RegistryHive :
        System.IEquatable<RegistryHive>
    {
        /// <summary>HKEY_A</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyA = @"HKEY_A";

        /// <summary>HKEY_CLASSES_ROOT</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyClassesRoot = @"HKEY_CLASSES_ROOT";

        /// <summary>HKEY_CURRENT_CONFIG</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyCurrentConfig = @"HKEY_CURRENT_CONFIG";

        /// <summary>HKEY_CURRENT_USER</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyCurrentUser = @"HKEY_CURRENT_USER";

        /// <summary>HKEY_CURRENT_USER_LOCAL_SETTINGS</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyCurrentUserLocalSettings = @"HKEY_CURRENT_USER_LOCAL_SETTINGS";

        /// <summary>HKEY_LOCAL_MACHINE</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyLocalMachine = @"HKEY_LOCAL_MACHINE";

        /// <summary>HKEY_PERFORMANCE_DATA</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyPerformanceData = @"HKEY_PERFORMANCE_DATA";

        /// <summary>HKEY_PERFORMANCE_NLSTEXT</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyPerformanceNlstext = @"HKEY_PERFORMANCE_NLSTEXT";

        /// <summary>HKEY_PERFORMANCE_TEXT</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyPerformanceText = @"HKEY_PERFORMANCE_TEXT";

        /// <summary>HKEY_USERS</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive HkeyUsers = @"HKEY_USERS";

        /// <summary>the value for an instance of the <see cref="RegistryHive" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to RegistryHive</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RegistryHive" />.</param>
        internal static object CreateFrom(object value)
        {
            return new RegistryHive(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type RegistryHive</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type RegistryHive (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is RegistryHive && Equals((RegistryHive)obj);
        }

        /// <summary>Returns hashCode for enum RegistryHive</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="RegistryHive"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private RegistryHive(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for RegistryHive</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to RegistryHive</summary>
        /// <param name="value">the value to convert to an instance of <see cref="RegistryHive" />.</param>

        public static implicit operator RegistryHive(string value)
        {
            return new RegistryHive(value);
        }

        /// <summary>Implicit operator to convert RegistryHive to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="RegistryHive" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum RegistryHive</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e1, Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum RegistryHive</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e1, Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHive e2)
        {
            return e2.Equals(e1);
        }
    }
}