// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>The kind of the data connector</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataConnectorKindTypeConverter))]
    public partial struct DataConnectorKind :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureActiveDirectory".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureActiveDirectory'", "AzureActiveDirectory", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureActiveDirectory");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureSecurityCenter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureSecurityCenter'", "AzureSecurityCenter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureSecurityCenter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MicrosoftCloudAppSecurity".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MicrosoftCloudAppSecurity'", "MicrosoftCloudAppSecurity", global::System.Management.Automation.CompletionResultType.ParameterValue, "MicrosoftCloudAppSecurity");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ThreatIntelligence".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ThreatIntelligence'", "ThreatIntelligence", global::System.Management.Automation.CompletionResultType.ParameterValue, "ThreatIntelligence");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ThreatIntelligenceTaxii".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ThreatIntelligenceTaxii'", "ThreatIntelligenceTaxii", global::System.Management.Automation.CompletionResultType.ParameterValue, "ThreatIntelligenceTaxii");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Office365".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Office365'", "Office365", global::System.Management.Automation.CompletionResultType.ParameterValue, "Office365");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "OfficeATP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'OfficeATP'", "OfficeATP", global::System.Management.Automation.CompletionResultType.ParameterValue, "OfficeATP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "OfficeIRM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'OfficeIRM'", "OfficeIRM", global::System.Management.Automation.CompletionResultType.ParameterValue, "OfficeIRM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AmazonWebServicesCloudTrail".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AmazonWebServicesCloudTrail'", "AmazonWebServicesCloudTrail", global::System.Management.Automation.CompletionResultType.ParameterValue, "AmazonWebServicesCloudTrail");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AmazonWebServicesS3".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AmazonWebServicesS3'", "AmazonWebServicesS3", global::System.Management.Automation.CompletionResultType.ParameterValue, "AmazonWebServicesS3");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureAdvancedThreatProtection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureAdvancedThreatProtection'", "AzureAdvancedThreatProtection", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureAdvancedThreatProtection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MicrosoftDefenderAdvancedThreatProtection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MicrosoftDefenderAdvancedThreatProtection'", "MicrosoftDefenderAdvancedThreatProtection", global::System.Management.Automation.CompletionResultType.ParameterValue, "MicrosoftDefenderAdvancedThreatProtection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Dynamics365".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Dynamics365'", "Dynamics365", global::System.Management.Automation.CompletionResultType.ParameterValue, "Dynamics365");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MicrosoftThreatProtection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MicrosoftThreatProtection'", "MicrosoftThreatProtection", global::System.Management.Automation.CompletionResultType.ParameterValue, "MicrosoftThreatProtection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MicrosoftThreatIntelligence".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MicrosoftThreatIntelligence'", "MicrosoftThreatIntelligence", global::System.Management.Automation.CompletionResultType.ParameterValue, "MicrosoftThreatIntelligence");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "GenericUI".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'GenericUI'", "GenericUI", global::System.Management.Automation.CompletionResultType.ParameterValue, "GenericUI");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "APIPolling".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'APIPolling'", "APIPolling", global::System.Management.Automation.CompletionResultType.ParameterValue, "APIPolling");
            }
        }
    }
}