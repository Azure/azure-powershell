// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>the hive that holds the registry key.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.RegistryHiveTypeConverter))]
    public partial struct RegistryHive :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_LOCAL_MACHINE".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_LOCAL_MACHINE'", "HKEY_LOCAL_MACHINE", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_LOCAL_MACHINE");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_CLASSES_ROOT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_CLASSES_ROOT'", "HKEY_CLASSES_ROOT", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_CLASSES_ROOT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_CURRENT_CONFIG".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_CURRENT_CONFIG'", "HKEY_CURRENT_CONFIG", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_CURRENT_CONFIG");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_USERS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_USERS'", "HKEY_USERS", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_USERS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_CURRENT_USER_LOCAL_SETTINGS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_CURRENT_USER_LOCAL_SETTINGS'", "HKEY_CURRENT_USER_LOCAL_SETTINGS", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_CURRENT_USER_LOCAL_SETTINGS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_PERFORMANCE_DATA".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_PERFORMANCE_DATA'", "HKEY_PERFORMANCE_DATA", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_PERFORMANCE_DATA");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_PERFORMANCE_NLSTEXT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_PERFORMANCE_NLSTEXT'", "HKEY_PERFORMANCE_NLSTEXT", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_PERFORMANCE_NLSTEXT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_PERFORMANCE_TEXT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_PERFORMANCE_TEXT'", "HKEY_PERFORMANCE_TEXT", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_PERFORMANCE_TEXT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_A".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_A'", "HKEY_A", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_A");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "HKEY_CURRENT_USER".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'HKEY_CURRENT_USER'", "HKEY_CURRENT_USER", global::System.Management.Automation.CompletionResultType.ParameterValue, "HKEY_CURRENT_USER");
            }
        }
    }
}