// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Extensions;

    /// <summary>
    /// Guest configuration assignment is an association between a machine and guest configuration.
    /// </summary>
    public partial class GuestConfigurationAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ProxyResource();

        /// <summary>Combined hash of the configuration package and parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string AssignmentHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentHash; }

        /// <summary>Name of the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string AssignmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentName; }

        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ComplianceStatus; }

        /// <summary>Name of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationName; }

        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ConfigurationSettingActionAfterReboot { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingActionAfterReboot; }

        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public bool? ConfigurationSettingAllowModuleOverwrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingAllowModuleOverwrite; }

        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ConfigurationSettingConfigurationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationMode; }

        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public float? ConfigurationSettingConfigurationModeFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationModeFrequencyMin; }

        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public bool? ConfigurationSettingRebootIfNeeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRebootIfNeeded; }

        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public float? ConfigurationSettingRefreshFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRefreshFrequencyMin; }

        /// <summary>Version of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationVersion; }

        /// <summary>The source which initiated the guest configuration assignment. Ex: Azure Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string Context { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).Context; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).Context = value ?? null; }

        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationAssignmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationAssignmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationAssignmentType = value ?? null; }

        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationContentHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentHash; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentHash = value ; }

        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentType; }

        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationContentUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentUri = value ; }

        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationKind = value ?? null; }

        /// <summary>Name of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationName = value ; }

        /// <summary>The configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationParameter = value ?? null /* arrayOf */; }

        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationProtectedParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationProtectedParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationProtectedParameter = value ?? null /* arrayOf */; }

        /// <summary>Version of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string GuestConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationVersion = value ; }

        /// <summary>ARM resource id of the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>Date and time when last compliance status was checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastComplianceStatusChecked { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LastComplianceStatusChecked; }

        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string LatestAssignmentReportComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportComplianceStatus; }

        /// <summary>
        /// End date and time of the guest configuration assignment compliance status check.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LatestAssignmentReportEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportEndTime; }

        /// <summary>
        /// GUID that identifies the guest configuration assignment report under a subscription, resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string LatestAssignmentReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportId; }

        /// <summary>Type of report, Consistency or Initial</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string LatestAssignmentReportOperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportOperationType; }

        /// <summary>
        /// The list of resources for which guest configuration assignment compliance is checked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReportResource> LatestAssignmentReportResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportResource = value ?? null /* arrayOf */; }

        /// <summary>
        /// Start date and time of the guest configuration assignment compliance status check.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? LatestAssignmentReportStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportStartTime; }

        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string LatestReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestReportId; }

        /// <summary>Region where the VM is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Location = value ?? null; }

        /// <summary>Internal Acessors for AssignmentConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationInfo Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.AssignmentConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentConfiguration = value; }

        /// <summary>Internal Acessors for AssignmentHash</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.AssignmentHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentHash; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentHash = value; }

        /// <summary>Internal Acessors for AssignmentName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.AssignmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).AssignmentName = value; }

        /// <summary>Internal Acessors for ComplianceStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ComplianceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ComplianceStatus = value; }

        /// <summary>Internal Acessors for ConfigurationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationName = value; }

        /// <summary>Internal Acessors for ConfigurationSettingActionAfterReboot</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingActionAfterReboot { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingActionAfterReboot; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingActionAfterReboot = value; }

        /// <summary>Internal Acessors for ConfigurationSettingAllowModuleOverwrite</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingAllowModuleOverwrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingAllowModuleOverwrite; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingAllowModuleOverwrite = value; }

        /// <summary>Internal Acessors for ConfigurationSettingConfigurationMode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingConfigurationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationMode = value; }

        /// <summary>Internal Acessors for ConfigurationSettingConfigurationModeFrequencyMin</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingConfigurationModeFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationModeFrequencyMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingConfigurationModeFrequencyMin = value; }

        /// <summary>Internal Acessors for ConfigurationSettingRebootIfNeeded</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingRebootIfNeeded { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRebootIfNeeded; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRebootIfNeeded = value; }

        /// <summary>Internal Acessors for ConfigurationSettingRefreshFrequencyMin</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationSettingRefreshFrequencyMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRefreshFrequencyMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationSettingRefreshFrequencyMin = value; }

        /// <summary>Internal Acessors for ConfigurationVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ConfigurationVersion = value; }

        /// <summary>Internal Acessors for GuestConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationNavigation Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.GuestConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfiguration = value; }

        /// <summary>Internal Acessors for GuestConfigurationContentType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.GuestConfigurationContentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationContentType = value; }

        /// <summary>Internal Acessors for GuestConfigurationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationSetting Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.GuestConfigurationSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationSetting = value; }

        /// <summary>Internal Acessors for LastComplianceStatusChecked</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LastComplianceStatusChecked { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LastComplianceStatusChecked; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LastComplianceStatusChecked = value; }

        /// <summary>Internal Acessors for LatestAssignmentReport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReport Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReport { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReport; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReport = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportAssignment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentInfo Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportAssignment { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportAssignment; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportAssignment = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportComplianceStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportComplianceStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportComplianceStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportComplianceStatus = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportEndTime = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportId; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportId = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportOperationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportOperationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportOperationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportOperationType = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportStartTime = value; }

        /// <summary>Internal Acessors for LatestAssignmentReportVM</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVMInfo Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestAssignmentReportVM { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportVM; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestAssignmentReportVM = value; }

        /// <summary>Internal Acessors for LatestReportId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.LatestReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestReportId; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).LatestReportId = value; }

        /// <summary>Internal Acessors for ParameterHash</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ParameterHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ParameterHash; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ParameterHash = value; }

        /// <summary>Internal Acessors for PropertiesLatestAssignmentReportId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.PropertiesLatestAssignmentReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).Id = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.GuestConfigurationAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ResourceType = value; }

        /// <summary>Internal Acessors for Source</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationAssignmentSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationAssignmentSource = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedAt = value; }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedBy = value; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedByType = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedAt = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedBy = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedByType = value; }

        /// <summary>Internal Acessors for TargetResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.TargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).TargetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).TargetResourceId = value; }

        /// <summary>Internal Acessors for VMId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.VMId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMId; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMId = value; }

        /// <summary>Internal Acessors for VMUuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentInternal.VMUuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMUuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMUuid = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>Name of the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Name = value ?? null; }

        /// <summary>parameter hash for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ParameterHash { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ParameterHash; }

        /// <summary>ARM resource id of the report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string PropertiesLatestAssignmentReportId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).Id; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentProperties _property;

        /// <summary>Properties of the Guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.GuestConfigurationAssignmentProperties()); set => this._property = value; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Type of the resource - VMSS / VM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).ResourceType; }

        /// <summary>Specifies the origin of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).GuestConfigurationAssignmentSource; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemData _systemData;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).CreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemDataInternal)SystemData).LastModifiedByType; }

        /// <summary>VM resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string TargetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).TargetResourceId; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Azure resource Id of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string VMId { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMId; }

        /// <summary>UUID(Universally Unique Identifier) of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public string VMUuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VMUuid; }

        /// <summary>The list of VM Compliance data for VMSS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Origin(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVmssvmInfo> VmssVMList { get => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VmssVMList; set => ((Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentPropertiesInternal)Property).VmssVMList = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="GuestConfigurationAssignment" /> instance.</summary>
        public GuestConfigurationAssignment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// Guest configuration assignment is an association between a machine and guest configuration.
    public partial interface IGuestConfigurationAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IProxyResource
    {
        /// <summary>Combined hash of the configuration package and parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Combined hash of the configuration package and parameters.",
        SerializedName = @"assignmentHash",
        PossibleTypes = new [] { typeof(string) })]
        string AssignmentHash { get;  }
        /// <summary>Name of the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the guest configuration assignment.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AssignmentName { get;  }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A value indicating compliance status of the machine for the assigned guest configuration.",
        SerializedName = @"complianceStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Compliant", "NonCompliant", "Pending")]
        string ComplianceStatus { get;  }
        /// <summary>Name of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the configuration.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationName { get;  }
        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration",
        SerializedName = @"actionAfterReboot",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("ContinueConfiguration", "StopConfiguration")]
        string ConfigurationSettingActionAfterReboot { get;  }
        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false",
        SerializedName = @"allowModuleOverwrite",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConfigurationSettingAllowModuleOverwrite { get;  }
        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.",
        SerializedName = @"configurationMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("ApplyOnly", "ApplyAndMonitor", "ApplyAndAutoCorrect")]
        string ConfigurationSettingConfigurationMode { get;  }
        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.",
        SerializedName = @"configurationModeFrequencyMins",
        PossibleTypes = new [] { typeof(float) })]
        float? ConfigurationSettingConfigurationModeFrequencyMin { get;  }
        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.",
        SerializedName = @"rebootIfNeeded",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ConfigurationSettingRebootIfNeeded { get;  }
        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.",
        SerializedName = @"refreshFrequencyMins",
        PossibleTypes = new [] { typeof(float) })]
        float? ConfigurationSettingRefreshFrequencyMin { get;  }
        /// <summary>Version of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Version of the configuration.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationVersion { get;  }
        /// <summary>The source which initiated the guest configuration assignment. Ex: Azure Policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The source which initiated the guest configuration assignment. Ex: Azure Policy",
        SerializedName = @"context",
        PossibleTypes = new [] { typeof(string) })]
        string Context { get; set; }
        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect and ApplyAndMonitor.",
        SerializedName = @"assignmentType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Audit", "DeployAndAutoCorrect", "ApplyAndAutoCorrect", "ApplyAndMonitor")]
        string GuestConfigurationAssignmentType { get; set; }
        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Combined hash of the guest configuration package and configuration parameters.",
        SerializedName = @"contentHash",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationContentHash { get; set; }
        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the content type of the configuration. Possible values could be Builtin or Custom.",
        SerializedName = @"contentType",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationContentType { get;  }
        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Uri of the storage where guest configuration package is uploaded.",
        SerializedName = @"contentUri",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationContentUri { get; set; }
        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Kind of the guest configuration. For example:DSC",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("DSC")]
        string GuestConfigurationKind { get; set; }
        /// <summary>Name of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the guest configuration.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationName { get; set; }
        /// <summary>The configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The configuration parameters for the guest configuration.",
        SerializedName = @"configurationParameter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationParameter { get; set; }
        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The protected configuration parameters for the guest configuration.",
        SerializedName = @"configurationProtectedParameter",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationProtectedParameter { get; set; }
        /// <summary>Version of the guest configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Version of the guest configuration.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string GuestConfigurationVersion { get; set; }
        /// <summary>Date and time when last compliance status was checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Date and time when last compliance status was checked.",
        SerializedName = @"lastComplianceStatusChecked",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastComplianceStatusChecked { get;  }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A value indicating compliance status of the machine for the assigned guest configuration.",
        SerializedName = @"complianceStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Compliant", "NonCompliant", "Pending")]
        string LatestAssignmentReportComplianceStatus { get;  }
        /// <summary>
        /// End date and time of the guest configuration assignment compliance status check.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"End date and time of the guest configuration assignment compliance status check.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LatestAssignmentReportEndTime { get;  }
        /// <summary>
        /// GUID that identifies the guest configuration assignment report under a subscription, resource group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"GUID that identifies the guest configuration assignment report under a subscription, resource group.",
        SerializedName = @"reportId",
        PossibleTypes = new [] { typeof(string) })]
        string LatestAssignmentReportId { get;  }
        /// <summary>Type of report, Consistency or Initial</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of report, Consistency or Initial",
        SerializedName = @"operationType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Consistency", "Initial")]
        string LatestAssignmentReportOperationType { get;  }
        /// <summary>
        /// The list of resources for which guest configuration assignment compliance is checked.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of resources for which guest configuration assignment compliance is checked.",
        SerializedName = @"resources",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReportResource) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReportResource> LatestAssignmentReportResource { get; set; }
        /// <summary>
        /// Start date and time of the guest configuration assignment compliance status check.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Start date and time of the guest configuration assignment compliance status check.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LatestAssignmentReportStartTime { get;  }
        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Id of the latest report for the guest configuration assignment. ",
        SerializedName = @"latestReportId",
        PossibleTypes = new [] { typeof(string) })]
        string LatestReportId { get;  }
        /// <summary>parameter hash for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"parameter hash for the guest configuration assignment. ",
        SerializedName = @"parameterHash",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterHash { get;  }
        /// <summary>ARM resource id of the report for the guest configuration assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ARM resource id of the report for the guest configuration assignment.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesLatestAssignmentReportId { get;  }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Created")]
        string ProvisioningState { get;  }
        /// <summary>Type of the resource - VMSS / VM</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the resource - VMSS / VM",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get;  }
        /// <summary>Specifies the origin of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the origin of the configuration.",
        SerializedName = @"assignmentSource",
        PossibleTypes = new [] { typeof(string) })]
        string Source { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }
        /// <summary>VM resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"VM resource Id.",
        SerializedName = @"targetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceId { get;  }
        /// <summary>Azure resource Id of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Azure resource Id of the VM.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string VMId { get;  }
        /// <summary>UUID(Universally Unique Identifier) of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"UUID(Universally Unique Identifier) of the VM.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string VMUuid { get;  }
        /// <summary>The list of VM Compliance data for VMSS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of VM Compliance data for VMSS",
        SerializedName = @"vmssVMList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVmssvmInfo) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVmssvmInfo> VmssVMList { get; set; }

    }
    /// Guest configuration assignment is an association between a machine and guest configuration.
    internal partial interface IGuestConfigurationAssignmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IProxyResourceInternal
    {
        /// <summary>Information about the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationInfo AssignmentConfiguration { get; set; }
        /// <summary>Combined hash of the configuration package and parameters.</summary>
        string AssignmentHash { get; set; }
        /// <summary>Name of the guest configuration assignment.</summary>
        string AssignmentName { get; set; }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Compliant", "NonCompliant", "Pending")]
        string ComplianceStatus { get; set; }
        /// <summary>Name of the configuration.</summary>
        string ConfigurationName { get; set; }
        /// <summary>
        /// Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration
        /// and StopConfiguration
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("ContinueConfiguration", "StopConfiguration")]
        string ConfigurationSettingActionAfterReboot { get; set; }
        /// <summary>
        /// If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node.
        /// Otherwise, false
        /// </summary>
        bool? ConfigurationSettingAllowModuleOverwrite { get; set; }
        /// <summary>
        /// Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values
        /// are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("ApplyOnly", "ApplyAndMonitor", "ApplyAndAutoCorrect")]
        string ConfigurationSettingConfigurationMode { get; set; }
        /// <summary>
        /// How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode
        /// property is set to ApplyOnly. The default value is 15.
        /// </summary>
        float? ConfigurationSettingConfigurationModeFrequencyMin { get; set; }
        /// <summary>
        /// Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you
        /// will have to manually reboot the node for any configuration that requires it. The default value is false. To use this
        /// setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting
        /// with the xPendingReboot module.
        /// </summary>
        bool? ConfigurationSettingRebootIfNeeded { get; set; }
        /// <summary>
        /// The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored
        /// if the LCM is not configured in pull mode. The default value is 30.
        /// </summary>
        float? ConfigurationSettingRefreshFrequencyMin { get; set; }
        /// <summary>Version of the configuration.</summary>
        string ConfigurationVersion { get; set; }
        /// <summary>The source which initiated the guest configuration assignment. Ex: Azure Policy</summary>
        string Context { get; set; }
        /// <summary>The guest configuration to assign.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationNavigation GuestConfiguration { get; set; }
        /// <summary>
        /// Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect
        /// and ApplyAndMonitor.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Audit", "DeployAndAutoCorrect", "ApplyAndAutoCorrect", "ApplyAndMonitor")]
        string GuestConfigurationAssignmentType { get; set; }
        /// <summary>Combined hash of the guest configuration package and configuration parameters.</summary>
        string GuestConfigurationContentHash { get; set; }
        /// <summary>
        /// Specifies the content type of the configuration. Possible values could be Builtin or Custom.
        /// </summary>
        string GuestConfigurationContentType { get; set; }
        /// <summary>Uri of the storage where guest configuration package is uploaded.</summary>
        string GuestConfigurationContentUri { get; set; }
        /// <summary>Kind of the guest configuration. For example:DSC</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("DSC")]
        string GuestConfigurationKind { get; set; }
        /// <summary>Name of the guest configuration.</summary>
        string GuestConfigurationName { get; set; }
        /// <summary>The configuration parameters for the guest configuration.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationParameter { get; set; }
        /// <summary>The protected configuration parameters for the guest configuration.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationParameter> GuestConfigurationProtectedParameter { get; set; }
        /// <summary>The configuration setting for the guest configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IConfigurationSetting GuestConfigurationSetting { get; set; }
        /// <summary>Version of the guest configuration.</summary>
        string GuestConfigurationVersion { get; set; }
        /// <summary>Date and time when last compliance status was checked.</summary>
        global::System.DateTime? LastComplianceStatusChecked { get; set; }
        /// <summary>Last reported guest configuration assignment report.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReport LatestAssignmentReport { get; set; }
        /// <summary>Configuration details of the guest configuration assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentInfo LatestAssignmentReportAssignment { get; set; }
        /// <summary>
        /// A value indicating compliance status of the machine for the assigned guest configuration.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Compliant", "NonCompliant", "Pending")]
        string LatestAssignmentReportComplianceStatus { get; set; }
        /// <summary>
        /// End date and time of the guest configuration assignment compliance status check.
        /// </summary>
        global::System.DateTime? LatestAssignmentReportEndTime { get; set; }
        /// <summary>
        /// GUID that identifies the guest configuration assignment report under a subscription, resource group.
        /// </summary>
        string LatestAssignmentReportId { get; set; }
        /// <summary>Type of report, Consistency or Initial</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Consistency", "Initial")]
        string LatestAssignmentReportOperationType { get; set; }
        /// <summary>
        /// The list of resources for which guest configuration assignment compliance is checked.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IAssignmentReportResource> LatestAssignmentReportResource { get; set; }
        /// <summary>
        /// Start date and time of the guest configuration assignment compliance status check.
        /// </summary>
        global::System.DateTime? LatestAssignmentReportStartTime { get; set; }
        /// <summary>Information about the VM.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVMInfo LatestAssignmentReportVM { get; set; }
        /// <summary>Id of the latest report for the guest configuration assignment.</summary>
        string LatestReportId { get; set; }
        /// <summary>parameter hash for the guest configuration assignment.</summary>
        string ParameterHash { get; set; }
        /// <summary>ARM resource id of the report for the guest configuration assignment.</summary>
        string PropertiesLatestAssignmentReportId { get; set; }
        /// <summary>Properties of the Guest configuration assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IGuestConfigurationAssignmentProperties Property { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Created")]
        string ProvisioningState { get; set; }
        /// <summary>Type of the resource - VMSS / VM</summary>
        string ResourceType { get; set; }
        /// <summary>Specifies the origin of the configuration.</summary>
        string Source { get; set; }
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }
        /// <summary>VM resource Id.</summary>
        string TargetResourceId { get; set; }
        /// <summary>Azure resource Id of the VM.</summary>
        string VMId { get; set; }
        /// <summary>UUID(Universally Unique Identifier) of the VM.</summary>
        string VMUuid { get; set; }
        /// <summary>The list of VM Compliance data for VMSS</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.GuestConfiguration.Models.IVmssvmInfo> VmssVMList { get; set; }

    }
}