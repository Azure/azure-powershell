// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Extensions;

    /// <summary>
    /// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the
    /// just-in-time access the principal will receive on the delegated resource in the managed tenant.
    /// </summary>
    public partial class EligibleAuthorization :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleAuthorization,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleAuthorizationInternal
    {

        /// <summary>Backing field for <see cref="JustInTimeAccessPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicy _justInTimeAccessPolicy;

        /// <summary>The just-in-time access policy setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicy JustInTimeAccessPolicy { get => (this._justInTimeAccessPolicy = this._justInTimeAccessPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.JustInTimeAccessPolicy()); set => this._justInTimeAccessPolicy = value; }

        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] JustInTimeAccessPolicyManagedByTenantApprover { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).ManagedByTenantApprover; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).ManagedByTenantApprover = value ?? null /* arrayOf */; }

        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? JustInTimeAccessPolicyMaximumActivationDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).MaximumActivationDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).MaximumActivationDuration = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider? JustInTimeAccessPolicyMultiFactorAuthProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).MultiFactorAuthProvider; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicyInternal)JustInTimeAccessPolicy).MultiFactorAuthProvider = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider)""); }

        /// <summary>Internal Acessors for JustInTimeAccessPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicy Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleAuthorizationInternal.JustInTimeAccessPolicy { get => (this._justInTimeAccessPolicy = this._justInTimeAccessPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.JustInTimeAccessPolicy()); set { {_justInTimeAccessPolicy = value;} } }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>The identifier of the Azure Active Directory principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; set => this._principalId = value; }

        /// <summary>Backing field for <see cref="PrincipalIdDisplayName" /> property.</summary>
        private string _principalIdDisplayName;

        /// <summary>The display name of the Azure Active Directory principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public string PrincipalIdDisplayName { get => this._principalIdDisplayName; set => this._principalIdDisplayName = value; }

        /// <summary>Backing field for <see cref="RoleDefinitionId" /> property.</summary>
        private string _roleDefinitionId;

        /// <summary>
        /// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will
        /// have on the projected scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.PropertyOrigin.Owned)]
        public string RoleDefinitionId { get => this._roleDefinitionId; set => this._roleDefinitionId = value; }

        /// <summary>Creates an new <see cref="EligibleAuthorization" /> instance.</summary>
        public EligibleAuthorization()
        {

        }
    }
    /// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the
    /// just-in-time access the principal will receive on the delegated resource in the managed tenant.
    public partial interface IEligibleAuthorization :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.IJsonSerializable
    {
        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of managedByTenant approvers for the eligible authorization.",
        SerializedName = @"managedByTenantApprovers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] JustInTimeAccessPolicyManagedByTenantApprover { get; set; }
        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum access duration in ISO 8601 format for just-in-time access requests.",
        SerializedName = @"maximumActivationDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? JustInTimeAccessPolicyMaximumActivationDuration { get; set; }
        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The multi-factor authorization provider to be used for just-in-time access requests.",
        SerializedName = @"multiFactorAuthProvider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider? JustInTimeAccessPolicyMultiFactorAuthProvider { get; set; }
        /// <summary>The identifier of the Azure Active Directory principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The identifier of the Azure Active Directory principal.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>The display name of the Azure Active Directory principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the Azure Active Directory principal.",
        SerializedName = @"principalIdDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalIdDisplayName { get; set; }
        /// <summary>
        /// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will
        /// have on the projected scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.",
        SerializedName = @"roleDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string RoleDefinitionId { get; set; }

    }
    /// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the
    /// just-in-time access the principal will receive on the delegated resource in the managed tenant.
    internal partial interface IEligibleAuthorizationInternal

    {
        /// <summary>The just-in-time access policy setting.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IJustInTimeAccessPolicy JustInTimeAccessPolicy { get; set; }
        /// <summary>The list of managedByTenant approvers for the eligible authorization.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Models.Api20200201Preview.IEligibleApprover[] JustInTimeAccessPolicyManagedByTenantApprover { get; set; }
        /// <summary>
        /// The maximum access duration in ISO 8601 format for just-in-time access requests.
        /// </summary>
        global::System.TimeSpan? JustInTimeAccessPolicyMaximumActivationDuration { get; set; }
        /// <summary>
        /// The multi-factor authorization provider to be used for just-in-time access requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedServices.Support.MultiFactorAuthProvider? JustInTimeAccessPolicyMultiFactorAuthProvider { get; set; }
        /// <summary>The identifier of the Azure Active Directory principal.</summary>
        string PrincipalId { get; set; }
        /// <summary>The display name of the Azure Active Directory principal.</summary>
        string PrincipalIdDisplayName { get; set; }
        /// <summary>
        /// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will
        /// have on the projected scope.
        /// </summary>
        string RoleDefinitionId { get; set; }

    }
}