// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes the properties of a gallery image version.</summary>
    public partial class GalleryApplicationVersionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal
    {

        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DefaultConfigFileLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).DefaultConfigFileLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).DefaultConfigFileLink = value ?? null; }

        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Install { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Install; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Install = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for PublishingProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.PublishingProfile { get => (this._publishingProfile = this._publishingProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryApplicationVersionPublishingProfile()); set { {_publishingProfile = value;} } }

        /// <summary>Internal Acessors for PublishingProfileManageAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.PublishingProfileManageAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).ManageAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).ManageAction = value; }

        /// <summary>Internal Acessors for PublishingProfilePublishedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.PublishingProfilePublishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).PublishedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).PublishedDate = value; }

        /// <summary>Internal Acessors for PublishingProfileSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.PublishingProfileSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Setting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Setting = value; }

        /// <summary>Internal Acessors for PublishingProfileSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.PublishingProfileSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Source = value; }

        /// <summary>Internal Acessors for ReplicationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatus Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.ReplicationStatus { get => (this._replicationStatus = this._replicationStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ReplicationStatus()); set { {_replicationStatus = value;} } }

        /// <summary>Internal Acessors for ReplicationStatusAggregatedState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.AggregatedReplicationState? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.ReplicationStatusAggregatedState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).AggregatedState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).AggregatedState = value; }

        /// <summary>Internal Acessors for ReplicationStatusSummary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalReplicationStatus[] Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPropertiesInternal.ReplicationStatusSummary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).Summary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).Summary = value; }

        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PackageFileLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).PackageFileLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).PackageFileLink = value ; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState? _provisioningState;

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublishingProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfile _publishingProfile;

        /// <summary>The publishing profile of a gallery image version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfile PublishingProfile { get => (this._publishingProfile = this._publishingProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryApplicationVersionPublishingProfile()); set => this._publishingProfile = value; }

        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings PublishingProfileAdvancedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).AdvancedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).AdvancedSetting = value ?? null /* model class */; }

        /// <summary>Optional. Whether or not this application reports health.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? PublishingProfileEnableHealthCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).EnableHealthCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).EnableHealthCheck = value ?? default(bool); }

        /// <summary>
        /// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? PublishingProfileEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).EndOfLifeDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? PublishingProfileExcludeFromLatest { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ExcludeFromLatest; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ExcludeFromLatest = value ?? default(bool); }

        /// <summary>The timestamp for when the gallery image version is published.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? PublishingProfilePublishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).PublishedDate; }

        /// <summary>
        /// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode? PublishingProfileReplicationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ReplicationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ReplicationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode)""); }

        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? PublishingProfileStorageAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).StorageAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).StorageAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType)""); }

        /// <summary>
        /// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation[] PublishingProfileTargetExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).TargetExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).TargetExtendedLocation = value ?? null /* arrayOf */; }

        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Remove { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Remove; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Remove = value ?? null; }

        /// <summary>
        /// The number of replicas of the Image Version to be created per region. This property would take effect for a region when
        /// regionalReplicaCount is not specified. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? ReplicaCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ReplicaCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).ReplicaCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="ReplicationStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatus _replicationStatus;

        /// <summary>This is the replication status of the gallery image version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatus ReplicationStatus { get => (this._replicationStatus = this._replicationStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ReplicationStatus()); }

        /// <summary>
        /// This is the aggregated replication status based on all the regional replication status flags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.AggregatedReplicationState? ReplicationStatusAggregatedState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).AggregatedState; }

        /// <summary>This is a summary of replication status for each region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalReplicationStatus[] ReplicationStatusSummary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatusInternal)ReplicationStatus).Summary; }

        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SettingConfigFileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).SettingConfigFileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).SettingConfigFileName = value ?? null; }

        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SettingPackageFileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).SettingPackageFileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).SettingPackageFileName = value ?? null; }

        /// <summary>
        /// The target regions where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ITargetRegion[] TargetRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).TargetRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)PublishingProfile).TargetRegion = value ?? null /* arrayOf */; }

        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Update { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Update; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal)PublishingProfile).Update = value ?? null; }

        /// <summary>Creates an new <see cref="GalleryApplicationVersionProperties" /> instance.</summary>
        public GalleryApplicationVersionProperties()
        {

        }
    }
    /// Describes the properties of a gallery image version.
    public partial interface IGalleryApplicationVersionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.",
        SerializedName = @"defaultConfigurationLink",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultConfigFileLink { get; set; }
        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required. The path and arguments to install the gallery application. This is limited to 4096 characters.",
        SerializedName = @"install",
        PossibleTypes = new [] { typeof(string) })]
        string Install { get; set; }
        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Required. The mediaLink of the artifact, must be a readable storage page blob.",
        SerializedName = @"mediaLink",
        PossibleTypes = new [] { typeof(string) })]
        string PackageFileLink { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.",
        SerializedName = @"advancedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings PublishingProfileAdvancedSetting { get; set; }
        /// <summary>Optional. Whether or not this application reports health.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Whether or not this application reports health.",
        SerializedName = @"enableHealthCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PublishingProfileEnableHealthCheck { get; set; }
        /// <summary>
        /// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PublishingProfileEndOfLifeDate { get; set; }
        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.",
        SerializedName = @"excludeFromLatest",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PublishingProfileExcludeFromLatest { get; set; }
        /// <summary>The timestamp for when the gallery image version is published.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp for when the gallery image version is published.",
        SerializedName = @"publishedDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PublishingProfilePublishedDate { get;  }
        /// <summary>
        /// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional parameter which specifies the mode to be used for replication. This property is not updatable.",
        SerializedName = @"replicationMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode? PublishingProfileReplicationMode { get; set; }
        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the storage account type to be used to store the image. This property is not updatable.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? PublishingProfileStorageAccountType { get; set; }
        /// <summary>
        /// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target extended locations where the Image Version is going to be replicated to. This property is updatable.",
        SerializedName = @"targetExtendedLocations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation[] PublishingProfileTargetExtendedLocation { get; set; }
        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.",
        SerializedName = @"remove",
        PossibleTypes = new [] { typeof(string) })]
        string Remove { get; set; }
        /// <summary>
        /// The number of replicas of the Image Version to be created per region. This property would take effect for a region when
        /// regionalReplicaCount is not specified. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.",
        SerializedName = @"replicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCount { get; set; }
        /// <summary>
        /// This is the aggregated replication status based on all the regional replication status flags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the aggregated replication status based on all the regional replication status flags.",
        SerializedName = @"aggregatedState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.AggregatedReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.AggregatedReplicationState? ReplicationStatusAggregatedState { get;  }
        /// <summary>This is a summary of replication status for each region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is a summary of replication status for each region.",
        SerializedName = @"summary",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalReplicationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalReplicationStatus[] ReplicationStatusSummary { get;  }
        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with ""_config"".",
        SerializedName = @"configFileName",
        PossibleTypes = new [] { typeof(string) })]
        string SettingConfigFileName { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.",
        SerializedName = @"packageFileName",
        PossibleTypes = new [] { typeof(string) })]
        string SettingPackageFileName { get; set; }
        /// <summary>
        /// The target regions where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target regions where the Image Version is going to be replicated to. This property is updatable.",
        SerializedName = @"targetRegions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ITargetRegion) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ITargetRegion[] TargetRegion { get; set; }
        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.",
        SerializedName = @"update",
        PossibleTypes = new [] { typeof(string) })]
        string Update { get; set; }

    }
    /// Describes the properties of a gallery image version.
    internal partial interface IGalleryApplicationVersionPropertiesInternal

    {
        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        string DefaultConfigFileLink { get; set; }
        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        string Install { get; set; }
        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        string PackageFileLink { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState? ProvisioningState { get; set; }
        /// <summary>The publishing profile of a gallery image version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfile PublishingProfile { get; set; }
        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings PublishingProfileAdvancedSetting { get; set; }
        /// <summary>Optional. Whether or not this application reports health.</summary>
        bool? PublishingProfileEnableHealthCheck { get; set; }
        /// <summary>
        /// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        global::System.DateTime? PublishingProfileEndOfLifeDate { get; set; }
        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        /// </summary>
        bool? PublishingProfileExcludeFromLatest { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage PublishingProfileManageAction { get; set; }
        /// <summary>The timestamp for when the gallery image version is published.</summary>
        global::System.DateTime? PublishingProfilePublishedDate { get; set; }
        /// <summary>
        /// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode? PublishingProfileReplicationMode { get; set; }
        /// <summary>
        /// Additional settings for the VM app that contains the target package and config file name when it is deployed to target
        /// VM or VM scale set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings PublishingProfileSetting { get; set; }
        /// <summary>The source image from which the Image Version is going to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource PublishingProfileSource { get; set; }
        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? PublishingProfileStorageAccountType { get; set; }
        /// <summary>
        /// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation[] PublishingProfileTargetExtendedLocation { get; set; }
        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        string Remove { get; set; }
        /// <summary>
        /// The number of replicas of the Image Version to be created per region. This property would take effect for a region when
        /// regionalReplicaCount is not specified. This property is updatable.
        /// </summary>
        int? ReplicaCount { get; set; }
        /// <summary>This is the replication status of the gallery image version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IReplicationStatus ReplicationStatus { get; set; }
        /// <summary>
        /// This is the aggregated replication status based on all the regional replication status flags.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.AggregatedReplicationState? ReplicationStatusAggregatedState { get; set; }
        /// <summary>This is a summary of replication status for each region.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalReplicationStatus[] ReplicationStatusSummary { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        string SettingConfigFileName { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        string SettingPackageFileName { get; set; }
        /// <summary>
        /// The target regions where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ITargetRegion[] TargetRegion { get; set; }
        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        string Update { get; set; }

    }
}