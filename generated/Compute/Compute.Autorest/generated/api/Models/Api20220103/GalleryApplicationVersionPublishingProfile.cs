// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>The publishing profile of a gallery image version.</summary>
    public partial class GalleryApplicationVersionPublishingProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBase __galleryArtifactPublishingProfileBase = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryArtifactPublishingProfileBase();

        /// <summary>Backing field for <see cref="AdvancedSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings _advancedSetting;

        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings AdvancedSetting { get => (this._advancedSetting = this._advancedSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryApplicationVersionPublishingProfileAdvancedSettings()); set => this._advancedSetting = value; }

        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string DefaultConfigFileLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSourceInternal)Source).DefaultConfigurationLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSourceInternal)Source).DefaultConfigurationLink = value ?? null; }

        /// <summary>Backing field for <see cref="EnableHealthCheck" /> property.</summary>
        private bool? _enableHealthCheck;

        /// <summary>Optional. Whether or not this application reports health.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? EnableHealthCheck { get => this._enableHealthCheck; set => this._enableHealthCheck = value; }

        /// <summary>
        /// The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public global::System.DateTime? EndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).EndOfLifeDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public bool? ExcludeFromLatest { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ExcludeFromLatest; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ExcludeFromLatest = value ?? default(bool); }

        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Install { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Install; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Install = value ?? null; }

        /// <summary>Backing field for <see cref="ManageAction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage _manageAction;

        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage ManageAction { get => (this._manageAction = this._manageAction ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactManage()); set => this._manageAction = value; }

        /// <summary>Internal Acessors for ManageAction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal.ManageAction { get => (this._manageAction = this._manageAction ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactManage()); set { {_manageAction = value;} } }

        /// <summary>Internal Acessors for Setting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal.Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactSettings()); set { {_setting = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactSource()); set { {_source = value;} } }

        /// <summary>Internal Acessors for PublishedDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal.PublishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).PublishedDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).PublishedDate = value; }

        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PackageFileLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSourceInternal)Source).MediaLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSourceInternal)Source).MediaLink = value ; }

        /// <summary>The timestamp for when the gallery image version is published.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public global::System.DateTime? PublishedDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).PublishedDate; }

        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Remove { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Remove; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Remove = value ?? null; }

        /// <summary>
        /// The number of replicas of the Image Version to be created per region. This property would take effect for a region when
        /// regionalReplicaCount is not specified. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public int? ReplicaCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ReplicaCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ReplicaCount = value ?? default(int); }

        /// <summary>
        /// Optional parameter which specifies the mode to be used for replication. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode? ReplicationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ReplicationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).ReplicationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ReplicationMode)""); }

        /// <summary>Backing field for <see cref="Setting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings _setting;

        /// <summary>
        /// Additional settings for the VM app that contains the target package and config file name when it is deployed to target
        /// VM or VM scale set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactSettings()); set => this._setting = value; }

        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SettingConfigFileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettingsInternal)Setting).ConfigFileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettingsInternal)Setting).ConfigFileName = value ?? null; }

        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SettingPackageFileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettingsInternal)Setting).PackageFileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettingsInternal)Setting).PackageFileName = value ?? null; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource _source;

        /// <summary>The source image from which the Image Version is going to be created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.UserArtifactSource()); set => this._source = value; }

        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? StorageAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).StorageAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).StorageAccountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType)""); }

        /// <summary>
        /// The target extended locations where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation[] TargetExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).TargetExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).TargetExtendedLocation = value ?? null /* arrayOf */; }

        /// <summary>
        /// The target regions where the Image Version is going to be replicated to. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ITargetRegion[] TargetRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).TargetRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal)__galleryArtifactPublishingProfileBase).TargetRegion = value ?? null /* arrayOf */; }

        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Update { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Update; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManageInternal)ManageAction).Update = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="GalleryApplicationVersionPublishingProfile" /> instance.
        /// </summary>
        public GalleryApplicationVersionPublishingProfile()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__galleryArtifactPublishingProfileBase), __galleryArtifactPublishingProfileBase);
            await eventListener.AssertObjectIsValid(nameof(__galleryArtifactPublishingProfileBase), __galleryArtifactPublishingProfileBase);
        }
    }
    /// The publishing profile of a gallery image version.
    public partial interface IGalleryApplicationVersionPublishingProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBase
    {
        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.",
        SerializedName = @"advancedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings AdvancedSetting { get; set; }
        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.",
        SerializedName = @"defaultConfigurationLink",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultConfigFileLink { get; set; }
        /// <summary>Optional. Whether or not this application reports health.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Whether or not this application reports health.",
        SerializedName = @"enableHealthCheck",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableHealthCheck { get; set; }
        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required. The path and arguments to install the gallery application. This is limited to 4096 characters.",
        SerializedName = @"install",
        PossibleTypes = new [] { typeof(string) })]
        string Install { get; set; }
        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Required. The mediaLink of the artifact, must be a readable storage page blob.",
        SerializedName = @"mediaLink",
        PossibleTypes = new [] { typeof(string) })]
        string PackageFileLink { get; set; }
        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.",
        SerializedName = @"remove",
        PossibleTypes = new [] { typeof(string) })]
        string Remove { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with ""_config"".",
        SerializedName = @"configFileName",
        PossibleTypes = new [] { typeof(string) })]
        string SettingConfigFileName { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.",
        SerializedName = @"packageFileName",
        PossibleTypes = new [] { typeof(string) })]
        string SettingPackageFileName { get; set; }
        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.",
        SerializedName = @"update",
        PossibleTypes = new [] { typeof(string) })]
        string Update { get; set; }

    }
    /// The publishing profile of a gallery image version.
    internal partial interface IGalleryApplicationVersionPublishingProfileInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryArtifactPublishingProfileBaseInternal
    {
        /// <summary>
        /// Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryApplicationVersionPublishingProfileAdvancedSettings AdvancedSetting { get; set; }
        /// <summary>
        /// Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
        /// </summary>
        string DefaultConfigFileLink { get; set; }
        /// <summary>Optional. Whether or not this application reports health.</summary>
        bool? EnableHealthCheck { get; set; }
        /// <summary>
        /// Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        /// </summary>
        string Install { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactManage ManageAction { get; set; }
        /// <summary>Required. The mediaLink of the artifact, must be a readable storage page blob.</summary>
        string PackageFileLink { get; set; }
        /// <summary>
        /// Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        /// </summary>
        string Remove { get; set; }
        /// <summary>
        /// Additional settings for the VM app that contains the target package and config file name when it is deployed to target
        /// VM or VM scale set.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSettings Setting { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified,
        /// the config file will be named the Gallery Application name appended with "_config".
        /// </summary>
        string SettingConfigFileName { get; set; }
        /// <summary>
        /// Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified,
        /// the package file will be named the same as the Gallery Application name.
        /// </summary>
        string SettingPackageFileName { get; set; }
        /// <summary>The source image from which the Image Version is going to be created.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IUserArtifactSource Source { get; set; }
        /// <summary>
        /// Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke
        /// remove command on the previous version and install command on the current version of the gallery application. This is
        /// limited to 4096 characters.
        /// </summary>
        string Update { get; set; }

    }
}