// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>
    /// Describes the script sources for run command. Use only one of script, scriptUri, commandId.
    /// </summary>
    public partial class VirtualMachineRunCommandScriptSource :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IVirtualMachineRunCommandScriptSource,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IVirtualMachineRunCommandScriptSourceInternal
    {

        /// <summary>Backing field for <see cref="CommandId" /> property.</summary>
        private string _commandId;

        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string CommandId { get => this._commandId; set => this._commandId = value; }

        /// <summary>Internal Acessors for ScriptUriManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentity Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IVirtualMachineRunCommandScriptSourceInternal.ScriptUriManagedIdentity { get => (this._scriptUriManagedIdentity = this._scriptUriManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.RunCommandManagedIdentity()); set { {_scriptUriManagedIdentity = value;} } }

        /// <summary>Backing field for <see cref="Script" /> property.</summary>
        private string _script;

        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Script { get => this._script; set => this._script = value; }

        /// <summary>Backing field for <see cref="ScriptUri" /> property.</summary>
        private string _scriptUri;

        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ScriptUri { get => this._scriptUri; set => this._scriptUri = value; }

        /// <summary>Backing field for <see cref="ScriptUriManagedIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentity _scriptUriManagedIdentity;

        /// <summary>
        /// User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case
        /// of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's
        /// container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under
        /// VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentity ScriptUriManagedIdentity { get => (this._scriptUriManagedIdentity = this._scriptUriManagedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.RunCommandManagedIdentity()); set => this._scriptUriManagedIdentity = value; }

        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentityInternal)ScriptUriManagedIdentity).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentityInternal)ScriptUriManagedIdentity).ClientId = value ?? null; }

        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ScriptUriManagedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentityInternal)ScriptUriManagedIdentity).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentityInternal)ScriptUriManagedIdentity).ObjectId = value ?? null; }

        /// <summary>Creates an new <see cref="VirtualMachineRunCommandScriptSource" /> instance.</summary>
        public VirtualMachineRunCommandScriptSource()
        {

        }
    }
    /// Describes the script sources for run command. Use only one of script, scriptUri, commandId.
    public partial interface IVirtualMachineRunCommandScriptSource :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a commandId of predefined built-in script.",
        SerializedName = @"commandId",
        PossibleTypes = new [] { typeof(string) })]
        string CommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script content to be executed on the VM.",
        SerializedName = @"script",
        PossibleTypes = new [] { typeof(string) })]
        string Script { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.",
        SerializedName = @"scriptUri",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUri { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string ScriptUriManagedIdentityObjectId { get; set; }

    }
    /// Describes the script sources for run command. Use only one of script, scriptUri, commandId.
    internal partial interface IVirtualMachineRunCommandScriptSourceInternal

    {
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        string CommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        string Script { get; set; }
        /// <summary>
        /// Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        /// </summary>
        string ScriptUri { get; set; }
        /// <summary>
        /// User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case
        /// of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's
        /// container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under
        /// VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20230701.IRunCommandManagedIdentity ScriptUriManagedIdentity { get; set; }
        /// <summary>
        /// Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityClientId { get; set; }
        /// <summary>
        /// Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
        /// </summary>
        string ScriptUriManagedIdentityObjectId { get; set; }

    }
}