// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Extensions;

    /// <summary>Broker Resource properties</summary>
    public partial class BrokerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Advanced" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings _advanced;

        /// <summary>Advanced settings of Broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings Advanced { get => (this._advanced = this._advanced ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.AdvancedSettings()); set => this._advanced = value; }

        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string AdvancedEncryptInternalTraffic { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).EncryptInternalTraffic; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).EncryptInternalTraffic = value ?? null; }

        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainPartition { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainPartition; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainPartition = value ?? default(int); }

        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainRedundancyFactor { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainRedundancyFactor; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainRedundancyFactor = value ?? default(int); }

        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChainWorker = value ?? default(int); }

        /// <summary>Backing field for <see cref="Cardinality" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality _cardinality;

        /// <summary>The cardinality details of the broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality Cardinality { get => (this._cardinality = this._cardinality ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.Cardinality()); set => this._cardinality = value; }

        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxKeepAliveSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxKeepAliveSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxKeepAliveSecond = value ?? default(int); }

        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxMessageExpirySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxMessageExpirySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxMessageExpirySecond = value ?? default(int); }

        /// <summary>Max message size for a packet in Bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxPacketSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxPacketSizeByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxPacketSizeByte = value ?? default(int); }

        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxReceiveMaximum { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxReceiveMaximum; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxReceiveMaximum = value ?? default(int); }

        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxSessionExpirySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxSessionExpirySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientMaxSessionExpirySecond = value ?? default(int); }

        /// <summary>Backing field for <see cref="Diagnostic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics _diagnostic;

        /// <summary>Spec defines the desired identities of Broker diagnostics settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.BrokerDiagnostics()); set => this._diagnostic = value; }

        /// <summary>Backing field for <see cref="DiskBackedMessageBuffer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer _diskBackedMessageBuffer;

        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get => (this._diskBackedMessageBuffer = this._diskBackedMessageBuffer ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.DiskBackedMessageBuffer()); set => this._diskBackedMessageBuffer = value; }

        /// <summary>The desired number of frontend instances (pods).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? FrontendReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).FrontendReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).FrontendReplica = value ?? default(int); }

        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? FrontendWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).FrontendWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).FrontendWorker = value ?? default(int); }

        /// <summary>Backing field for <see cref="GenerateResourceLimit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits _generateResourceLimit;

        /// <summary>
        /// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers
        /// proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient
        /// CPU resources, an error will be emitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits GenerateResourceLimit { get => (this._generateResourceLimit = this._generateResourceLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.GenerateResourceLimits()); set => this._generateResourceLimit = value; }

        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string GenerateResourceLimitCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimitsInternal)GenerateResourceLimit).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimitsInternal)GenerateResourceLimit).Cpu = value ?? null; }

        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string InternalCertDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertDuration = value ?? null; }

        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string InternalCertRenewBefore { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertRenewBefore; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertRenewBefore = value ?? null; }

        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string LogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).LogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).LogLevel = value ?? null; }

        /// <summary>Backing field for <see cref="MemoryProfile" /> property.</summary>
        private string _memoryProfile;

        /// <summary>Memory profile of Broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public string MemoryProfile { get => this._memoryProfile; set => this._memoryProfile = value; }

        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? MetricPrometheusPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).MetricPrometheusPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).MetricPrometheusPort = value ?? default(int); }

        /// <summary>Internal Acessors for Advanced</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.Advanced { get => (this._advanced = this._advanced ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.AdvancedSettings()); set { {_advanced = value;} } }

        /// <summary>Internal Acessors for AdvancedClient</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IClientConfig Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.AdvancedClient { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).Client; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).Client = value; }

        /// <summary>Internal Acessors for AdvancedInternalCert</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertOptions Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.AdvancedInternalCert { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCert; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCert = value; }

        /// <summary>Internal Acessors for Cardinality</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.Cardinality { get => (this._cardinality = this._cardinality ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.Cardinality()); set { {_cardinality = value;} } }

        /// <summary>Internal Acessors for CardinalityBackendChain</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChain Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.CardinalityBackendChain { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChain; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).BackendChain = value; }

        /// <summary>Internal Acessors for CardinalityFrontend</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IFrontend Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.CardinalityFrontend { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).Frontend; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinalityInternal)Cardinality).Frontend = value; }

        /// <summary>Internal Acessors for ClientSubscriberQueueLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISubscriberQueueLimit Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.ClientSubscriberQueueLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientSubscriberQueueLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).ClientSubscriberQueueLimit = value; }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.Diagnostic { get => (this._diagnostic = this._diagnostic ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.BrokerDiagnostics()); set { {_diagnostic = value;} } }

        /// <summary>Internal Acessors for DiagnosticLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiagnosticsLogs Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.DiagnosticLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Log; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Log = value; }

        /// <summary>Internal Acessors for DiagnosticMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetrics Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.DiagnosticMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Metric; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Metric = value; }

        /// <summary>Internal Acessors for DiagnosticSelfCheck</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfCheck Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.DiagnosticSelfCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheck = value; }

        /// <summary>Internal Acessors for DiagnosticTrace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITraces Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.DiagnosticTrace { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Trace; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).Trace = value; }

        /// <summary>Internal Acessors for GenerateResourceLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.GenerateResourceLimit { get => (this._generateResourceLimit = this._generateResourceLimit ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.GenerateResourceLimits()); set { {_generateResourceLimit = value;} } }

        /// <summary>Internal Acessors for InternalCertPrivateKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.InternalCertPrivateKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertPrivateKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).InternalCertPrivateKey = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TraceSelfTracing</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfTracing Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal.TraceSelfTracing { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceSelfTracing; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceSelfTracing = value; }

        /// <summary>algorithm for private key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string PrivateKeyAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).PrivateKeyAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).PrivateKeyAlgorithm = value ?? null; }

        /// <summary>cert-manager private key rotationPolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string PrivateKeyRotationPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).PrivateKeyRotationPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).PrivateKeyRotationPolicy = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>The self check interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfCheckIntervalSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckIntervalSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckIntervalSecond = value ?? default(int); }

        /// <summary>The toggle to enable/disable self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SelfCheckMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckMode = value ?? null; }

        /// <summary>The timeout for self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfCheckTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckTimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfCheckTimeoutSecond = value ?? default(int); }

        /// <summary>The self tracing interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfTracingIntervalSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfTracingIntervalSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfTracingIntervalSecond = value ?? default(int); }

        /// <summary>The toggle to enable/disable self tracing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SelfTracingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfTracingMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).SelfTracingMode = value ?? null; }

        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public long? SubscriberQueueLimitLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).SubscriberQueueLimitLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).SubscriberQueueLimitLength = value ?? default(long); }

        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SubscriberQueueLimitStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).SubscriberQueueLimitStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettingsInternal)Advanced).SubscriberQueueLimitStrategy = value ?? null; }

        /// <summary>The cache size in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? TraceCacheSizeMegabyte { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceCacheSizeMegabyte; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceCacheSizeMegabyte = value ?? default(int); }

        /// <summary>The toggle to enable/disable traces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string TraceMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceMode = value ?? null; }

        /// <summary>The span channel capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? TraceSpanChannelCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceSpanChannelCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnosticsInternal)Diagnostic).TraceSpanChannelCapacity = value ?? default(int); }

        /// <summary>Creates an new <see cref="BrokerProperties" /> instance.</summary>
        public BrokerProperties()
        {

        }
    }
    /// Broker Resource properties
    public partial interface IBrokerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IJsonSerializable
    {
        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The setting to enable or disable encryption of internal Traffic.",
        SerializedName = @"encryptInternalTraffic",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AdvancedEncryptInternalTraffic { get; set; }
        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired number of physical backend partitions.",
        SerializedName = @"partitions",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainPartition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired numbers of backend replicas (pods) in a physical partition.",
        SerializedName = @"redundancyFactor",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainRedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Number of logical backend workers per replica (pod).",
        SerializedName = @"workers",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainWorker { get; set; }
        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of a client's Keep Alive, in seconds.",
        SerializedName = @"maxKeepAliveSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxKeepAliveSecond { get; set; }
        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Message Expiry Interval, in seconds.",
        SerializedName = @"maxMessageExpirySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxMessageExpirySecond { get; set; }
        /// <summary>Max message size for a packet in Bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Max message size for a packet in Bytes.",
        SerializedName = @"maxPacketSizeBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxPacketSizeByte { get; set; }
        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
        SerializedName = @"maxReceiveMaximum",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxReceiveMaximum { get; set; }
        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Session Expiry Interval, in seconds.",
        SerializedName = @"maxSessionExpirySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxSessionExpirySecond { get; set; }
        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Settings of Disk Backed Message Buffer.",
        SerializedName = @"diskBackedMessageBuffer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get; set; }
        /// <summary>The desired number of frontend instances (pods).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired number of frontend instances (pods).",
        SerializedName = @"replicas",
        PossibleTypes = new [] { typeof(int) })]
        int? FrontendReplica { get; set; }
        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Number of logical frontend workers per instance (pod).",
        SerializedName = @"workers",
        PossibleTypes = new [] { typeof(int) })]
        int? FrontendWorker { get; set; }
        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The toggle to enable/disable cpu resource limits.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string GenerateResourceLimitCpu { get; set; }
        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(string) })]
        string InternalCertDuration { get; set; }
        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
        SerializedName = @"renewBefore",
        PossibleTypes = new [] { typeof(string) })]
        string InternalCertRenewBefore { get; set; }
        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(string) })]
        string LogLevel { get; set; }
        /// <summary>Memory profile of Broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Memory profile of Broker.",
        SerializedName = @"memoryProfile",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Tiny", "Low", "Medium", "High")]
        string MemoryProfile { get; set; }
        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The prometheus port to expose the metrics.",
        SerializedName = @"prometheusPort",
        PossibleTypes = new [] { typeof(int) })]
        int? MetricPrometheusPort { get; set; }
        /// <summary>algorithm for private key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"algorithm for private key.",
        SerializedName = @"algorithm",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Ec256", "Ec384", "Ec521", "Ed25519", "Rsa2048", "Rsa4096", "Rsa8192")]
        string PrivateKeyAlgorithm { get; set; }
        /// <summary>cert-manager private key rotationPolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"cert-manager private key rotationPolicy.",
        SerializedName = @"rotationPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Always", "Never")]
        string PrivateKeyRotationPolicy { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>The self check interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The self check interval.",
        SerializedName = @"intervalSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfCheckIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable self check.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfCheckMode { get; set; }
        /// <summary>The timeout for self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timeout for self check.",
        SerializedName = @"timeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfCheckTimeoutSecond { get; set; }
        /// <summary>The self tracing interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The self tracing interval.",
        SerializedName = @"intervalSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfTracingIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self tracing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable self tracing.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfTracingMode { get; set; }
        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The maximum length of the queue before messages start getting dropped.",
        SerializedName = @"length",
        PossibleTypes = new [] { typeof(long) })]
        long? SubscriberQueueLimitLength { get; set; }
        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The strategy to use for dropping messages from the queue.",
        SerializedName = @"strategy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("None", "DropOldest")]
        string SubscriberQueueLimitStrategy { get; set; }
        /// <summary>The cache size in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cache size in megabytes.",
        SerializedName = @"cacheSizeMegabytes",
        PossibleTypes = new [] { typeof(int) })]
        int? TraceCacheSizeMegabyte { get; set; }
        /// <summary>The toggle to enable/disable traces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable traces.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string TraceMode { get; set; }
        /// <summary>The span channel capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The span channel capacity.",
        SerializedName = @"spanChannelCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? TraceSpanChannelCapacity { get; set; }

    }
    /// Broker Resource properties
    internal partial interface IBrokerPropertiesInternal

    {
        /// <summary>Advanced settings of Broker.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings Advanced { get; set; }
        /// <summary>Configurations related to All Clients.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IClientConfig AdvancedClient { get; set; }
        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AdvancedEncryptInternalTraffic { get; set; }
        /// <summary>Certificate rotation and private key configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertOptions AdvancedInternalCert { get; set; }
        /// <summary>The desired number of physical backend partitions.</summary>
        int? BackendChainPartition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        int? BackendChainRedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        int? BackendChainWorker { get; set; }
        /// <summary>The cardinality details of the broker.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality Cardinality { get; set; }
        /// <summary>The backend broker desired properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChain CardinalityBackendChain { get; set; }
        /// <summary>The frontend desired properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IFrontend CardinalityFrontend { get; set; }
        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        int? ClientMaxKeepAliveSecond { get; set; }
        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        int? ClientMaxMessageExpirySecond { get; set; }
        /// <summary>Max message size for a packet in Bytes.</summary>
        int? ClientMaxPacketSizeByte { get; set; }
        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        int? ClientMaxReceiveMaximum { get; set; }
        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        int? ClientMaxSessionExpirySecond { get; set; }
        /// <summary>The limit on the number of queued messages for a subscriber.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISubscriberQueueLimit ClientSubscriberQueueLimit { get; set; }
        /// <summary>Spec defines the desired identities of Broker diagnostics settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics Diagnostic { get; set; }
        /// <summary>Diagnostic log settings for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiagnosticsLogs DiagnosticLog { get; set; }
        /// <summary>The metrics settings for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetrics DiagnosticMetric { get; set; }
        /// <summary>The self check properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfCheck DiagnosticSelfCheck { get; set; }
        /// <summary>The trace properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITraces DiagnosticTrace { get; set; }
        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get; set; }
        /// <summary>The desired number of frontend instances (pods).</summary>
        int? FrontendReplica { get; set; }
        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        int? FrontendWorker { get; set; }
        /// <summary>
        /// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers
        /// proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient
        /// CPU resources, an error will be emitted.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits GenerateResourceLimit { get; set; }
        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string GenerateResourceLimitCpu { get; set; }
        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        string InternalCertDuration { get; set; }
        /// <summary>Configuration of certificate private key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey InternalCertPrivateKey { get; set; }
        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        string InternalCertRenewBefore { get; set; }
        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        string LogLevel { get; set; }
        /// <summary>Memory profile of Broker.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Tiny", "Low", "Medium", "High")]
        string MemoryProfile { get; set; }
        /// <summary>The prometheus port to expose the metrics.</summary>
        int? MetricPrometheusPort { get; set; }
        /// <summary>algorithm for private key.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Ec256", "Ec384", "Ec521", "Ed25519", "Rsa2048", "Rsa4096", "Rsa8192")]
        string PrivateKeyAlgorithm { get; set; }
        /// <summary>cert-manager private key rotationPolicy.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Always", "Never")]
        string PrivateKeyRotationPolicy { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>The self check interval.</summary>
        int? SelfCheckIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self check.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfCheckMode { get; set; }
        /// <summary>The timeout for self check.</summary>
        int? SelfCheckTimeoutSecond { get; set; }
        /// <summary>The self tracing interval.</summary>
        int? SelfTracingIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self tracing.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfTracingMode { get; set; }
        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        long? SubscriberQueueLimitLength { get; set; }
        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("None", "DropOldest")]
        string SubscriberQueueLimitStrategy { get; set; }
        /// <summary>The cache size in megabytes.</summary>
        int? TraceCacheSizeMegabyte { get; set; }
        /// <summary>The toggle to enable/disable traces.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string TraceMode { get; set; }
        /// <summary>The self tracing properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfTracing TraceSelfTracing { get; set; }
        /// <summary>The span channel capacity.</summary>
        int? TraceSpanChannelCapacity { get; set; }

    }
}