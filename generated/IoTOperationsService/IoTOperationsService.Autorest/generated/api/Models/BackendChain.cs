// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Extensions;

    /// <summary>Desired properties of the backend instances of the broker</summary>
    public partial class BackendChain :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChain,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChainInternal
    {

        /// <summary>Backing field for <see cref="Partition" /> property.</summary>
        private int _partition;

        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public int Partition { get => this._partition; set => this._partition = value; }

        /// <summary>Backing field for <see cref="RedundancyFactor" /> property.</summary>
        private int _redundancyFactor;

        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public int RedundancyFactor { get => this._redundancyFactor; set => this._redundancyFactor = value; }

        /// <summary>Backing field for <see cref="Worker" /> property.</summary>
        private int? _worker;

        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public int? Worker { get => this._worker; set => this._worker = value; }

        /// <summary>Creates an new <see cref="BackendChain" /> instance.</summary>
        public BackendChain()
        {

        }
    }
    /// Desired properties of the backend instances of the broker
    public partial interface IBackendChain :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IJsonSerializable
    {
        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The desired number of physical backend partitions.",
        SerializedName = @"partitions",
        PossibleTypes = new [] { typeof(int) })]
        int Partition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The desired numbers of backend replicas (pods) in a physical partition.",
        SerializedName = @"redundancyFactor",
        PossibleTypes = new [] { typeof(int) })]
        int RedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of logical backend workers per replica (pod).",
        SerializedName = @"workers",
        PossibleTypes = new [] { typeof(int) })]
        int? Worker { get; set; }

    }
    /// Desired properties of the backend instances of the broker
    internal partial interface IBackendChainInternal

    {
        /// <summary>The desired number of physical backend partitions.</summary>
        int Partition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        int RedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        int? Worker { get; set; }

    }
}