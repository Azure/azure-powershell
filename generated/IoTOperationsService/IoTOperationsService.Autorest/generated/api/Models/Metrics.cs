// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Extensions;

    /// <summary>Diagnostic Metrics properties</summary>
    public partial class Metrics :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetrics,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetricsInternal
    {

        /// <summary>Backing field for <see cref="PrometheusPort" /> property.</summary>
        private int? _prometheusPort;

        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public int? PrometheusPort { get => this._prometheusPort; set => this._prometheusPort = value; }

        /// <summary>Creates an new <see cref="Metrics" /> instance.</summary>
        public Metrics()
        {

        }
    }
    /// Diagnostic Metrics properties
    public partial interface IMetrics :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IJsonSerializable
    {
        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The prometheus port to expose the metrics.",
        SerializedName = @"prometheusPort",
        PossibleTypes = new [] { typeof(int) })]
        int? PrometheusPort { get; set; }

    }
    /// Diagnostic Metrics properties
    internal partial interface IMetricsInternal

    {
        /// <summary>The prometheus port to expose the metrics.</summary>
        int? PrometheusPort { get; set; }

    }
}