// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.PowerShell;

    /// <summary>Defines a TCP port on which a `BrokerListener` listens.</summary>
    [System.ComponentModel.TypeConverter(typeof(ListenerPortTypeConverter))]
    public partial class ListenerPort
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ListenerPort"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPort" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPort DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ListenerPort(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ListenerPort"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPort" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPort DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ListenerPort(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ListenerPort" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ListenerPort" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPort FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ListenerPort"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ListenerPort(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Tl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Tl = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITlsCertMethod) content.GetValueForProperty("Tl",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Tl, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.TlsCertMethodTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthenticationRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthenticationRef = (string) content.GetValueForProperty("AuthenticationRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthenticationRef, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthorizationRef = (string) content.GetValueForProperty("AuthorizationRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthorizationRef, global::System.Convert.ToString);
            }
            if (content.Contains("NodePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).NodePort = (int?) content.GetValueForProperty("NodePort",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).NodePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Port = (int) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Protocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Protocol = (string) content.GetValueForProperty("Protocol",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Protocol, global::System.Convert.ToString);
            }
            if (content.Contains("TlCertManagerCertificateSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlCertManagerCertificateSpec = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertificateSpec) content.GetValueForProperty("TlCertManagerCertificateSpec",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlCertManagerCertificateSpec, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerCertificateSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("TlManual"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlManual = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IX509ManualCertificate) content.GetValueForProperty("TlManual",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlManual, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.X509ManualCertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("TlMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlMode = (string) content.GetValueForProperty("TlMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlMode, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecDuration = (string) content.GetValueForProperty("CertManagerCertificateSpecDuration",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecDuration, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSecretName = (string) content.GetValueForProperty("CertManagerCertificateSpecSecretName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecRenewBefore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecRenewBefore = (string) content.GetValueForProperty("CertManagerCertificateSpecRenewBefore",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecRenewBefore, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecIssuerRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecIssuerRef = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerIssuerRef) content.GetValueForProperty("CertManagerCertificateSpecIssuerRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecIssuerRef, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerIssuerRefTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertManagerCertificateSpecPrivateKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecPrivateKey = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey) content.GetValueForProperty("CertManagerCertificateSpecPrivateKey",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecPrivateKey, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerPrivateKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertManagerCertificateSpecSan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSan = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISanForCert) content.GetValueForProperty("CertManagerCertificateSpecSan",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSan, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.SanForCertTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateKeyAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyAlgorithm = (string) content.GetValueForProperty("PrivateKeyAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyAlgorithm, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateKeyRotationPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyRotationPolicy = (string) content.GetValueForProperty("PrivateKeyRotationPolicy",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyRotationPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("ManualSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).ManualSecretRef = (string) content.GetValueForProperty("ManualSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).ManualSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefGroup = (string) content.GetValueForProperty("IssuerRefGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefGroup, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefKind = (string) content.GetValueForProperty("IssuerRefKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefKind, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefName = (string) content.GetValueForProperty("IssuerRefName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefName, global::System.Convert.ToString);
            }
            if (content.Contains("SanDns"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanDns = (System.Collections.Generic.List<string>) content.GetValueForProperty("SanDns",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanDns, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SanIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanIP = (System.Collections.Generic.List<string>) content.GetValueForProperty("SanIP",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanIP, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ListenerPort"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ListenerPort(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Tl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Tl = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITlsCertMethod) content.GetValueForProperty("Tl",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Tl, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.TlsCertMethodTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthenticationRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthenticationRef = (string) content.GetValueForProperty("AuthenticationRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthenticationRef, global::System.Convert.ToString);
            }
            if (content.Contains("AuthorizationRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthorizationRef = (string) content.GetValueForProperty("AuthorizationRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).AuthorizationRef, global::System.Convert.ToString);
            }
            if (content.Contains("NodePort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).NodePort = (int?) content.GetValueForProperty("NodePort",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).NodePort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Port"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Port = (int) content.GetValueForProperty("Port",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Port, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Protocol"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Protocol = (string) content.GetValueForProperty("Protocol",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).Protocol, global::System.Convert.ToString);
            }
            if (content.Contains("TlCertManagerCertificateSpec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlCertManagerCertificateSpec = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertificateSpec) content.GetValueForProperty("TlCertManagerCertificateSpec",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlCertManagerCertificateSpec, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerCertificateSpecTypeConverter.ConvertFrom);
            }
            if (content.Contains("TlManual"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlManual = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IX509ManualCertificate) content.GetValueForProperty("TlManual",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlManual, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.X509ManualCertificateTypeConverter.ConvertFrom);
            }
            if (content.Contains("TlMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlMode = (string) content.GetValueForProperty("TlMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).TlMode, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecDuration = (string) content.GetValueForProperty("CertManagerCertificateSpecDuration",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecDuration, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSecretName = (string) content.GetValueForProperty("CertManagerCertificateSpecSecretName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecRenewBefore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecRenewBefore = (string) content.GetValueForProperty("CertManagerCertificateSpecRenewBefore",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecRenewBefore, global::System.Convert.ToString);
            }
            if (content.Contains("CertManagerCertificateSpecIssuerRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecIssuerRef = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerIssuerRef) content.GetValueForProperty("CertManagerCertificateSpecIssuerRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecIssuerRef, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerIssuerRefTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertManagerCertificateSpecPrivateKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecPrivateKey = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey) content.GetValueForProperty("CertManagerCertificateSpecPrivateKey",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecPrivateKey, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.CertManagerPrivateKeyTypeConverter.ConvertFrom);
            }
            if (content.Contains("CertManagerCertificateSpecSan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSan = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISanForCert) content.GetValueForProperty("CertManagerCertificateSpecSan",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).CertManagerCertificateSpecSan, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.SanForCertTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateKeyAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyAlgorithm = (string) content.GetValueForProperty("PrivateKeyAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyAlgorithm, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateKeyRotationPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyRotationPolicy = (string) content.GetValueForProperty("PrivateKeyRotationPolicy",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).PrivateKeyRotationPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("ManualSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).ManualSecretRef = (string) content.GetValueForProperty("ManualSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).ManualSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefGroup = (string) content.GetValueForProperty("IssuerRefGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefGroup, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefKind = (string) content.GetValueForProperty("IssuerRefKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefKind, global::System.Convert.ToString);
            }
            if (content.Contains("IssuerRefName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefName = (string) content.GetValueForProperty("IssuerRefName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).IssuerRefName, global::System.Convert.ToString);
            }
            if (content.Contains("SanDns"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanDns = (System.Collections.Generic.List<string>) content.GetValueForProperty("SanDns",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanDns, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SanIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanIP = (System.Collections.Generic.List<string>) content.GetValueForProperty("SanIP",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IListenerPortInternal)this).SanIP, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Defines a TCP port on which a `BrokerListener` listens.
    [System.ComponentModel.TypeConverter(typeof(ListenerPortTypeConverter))]
    public partial interface IListenerPort

    {

    }
}