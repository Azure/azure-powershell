// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.PowerShell;

    /// <summary>VolumeClaimSpec properties</summary>
    [System.ComponentModel.TypeConverter(typeof(VolumeClaimSpecTypeConverter))]
    public partial class VolumeClaimSpec
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpec"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpec" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpec DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VolumeClaimSpec(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpec"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpec" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpec DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VolumeClaimSpec(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VolumeClaimSpec" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VolumeClaimSpec" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpec FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpec"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VolumeClaimSpec(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSource = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ILocalKubernetesReference) content.GetValueForProperty("DataSource",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSource, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.LocalKubernetesReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSourceRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRef = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IKubernetesReference) content.GetValueForProperty("DataSourceRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRef, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.KubernetesReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Resource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Resource = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirements) content.GetValueForProperty("Resource",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Resource, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Selector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Selector = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelector) content.GetValueForProperty("Selector",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Selector, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("VolumeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeName = (string) content.GetValueForProperty("VolumeName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeName, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeMode = (string) content.GetValueForProperty("VolumeMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeMode, global::System.Convert.ToString);
            }
            if (content.Contains("StorageClassName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).StorageClassName = (string) content.GetValueForProperty("StorageClassName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).StorageClassName, global::System.Convert.ToString);
            }
            if (content.Contains("AccessMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).AccessMode = (System.Collections.Generic.List<string>) content.GetValueForProperty("AccessMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).AccessMode, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DataSourceApiGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceApiGroup = (string) content.GetValueForProperty("DataSourceApiGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceApiGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceKind = (string) content.GetValueForProperty("DataSourceKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceKind, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceName = (string) content.GetValueForProperty("DataSourceName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefApiGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefApiGroup = (string) content.GetValueForProperty("DataSourceRefApiGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefApiGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefKind = (string) content.GetValueForProperty("DataSourceRefKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefKind, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefName = (string) content.GetValueForProperty("DataSourceRefName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefNamespace = (string) content.GetValueForProperty("DataSourceRefNamespace",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceLimit = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirementsLimits) content.GetValueForProperty("ResourceLimit",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceLimit, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsLimitsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceRequest = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirementsRequests) content.GetValueForProperty("ResourceRequest",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceRequest, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsRequestsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchExpression = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchExpressions>) content.GetValueForProperty("SelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchExpression, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchExpressions>(__y, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorMatchExpressionsTypeConverter.ConvertFrom));
            }
            if (content.Contains("SelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchLabel = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchLabels) content.GetValueForProperty("SelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchLabel, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorMatchLabelsTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpec"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VolumeClaimSpec(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSource = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ILocalKubernetesReference) content.GetValueForProperty("DataSource",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSource, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.LocalKubernetesReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSourceRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRef = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IKubernetesReference) content.GetValueForProperty("DataSourceRef",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRef, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.KubernetesReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Resource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Resource = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirements) content.GetValueForProperty("Resource",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Resource, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Selector"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Selector = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelector) content.GetValueForProperty("Selector",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).Selector, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("VolumeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeName = (string) content.GetValueForProperty("VolumeName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeName, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeMode = (string) content.GetValueForProperty("VolumeMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).VolumeMode, global::System.Convert.ToString);
            }
            if (content.Contains("StorageClassName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).StorageClassName = (string) content.GetValueForProperty("StorageClassName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).StorageClassName, global::System.Convert.ToString);
            }
            if (content.Contains("AccessMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).AccessMode = (System.Collections.Generic.List<string>) content.GetValueForProperty("AccessMode",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).AccessMode, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DataSourceApiGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceApiGroup = (string) content.GetValueForProperty("DataSourceApiGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceApiGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceKind = (string) content.GetValueForProperty("DataSourceKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceKind, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceName = (string) content.GetValueForProperty("DataSourceName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefApiGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefApiGroup = (string) content.GetValueForProperty("DataSourceRefApiGroup",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefApiGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefKind = (string) content.GetValueForProperty("DataSourceRefKind",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefKind, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefName = (string) content.GetValueForProperty("DataSourceRefName",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceRefNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefNamespace = (string) content.GetValueForProperty("DataSourceRefNamespace",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).DataSourceRefNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceLimit = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirementsLimits) content.GetValueForProperty("ResourceLimit",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceLimit, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsLimitsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceRequest = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimResourceRequirementsRequests) content.GetValueForProperty("ResourceRequest",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).ResourceRequest, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimResourceRequirementsRequestsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SelectorMatchExpression"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchExpression = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchExpressions>) content.GetValueForProperty("SelectorMatchExpression",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchExpression, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchExpressions>(__y, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorMatchExpressionsTypeConverter.ConvertFrom));
            }
            if (content.Contains("SelectorMatchLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchLabel = (Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecSelectorMatchLabels) content.GetValueForProperty("SelectorMatchLabel",((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IVolumeClaimSpecInternal)this).SelectorMatchLabel, Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.VolumeClaimSpecSelectorMatchLabelsTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// VolumeClaimSpec properties
    [System.ComponentModel.TypeConverter(typeof(VolumeClaimSpecTypeConverter))]
    public partial interface IVolumeClaimSpec

    {

    }
}