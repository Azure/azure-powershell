// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Extensions;

    /// <summary>BrokerAuthorization Resource properties</summary>
    public partial class BrokerAuthorizationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerAuthorizationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerAuthorizationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AuthorizationPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfig _authorizationPolicy;

        /// <summary>The list of authorization policies supported by the Authorization Resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfig AuthorizationPolicy { get => (this._authorizationPolicy = this._authorizationPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.AuthorizationConfig()); set => this._authorizationPolicy = value; }

        /// <summary>Enable caching of the authorization rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string AuthorizationPolicyCache { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfigInternal)AuthorizationPolicy).Cache; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfigInternal)AuthorizationPolicy).Cache = value ?? null; }

        /// <summary>
        /// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationRule> AuthorizationPolicyRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfigInternal)AuthorizationPolicy).Rule; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfigInternal)AuthorizationPolicy).Rule = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AuthorizationPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfig Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerAuthorizationPropertiesInternal.AuthorizationPolicy { get => (this._authorizationPolicy = this._authorizationPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.AuthorizationConfig()); set { {_authorizationPolicy = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerAuthorizationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="BrokerAuthorizationProperties" /> instance.</summary>
        public BrokerAuthorizationProperties()
        {

        }
    }
    /// BrokerAuthorization Resource properties
    public partial interface IBrokerAuthorizationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IJsonSerializable
    {
        /// <summary>Enable caching of the authorization rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Enable caching of the authorization rules.",
        SerializedName = @"cache",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AuthorizationPolicyCache { get; set; }
        /// <summary>
        /// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
        SerializedName = @"rules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationRule> AuthorizationPolicyRule { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get;  }

    }
    /// BrokerAuthorization Resource properties
    internal partial interface IBrokerAuthorizationPropertiesInternal

    {
        /// <summary>The list of authorization policies supported by the Authorization Resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationConfig AuthorizationPolicy { get; set; }
        /// <summary>Enable caching of the authorization rules.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AuthorizationPolicyCache { get; set; }
        /// <summary>
        /// The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAuthorizationRule> AuthorizationPolicyRule { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get; set; }

    }
}