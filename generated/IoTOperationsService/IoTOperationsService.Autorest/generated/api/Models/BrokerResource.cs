// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Extensions;

    /// <summary>Instance broker resource</summary>
    public partial class BrokerResource :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResource,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ProxyResource();

        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string AdvancedEncryptInternalTraffic { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedEncryptInternalTraffic; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedEncryptInternalTraffic = value ?? null; }

        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainPartition { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainPartition; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainPartition = value ?? default(int); }

        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainRedundancyFactor { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainRedundancyFactor; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainRedundancyFactor = value ?? default(int); }

        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? BackendChainWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).BackendChainWorker = value ?? default(int); }

        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxKeepAliveSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxKeepAliveSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxKeepAliveSecond = value ?? default(int); }

        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxMessageExpirySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxMessageExpirySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxMessageExpirySecond = value ?? default(int); }

        /// <summary>Max message size for a packet in Bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxPacketSizeByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxPacketSizeByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxPacketSizeByte = value ?? default(int); }

        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxReceiveMaximum { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxReceiveMaximum; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxReceiveMaximum = value ?? default(int); }

        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? ClientMaxSessionExpirySecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxSessionExpirySecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientMaxSessionExpirySecond = value ?? default(int); }

        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiskBackedMessageBuffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiskBackedMessageBuffer = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocation _extendedLocation;

        /// <summary>Edge location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>The name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocationInternal)ExtendedLocation).Name = value ; }

        /// <summary>Type of ExtendedLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocationInternal)ExtendedLocation).Type; }

        /// <summary>The desired number of frontend instances (pods).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? FrontendReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).FrontendReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).FrontendReplica = value ?? default(int); }

        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? FrontendWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).FrontendWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).FrontendWorker = value ?? default(int); }

        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string GenerateResourceLimitCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).GenerateResourceLimitCpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).GenerateResourceLimitCpu = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string InternalCertDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertDuration = value ?? null; }

        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string InternalCertRenewBefore { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertRenewBefore; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertRenewBefore = value ?? null; }

        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string LogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).LogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).LogLevel = value ?? null; }

        /// <summary>Memory profile of Broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string MemoryProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).MemoryProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).MemoryProfile = value ?? null; }

        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? MetricPrometheusPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).MetricPrometheusPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).MetricPrometheusPort = value ?? default(int); }

        /// <summary>Internal Acessors for Advanced</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.Advanced { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Advanced; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Advanced = value; }

        /// <summary>Internal Acessors for AdvancedClient</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IClientConfig Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.AdvancedClient { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedClient; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedClient = value; }

        /// <summary>Internal Acessors for AdvancedInternalCert</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertOptions Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.AdvancedInternalCert { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedInternalCert; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).AdvancedInternalCert = value; }

        /// <summary>Internal Acessors for Cardinality</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.Cardinality { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Cardinality; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Cardinality = value; }

        /// <summary>Internal Acessors for CardinalityBackendChain</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChain Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.CardinalityBackendChain { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).CardinalityBackendChain; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).CardinalityBackendChain = value; }

        /// <summary>Internal Acessors for CardinalityFrontend</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IFrontend Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.CardinalityFrontend { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).CardinalityFrontend; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).CardinalityFrontend = value; }

        /// <summary>Internal Acessors for ClientSubscriberQueueLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISubscriberQueueLimit Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.ClientSubscriberQueueLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientSubscriberQueueLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ClientSubscriberQueueLimit = value; }

        /// <summary>Internal Acessors for Diagnostic</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.Diagnostic { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Diagnostic; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).Diagnostic = value; }

        /// <summary>Internal Acessors for DiagnosticLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiagnosticsLogs Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.DiagnosticLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticLog = value; }

        /// <summary>Internal Acessors for DiagnosticMetric</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetrics Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.DiagnosticMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticMetric = value; }

        /// <summary>Internal Acessors for DiagnosticSelfCheck</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfCheck Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.DiagnosticSelfCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticSelfCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticSelfCheck = value; }

        /// <summary>Internal Acessors for DiagnosticTrace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITraces Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.DiagnosticTrace { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticTrace; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).DiagnosticTrace = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for ExtendedLocationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocationInternal)ExtendedLocation).Type = value; }

        /// <summary>Internal Acessors for GenerateResourceLimit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.GenerateResourceLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).GenerateResourceLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).GenerateResourceLimit = value; }

        /// <summary>Internal Acessors for InternalCertPrivateKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.InternalCertPrivateKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertPrivateKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).InternalCertPrivateKey = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerProperties Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.BrokerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for TraceSelfTracing</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfTracing Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerResourceInternal.TraceSelfTracing { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceSelfTracing; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceSelfTracing = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>algorithm for private key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string PrivateKeyAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).PrivateKeyAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).PrivateKeyAlgorithm = value ?? null; }

        /// <summary>cert-manager private key rotationPolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string PrivateKeyRotationPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).PrivateKeyRotationPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).PrivateKeyRotationPolicy = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.BrokerProperties()); set => this._property = value; }

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The self check interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfCheckIntervalSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckIntervalSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckIntervalSecond = value ?? default(int); }

        /// <summary>The toggle to enable/disable self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SelfCheckMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckMode = value ?? null; }

        /// <summary>The timeout for self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfCheckTimeoutSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckTimeoutSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfCheckTimeoutSecond = value ?? default(int); }

        /// <summary>The self tracing interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? SelfTracingIntervalSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfTracingIntervalSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfTracingIntervalSecond = value ?? default(int); }

        /// <summary>The toggle to enable/disable self tracing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SelfTracingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfTracingMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SelfTracingMode = value ?? null; }

        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public long? SubscriberQueueLimitLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SubscriberQueueLimitLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SubscriberQueueLimitLength = value ?? default(long); }

        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string SubscriberQueueLimitStrategy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SubscriberQueueLimitStrategy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).SubscriberQueueLimitStrategy = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>The cache size in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? TraceCacheSizeMegabyte { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceCacheSizeMegabyte; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceCacheSizeMegabyte = value ?? default(int); }

        /// <summary>The toggle to enable/disable traces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public string TraceMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceMode = value ?? null; }

        /// <summary>The span channel capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inlined)]
        public int? TraceSpanChannelCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceSpanChannelCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerPropertiesInternal)Property).TraceSpanChannelCapacity = value ?? default(int); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Origin(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="BrokerResource" /> instance.</summary>
        public BrokerResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// Instance broker resource
    public partial interface IBrokerResource :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IProxyResource
    {
        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The setting to enable or disable encryption of internal Traffic.",
        SerializedName = @"encryptInternalTraffic",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AdvancedEncryptInternalTraffic { get; set; }
        /// <summary>The desired number of physical backend partitions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired number of physical backend partitions.",
        SerializedName = @"partitions",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainPartition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired numbers of backend replicas (pods) in a physical partition.",
        SerializedName = @"redundancyFactor",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainRedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Number of logical backend workers per replica (pod).",
        SerializedName = @"workers",
        PossibleTypes = new [] { typeof(int) })]
        int? BackendChainWorker { get; set; }
        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of a client's Keep Alive, in seconds.",
        SerializedName = @"maxKeepAliveSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxKeepAliveSecond { get; set; }
        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Message Expiry Interval, in seconds.",
        SerializedName = @"maxMessageExpirySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxMessageExpirySecond { get; set; }
        /// <summary>Max message size for a packet in Bytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Max message size for a packet in Bytes.",
        SerializedName = @"maxPacketSizeBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxPacketSizeByte { get; set; }
        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
        SerializedName = @"maxReceiveMaximum",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxReceiveMaximum { get; set; }
        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Upper bound of Session Expiry Interval, in seconds.",
        SerializedName = @"maxSessionExpirySeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ClientMaxSessionExpirySecond { get; set; }
        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Settings of Disk Backed Message Buffer.",
        SerializedName = @"diskBackedMessageBuffer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer) })]
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get; set; }
        /// <summary>The name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The name of the extended location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>Type of ExtendedLocation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Type of ExtendedLocation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationType { get;  }
        /// <summary>The desired number of frontend instances (pods).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The desired number of frontend instances (pods).",
        SerializedName = @"replicas",
        PossibleTypes = new [] { typeof(int) })]
        int? FrontendReplica { get; set; }
        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Number of logical frontend workers per instance (pod).",
        SerializedName = @"workers",
        PossibleTypes = new [] { typeof(int) })]
        int? FrontendWorker { get; set; }
        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The toggle to enable/disable cpu resource limits.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string GenerateResourceLimitCpu { get; set; }
        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(string) })]
        string InternalCertDuration { get; set; }
        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
        SerializedName = @"renewBefore",
        PossibleTypes = new [] { typeof(string) })]
        string InternalCertRenewBefore { get; set; }
        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(string) })]
        string LogLevel { get; set; }
        /// <summary>Memory profile of Broker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Memory profile of Broker.",
        SerializedName = @"memoryProfile",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Tiny", "Low", "Medium", "High")]
        string MemoryProfile { get; set; }
        /// <summary>The prometheus port to expose the metrics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The prometheus port to expose the metrics.",
        SerializedName = @"prometheusPort",
        PossibleTypes = new [] { typeof(int) })]
        int? MetricPrometheusPort { get; set; }
        /// <summary>algorithm for private key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"algorithm for private key.",
        SerializedName = @"algorithm",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Ec256", "Ec384", "Ec521", "Ed25519", "Rsa2048", "Rsa4096", "Rsa8192")]
        string PrivateKeyAlgorithm { get; set; }
        /// <summary>cert-manager private key rotationPolicy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"cert-manager private key rotationPolicy.",
        SerializedName = @"rotationPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Always", "Never")]
        string PrivateKeyRotationPolicy { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>The self check interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The self check interval.",
        SerializedName = @"intervalSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfCheckIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable self check.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfCheckMode { get; set; }
        /// <summary>The timeout for self check.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The timeout for self check.",
        SerializedName = @"timeoutSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfCheckTimeoutSecond { get; set; }
        /// <summary>The self tracing interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The self tracing interval.",
        SerializedName = @"intervalSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? SelfTracingIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self tracing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable self tracing.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfTracingMode { get; set; }
        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The maximum length of the queue before messages start getting dropped.",
        SerializedName = @"length",
        PossibleTypes = new [] { typeof(long) })]
        long? SubscriberQueueLimitLength { get; set; }
        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The strategy to use for dropping messages from the queue.",
        SerializedName = @"strategy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("None", "DropOldest")]
        string SubscriberQueueLimitStrategy { get; set; }
        /// <summary>The cache size in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cache size in megabytes.",
        SerializedName = @"cacheSizeMegabytes",
        PossibleTypes = new [] { typeof(int) })]
        int? TraceCacheSizeMegabyte { get; set; }
        /// <summary>The toggle to enable/disable traces.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The toggle to enable/disable traces.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string TraceMode { get; set; }
        /// <summary>The span channel capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The span channel capacity.",
        SerializedName = @"spanChannelCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? TraceSpanChannelCapacity { get; set; }

    }
    /// Instance broker resource
    internal partial interface IBrokerResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IProxyResourceInternal
    {
        /// <summary>Advanced settings of Broker.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IAdvancedSettings Advanced { get; set; }
        /// <summary>Configurations related to All Clients.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IClientConfig AdvancedClient { get; set; }
        /// <summary>The setting to enable or disable encryption of internal Traffic.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string AdvancedEncryptInternalTraffic { get; set; }
        /// <summary>Certificate rotation and private key configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerCertOptions AdvancedInternalCert { get; set; }
        /// <summary>The desired number of physical backend partitions.</summary>
        int? BackendChainPartition { get; set; }
        /// <summary>The desired numbers of backend replicas (pods) in a physical partition.</summary>
        int? BackendChainRedundancyFactor { get; set; }
        /// <summary>Number of logical backend workers per replica (pod).</summary>
        int? BackendChainWorker { get; set; }
        /// <summary>The cardinality details of the broker.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICardinality Cardinality { get; set; }
        /// <summary>The backend broker desired properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBackendChain CardinalityBackendChain { get; set; }
        /// <summary>The frontend desired properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IFrontend CardinalityFrontend { get; set; }
        /// <summary>Upper bound of a client's Keep Alive, in seconds.</summary>
        int? ClientMaxKeepAliveSecond { get; set; }
        /// <summary>Upper bound of Message Expiry Interval, in seconds.</summary>
        int? ClientMaxMessageExpirySecond { get; set; }
        /// <summary>Max message size for a packet in Bytes.</summary>
        int? ClientMaxPacketSizeByte { get; set; }
        /// <summary>Upper bound of Receive Maximum that a client can request in the CONNECT packet.</summary>
        int? ClientMaxReceiveMaximum { get; set; }
        /// <summary>Upper bound of Session Expiry Interval, in seconds.</summary>
        int? ClientMaxSessionExpirySecond { get; set; }
        /// <summary>The limit on the number of queued messages for a subscriber.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISubscriberQueueLimit ClientSubscriberQueueLimit { get; set; }
        /// <summary>Spec defines the desired identities of Broker diagnostics settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerDiagnostics Diagnostic { get; set; }
        /// <summary>Diagnostic log settings for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiagnosticsLogs DiagnosticLog { get; set; }
        /// <summary>The metrics settings for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IMetrics DiagnosticMetric { get; set; }
        /// <summary>The self check properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfCheck DiagnosticSelfCheck { get; set; }
        /// <summary>The trace properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ITraces DiagnosticTrace { get; set; }
        /// <summary>Settings of Disk Backed Message Buffer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDiskBackedMessageBuffer DiskBackedMessageBuffer { get; set; }
        /// <summary>Edge location of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>The name of the extended location.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>Type of ExtendedLocation.</summary>
        string ExtendedLocationType { get; set; }
        /// <summary>The desired number of frontend instances (pods).</summary>
        int? FrontendReplica { get; set; }
        /// <summary>Number of logical frontend workers per instance (pod).</summary>
        int? FrontendWorker { get; set; }
        /// <summary>
        /// This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers
        /// proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient
        /// CPU resources, an error will be emitted.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IGenerateResourceLimits GenerateResourceLimit { get; set; }
        /// <summary>The toggle to enable/disable cpu resource limits.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string GenerateResourceLimitCpu { get; set; }
        /// <summary>
        /// Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for
        /// 45 minutes.
        /// </summary>
        string InternalCertDuration { get; set; }
        /// <summary>Configuration of certificate private key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ICertManagerPrivateKey InternalCertPrivateKey { get; set; }
        /// <summary>
        /// When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours
        /// and 45m for 45 minutes.
        /// </summary>
        string InternalCertRenewBefore { get; set; }
        /// <summary>The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.</summary>
        string LogLevel { get; set; }
        /// <summary>Memory profile of Broker.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Tiny", "Low", "Medium", "High")]
        string MemoryProfile { get; set; }
        /// <summary>The prometheus port to expose the metrics.</summary>
        int? MetricPrometheusPort { get; set; }
        /// <summary>algorithm for private key.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Ec256", "Ec384", "Ec521", "Ed25519", "Rsa2048", "Rsa4096", "Rsa8192")]
        string PrivateKeyAlgorithm { get; set; }
        /// <summary>cert-manager private key rotationPolicy.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Always", "Never")]
        string PrivateKeyRotationPolicy { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IBrokerProperties Property { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>The self check interval.</summary>
        int? SelfCheckIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self check.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfCheckMode { get; set; }
        /// <summary>The timeout for self check.</summary>
        int? SelfCheckTimeoutSecond { get; set; }
        /// <summary>The self tracing interval.</summary>
        int? SelfTracingIntervalSecond { get; set; }
        /// <summary>The toggle to enable/disable self tracing.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string SelfTracingMode { get; set; }
        /// <summary>The maximum length of the queue before messages start getting dropped.</summary>
        long? SubscriberQueueLimitLength { get; set; }
        /// <summary>The strategy to use for dropping messages from the queue.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("None", "DropOldest")]
        string SubscriberQueueLimitStrategy { get; set; }
        /// <summary>The cache size in megabytes.</summary>
        int? TraceCacheSizeMegabyte { get; set; }
        /// <summary>The toggle to enable/disable traces.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string TraceMode { get; set; }
        /// <summary>The self tracing properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.ISelfTracing TraceSelfTracing { get; set; }
        /// <summary>The span channel capacity.</summary>
        int? TraceSpanChannelCapacity { get; set; }

    }
}