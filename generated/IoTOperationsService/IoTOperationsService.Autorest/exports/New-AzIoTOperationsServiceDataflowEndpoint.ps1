
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
create a DataflowEndpointResource
.Description
create a DataflowEndpointResource
.Example
New-AzIoTOperationsServiceDataflowEndpoint  -InstanceName  "aio-instance-name"   -Name "local-storage-endpoint"  -ResourceGroupName "aio-validation-116116143"  -ExtendedLocationName "/subscriptions/d4ccd08b-0809-446d-a8b7-7af8a90109cd/resourceGroups/aio-validation-116116143/providers/Microsoft.ExtendedLocation/customLocations/location-116116143"   -EndpointType "LocalStorage"  -LocalStorageSettingPersistentVolumeClaimRef "myPersistentVolumeClaim" 

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDataflowEndpointResource
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

KAFKASETTING <IDataflowEndpointKafka>: Kafka endpoint.
  AuthenticationMethod <String>: Mode of Authentication.
  Host <String>: Kafka endpoint host.
  [BatchingLatencyMS <Int32?>]: Batching latency in milliseconds.
  [BatchingMaxByte <Int32?>]: Maximum number of bytes in a batch.
  [BatchingMaxMessage <Int32?>]: Maximum number of messages in a batch.
  [BatchingMode <String>]: Mode for batching.
  [CloudEventAttribute <String>]: Cloud event mapping config.
  [Compression <String>]: Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.
  [ConsumerGroupId <String>]: Consumer group ID.
  [CopyMqttProperty <String>]: Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.
  [KafkaAck <String>]: Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.
  [PartitionStrategy <String>]: Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.
  [SaslSettingSaslType <String>]: Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.
  [SaslSettingSecretRef <String>]: Token secret name.
  [SystemAssignedManagedIdentitySettingAudience <String>]: Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
  [TlMode <String>]: Mode for TLS.
  [TlTrustedCaCertificateConfigMapRef <String>]: Trusted CA certificate config map.
  [UserAssignedManagedIdentitySettingClientId <String>]: Client ID for the user-assigned managed identity.
  [UserAssignedManagedIdentitySettingScope <String>]: Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
  [UserAssignedManagedIdentitySettingTenantId <String>]: Tenant ID.
  [X509CertificateSettingSecretRef <String>]: Secret reference of the X.509 certificate.

MQTTSETTING <IDataflowEndpointMqtt>: Broker endpoint.
  AuthenticationMethod <String>: Mode of Authentication.
  [ClientIdPrefix <String>]: Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.
  [CloudEventAttribute <String>]: Cloud event mapping config.
  [Host <String>]: Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.
  [KeepAliveSecond <Int32?>]: Broker KeepAlive for connection in seconds.
  [MaxInflightMessage <Int32?>]: The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.
  [Protocol <String>]: Enable or disable websockets.
  [Qo <Int32?>]: Qos for Broker connection.
  [Retain <String>]: Whether or not to keep the retain setting.
  [ServiceAccountTokenSettingAudience <String>]: Audience of the service account. Optional, defaults to the broker internal service account audience.
  [SessionExpirySecond <Int32?>]: Session expiry in seconds.
  [SystemAssignedManagedIdentitySettingAudience <String>]: Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.
  [TlMode <String>]: Mode for TLS.
  [TlTrustedCaCertificateConfigMapRef <String>]: Trusted CA certificate config map.
  [UserAssignedManagedIdentitySettingClientId <String>]: Client ID for the user-assigned managed identity.
  [UserAssignedManagedIdentitySettingScope <String>]: Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
  [UserAssignedManagedIdentitySettingTenantId <String>]: Tenant ID.
  [X509CertificateSettingSecretRef <String>]: Secret reference of the X.509 certificate.
.Link
https://learn.microsoft.com/powershell/module/az.iotoperationsservice/new-aziotoperationsservicedataflowendpoint
#>
function New-AzIoTOperationsServiceDataflowEndpoint {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDataflowEndpointResource])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Path')]
    [System.String]
    # Name of instance.
    ${InstanceName},

    [Parameter(Mandatory)]
    [Alias('DataflowEndpointName')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Path')]
    [System.String]
    # Name of Instance dataflowEndpoint resource
    ${Name},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    # The value must be an UUID.
    ${SubscriptionId},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # The name of the extended location.
    ${ExtendedLocationName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Token secret name.
    ${AccessTokenSettingSecretRef},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Database name.
    ${DataExplorerSettingDatabase},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .
    ${DataExplorerSettingHost},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("SystemAssignedManagedIdentity", "UserAssignedManagedIdentity")]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Mode of Authentication.
    ${DataExplorerSettingsAuthenticationMethod},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Audience of the service to authenticate against.
    # Optional; defaults to the audience for Service host configuration.
    ${DataExplorerSettingsAuthenticationSystemAssignedManagedIdentitySettingsAudience},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Client ID for the user-assigned managed identity.
    ${DataExplorerSettingsAuthenticationUserAssignedManagedIdentitySettingsClientId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
    ${DataExplorerSettingsAuthenticationUserAssignedManagedIdentitySettingsScope},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Tenant ID.
    ${DataExplorerSettingsAuthenticationUserAssignedManagedIdentitySettingsTenantId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Batching latency in seconds.
    ${DataExplorerSettingsBatchingLatencySecond},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Maximum number of messages in a batch.
    ${DataExplorerSettingsBatchingMaxMessage},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .
    ${DataLakeStorageSettingHost},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("SystemAssignedManagedIdentity", "UserAssignedManagedIdentity", "AccessToken")]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Mode of Authentication.
    ${DataLakeStorageSettingsAuthenticationMethod},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Audience of the service to authenticate against.
    # Optional; defaults to the audience for Service host configuration.
    ${DataLakeStorageSettingsAuthenticationSystemAssignedManagedIdentitySettingsAudience},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Client ID for the user-assigned managed identity.
    ${DataLakeStorageSettingsAuthenticationUserAssignedManagedIdentitySettingsClientId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
    ${DataLakeStorageSettingsAuthenticationUserAssignedManagedIdentitySettingsScope},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Tenant ID.
    ${DataLakeStorageSettingsAuthenticationUserAssignedManagedIdentitySettingsTenantId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Batching latency in seconds.
    ${DataLakeStorageSettingsBatchingLatencySecond},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Maximum number of messages in a batch.
    ${DataLakeStorageSettingsBatchingMaxMessage},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("DataExplorer", "DataLakeStorage", "FabricOneLake", "Kafka", "LocalStorage", "Mqtt")]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Endpoint Type.
    ${EndpointType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.
    ${FabricOneLakeSettingHost},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("Files", "Tables")]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Type of location of the data in the workspace.
    # Can be either tables or files.
    ${FabricOneLakeSettingOneLakePathType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.PSArgumentCompleterAttribute("SystemAssignedManagedIdentity", "UserAssignedManagedIdentity")]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Mode of Authentication.
    ${FabricOneLakeSettingsAuthenticationMethod},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Audience of the service to authenticate against.
    # Optional; defaults to the audience for Service host configuration.
    ${FabricOneLakeSettingsAuthenticationSystemAssignedManagedIdentitySettingsAudience},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Client ID for the user-assigned managed identity.
    ${FabricOneLakeSettingsAuthenticationUserAssignedManagedIdentitySettingsClientId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Resource identifier (application ID URI) of the resource, affixed with the .default suffix.
    ${FabricOneLakeSettingsAuthenticationUserAssignedManagedIdentitySettingsScope},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Tenant ID.
    ${FabricOneLakeSettingsAuthenticationUserAssignedManagedIdentitySettingsTenantId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Batching latency in seconds.
    ${FabricOneLakeSettingsBatchingLatencySecond},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.Int32]
    # Maximum number of messages in a batch.
    ${FabricOneLakeSettingsBatchingMaxMessage},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDataflowEndpointKafka]
    # Kafka endpoint.
    ${KafkaSetting},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Persistent volume claim name.
    ${LocalStorageSettingPersistentVolumeClaimRef},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Models.IDataflowEndpointMqtt]
    # Broker endpoint.
    ${MqttSetting},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Lakehouse name.
    ${NameLakehouseName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Workspace name.
    ${NameWorkspaceName},

    [Parameter(ParameterSetName='CreateViaJsonFilePath', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Path of Json file supplied to the Create operation
    ${JsonFilePath},

    [Parameter(ParameterSetName='CreateViaJsonString', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Body')]
    [System.String]
    # Json string supplied to the Create operation
    ${JsonString},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        
        $testPlayback = $false
        $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }

        $context = Get-AzContext
        if (-not $context -and -not $testPlayback) {
            Write-Error "No Azure login detected. Please run 'Connect-AzAccount' to log in."
            exit
        }

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.IoTOperationsService.private\New-AzIoTOperationsServiceDataflowEndpoint_CreateExpanded';
            CreateViaJsonFilePath = 'Az.IoTOperationsService.private\New-AzIoTOperationsServiceDataflowEndpoint_CreateViaJsonFilePath';
            CreateViaJsonString = 'Az.IoTOperationsService.private\New-AzIoTOperationsServiceDataflowEndpoint_CreateViaJsonString';
        }
        if (('CreateExpanded', 'CreateViaJsonFilePath', 'CreateViaJsonString') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId') ) {
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        if ($wrappedCmd -eq $null) {
            $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Function)
        }
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.IoTOperationsService.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
