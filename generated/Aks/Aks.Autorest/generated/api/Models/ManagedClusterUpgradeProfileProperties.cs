// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Control plane and agent pool upgrade profiles.</summary>
    public partial class ManagedClusterUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterUpgradeProfileProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterUpgradeProfilePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentPoolProfile" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile> _agentPoolProfile;

        /// <summary>The list of available upgrade versions for agent pools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile> AgentPoolProfile { get => this._agentPoolProfile; set => this._agentPoolProfile = value; }

        /// <summary>Backing field for <see cref="ControlPlaneProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile _controlPlaneProfile;

        /// <summary>The list of available upgrade versions for the control plane.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile ControlPlaneProfile { get => (this._controlPlaneProfile = this._controlPlaneProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPoolUpgradeProfile()); set => this._controlPlaneProfile = value; }

        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ControlPlaneProfileKubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).KubernetesVersion = value ; }

        /// <summary>The Agent Pool name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ControlPlaneProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).Name = value ?? null; }

        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ControlPlaneProfileOSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).OSType = value ; }

        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileUpgradesItem> ControlPlaneProfileUpgrade { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).Upgrade; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileInternal)ControlPlaneProfile).Upgrade = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ControlPlaneProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterUpgradeProfilePropertiesInternal.ControlPlaneProfile { get => (this._controlPlaneProfile = this._controlPlaneProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPoolUpgradeProfile()); set { {_controlPlaneProfile = value;} } }

        /// <summary>Creates an new <see cref="ManagedClusterUpgradeProfileProperties" /> instance.</summary>
        public ManagedClusterUpgradeProfileProperties()
        {

        }
    }
    /// Control plane and agent pool upgrade profiles.
    public partial interface IManagedClusterUpgradeProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable
    {
        /// <summary>The list of available upgrade versions for agent pools.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of available upgrade versions for agent pools.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile> AgentPoolProfile { get; set; }
        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Kubernetes version (major.minor.patch).",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneProfileKubernetesVersion { get; set; }
        /// <summary>The Agent Pool name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Agent Pool name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneProfileName { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The operating system type. The default is Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Aks.PSArgumentCompleterAttribute("Linux", "Windows")]
        string ControlPlaneProfileOSType { get; set; }
        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of orchestrator types and versions available for upgrade.",
        SerializedName = @"upgrades",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileUpgradesItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileUpgradesItem> ControlPlaneProfileUpgrade { get; set; }

    }
    /// Control plane and agent pool upgrade profiles.
    internal partial interface IManagedClusterUpgradeProfilePropertiesInternal

    {
        /// <summary>The list of available upgrade versions for agent pools.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile> AgentPoolProfile { get; set; }
        /// <summary>The list of available upgrade versions for the control plane.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfile ControlPlaneProfile { get; set; }
        /// <summary>The Kubernetes version (major.minor.patch).</summary>
        string ControlPlaneProfileKubernetesVersion { get; set; }
        /// <summary>The Agent Pool name.</summary>
        string ControlPlaneProfileName { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Aks.PSArgumentCompleterAttribute("Linux", "Windows")]
        string ControlPlaneProfileOSType { get; set; }
        /// <summary>List of orchestrator types and versions available for upgrade.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPoolUpgradeProfileUpgradesItem> ControlPlaneProfileUpgrade { get; set; }

    }
}