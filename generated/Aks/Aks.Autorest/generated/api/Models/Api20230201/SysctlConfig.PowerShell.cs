// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.PowerShell;

    /// <summary>Sysctl settings for Linux agent nodes.</summary>
    [System.ComponentModel.TypeConverter(typeof(SysctlConfigTypeConverter))]
    public partial class SysctlConfig
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.SysctlConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SysctlConfig(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.SysctlConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SysctlConfig(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SysctlConfig" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SysctlConfig" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfig FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.SysctlConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SysctlConfig(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NetCoreSomaxconn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreSomaxconn = (int?) content.GetValueForProperty("NetCoreSomaxconn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreSomaxconn, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreNetdevMaxBacklog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreNetdevMaxBacklog = (int?) content.GetValueForProperty("NetCoreNetdevMaxBacklog",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreNetdevMaxBacklog, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreRmemDefault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemDefault = (int?) content.GetValueForProperty("NetCoreRmemDefault",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemDefault, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreRmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemMax = (int?) content.GetValueForProperty("NetCoreRmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreWmemDefault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemDefault = (int?) content.GetValueForProperty("NetCoreWmemDefault",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemDefault, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreWmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemMax = (int?) content.GetValueForProperty("NetCoreWmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreOptmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreOptmemMax = (int?) content.GetValueForProperty("NetCoreOptmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreOptmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpMaxSynBacklog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxSynBacklog = (int?) content.GetValueForProperty("NetIpv4TcpMaxSynBacklog",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxSynBacklog, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpMaxTwBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxTwBucket = (int?) content.GetValueForProperty("NetIpv4TcpMaxTwBucket",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxTwBucket, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpFinTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpFinTimeout = (int?) content.GetValueForProperty("NetIpv4TcpFinTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpFinTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpKeepaliveTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveTime = (int?) content.GetValueForProperty("NetIpv4TcpKeepaliveTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveTime, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpKeepaliveProbe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveProbe = (int?) content.GetValueForProperty("NetIpv4TcpKeepaliveProbe",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveProbe, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpkeepaliveIntvl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpkeepaliveIntvl = (int?) content.GetValueForProperty("NetIpv4TcpkeepaliveIntvl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpkeepaliveIntvl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpTwReuse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpTwReuse = (bool?) content.GetValueForProperty("NetIpv4TcpTwReuse",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpTwReuse, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetIpv4IPLocalPortRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4IPLocalPortRange = (string) content.GetValueForProperty("NetIpv4IPLocalPortRange",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4IPLocalPortRange, global::System.Convert.ToString);
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh1 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh1",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh1, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh2 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh2",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh2, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh3"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh3 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh3",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh3, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetNetfilterNfConntrackMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackMax = (int?) content.GetValueForProperty("NetNetfilterNfConntrackMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetNetfilterNfConntrackBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackBucket = (int?) content.GetValueForProperty("NetNetfilterNfConntrackBucket",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackBucket, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsInotifyMaxUserWatch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsInotifyMaxUserWatch = (int?) content.GetValueForProperty("FsInotifyMaxUserWatch",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsInotifyMaxUserWatch, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsFileMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsFileMax = (int?) content.GetValueForProperty("FsFileMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsFileMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsAioMaxNr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsAioMaxNr = (int?) content.GetValueForProperty("FsAioMaxNr",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsAioMaxNr, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsNrOpen"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsNrOpen = (int?) content.GetValueForProperty("FsNrOpen",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsNrOpen, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KernelThreadsMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).KernelThreadsMax = (int?) content.GetValueForProperty("KernelThreadsMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).KernelThreadsMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMMaxMapCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMMaxMapCount = (int?) content.GetValueForProperty("VMMaxMapCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMMaxMapCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSwappiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMSwappiness = (int?) content.GetValueForProperty("VMSwappiness",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMSwappiness, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMVfsCachePressure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMVfsCachePressure = (int?) content.GetValueForProperty("VMVfsCachePressure",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMVfsCachePressure, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.SysctlConfig"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SysctlConfig(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NetCoreSomaxconn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreSomaxconn = (int?) content.GetValueForProperty("NetCoreSomaxconn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreSomaxconn, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreNetdevMaxBacklog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreNetdevMaxBacklog = (int?) content.GetValueForProperty("NetCoreNetdevMaxBacklog",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreNetdevMaxBacklog, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreRmemDefault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemDefault = (int?) content.GetValueForProperty("NetCoreRmemDefault",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemDefault, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreRmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemMax = (int?) content.GetValueForProperty("NetCoreRmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreRmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreWmemDefault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemDefault = (int?) content.GetValueForProperty("NetCoreWmemDefault",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemDefault, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreWmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemMax = (int?) content.GetValueForProperty("NetCoreWmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreWmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetCoreOptmemMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreOptmemMax = (int?) content.GetValueForProperty("NetCoreOptmemMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetCoreOptmemMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpMaxSynBacklog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxSynBacklog = (int?) content.GetValueForProperty("NetIpv4TcpMaxSynBacklog",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxSynBacklog, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpMaxTwBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxTwBucket = (int?) content.GetValueForProperty("NetIpv4TcpMaxTwBucket",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpMaxTwBucket, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpFinTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpFinTimeout = (int?) content.GetValueForProperty("NetIpv4TcpFinTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpFinTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpKeepaliveTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveTime = (int?) content.GetValueForProperty("NetIpv4TcpKeepaliveTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveTime, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpKeepaliveProbe"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveProbe = (int?) content.GetValueForProperty("NetIpv4TcpKeepaliveProbe",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpKeepaliveProbe, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpkeepaliveIntvl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpkeepaliveIntvl = (int?) content.GetValueForProperty("NetIpv4TcpkeepaliveIntvl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpkeepaliveIntvl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4TcpTwReuse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpTwReuse = (bool?) content.GetValueForProperty("NetIpv4TcpTwReuse",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4TcpTwReuse, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NetIpv4IPLocalPortRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4IPLocalPortRange = (string) content.GetValueForProperty("NetIpv4IPLocalPortRange",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4IPLocalPortRange, global::System.Convert.ToString);
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh1 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh1",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh1, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh2 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh2",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh2, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetIpv4NeighDefaultGcThresh3"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh3 = (int?) content.GetValueForProperty("NetIpv4NeighDefaultGcThresh3",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetIpv4NeighDefaultGcThresh3, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetNetfilterNfConntrackMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackMax = (int?) content.GetValueForProperty("NetNetfilterNfConntrackMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetNetfilterNfConntrackBucket"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackBucket = (int?) content.GetValueForProperty("NetNetfilterNfConntrackBucket",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).NetNetfilterNfConntrackBucket, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsInotifyMaxUserWatch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsInotifyMaxUserWatch = (int?) content.GetValueForProperty("FsInotifyMaxUserWatch",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsInotifyMaxUserWatch, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsFileMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsFileMax = (int?) content.GetValueForProperty("FsFileMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsFileMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsAioMaxNr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsAioMaxNr = (int?) content.GetValueForProperty("FsAioMaxNr",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsAioMaxNr, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FsNrOpen"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsNrOpen = (int?) content.GetValueForProperty("FsNrOpen",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).FsNrOpen, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KernelThreadsMax"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).KernelThreadsMax = (int?) content.GetValueForProperty("KernelThreadsMax",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).KernelThreadsMax, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMMaxMapCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMMaxMapCount = (int?) content.GetValueForProperty("VMMaxMapCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMMaxMapCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSwappiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMSwappiness = (int?) content.GetValueForProperty("VMSwappiness",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMSwappiness, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMVfsCachePressure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMVfsCachePressure = (int?) content.GetValueForProperty("VMVfsCachePressure",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISysctlConfigInternal)this).VMVfsCachePressure, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Sysctl settings for Linux agent nodes.
    [System.ComponentModel.TypeConverter(typeof(SysctlConfigTypeConverter))]
    public partial interface ISysctlConfig

    {

    }
}