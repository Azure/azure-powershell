// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Properties used to configure a node pool snapshot.</summary>
    public partial class SnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData _creationData;

        /// <summary>
        /// CreationData to be used to specify the source agent pool resource ID to create this snapshot.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.CreationData()); set => this._creationData = value; }

        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string CreationDataSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationDataInternal)CreationData).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationDataInternal)CreationData).SourceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="EnableFips" /> property.</summary>
        private bool? _enableFips;

        /// <summary>Whether to use a FIPS-enabled OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public bool? EnableFips { get => this._enableFips; }

        /// <summary>Backing field for <see cref="KubernetesVersion" /> property.</summary>
        private string _kubernetesVersion;

        /// <summary>The version of Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string KubernetesVersion { get => this._kubernetesVersion; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.CreationData()); set { {_creationData = value;} } }

        /// <summary>Internal Acessors for EnableFips</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.EnableFips { get => this._enableFips; set { {_enableFips = value;} } }

        /// <summary>Internal Acessors for KubernetesVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.KubernetesVersion { get => this._kubernetesVersion; set { {_kubernetesVersion = value;} } }

        /// <summary>Internal Acessors for NodeImageVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.NodeImageVersion { get => this._nodeImageVersion; set { {_nodeImageVersion = value;} } }

        /// <summary>Internal Acessors for OSSku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.OSSku { get => this._oSSku; set { {_oSSku = value;} } }

        /// <summary>Internal Acessors for OSType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.OSType { get => this._oSType; set { {_oSType = value;} } }

        /// <summary>Internal Acessors for VMSize</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ISnapshotPropertiesInternal.VMSize { get => this._vMSize; set { {_vMSize = value;} } }

        /// <summary>Backing field for <see cref="NodeImageVersion" /> property.</summary>
        private string _nodeImageVersion;

        /// <summary>The version of node image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string NodeImageVersion { get => this._nodeImageVersion; }

        /// <summary>Backing field for <see cref="OSSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? _oSSku;

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get => this._oSSku; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? _oSType;

        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get => this._oSType; }

        /// <summary>Backing field for <see cref="SnapshotType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.SnapshotType? _snapshotType;

        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.SnapshotType? SnapshotType { get => this._snapshotType; set => this._snapshotType = value; }

        /// <summary>Backing field for <see cref="VMSize" /> property.</summary>
        private string _vMSize;

        /// <summary>The size of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string VMSize { get => this._vMSize; }

        /// <summary>Creates an new <see cref="SnapshotProperties" /> instance.</summary>
        public SnapshotProperties()
        {

        }
    }
    /// Properties used to configure a node pool snapshot.
    public partial interface ISnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable
    {
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the ARM ID of the source object to be used to create the target object.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceResourceId { get; set; }
        /// <summary>Whether to use a FIPS-enabled OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether to use a FIPS-enabled OS.",
        SerializedName = @"enableFIPS",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableFips { get;  }
        /// <summary>The version of Kubernetes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Kubernetes.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get;  }
        /// <summary>The version of node image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of node image.",
        SerializedName = @"nodeImageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NodeImageVersion { get;  }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.",
        SerializedName = @"osSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get;  }
        /// <summary>The operating system type. The default is Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The operating system type. The default is Linux.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get;  }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of a snapshot. The default is NodePool.",
        SerializedName = @"snapshotType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.SnapshotType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.SnapshotType? SnapshotType { get; set; }
        /// <summary>The size of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The size of the VM.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get;  }

    }
    /// Properties used to configure a node pool snapshot.
    internal partial interface ISnapshotPropertiesInternal

    {
        /// <summary>
        /// CreationData to be used to specify the source agent pool resource ID to create this snapshot.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.Api20230201.ICreationData CreationData { get; set; }
        /// <summary>This is the ARM ID of the source object to be used to create the target object.</summary>
        string CreationDataSourceResourceId { get; set; }
        /// <summary>Whether to use a FIPS-enabled OS.</summary>
        bool? EnableFips { get; set; }
        /// <summary>The version of Kubernetes.</summary>
        string KubernetesVersion { get; set; }
        /// <summary>The version of node image.</summary>
        string NodeImageVersion { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when
        /// Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.Ossku? OSSku { get; set; }
        /// <summary>The operating system type. The default is Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.OSType? OSType { get; set; }
        /// <summary>The type of a snapshot. The default is NodePool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Support.SnapshotType? SnapshotType { get; set; }
        /// <summary>The size of the VM.</summary>
        string VMSize { get; set; }

    }
}