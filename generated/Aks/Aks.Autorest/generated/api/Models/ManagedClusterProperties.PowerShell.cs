// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.PowerShell;

    /// <summary>Properties of the managed cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterPropertiesTypeConverter))]
    public partial class ManagedClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ManagedClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ManagedClusterProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ManagedClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ManagedClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ManagedClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerState = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPowerState) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerState, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PowerStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceLinuxProfile) content.GetValueForProperty("LinuxProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceLinuxProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowsProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWindowsProfile) content.GetValueForProperty("WindowsProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowsProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWindowsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PodIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityProfile) content.GetValueForProperty("PodIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("OidcIssuerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterOidcIssuerProfile) content.GetValueForProperty("OidcIssuerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterOidcIssuerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AadProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAadProfile) content.GetValueForProperty("AadProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAadProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUpgradeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAutoUpgradeProfile) content.GetValueForProperty("AutoUpgradeProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAutoUpgradeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoScalerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesAutoScalerProfile) content.GetValueForProperty("AutoScalerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesAutoScalerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiServerAccessProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterApiServerAccessProfile) content.GetValueForProperty("ApiServerAccessProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterApiServerAccessProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpProxyConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterHttpProxyConfig) content.GetValueForProperty("HttpProxyConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterHttpProxyConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfile) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkloadAutoScalerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWorkloadAutoScalerProfile) content.GetValueForProperty("WorkloadAutoScalerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWorkloadAutoScalerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfile) content.GetValueForProperty("AzureMonitorProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("MaxAgentPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MaxAgentPool = (int?) content.GetValueForProperty("MaxAgentPool",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MaxAgentPool, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).CurrentKubernetesVersion = (string) content.GetValueForProperty("CurrentKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).CurrentKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DnsPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DnsPrefix = (string) content.GetValueForProperty("DnsPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DnsPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("FqdnSubdomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FqdnSubdomain = (string) content.GetValueForProperty("FqdnSubdomain",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FqdnSubdomain, global::System.Convert.ToString);
            }
            if (content.Contains("Fqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).Fqdn = (string) content.GetValueForProperty("Fqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).Fqdn, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateFqdn = (string) content.GetValueForProperty("PrivateFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePortalFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzurePortalFqdn = (string) content.GetValueForProperty("AzurePortalFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzurePortalFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("AgentPoolProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AgentPoolProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfile>) content.GetValueForProperty("AgentPoolProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AgentPoolProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("AddonProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AddonProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesAddonProfiles) content.GetValueForProperty("AddonProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AddonProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesAddonProfilesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NodeResourceGroup = (string) content.GetValueForProperty("NodeResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NodeResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("EnableRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnableRbac = (bool?) content.GetValueForProperty("EnableRbac",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnableRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnablePodSecurityPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnablePodSecurityPolicy = (bool?) content.GetValueForProperty("EnablePodSecurityPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnablePodSecurityPolicy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskEncryptionSetId = (string) content.GetValueForProperty("DiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskEncryptionSetId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).IdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesIdentityProfile) content.GetValueForProperty("IdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).IdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateLinkResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateLinkResource = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPrivateLinkResource>) content.GetValueForProperty("PrivateLinkResource",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateLinkResource, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPrivateLinkResource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PrivateLinkResourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisableLocalAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DisableLocalAccount = (bool?) content.GetValueForProperty("DisableLocalAccount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DisableLocalAccount, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceNetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PowerStateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerStateCode = (string) content.GetValueForProperty("PowerStateCode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerStateCode, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileLicenseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileLicenseType = (string) content.GetValueForProperty("WindowProfileLicenseType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileLicenseType, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUpgradeProfileUpgradeChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfileUpgradeChannel = (string) content.GetValueForProperty("AutoUpgradeProfileUpgradeChannel",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfileUpgradeChannel, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileExpander"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileExpander = (string) content.GetValueForProperty("AutoScalerProfileExpander",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileExpander, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxProfileSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileSsh = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshConfiguration) content.GetValueForProperty("LinuxProfileSsh",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileSsh, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceSshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxProfileAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileAdminUsername = (string) content.GetValueForProperty("LinuxProfileAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileGmsaProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileGmsaProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IWindowsGmsaProfile) content.GetValueForProperty("WindowProfileGmsaProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileGmsaProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.WindowsGmsaProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowProfileAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminUsername = (string) content.GetValueForProperty("WindowProfileAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileAdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminPassword = (string) content.GetValueForProperty("WindowProfileAdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileEnableCsiProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileEnableCsiProxy = (bool?) content.GetValueForProperty("WindowProfileEnableCsiProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileEnableCsiProxy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileSecret = (string) content.GetValueForProperty("ServicePrincipalProfileSecret",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileSecret, global::System.Convert.ToString);
            }
            if (content.Contains("PodIdentityProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileEnabled = (bool?) content.GetValueForProperty("PodIdentityProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PodIdentityProfileAllowNetworkPluginKubenet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileAllowNetworkPluginKubenet = (bool?) content.GetValueForProperty("PodIdentityProfileAllowNetworkPluginKubenet",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileAllowNetworkPluginKubenet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PodIdentityProfileUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentity = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentity>) content.GetValueForProperty("PodIdentityProfileUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentity, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentity>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityTypeConverter.ConvertFrom));
            }
            if (content.Contains("PodIdentityProfileUserAssignedIdentityException"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentityException = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityException>) content.GetValueForProperty("PodIdentityProfileUserAssignedIdentityException",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentityException, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityException>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityExceptionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OidcIssuerProfileIssuerUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileIssuerUrl = (string) content.GetValueForProperty("OidcIssuerProfileIssuerUrl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileIssuerUrl, global::System.Convert.ToString);
            }
            if (content.Contains("OidcIssuerProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileEnabled = (bool?) content.GetValueForProperty("OidcIssuerProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileManaged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileManaged = (bool?) content.GetValueForProperty("AadProfileManaged",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileManaged, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileEnableAzureRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileEnableAzureRbac = (bool?) content.GetValueForProperty("AadProfileEnableAzureRbac",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileEnableAzureRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileAdminGroupObjectID"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileAdminGroupObjectID = (System.Collections.Generic.List<string>) content.GetValueForProperty("AadProfileAdminGroupObjectID",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileAdminGroupObjectID, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AadProfileClientAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileClientAppId = (string) content.GetValueForProperty("AadProfileClientAppId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileClientAppId, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileServerAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppId = (string) content.GetValueForProperty("AadProfileServerAppId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppId, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileServerAppSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppSecret = (string) content.GetValueForProperty("AadProfileServerAppSecret",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppSecret, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileTenantId = (string) content.GetValueForProperty("AadProfileTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileBalanceSimilarNodeGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileBalanceSimilarNodeGroup = (string) content.GetValueForProperty("AutoScalerProfileBalanceSimilarNodeGroup",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileBalanceSimilarNodeGroup, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxEmptyBulkDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxEmptyBulkDelete = (string) content.GetValueForProperty("AutoScalerProfileMaxEmptyBulkDelete",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxEmptyBulkDelete, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxGracefulTerminationSec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxGracefulTerminationSec = (string) content.GetValueForProperty("AutoScalerProfileMaxGracefulTerminationSec",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxGracefulTerminationSec, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxNodeProvisionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxNodeProvisionTime = (string) content.GetValueForProperty("AutoScalerProfileMaxNodeProvisionTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxNodeProvisionTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxTotalUnreadyPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxTotalUnreadyPercentage = (string) content.GetValueForProperty("AutoScalerProfileMaxTotalUnreadyPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxTotalUnreadyPercentage, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileNewPodScaleUpDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileNewPodScaleUpDelay = (string) content.GetValueForProperty("AutoScalerProfileNewPodScaleUpDelay",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileNewPodScaleUpDelay, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileOkTotalUnreadyCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileOkTotalUnreadyCount = (string) content.GetValueForProperty("AutoScalerProfileOkTotalUnreadyCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileOkTotalUnreadyCount, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScanInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScanInterval = (string) content.GetValueForProperty("AutoScalerProfileScanInterval",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScanInterval, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterAdd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterAdd = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterAdd",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterAdd, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterDelete = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterDelete",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterDelete, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterFailure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterFailure = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterFailure",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterFailure, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUnneededTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnneededTime = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUnneededTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnneededTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUnreadyTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnreadyTime = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUnreadyTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnreadyTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUtilizationThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUtilizationThreshold = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUtilizationThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUtilizationThreshold, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileSkipNodesWithLocalStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithLocalStorage = (string) content.GetValueForProperty("AutoScalerProfileSkipNodesWithLocalStorage",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithLocalStorage, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileSkipNodesWithSystemPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithSystemPod = (string) content.GetValueForProperty("AutoScalerProfileSkipNodesWithSystemPod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithSystemPod, global::System.Convert.ToString);
            }
            if (content.Contains("ApiServerAccessProfileAuthorizedIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileAuthorizedIPRange = (System.Collections.Generic.List<string>) content.GetValueForProperty("ApiServerAccessProfileAuthorizedIPRange",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileAuthorizedIPRange, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ApiServerAccessProfileEnablePrivateCluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateCluster = (bool?) content.GetValueForProperty("ApiServerAccessProfileEnablePrivateCluster",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateCluster, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApiServerAccessProfilePrivateDnsZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfilePrivateDnsZone = (string) content.GetValueForProperty("ApiServerAccessProfilePrivateDnsZone",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfilePrivateDnsZone, global::System.Convert.ToString);
            }
            if (content.Contains("ApiServerAccessProfileEnablePrivateClusterPublicFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateClusterPublicFqdn = (bool?) content.GetValueForProperty("ApiServerAccessProfileEnablePrivateClusterPublicFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateClusterPublicFqdn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApiServerAccessProfileDisableRunCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileDisableRunCommand = (bool?) content.GetValueForProperty("ApiServerAccessProfileDisableRunCommand",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileDisableRunCommand, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpProxyConfigHttpProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpProxy = (string) content.GetValueForProperty("HttpProxyConfigHttpProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpProxy, global::System.Convert.ToString);
            }
            if (content.Contains("HttpProxyConfigHttpsProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpsProxy = (string) content.GetValueForProperty("HttpProxyConfigHttpsProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpsProxy, global::System.Convert.ToString);
            }
            if (content.Contains("HttpProxyConfigNoProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigNoProxy = (System.Collections.Generic.List<string>) content.GetValueForProperty("HttpProxyConfigNoProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigNoProxy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HttpProxyConfigTrustedCa"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigTrustedCa = (string) content.GetValueForProperty("HttpProxyConfigTrustedCa",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigTrustedCa, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDefender"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileDefender = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileDefender) content.GetValueForProperty("SecurityProfileDefender",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileDefender, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileDefenderTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileAzureKeyVaultKm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileAzureKeyVaultKm = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IAzureKeyVaultKms) content.GetValueForProperty("SecurityProfileAzureKeyVaultKm",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileAzureKeyVaultKm, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.AzureKeyVaultKmsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileWorkloadIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileWorkloadIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileWorkloadIdentity) content.GetValueForProperty("SecurityProfileWorkloadIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileWorkloadIdentity, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileWorkloadIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileImageCleaner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileImageCleaner = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileImageCleaner) content.GetValueForProperty("SecurityProfileImageCleaner",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileImageCleaner, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileImageCleanerTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureKeyVaultKmKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyId = (string) content.GetValueForProperty("AzureKeyVaultKmKeyId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageProfileDiskCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileDiskCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver) content.GetValueForProperty("StorageProfileDiskCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileDiskCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileDiskCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileFileCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileFileCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver) content.GetValueForProperty("StorageProfileFileCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileFileCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileFileCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileSnapshotController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileSnapshotController = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController) content.GetValueForProperty("StorageProfileSnapshotController",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileSnapshotController, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileSnapshotControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileBlobCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileBlobCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver) content.GetValueForProperty("StorageProfileBlobCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileBlobCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileBlobCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkloadAutoScalerProfileKeda"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfileKeda = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWorkloadAutoScalerProfileKeda) content.GetValueForProperty("WorkloadAutoScalerProfileKeda",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfileKeda, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWorkloadAutoScalerProfileKedaTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorProfileMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfileMetric = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfileMetrics) content.GetValueForProperty("AzureMonitorProfileMetric",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfileMetric, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SshPublicKey = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshPublicKey>) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceSshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("GmsaProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileEnabled = (bool?) content.GetValueForProperty("GmsaProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GmsaProfileDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileDnsServer = (string) content.GetValueForProperty("GmsaProfileDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileDnsServer, global::System.Convert.ToString);
            }
            if (content.Contains("GmsaProfileRootDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileRootDomainName = (string) content.GetValueForProperty("GmsaProfileRootDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileRootDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderSecurityMonitoring"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderSecurityMonitoring = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileDefenderSecurityMonitoring) content.GetValueForProperty("DefenderSecurityMonitoring",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderSecurityMonitoring, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileDefenderSecurityMonitoringTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefenderLogAnalyticsWorkspaceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderLogAnalyticsWorkspaceResourceId = (string) content.GetValueForProperty("DefenderLogAnalyticsWorkspaceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderLogAnalyticsWorkspaceResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AzureKeyVaultKmEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmEnabled = (bool?) content.GetValueForProperty("AzureKeyVaultKmEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AzureKeyVaultKmKeyVaultNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultNetworkAccess = (string) content.GetValueForProperty("AzureKeyVaultKmKeyVaultNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("AzureKeyVaultKmKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultResourceId = (string) content.GetValueForProperty("AzureKeyVaultKmKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadIdentityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadIdentityEnabled = (bool?) content.GetValueForProperty("WorkloadIdentityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadIdentityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageCleanerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerEnabled = (bool?) content.GetValueForProperty("ImageCleanerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageCleanerIntervalHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerIntervalHour = (int?) content.GetValueForProperty("ImageCleanerIntervalHour",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerIntervalHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskCsiDriverEnabled = (bool?) content.GetValueForProperty("DiskCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FileCsiDriverEnabled = (bool?) content.GetValueForProperty("FileCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FileCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotControllerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SnapshotControllerEnabled = (bool?) content.GetValueForProperty("SnapshotControllerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SnapshotControllerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BlobCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).BlobCsiDriverEnabled = (bool?) content.GetValueForProperty("BlobCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).BlobCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KedaEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KedaEnabled = (bool?) content.GetValueForProperty("KedaEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KedaEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MetricKubeStateMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricKubeStateMetric = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfileKubeStateMetrics) content.GetValueForProperty("MetricKubeStateMetric",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricKubeStateMetric, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileKubeStateMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetricEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricEnabled = (bool?) content.GetValueForProperty("MetricEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecurityMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityMonitoringEnabled = (bool?) content.GetValueForProperty("SecurityMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeStateMetricLabelsAllowlist"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricLabelsAllowlist = (string) content.GetValueForProperty("KubeStateMetricLabelsAllowlist",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricLabelsAllowlist, global::System.Convert.ToString);
            }
            if (content.Contains("KubeStateMetricAnnotationsAllowList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricAnnotationsAllowList = (string) content.GetValueForProperty("KubeStateMetricAnnotationsAllowList",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricAnnotationsAllowList, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ManagedClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerState = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPowerState) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerState, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PowerStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceLinuxProfile) content.GetValueForProperty("LinuxProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceLinuxProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowsProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWindowsProfile) content.GetValueForProperty("WindowsProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowsProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWindowsProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServicePrincipalProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterServicePrincipalProfile) content.GetValueForProperty("ServicePrincipalProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterServicePrincipalProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PodIdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityProfile) content.GetValueForProperty("PodIdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("OidcIssuerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterOidcIssuerProfile) content.GetValueForProperty("OidcIssuerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterOidcIssuerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AadProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAadProfile) content.GetValueForProperty("AadProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAadProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoUpgradeProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAutoUpgradeProfile) content.GetValueForProperty("AutoUpgradeProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAutoUpgradeProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AutoScalerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesAutoScalerProfile) content.GetValueForProperty("AutoScalerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesAutoScalerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApiServerAccessProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterApiServerAccessProfile) content.GetValueForProperty("ApiServerAccessProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterApiServerAccessProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpProxyConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterHttpProxyConfig) content.GetValueForProperty("HttpProxyConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterHttpProxyConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfile) content.GetValueForProperty("SecurityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfile) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkloadAutoScalerProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWorkloadAutoScalerProfile) content.GetValueForProperty("WorkloadAutoScalerProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWorkloadAutoScalerProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfile) content.GetValueForProperty("AzureMonitorProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("MaxAgentPool"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MaxAgentPool = (int?) content.GetValueForProperty("MaxAgentPool",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MaxAgentPool, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentKubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).CurrentKubernetesVersion = (string) content.GetValueForProperty("CurrentKubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).CurrentKubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DnsPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DnsPrefix = (string) content.GetValueForProperty("DnsPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DnsPrefix, global::System.Convert.ToString);
            }
            if (content.Contains("FqdnSubdomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FqdnSubdomain = (string) content.GetValueForProperty("FqdnSubdomain",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FqdnSubdomain, global::System.Convert.ToString);
            }
            if (content.Contains("Fqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).Fqdn = (string) content.GetValueForProperty("Fqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).Fqdn, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateFqdn = (string) content.GetValueForProperty("PrivateFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("AzurePortalFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzurePortalFqdn = (string) content.GetValueForProperty("AzurePortalFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzurePortalFqdn, global::System.Convert.ToString);
            }
            if (content.Contains("AgentPoolProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AgentPoolProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfile>) content.GetValueForProperty("AgentPoolProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AgentPoolProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileTypeConverter.ConvertFrom));
            }
            if (content.Contains("AddonProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AddonProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesAddonProfiles) content.GetValueForProperty("AddonProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AddonProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesAddonProfilesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NodeResourceGroup = (string) content.GetValueForProperty("NodeResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NodeResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("EnableRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnableRbac = (bool?) content.GetValueForProperty("EnableRbac",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnableRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnablePodSecurityPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnablePodSecurityPolicy = (bool?) content.GetValueForProperty("EnablePodSecurityPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).EnablePodSecurityPolicy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DiskEncryptionSetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskEncryptionSetId = (string) content.GetValueForProperty("DiskEncryptionSetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskEncryptionSetId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).IdentityProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesIdentityProfile) content.GetValueForProperty("IdentityProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).IdentityProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPropertiesIdentityProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrivateLinkResource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateLinkResource = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPrivateLinkResource>) content.GetValueForProperty("PrivateLinkResource",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PrivateLinkResource, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPrivateLinkResource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PrivateLinkResourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DisableLocalAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DisableLocalAccount = (bool?) content.GetValueForProperty("DisableLocalAccount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DisableLocalAccount, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceNetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("PowerStateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerStateCode = (string) content.GetValueForProperty("PowerStateCode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PowerStateCode, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileLicenseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileLicenseType = (string) content.GetValueForProperty("WindowProfileLicenseType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileLicenseType, global::System.Convert.ToString);
            }
            if (content.Contains("AutoUpgradeProfileUpgradeChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfileUpgradeChannel = (string) content.GetValueForProperty("AutoUpgradeProfileUpgradeChannel",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoUpgradeProfileUpgradeChannel, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileExpander"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileExpander = (string) content.GetValueForProperty("AutoScalerProfileExpander",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileExpander, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxProfileSsh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileSsh = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshConfiguration) content.GetValueForProperty("LinuxProfileSsh",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileSsh, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceSshConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxProfileAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileAdminUsername = (string) content.GetValueForProperty("LinuxProfileAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).LinuxProfileAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileGmsaProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileGmsaProfile = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IWindowsGmsaProfile) content.GetValueForProperty("WindowProfileGmsaProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileGmsaProfile, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.WindowsGmsaProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowProfileAdminUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminUsername = (string) content.GetValueForProperty("WindowProfileAdminUsername",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminUsername, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileAdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminPassword = (string) content.GetValueForProperty("WindowProfileAdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileAdminPassword, global::System.Convert.ToString);
            }
            if (content.Contains("WindowProfileEnableCsiProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileEnableCsiProxy = (bool?) content.GetValueForProperty("WindowProfileEnableCsiProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WindowProfileEnableCsiProxy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ServicePrincipalProfileClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileClientId = (string) content.GetValueForProperty("ServicePrincipalProfileClientId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileClientId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalProfileSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileSecret = (string) content.GetValueForProperty("ServicePrincipalProfileSecret",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ServicePrincipalProfileSecret, global::System.Convert.ToString);
            }
            if (content.Contains("PodIdentityProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileEnabled = (bool?) content.GetValueForProperty("PodIdentityProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PodIdentityProfileAllowNetworkPluginKubenet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileAllowNetworkPluginKubenet = (bool?) content.GetValueForProperty("PodIdentityProfileAllowNetworkPluginKubenet",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileAllowNetworkPluginKubenet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PodIdentityProfileUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentity = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentity>) content.GetValueForProperty("PodIdentityProfileUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentity, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentity>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityTypeConverter.ConvertFrom));
            }
            if (content.Contains("PodIdentityProfileUserAssignedIdentityException"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentityException = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityException>) content.GetValueForProperty("PodIdentityProfileUserAssignedIdentityException",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).PodIdentityProfileUserAssignedIdentityException, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPodIdentityException>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterPodIdentityExceptionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OidcIssuerProfileIssuerUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileIssuerUrl = (string) content.GetValueForProperty("OidcIssuerProfileIssuerUrl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileIssuerUrl, global::System.Convert.ToString);
            }
            if (content.Contains("OidcIssuerProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileEnabled = (bool?) content.GetValueForProperty("OidcIssuerProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).OidcIssuerProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileManaged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileManaged = (bool?) content.GetValueForProperty("AadProfileManaged",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileManaged, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileEnableAzureRbac"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileEnableAzureRbac = (bool?) content.GetValueForProperty("AadProfileEnableAzureRbac",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileEnableAzureRbac, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AadProfileAdminGroupObjectID"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileAdminGroupObjectID = (System.Collections.Generic.List<string>) content.GetValueForProperty("AadProfileAdminGroupObjectID",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileAdminGroupObjectID, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AadProfileClientAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileClientAppId = (string) content.GetValueForProperty("AadProfileClientAppId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileClientAppId, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileServerAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppId = (string) content.GetValueForProperty("AadProfileServerAppId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppId, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileServerAppSecret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppSecret = (string) content.GetValueForProperty("AadProfileServerAppSecret",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileServerAppSecret, global::System.Convert.ToString);
            }
            if (content.Contains("AadProfileTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileTenantId = (string) content.GetValueForProperty("AadProfileTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AadProfileTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileBalanceSimilarNodeGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileBalanceSimilarNodeGroup = (string) content.GetValueForProperty("AutoScalerProfileBalanceSimilarNodeGroup",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileBalanceSimilarNodeGroup, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxEmptyBulkDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxEmptyBulkDelete = (string) content.GetValueForProperty("AutoScalerProfileMaxEmptyBulkDelete",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxEmptyBulkDelete, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxGracefulTerminationSec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxGracefulTerminationSec = (string) content.GetValueForProperty("AutoScalerProfileMaxGracefulTerminationSec",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxGracefulTerminationSec, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxNodeProvisionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxNodeProvisionTime = (string) content.GetValueForProperty("AutoScalerProfileMaxNodeProvisionTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxNodeProvisionTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileMaxTotalUnreadyPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxTotalUnreadyPercentage = (string) content.GetValueForProperty("AutoScalerProfileMaxTotalUnreadyPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileMaxTotalUnreadyPercentage, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileNewPodScaleUpDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileNewPodScaleUpDelay = (string) content.GetValueForProperty("AutoScalerProfileNewPodScaleUpDelay",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileNewPodScaleUpDelay, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileOkTotalUnreadyCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileOkTotalUnreadyCount = (string) content.GetValueForProperty("AutoScalerProfileOkTotalUnreadyCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileOkTotalUnreadyCount, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScanInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScanInterval = (string) content.GetValueForProperty("AutoScalerProfileScanInterval",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScanInterval, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterAdd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterAdd = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterAdd",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterAdd, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterDelete = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterDelete",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterDelete, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownDelayAfterFailure"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterFailure = (string) content.GetValueForProperty("AutoScalerProfileScaleDownDelayAfterFailure",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownDelayAfterFailure, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUnneededTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnneededTime = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUnneededTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnneededTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUnreadyTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnreadyTime = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUnreadyTime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUnreadyTime, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileScaleDownUtilizationThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUtilizationThreshold = (string) content.GetValueForProperty("AutoScalerProfileScaleDownUtilizationThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileScaleDownUtilizationThreshold, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileSkipNodesWithLocalStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithLocalStorage = (string) content.GetValueForProperty("AutoScalerProfileSkipNodesWithLocalStorage",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithLocalStorage, global::System.Convert.ToString);
            }
            if (content.Contains("AutoScalerProfileSkipNodesWithSystemPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithSystemPod = (string) content.GetValueForProperty("AutoScalerProfileSkipNodesWithSystemPod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AutoScalerProfileSkipNodesWithSystemPod, global::System.Convert.ToString);
            }
            if (content.Contains("ApiServerAccessProfileAuthorizedIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileAuthorizedIPRange = (System.Collections.Generic.List<string>) content.GetValueForProperty("ApiServerAccessProfileAuthorizedIPRange",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileAuthorizedIPRange, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ApiServerAccessProfileEnablePrivateCluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateCluster = (bool?) content.GetValueForProperty("ApiServerAccessProfileEnablePrivateCluster",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateCluster, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApiServerAccessProfilePrivateDnsZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfilePrivateDnsZone = (string) content.GetValueForProperty("ApiServerAccessProfilePrivateDnsZone",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfilePrivateDnsZone, global::System.Convert.ToString);
            }
            if (content.Contains("ApiServerAccessProfileEnablePrivateClusterPublicFqdn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateClusterPublicFqdn = (bool?) content.GetValueForProperty("ApiServerAccessProfileEnablePrivateClusterPublicFqdn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileEnablePrivateClusterPublicFqdn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ApiServerAccessProfileDisableRunCommand"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileDisableRunCommand = (bool?) content.GetValueForProperty("ApiServerAccessProfileDisableRunCommand",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ApiServerAccessProfileDisableRunCommand, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpProxyConfigHttpProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpProxy = (string) content.GetValueForProperty("HttpProxyConfigHttpProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpProxy, global::System.Convert.ToString);
            }
            if (content.Contains("HttpProxyConfigHttpsProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpsProxy = (string) content.GetValueForProperty("HttpProxyConfigHttpsProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigHttpsProxy, global::System.Convert.ToString);
            }
            if (content.Contains("HttpProxyConfigNoProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigNoProxy = (System.Collections.Generic.List<string>) content.GetValueForProperty("HttpProxyConfigNoProxy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigNoProxy, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HttpProxyConfigTrustedCa"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigTrustedCa = (string) content.GetValueForProperty("HttpProxyConfigTrustedCa",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).HttpProxyConfigTrustedCa, global::System.Convert.ToString);
            }
            if (content.Contains("SecurityProfileDefender"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileDefender = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileDefender) content.GetValueForProperty("SecurityProfileDefender",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileDefender, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileDefenderTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileAzureKeyVaultKm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileAzureKeyVaultKm = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IAzureKeyVaultKms) content.GetValueForProperty("SecurityProfileAzureKeyVaultKm",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileAzureKeyVaultKm, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.AzureKeyVaultKmsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileWorkloadIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileWorkloadIdentity = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileWorkloadIdentity) content.GetValueForProperty("SecurityProfileWorkloadIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileWorkloadIdentity, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileWorkloadIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecurityProfileImageCleaner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileImageCleaner = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileImageCleaner) content.GetValueForProperty("SecurityProfileImageCleaner",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityProfileImageCleaner, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileImageCleanerTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureKeyVaultKmKeyId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyId = (string) content.GetValueForProperty("AzureKeyVaultKmKeyId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageProfileDiskCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileDiskCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver) content.GetValueForProperty("StorageProfileDiskCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileDiskCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileDiskCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileFileCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileFileCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver) content.GetValueForProperty("StorageProfileFileCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileFileCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileFileCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileSnapshotController"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileSnapshotController = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController) content.GetValueForProperty("StorageProfileSnapshotController",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileSnapshotController, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileSnapshotControllerTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfileBlobCsiDriver"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileBlobCsiDriver = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver) content.GetValueForProperty("StorageProfileBlobCsiDriver",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).StorageProfileBlobCsiDriver, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileBlobCsiDriverTypeConverter.ConvertFrom);
            }
            if (content.Contains("WorkloadAutoScalerProfileKeda"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfileKeda = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterWorkloadAutoScalerProfileKeda) content.GetValueForProperty("WorkloadAutoScalerProfileKeda",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadAutoScalerProfileKeda, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterWorkloadAutoScalerProfileKedaTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureMonitorProfileMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfileMetric = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfileMetrics) content.GetValueForProperty("AzureMonitorProfileMetric",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureMonitorProfileMetric, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SshPublicKey = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshPublicKey>) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IContainerServiceSshPublicKey>(__y, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ContainerServiceSshPublicKeyTypeConverter.ConvertFrom));
            }
            if (content.Contains("GmsaProfileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileEnabled = (bool?) content.GetValueForProperty("GmsaProfileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GmsaProfileDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileDnsServer = (string) content.GetValueForProperty("GmsaProfileDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileDnsServer, global::System.Convert.ToString);
            }
            if (content.Contains("GmsaProfileRootDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileRootDomainName = (string) content.GetValueForProperty("GmsaProfileRootDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).GmsaProfileRootDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderSecurityMonitoring"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderSecurityMonitoring = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterSecurityProfileDefenderSecurityMonitoring) content.GetValueForProperty("DefenderSecurityMonitoring",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderSecurityMonitoring, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterSecurityProfileDefenderSecurityMonitoringTypeConverter.ConvertFrom);
            }
            if (content.Contains("DefenderLogAnalyticsWorkspaceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderLogAnalyticsWorkspaceResourceId = (string) content.GetValueForProperty("DefenderLogAnalyticsWorkspaceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DefenderLogAnalyticsWorkspaceResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AzureKeyVaultKmEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmEnabled = (bool?) content.GetValueForProperty("AzureKeyVaultKmEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AzureKeyVaultKmKeyVaultNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultNetworkAccess = (string) content.GetValueForProperty("AzureKeyVaultKmKeyVaultNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("AzureKeyVaultKmKeyVaultResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultResourceId = (string) content.GetValueForProperty("AzureKeyVaultKmKeyVaultResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).AzureKeyVaultKmKeyVaultResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadIdentityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadIdentityEnabled = (bool?) content.GetValueForProperty("WorkloadIdentityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).WorkloadIdentityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageCleanerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerEnabled = (bool?) content.GetValueForProperty("ImageCleanerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ImageCleanerIntervalHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerIntervalHour = (int?) content.GetValueForProperty("ImageCleanerIntervalHour",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).ImageCleanerIntervalHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DiskCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskCsiDriverEnabled = (bool?) content.GetValueForProperty("DiskCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).DiskCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FileCsiDriverEnabled = (bool?) content.GetValueForProperty("FileCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).FileCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SnapshotControllerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SnapshotControllerEnabled = (bool?) content.GetValueForProperty("SnapshotControllerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SnapshotControllerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BlobCsiDriverEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).BlobCsiDriverEnabled = (bool?) content.GetValueForProperty("BlobCsiDriverEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).BlobCsiDriverEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KedaEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KedaEnabled = (bool?) content.GetValueForProperty("KedaEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KedaEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MetricKubeStateMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricKubeStateMetric = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAzureMonitorProfileKubeStateMetrics) content.GetValueForProperty("MetricKubeStateMetric",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricKubeStateMetric, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAzureMonitorProfileKubeStateMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("MetricEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricEnabled = (bool?) content.GetValueForProperty("MetricEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).MetricEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecurityMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityMonitoringEnabled = (bool?) content.GetValueForProperty("SecurityMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).SecurityMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeStateMetricLabelsAllowlist"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricLabelsAllowlist = (string) content.GetValueForProperty("KubeStateMetricLabelsAllowlist",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricLabelsAllowlist, global::System.Convert.ToString);
            }
            if (content.Contains("KubeStateMetricAnnotationsAllowList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricAnnotationsAllowList = (string) content.GetValueForProperty("KubeStateMetricAnnotationsAllowList",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterPropertiesInternal)this).KubeStateMetricAnnotationsAllowList, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Properties of the managed cluster.
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterPropertiesTypeConverter))]
    public partial interface IManagedClusterProperties

    {

    }
}