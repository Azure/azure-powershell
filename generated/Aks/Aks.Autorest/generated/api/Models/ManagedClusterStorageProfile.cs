// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>Storage profile for the container service cluster.</summary>
    public partial class ManagedClusterStorageProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileInternal
    {

        /// <summary>Backing field for <see cref="BlobCsiDriver" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver _blobCsiDriver;

        /// <summary>AzureBlob CSI Driver settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver BlobCsiDriver { get => (this._blobCsiDriver = this._blobCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileBlobCsiDriver()); set => this._blobCsiDriver = value; }

        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? BlobCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriverInternal)BlobCsiDriver).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriverInternal)BlobCsiDriver).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DiskCsiDriver" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver _diskCsiDriver;

        /// <summary>AzureDisk CSI Driver settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver DiskCsiDriver { get => (this._diskCsiDriver = this._diskCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileDiskCsiDriver()); set => this._diskCsiDriver = value; }

        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? DiskCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriverInternal)DiskCsiDriver).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriverInternal)DiskCsiDriver).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="FileCsiDriver" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver _fileCsiDriver;

        /// <summary>AzureFile CSI Driver settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver FileCsiDriver { get => (this._fileCsiDriver = this._fileCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileFileCsiDriver()); set => this._fileCsiDriver = value; }

        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? FileCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriverInternal)FileCsiDriver).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriverInternal)FileCsiDriver).Enabled = value ?? default(bool); }

        /// <summary>Internal Acessors for BlobCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileInternal.BlobCsiDriver { get => (this._blobCsiDriver = this._blobCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileBlobCsiDriver()); set { {_blobCsiDriver = value;} } }

        /// <summary>Internal Acessors for DiskCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileInternal.DiskCsiDriver { get => (this._diskCsiDriver = this._diskCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileDiskCsiDriver()); set { {_diskCsiDriver = value;} } }

        /// <summary>Internal Acessors for FileCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileInternal.FileCsiDriver { get => (this._fileCsiDriver = this._fileCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileFileCsiDriver()); set { {_fileCsiDriver = value;} } }

        /// <summary>Internal Acessors for SnapshotController</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileInternal.SnapshotController { get => (this._snapshotController = this._snapshotController ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileSnapshotController()); set { {_snapshotController = value;} } }

        /// <summary>Backing field for <see cref="SnapshotController" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController _snapshotController;

        /// <summary>Snapshot Controller settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController SnapshotController { get => (this._snapshotController = this._snapshotController ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterStorageProfileSnapshotController()); set => this._snapshotController = value; }

        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public bool? SnapshotControllerEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotControllerInternal)SnapshotController).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotControllerInternal)SnapshotController).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="ManagedClusterStorageProfile" /> instance.</summary>
        public ManagedClusterStorageProfile()
        {

        }
    }
    /// Storage profile for the container service cluster.
    public partial interface IManagedClusterStorageProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable
    {
        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable AzureBlob CSI Driver. The default value is false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BlobCsiDriverEnabled { get; set; }
        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable AzureDisk CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DiskCsiDriverEnabled { get; set; }
        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable AzureFile CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FileCsiDriverEnabled { get; set; }
        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable Snapshot Controller. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SnapshotControllerEnabled { get; set; }

    }
    /// Storage profile for the container service cluster.
    internal partial interface IManagedClusterStorageProfileInternal

    {
        /// <summary>AzureBlob CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileBlobCsiDriver BlobCsiDriver { get; set; }
        /// <summary>Whether to enable AzureBlob CSI Driver. The default value is false.</summary>
        bool? BlobCsiDriverEnabled { get; set; }
        /// <summary>AzureDisk CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileDiskCsiDriver DiskCsiDriver { get; set; }
        /// <summary>Whether to enable AzureDisk CSI Driver. The default value is true.</summary>
        bool? DiskCsiDriverEnabled { get; set; }
        /// <summary>AzureFile CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileFileCsiDriver FileCsiDriver { get; set; }
        /// <summary>Whether to enable AzureFile CSI Driver. The default value is true.</summary>
        bool? FileCsiDriverEnabled { get; set; }
        /// <summary>Snapshot Controller settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterStorageProfileSnapshotController SnapshotController { get; set; }
        /// <summary>Whether to enable Snapshot Controller. The default value is true.</summary>
        bool? SnapshotControllerEnabled { get; set; }

    }
}