// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Extensions;

    /// <summary>run command result.</summary>
    public partial class RunCommandResult :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResult,
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal
    {

        /// <summary>The exit code of the command</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public int? ExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ExitCode; }

        /// <summary>The time when the command finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public global::System.DateTime? FinishedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).FinishedAt; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The command id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>The command output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string Log { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Log; }

        /// <summary>Internal Acessors for ExitCode</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.ExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ExitCode = value; }

        /// <summary>Internal Acessors for FinishedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.FinishedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).FinishedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).FinishedAt = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Log</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.Log { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Log; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Log = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultProperties Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.CommandResultProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Reason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.Reason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Reason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Reason = value; }

        /// <summary>Internal Acessors for StartedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IRunCommandResultInternal.StartedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).StartedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).StartedAt = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultProperties _property;

        /// <summary>Properties of command result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.CommandResultProperties()); set => this._property = value; }

        /// <summary>provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).ProvisioningState; }

        /// <summary>An explanation of why provisioningState is set to failed (if so).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public string Reason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).Reason; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The time when the command started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Origin(Microsoft.Azure.PowerShell.Cmdlets.Aks.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultPropertiesInternal)Property).StartedAt; }

        /// <summary>Creates an new <see cref="RunCommandResult" /> instance.</summary>
        public RunCommandResult()
        {

        }
    }
    /// run command result.
    public partial interface IRunCommandResult :
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.IJsonSerializable
    {
        /// <summary>The exit code of the command</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The exit code of the command",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? ExitCode { get;  }
        /// <summary>The time when the command finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time when the command finished.",
        SerializedName = @"finishedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FinishedAt { get;  }
        /// <summary>The command id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The command id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>The command output.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The command output.",
        SerializedName = @"logs",
        PossibleTypes = new [] { typeof(string) })]
        string Log { get;  }
        /// <summary>provisioning State</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"provisioning State",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>An explanation of why provisioningState is set to failed (if so).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"An explanation of why provisioningState is set to failed (if so).",
        SerializedName = @"reason",
        PossibleTypes = new [] { typeof(string) })]
        string Reason { get;  }
        /// <summary>The time when the command started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time when the command started.",
        SerializedName = @"startedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedAt { get;  }

    }
    /// run command result.
    internal partial interface IRunCommandResultInternal

    {
        /// <summary>The exit code of the command</summary>
        int? ExitCode { get; set; }
        /// <summary>The time when the command finished.</summary>
        global::System.DateTime? FinishedAt { get; set; }
        /// <summary>The command id.</summary>
        string Id { get; set; }
        /// <summary>The command output.</summary>
        string Log { get; set; }
        /// <summary>Properties of command result.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICommandResultProperties Property { get; set; }
        /// <summary>provisioning State</summary>
        string ProvisioningState { get; set; }
        /// <summary>An explanation of why provisioningState is set to failed (if so).</summary>
        string Reason { get; set; }
        /// <summary>The time when the command started.</summary>
        global::System.DateTime? StartedAt { get; set; }

    }
}