// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Aks.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.PowerShell;

    /// <summary>Properties for the container service agent pool profile.</summary>
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterAgentPoolProfilePropertiesTypeConverter))]
    public partial class ManagedClusterAgentPoolProfileProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfileProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfileProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ManagedClusterAgentPoolProfileProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfileProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfileProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ManagedClusterAgentPoolProfileProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ManagedClusterAgentPoolProfileProperties" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="ManagedClusterAgentPoolProfileProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfileProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ManagedClusterAgentPoolProfileProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("UpgradeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IAgentPoolUpgradeSettings) content.GetValueForProperty("UpgradeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSetting, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.AgentPoolUpgradeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerState = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPowerState) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerState, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PowerStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("KubeletConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IKubeletConfig) content.GetValueForProperty("KubeletConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.KubeletConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOSConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ILinuxOSConfig) content.GetValueForProperty("LinuxOSConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.LinuxOSConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationData = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICreationData) content.GetValueForProperty("CreationData",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationData, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.CreationDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Count"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Count = (int?) content.GetValueForProperty("Count",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Count, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VMSize = (string) content.GetValueForProperty("VMSize",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VMSize, global::System.Convert.ToString);
            }
            if (content.Contains("OSDiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskSizeGb = (int?) content.GetValueForProperty("OSDiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OSDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskType = (string) content.GetValueForProperty("OSDiskType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletDiskType = (string) content.GetValueForProperty("KubeletDiskType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadRuntime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).WorkloadRuntime = (string) content.GetValueForProperty("WorkloadRuntime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).WorkloadRuntime, global::System.Convert.ToString);
            }
            if (content.Contains("VnetSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VnetSubnetId = (string) content.GetValueForProperty("VnetSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VnetSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("PodSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PodSubnetId = (string) content.GetValueForProperty("PodSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PodSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("MaxPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxPod = (int?) content.GetValueForProperty("MaxPod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxPod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("MaxCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxCount = (int?) content.GetValueForProperty("MaxCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MinCount = (int?) content.GetValueForProperty("MinCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MinCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableAutoScaling"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableAutoScaling = (bool?) content.GetValueForProperty("EnableAutoScaling",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableAutoScaling, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ScaleDownMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleDownMode = (string) content.GetValueForProperty("ScaleDownMode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleDownMode, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Mode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Mode = (string) content.GetValueForProperty("Mode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Mode, global::System.Convert.ToString);
            }
            if (content.Contains("OrchestratorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OrchestratorVersion = (string) content.GetValueForProperty("OrchestratorVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OrchestratorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentOrchestratorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CurrentOrchestratorVersion = (string) content.GetValueForProperty("CurrentOrchestratorVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CurrentOrchestratorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeImageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeImageVersion = (string) content.GetValueForProperty("NodeImageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeImageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).AvailabilityZone = (System.Collections.Generic.List<string>) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).AvailabilityZone, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableNodePublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableNodePublicIP = (bool?) content.GetValueForProperty("EnableNodePublicIP",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableNodePublicIP, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NodePublicIPPrefixId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodePublicIPPrefixId = (string) content.GetValueForProperty("NodePublicIPPrefixId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodePublicIPPrefixId, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleSetPriority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetPriority = (string) content.GetValueForProperty("ScaleSetPriority",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetPriority, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleSetEvictionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetEvictionPolicy = (string) content.GetValueForProperty("ScaleSetEvictionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetEvictionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("SpotMaxPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).SpotMaxPrice = (float?) content.GetValueForProperty("SpotMaxPrice",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).SpotMaxPrice, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfilePropertiesTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeLabel = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesNodeLabels) content.GetValueForProperty("NodeLabel",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeLabel, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfilePropertiesNodeLabelsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeTaint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeTaint = (System.Collections.Generic.List<string>) content.GetValueForProperty("NodeTaint",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeTaint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProximityPlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProximityPlacementGroupId = (string) content.GetValueForProperty("ProximityPlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProximityPlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("EnableEncryptionAtHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableEncryptionAtHost = (bool?) content.GetValueForProperty("EnableEncryptionAtHost",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableEncryptionAtHost, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableUltraSsd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableUltraSsd = (bool?) content.GetValueForProperty("EnableUltraSsd",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableUltraSsd, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableFips"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableFips = (bool?) content.GetValueForProperty("EnableFips",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableFips, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GpuInstanceProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).GpuInstanceProfile = (string) content.GetValueForProperty("GpuInstanceProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).GpuInstanceProfile, global::System.Convert.ToString);
            }
            if (content.Contains("HostGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).HostGroupId = (string) content.GetValueForProperty("HostGroupId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).HostGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PowerStateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerStateCode = (string) content.GetValueForProperty("PowerStateCode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerStateCode, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeSettingMaxSurge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSettingMaxSurge = (string) content.GetValueForProperty("UpgradeSettingMaxSurge",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSettingMaxSurge, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigCpuManagerPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuManagerPolicy = (string) content.GetValueForProperty("KubeletConfigCpuManagerPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuManagerPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigCpuCfsQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuota = (bool?) content.GetValueForProperty("KubeletConfigCpuCfsQuota",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuota, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeletConfigCpuCfsQuotaPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuotaPeriod = (string) content.GetValueForProperty("KubeletConfigCpuCfsQuotaPeriod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuotaPeriod, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigImageGcHighThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcHighThreshold = (int?) content.GetValueForProperty("KubeletConfigImageGcHighThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcHighThreshold, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigImageGcLowThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcLowThreshold = (int?) content.GetValueForProperty("KubeletConfigImageGcLowThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcLowThreshold, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigTopologyManagerPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigTopologyManagerPolicy = (string) content.GetValueForProperty("KubeletConfigTopologyManagerPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigTopologyManagerPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigAllowedUnsafeSysctl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigAllowedUnsafeSysctl = (System.Collections.Generic.List<string>) content.GetValueForProperty("KubeletConfigAllowedUnsafeSysctl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigAllowedUnsafeSysctl, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KubeletConfigFailSwapOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigFailSwapOn = (bool?) content.GetValueForProperty("KubeletConfigFailSwapOn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigFailSwapOn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeletConfigContainerLogMaxSizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxSizeMb = (int?) content.GetValueForProperty("KubeletConfigContainerLogMaxSizeMb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxSizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigContainerLogMaxFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxFile = (int?) content.GetValueForProperty("KubeletConfigContainerLogMaxFile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxFile, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigPodMaxPid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigPodMaxPid = (int?) content.GetValueForProperty("KubeletConfigPodMaxPid",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigPodMaxPid, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxOSConfigTransparentHugePageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageEnabled = (string) content.GetValueForProperty("LinuxOSConfigTransparentHugePageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOSConfigTransparentHugePageDefrag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageDefrag = (string) content.GetValueForProperty("LinuxOSConfigTransparentHugePageDefrag",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageDefrag, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOSConfigSwapFileSizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSwapFileSizeMb = (int?) content.GetValueForProperty("LinuxOSConfigSwapFileSizeMb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSwapFileSizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxOSConfigSysctl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSysctl = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ISysctlConfig) content.GetValueForProperty("LinuxOSConfigSysctl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSysctl, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.SysctlConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationDataSourceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationDataSourceResourceId = (string) content.GetValueForProperty("CreationDataSourceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationDataSourceResourceId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfileProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ManagedClusterAgentPoolProfileProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("UpgradeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IAgentPoolUpgradeSettings) content.GetValueForProperty("UpgradeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSetting, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.AgentPoolUpgradeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerState = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IPowerState) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerState, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.PowerStateTypeConverter.ConvertFrom);
            }
            if (content.Contains("KubeletConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IKubeletConfig) content.GetValueForProperty("KubeletConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.KubeletConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxOSConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfig = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ILinuxOSConfig) content.GetValueForProperty("LinuxOSConfig",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfig, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.LinuxOSConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationData = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ICreationData) content.GetValueForProperty("CreationData",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationData, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.CreationDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Count"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Count = (int?) content.GetValueForProperty("Count",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Count, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VMSize = (string) content.GetValueForProperty("VMSize",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VMSize, global::System.Convert.ToString);
            }
            if (content.Contains("OSDiskSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskSizeGb = (int?) content.GetValueForProperty("OSDiskSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OSDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskType = (string) content.GetValueForProperty("OSDiskType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletDiskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletDiskType = (string) content.GetValueForProperty("KubeletDiskType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletDiskType, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadRuntime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).WorkloadRuntime = (string) content.GetValueForProperty("WorkloadRuntime",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).WorkloadRuntime, global::System.Convert.ToString);
            }
            if (content.Contains("VnetSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VnetSubnetId = (string) content.GetValueForProperty("VnetSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).VnetSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("PodSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PodSubnetId = (string) content.GetValueForProperty("PodSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PodSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("MaxPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxPod = (int?) content.GetValueForProperty("MaxPod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxPod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("MaxCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxCount = (int?) content.GetValueForProperty("MaxCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MaxCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MinCount = (int?) content.GetValueForProperty("MinCount",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).MinCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableAutoScaling"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableAutoScaling = (bool?) content.GetValueForProperty("EnableAutoScaling",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableAutoScaling, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ScaleDownMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleDownMode = (string) content.GetValueForProperty("ScaleDownMode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleDownMode, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Mode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Mode = (string) content.GetValueForProperty("Mode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Mode, global::System.Convert.ToString);
            }
            if (content.Contains("OrchestratorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OrchestratorVersion = (string) content.GetValueForProperty("OrchestratorVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).OrchestratorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("CurrentOrchestratorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CurrentOrchestratorVersion = (string) content.GetValueForProperty("CurrentOrchestratorVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CurrentOrchestratorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NodeImageVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeImageVersion = (string) content.GetValueForProperty("NodeImageVersion",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeImageVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).AvailabilityZone = (System.Collections.Generic.List<string>) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).AvailabilityZone, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableNodePublicIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableNodePublicIP = (bool?) content.GetValueForProperty("EnableNodePublicIP",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableNodePublicIP, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NodePublicIPPrefixId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodePublicIPPrefixId = (string) content.GetValueForProperty("NodePublicIPPrefixId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodePublicIPPrefixId, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleSetPriority"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetPriority = (string) content.GetValueForProperty("ScaleSetPriority",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetPriority, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleSetEvictionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetEvictionPolicy = (string) content.GetValueForProperty("ScaleSetEvictionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ScaleSetEvictionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("SpotMaxPrice"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).SpotMaxPrice = (float?) content.GetValueForProperty("SpotMaxPrice",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).SpotMaxPrice, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfilePropertiesTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeLabel = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesNodeLabels) content.GetValueForProperty("NodeLabel",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeLabel, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ManagedClusterAgentPoolProfilePropertiesNodeLabelsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeTaint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeTaint = (System.Collections.Generic.List<string>) content.GetValueForProperty("NodeTaint",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).NodeTaint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProximityPlacementGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProximityPlacementGroupId = (string) content.GetValueForProperty("ProximityPlacementGroupId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).ProximityPlacementGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("EnableEncryptionAtHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableEncryptionAtHost = (bool?) content.GetValueForProperty("EnableEncryptionAtHost",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableEncryptionAtHost, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableUltraSsd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableUltraSsd = (bool?) content.GetValueForProperty("EnableUltraSsd",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableUltraSsd, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableFips"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableFips = (bool?) content.GetValueForProperty("EnableFips",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).EnableFips, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("GpuInstanceProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).GpuInstanceProfile = (string) content.GetValueForProperty("GpuInstanceProfile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).GpuInstanceProfile, global::System.Convert.ToString);
            }
            if (content.Contains("HostGroupId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).HostGroupId = (string) content.GetValueForProperty("HostGroupId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).HostGroupId, global::System.Convert.ToString);
            }
            if (content.Contains("PowerStateCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerStateCode = (string) content.GetValueForProperty("PowerStateCode",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).PowerStateCode, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeSettingMaxSurge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSettingMaxSurge = (string) content.GetValueForProperty("UpgradeSettingMaxSurge",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).UpgradeSettingMaxSurge, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigCpuManagerPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuManagerPolicy = (string) content.GetValueForProperty("KubeletConfigCpuManagerPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuManagerPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigCpuCfsQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuota = (bool?) content.GetValueForProperty("KubeletConfigCpuCfsQuota",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuota, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeletConfigCpuCfsQuotaPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuotaPeriod = (string) content.GetValueForProperty("KubeletConfigCpuCfsQuotaPeriod",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigCpuCfsQuotaPeriod, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigImageGcHighThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcHighThreshold = (int?) content.GetValueForProperty("KubeletConfigImageGcHighThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcHighThreshold, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigImageGcLowThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcLowThreshold = (int?) content.GetValueForProperty("KubeletConfigImageGcLowThreshold",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigImageGcLowThreshold, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigTopologyManagerPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigTopologyManagerPolicy = (string) content.GetValueForProperty("KubeletConfigTopologyManagerPolicy",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigTopologyManagerPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("KubeletConfigAllowedUnsafeSysctl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigAllowedUnsafeSysctl = (System.Collections.Generic.List<string>) content.GetValueForProperty("KubeletConfigAllowedUnsafeSysctl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigAllowedUnsafeSysctl, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("KubeletConfigFailSwapOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigFailSwapOn = (bool?) content.GetValueForProperty("KubeletConfigFailSwapOn",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigFailSwapOn, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KubeletConfigContainerLogMaxSizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxSizeMb = (int?) content.GetValueForProperty("KubeletConfigContainerLogMaxSizeMb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxSizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigContainerLogMaxFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxFile = (int?) content.GetValueForProperty("KubeletConfigContainerLogMaxFile",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigContainerLogMaxFile, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("KubeletConfigPodMaxPid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigPodMaxPid = (int?) content.GetValueForProperty("KubeletConfigPodMaxPid",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).KubeletConfigPodMaxPid, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxOSConfigTransparentHugePageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageEnabled = (string) content.GetValueForProperty("LinuxOSConfigTransparentHugePageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOSConfigTransparentHugePageDefrag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageDefrag = (string) content.GetValueForProperty("LinuxOSConfigTransparentHugePageDefrag",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigTransparentHugePageDefrag, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxOSConfigSwapFileSizeMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSwapFileSizeMb = (int?) content.GetValueForProperty("LinuxOSConfigSwapFileSizeMb",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSwapFileSizeMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LinuxOSConfigSysctl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSysctl = (Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.ISysctlConfig) content.GetValueForProperty("LinuxOSConfigSysctl",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).LinuxOSConfigSysctl, Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.SysctlConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("CreationDataSourceResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationDataSourceResourceId = (string) content.GetValueForProperty("CreationDataSourceResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Aks.Models.IManagedClusterAgentPoolProfilePropertiesInternal)this).CreationDataSourceResourceId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Aks.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Properties for the container service agent pool profile.
    [System.ComponentModel.TypeConverter(typeof(ManagedClusterAgentPoolProfilePropertiesTypeConverter))]
    public partial interface IManagedClusterAgentPoolProfileProperties

    {

    }
}