// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>CVE analysis result resource</summary>
    public partial class CveResource :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResource,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.Resource();

        /// <summary>ID of the SBOM component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string ComponentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentId = value ?? null; }

        /// <summary>Name of the SBOM component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string ComponentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentName = value ?? null; }

        /// <summary>Version of the SBOM component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string ComponentVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).ComponentVersion = value ?? null; }

        /// <summary>ID of the CVE result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string CveId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CveId; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CveId = value ?? null; }

        /// <summary>
        /// A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the
        /// V2 score is specified it will be the V2 score.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string CvssScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssScore; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssScore = value ?? null; }

        /// <summary>CVSS V2 score of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string CvssV2Score { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssV2Score; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssV2Score = value ?? null; }

        /// <summary>CVSS V3 score of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string CvssV3Score { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssV3Score; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssV3Score = value ?? null; }

        /// <summary>CVSS version of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string CvssVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).CvssVersion = value ?? null; }

        /// <summary>The CVE description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Description = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Id; }

        /// <summary>The list of reference links for the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveLink> Link { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Link; }

        /// <summary>Internal Acessors for Component</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveComponent Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResourceInternal.Component { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Component; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Component = value; }

        /// <summary>Internal Acessors for Link</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveLink> Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResourceInternal.Link { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Link = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResult Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.CveResult()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Name; }

        /// <summary>Name of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string PropertiesName { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResult _property;

        /// <summary>The properties of a CVE result found within a firmware image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResult Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.CveResult()); set => this._property = value; }

        /// <summary>Severity of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public string Severity { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Severity; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResultInternal)Property).Severity = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="CveResource" /> instance.</summary>
        public CveResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// CVE analysis result resource
    public partial interface ICveResource :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResource
    {
        /// <summary>ID of the SBOM component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ID of the SBOM component",
        SerializedName = @"componentId",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentId { get; set; }
        /// <summary>Name of the SBOM component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the SBOM component",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentName { get; set; }
        /// <summary>Version of the SBOM component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Version of the SBOM component.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentVersion { get; set; }
        /// <summary>ID of the CVE result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ID of the CVE result.",
        SerializedName = @"cveId",
        PossibleTypes = new [] { typeof(string) })]
        string CveId { get; set; }
        /// <summary>
        /// A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the
        /// V2 score is specified it will be the V2 score.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the V2 score is specified it will be the V2 score.",
        SerializedName = @"cvssScore",
        PossibleTypes = new [] { typeof(string) })]
        string CvssScore { get; set; }
        /// <summary>CVSS V2 score of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"CVSS V2 score of the CVE.",
        SerializedName = @"cvssV2Score",
        PossibleTypes = new [] { typeof(string) })]
        string CvssV2Score { get; set; }
        /// <summary>CVSS V3 score of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"CVSS V3 score of the CVE.",
        SerializedName = @"cvssV3Score",
        PossibleTypes = new [] { typeof(string) })]
        string CvssV3Score { get; set; }
        /// <summary>CVSS version of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"CVSS version of the CVE.",
        SerializedName = @"cvssVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CvssVersion { get; set; }
        /// <summary>The CVE description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The CVE description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The list of reference links for the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The list of reference links for the CVE.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveLink) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveLink> Link { get;  }
        /// <summary>Name of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the CVE.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesName { get; set; }
        /// <summary>Severity of the CVE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Severity of the CVE.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(string) })]
        string Severity { get; set; }

    }
    /// CVE analysis result resource
    internal partial interface ICveResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IResourceInternal
    {
        /// <summary>The SBOM component for the CVE.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveComponent Component { get; set; }
        /// <summary>ID of the SBOM component</summary>
        string ComponentId { get; set; }
        /// <summary>Name of the SBOM component</summary>
        string ComponentName { get; set; }
        /// <summary>Version of the SBOM component.</summary>
        string ComponentVersion { get; set; }
        /// <summary>ID of the CVE result.</summary>
        string CveId { get; set; }
        /// <summary>
        /// A single CVSS score to represent the CVE. If a V3 score is specified, then it will use the V3 score. Otherwise if the
        /// V2 score is specified it will be the V2 score.
        /// </summary>
        string CvssScore { get; set; }
        /// <summary>CVSS V2 score of the CVE.</summary>
        string CvssV2Score { get; set; }
        /// <summary>CVSS V3 score of the CVE.</summary>
        string CvssV3Score { get; set; }
        /// <summary>CVSS version of the CVE.</summary>
        string CvssVersion { get; set; }
        /// <summary>The CVE description.</summary>
        string Description { get; set; }
        /// <summary>The list of reference links for the CVE.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveLink> Link { get; set; }
        /// <summary>Name of the CVE.</summary>
        string PropertiesName { get; set; }
        /// <summary>The properties of a CVE result found within a firmware image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.ICveResult Property { get; set; }
        /// <summary>Severity of the CVE.</summary>
        string Severity { get; set; }

    }
}