// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>Properties of a workspaces usage metrics.</summary>
    public partial class UsageMetricProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IUsageMetricProperties,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IUsageMetricPropertiesInternal
    {

        /// <summary>Internal Acessors for MonthlyFirmwareUploadCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IUsageMetricPropertiesInternal.MonthlyFirmwareUploadCount { get => this._monthlyFirmwareUploadCount; set { {_monthlyFirmwareUploadCount = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IUsageMetricPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TotalFirmwareCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IUsageMetricPropertiesInternal.TotalFirmwareCount { get => this._totalFirmwareCount; set { {_totalFirmwareCount = value;} } }

        /// <summary>Backing field for <see cref="MonthlyFirmwareUploadCount" /> property.</summary>
        private long? _monthlyFirmwareUploadCount;

        /// <summary>
        /// The number of firmware analysis jobs that have been submitted in the current month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? MonthlyFirmwareUploadCount { get => this._monthlyFirmwareUploadCount; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="TotalFirmwareCount" /> property.</summary>
        private long? _totalFirmwareCount;

        /// <summary>The total number of firmwares that are in the workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public long? TotalFirmwareCount { get => this._totalFirmwareCount; }

        /// <summary>Creates an new <see cref="UsageMetricProperties" /> instance.</summary>
        public UsageMetricProperties()
        {

        }
    }
    /// Properties of a workspaces usage metrics.
    public partial interface IUsageMetricProperties :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The number of firmware analysis jobs that have been submitted in the current month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of firmware analysis jobs that have been submitted in the current month.",
        SerializedName = @"monthlyFirmwareUploadCount",
        PossibleTypes = new [] { typeof(long) })]
        long? MonthlyFirmwareUploadCount { get;  }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Extracting", "Analyzing")]
        string ProvisioningState { get;  }
        /// <summary>The total number of firmwares that are in the workspace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The total number of firmwares that are in the workspace.",
        SerializedName = @"totalFirmwareCount",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalFirmwareCount { get;  }

    }
    /// Properties of a workspaces usage metrics.
    internal partial interface IUsageMetricPropertiesInternal

    {
        /// <summary>
        /// The number of firmware analysis jobs that have been submitted in the current month.
        /// </summary>
        long? MonthlyFirmwareUploadCount { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Extracting", "Analyzing")]
        string ProvisioningState { get; set; }
        /// <summary>The total number of firmwares that are in the workspace.</summary>
        long? TotalFirmwareCount { get; set; }

    }
}