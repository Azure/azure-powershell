// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Extensions;

    /// <summary>Binary hardening of a firmware.</summary>
    public partial class BinaryHardeningResult :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningResult,
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningResultInternal
    {

        /// <summary>Backing field for <see cref="Architecture" /> property.</summary>
        private string _architecture;

        /// <summary>The architecture of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Architecture { get => this._architecture; set => this._architecture = value; }

        /// <summary>Backing field for <see cref="BinaryHardeningId" /> property.</summary>
        private string _binaryHardeningId;

        /// <summary>ID for the binary hardening result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string BinaryHardeningId { get => this._binaryHardeningId; set => this._binaryHardeningId = value; }

        /// <summary>Backing field for <see cref="Class" /> property.</summary>
        private string _class;

        /// <summary>The executable class to indicate 32 or 64 bit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Class { get => this._class; set => this._class = value; }

        /// <summary>Backing field for <see cref="Feature" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeatures _feature;

        /// <summary>Binary hardening features.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeatures Feature { get => (this._feature = this._feature ?? new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.BinaryHardeningFeatures()); set => this._feature = value; }

        /// <summary>Canary (stack canaries) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public bool? FeatureCanary { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Canary; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Canary = value ?? default(bool); }

        /// <summary>NX (no-execute) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public bool? FeatureNx { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Nx; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Nx = value ?? default(bool); }

        /// <summary>PIE (position independent executable) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public bool? FeaturePie { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Pie; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Pie = value ?? default(bool); }

        /// <summary>RELRO (relocation read-only) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public bool? FeatureRelro { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Relro; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Relro = value ?? default(bool); }

        /// <summary>Stripped flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Inlined)]
        public bool? FeatureStripped { get => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Stripped; set => ((Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeaturesInternal)Feature).Stripped = value ?? default(bool); }

        /// <summary>Backing field for <see cref="FilePath" /> property.</summary>
        private string _filePath;

        /// <summary>The executable path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string FilePath { get => this._filePath; set => this._filePath = value; }

        /// <summary>Internal Acessors for Feature</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeatures Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningResultInternal.Feature { get => (this._feature = this._feature ?? new Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.BinaryHardeningFeatures()); set { {_feature = value;} } }

        /// <summary>Backing field for <see cref="Rpath" /> property.</summary>
        private string _rpath;

        /// <summary>The rpath of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Rpath { get => this._rpath; set => this._rpath = value; }

        /// <summary>Backing field for <see cref="Runpath" /> property.</summary>
        private string _runpath;

        /// <summary>The runpath of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Origin(Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.PropertyOrigin.Owned)]
        public string Runpath { get => this._runpath; set => this._runpath = value; }

        /// <summary>Creates an new <see cref="BinaryHardeningResult" /> instance.</summary>
        public BinaryHardeningResult()
        {

        }
    }
    /// Binary hardening of a firmware.
    public partial interface IBinaryHardeningResult :
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.IJsonSerializable
    {
        /// <summary>The architecture of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The architecture of the uploaded firmware.",
        SerializedName = @"architecture",
        PossibleTypes = new [] { typeof(string) })]
        string Architecture { get; set; }
        /// <summary>ID for the binary hardening result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ID for the binary hardening result.",
        SerializedName = @"binaryHardeningId",
        PossibleTypes = new [] { typeof(string) })]
        string BinaryHardeningId { get; set; }
        /// <summary>The executable class to indicate 32 or 64 bit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The executable class to indicate 32 or 64 bit.",
        SerializedName = @"class",
        PossibleTypes = new [] { typeof(string) })]
        string Class { get; set; }
        /// <summary>Canary (stack canaries) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Canary (stack canaries) flag.",
        SerializedName = @"canary",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeatureCanary { get; set; }
        /// <summary>NX (no-execute) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"NX (no-execute) flag.",
        SerializedName = @"nx",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeatureNx { get; set; }
        /// <summary>PIE (position independent executable) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"PIE (position independent executable) flag.",
        SerializedName = @"pie",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeaturePie { get; set; }
        /// <summary>RELRO (relocation read-only) flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"RELRO (relocation read-only) flag.",
        SerializedName = @"relro",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeatureRelro { get; set; }
        /// <summary>Stripped flag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stripped flag.",
        SerializedName = @"stripped",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FeatureStripped { get; set; }
        /// <summary>The executable path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The executable path.",
        SerializedName = @"filePath",
        PossibleTypes = new [] { typeof(string) })]
        string FilePath { get; set; }
        /// <summary>The rpath of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The rpath of the uploaded firmware.",
        SerializedName = @"rpath",
        PossibleTypes = new [] { typeof(string) })]
        string Rpath { get; set; }
        /// <summary>The runpath of the uploaded firmware.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The runpath of the uploaded firmware.",
        SerializedName = @"runpath",
        PossibleTypes = new [] { typeof(string) })]
        string Runpath { get; set; }

    }
    /// Binary hardening of a firmware.
    internal partial interface IBinaryHardeningResultInternal

    {
        /// <summary>The architecture of the uploaded firmware.</summary>
        string Architecture { get; set; }
        /// <summary>ID for the binary hardening result.</summary>
        string BinaryHardeningId { get; set; }
        /// <summary>The executable class to indicate 32 or 64 bit.</summary>
        string Class { get; set; }
        /// <summary>Binary hardening features.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FirmwareAnalysis.Models.IBinaryHardeningFeatures Feature { get; set; }
        /// <summary>Canary (stack canaries) flag.</summary>
        bool? FeatureCanary { get; set; }
        /// <summary>NX (no-execute) flag.</summary>
        bool? FeatureNx { get; set; }
        /// <summary>PIE (position independent executable) flag.</summary>
        bool? FeaturePie { get; set; }
        /// <summary>RELRO (relocation read-only) flag.</summary>
        bool? FeatureRelro { get; set; }
        /// <summary>Stripped flag.</summary>
        bool? FeatureStripped { get; set; }
        /// <summary>The executable path.</summary>
        string FilePath { get; set; }
        /// <summary>The rpath of the uploaded firmware.</summary>
        string Rpath { get; set; }
        /// <summary>The runpath of the uploaded firmware.</summary>
        string Runpath { get; set; }

    }
}