// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Carbon.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Carbon.Runtime.Extensions;

    /// <summary>
    /// Date range to be used with QueryParameter, it should be within 12 months between start and end date. In certain cases,
    /// start and end dates must be the same date.
    /// </summary>
    public partial class DateRange :
        Microsoft.Azure.PowerShell.Cmdlets.Carbon.Models.IDateRange,
        Microsoft.Azure.PowerShell.Cmdlets.Carbon.Models.IDateRangeInternal
    {

        /// <summary>Backing field for <see cref="End" /> property.</summary>
        private global::System.DateTime _end;

        /// <summary>
        /// End date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Carbon.Origin(Microsoft.Azure.PowerShell.Cmdlets.Carbon.PropertyOrigin.Owned)]
        public global::System.DateTime End { get => this._end; set => this._end = value; }

        /// <summary>Backing field for <see cref="Start" /> property.</summary>
        private global::System.DateTime _start;

        /// <summary>
        /// Start date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Carbon.Origin(Microsoft.Azure.PowerShell.Cmdlets.Carbon.PropertyOrigin.Owned)]
        public global::System.DateTime Start { get => this._start; set => this._start = value; }

        /// <summary>Creates an new <see cref="DateRange" /> instance.</summary>
        public DateRange()
        {

        }
    }
    /// Date range to be used with QueryParameter, it should be within 12 months between start and end date. In certain cases,
    /// start and end dates must be the same date.
    public partial interface IDateRange :
        Microsoft.Azure.PowerShell.Cmdlets.Carbon.Runtime.IJsonSerializable
    {
        /// <summary>
        /// End date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Carbon.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"End date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.",
        SerializedName = @"end",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime End { get; set; }
        /// <summary>
        /// Start date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Carbon.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Start date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime Start { get; set; }

    }
    /// Date range to be used with QueryParameter, it should be within 12 months between start and end date. In certain cases,
    /// start and end dates must be the same date.
    internal partial interface IDateRangeInternal

    {
        /// <summary>
        /// End date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        global::System.DateTime End { get; set; }
        /// <summary>
        /// Start date parameter in yyyy-MM-01 format. Only the first day of each month is accepted.
        /// </summary>
        global::System.DateTime Start { get; set; }

    }
}