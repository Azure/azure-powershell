// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>The agentPool resource definition</summary>
    public partial class AgentPool :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProxyResource();

        /// <summary>Number of nodes in the agent pool. The default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? Count { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).Count = value ?? default(int); }

        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? EnableAutoScaling { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).EnableAutoScaling; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).EnableAutoScaling = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation _extendedLocation;

        /// <summary>Extended location pointing to the underlying infrastructure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>ARM Id of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Type = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).KubernetesVersion; }

        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? MaxCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MaxCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MaxCount = value ?? default(int); }

        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? MaxPod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MaxPod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MaxPod = value ?? default(int); }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for KubernetesVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).KubernetesVersion = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatus1 Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusCurrentState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal.StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusCurrentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusCurrentState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? MinCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MinCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).MinCount = value ?? default(int); }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).NodeLabel; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).NodeLabel = value ?? null /* model class */; }

        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> NodeTaint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).NodeTaint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).NodeTaint = value ?? null /* arrayOf */; }

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string OSSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).OSSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).OSSku = value ?? null; }

        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal)Property).OSType = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties _property;

        /// <summary>Properties of the agent pool resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProperties()); set => this._property = value; }

        /// <summary>The status of the latest long running operation for the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The current state of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusCurrentState; }

        /// <summary>Error messages during an agent pool operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusErrorMessage = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile> StatusReadyReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusReadyReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatusInternal)Property).StatusReadyReplica = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags _tag;

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolTags()); set => this._tag = value; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>The VM sku size of the agent pool node VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string VMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfileInternal)Property).VMSize = value ?? null; }

        /// <summary>Creates an new <see cref="AgentPool" /> instance.</summary>
        public AgentPool()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The agentPool resource definition
    public partial interface IAgentPool :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource
    {
        /// <summary>Number of nodes in the agent pool. The default value is 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of nodes in the agent pool. The default value is 1.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? Count { get; set; }
        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable auto-scaler. Default value is false",
        SerializedName = @"enableAutoScaling",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutoScaling { get; set; }
        /// <summary>ARM Id of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Id of the extended location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The extended location type. Allowed value: 'CustomLocation'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CustomLocation")]
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get;  }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of nodes for auto-scaling",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of pods that can run on a node.",
        SerializedName = @"maxPods",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The minimum number of nodes for auto-scaling",
        SerializedName = @"minCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCount { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The node labels to be persisted across all nodes in agent pool.",
        SerializedName = @"nodeLabels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        SerializedName = @"nodeTaints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NodeTaint { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.",
        SerializedName = @"osSKU",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CBLMariner", "Windows2019", "Windows2022")]
        string OSSku { get; set; }
        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The particular KubernetesVersion Image OS Type (Linux, Windows)",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Windows", "Linux")]
        string OSType { get; set; }
        /// <summary>The status of the latest long running operation for the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the latest long running operation for the agent pool.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>The current state of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current state of the agent pool.",
        SerializedName = @"currentState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get;  }
        /// <summary>Error messages during an agent pool operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Error messages during an agent pool operation or steady state.",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusErrorMessage { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"readyReplicas",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile> StatusReadyReplica { get; set; }
        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource tags",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags Tag { get; set; }
        /// <summary>The VM sku size of the agent pool node VMs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The VM sku size of the agent pool node VMs.",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string VMSize { get; set; }

    }
    /// The agentPool resource definition
    internal partial interface IAgentPoolInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResourceInternal
    {
        /// <summary>Number of nodes in the agent pool. The default value is 1.</summary>
        int? Count { get; set; }
        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        bool? EnableAutoScaling { get; set; }
        /// <summary>Extended location pointing to the underlying infrastructure</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>ARM Id of the extended location.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CustomLocation")]
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
        /// </summary>
        string KubernetesVersion { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        int? MinCount { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        System.Collections.Generic.List<string> NodeTaint { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CBLMariner", "Windows2019", "Windows2022")]
        string OSSku { get; set; }
        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Windows", "Linux")]
        string OSType { get; set; }
        /// <summary>Properties of the agent pool resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties Property { get; set; }
        /// <summary>The status of the latest long running operation for the agent pool.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>The observed status of the agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatus1 Status { get; set; }
        /// <summary>The current state of the agent pool.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get; set; }
        /// <summary>Error messages during an agent pool operation or steady state.</summary>
        string StatusErrorMessage { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile> StatusReadyReplica { get; set; }
        /// <summary>Resource tags</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags Tag { get; set; }
        /// <summary>The VM sku size of the agent pool node VMs.</summary>
        string VMSize { get; set; }

    }
}