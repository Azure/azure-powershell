// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>Profile for agent pool properties specified during creation</summary>
    public partial class AgentPoolProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfile,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileInternal
    {

        /// <summary>Backing field for <see cref="EnableAutoScaling" /> property.</summary>
        private bool? _enableAutoScaling;

        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public bool? EnableAutoScaling { get => this._enableAutoScaling; set => this._enableAutoScaling = value; }

        /// <summary>Backing field for <see cref="MaxCount" /> property.</summary>
        private int? _maxCount;

        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public int? MaxCount { get => this._maxCount; set => this._maxCount = value; }

        /// <summary>Backing field for <see cref="MaxPod" /> property.</summary>
        private int? _maxPod;

        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public int? MaxPod { get => this._maxPod; set => this._maxPod = value; }

        /// <summary>Backing field for <see cref="MinCount" /> property.</summary>
        private int? _minCount;

        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public int? MinCount { get => this._minCount; set => this._minCount = value; }

        /// <summary>Backing field for <see cref="NodeLabel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels _nodeLabel;

        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get => (this._nodeLabel = this._nodeLabel ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProfileNodeLabels()); set => this._nodeLabel = value; }

        /// <summary>Backing field for <see cref="NodeTaint" /> property.</summary>
        private System.Collections.Generic.List<string> _nodeTaint;

        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> NodeTaint { get => this._nodeTaint; set => this._nodeTaint = value; }

        /// <summary>Backing field for <see cref="OSSku" /> property.</summary>
        private string _oSSku;

        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string OSSku { get => this._oSSku; set => this._oSSku = value; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; set => this._oSType = value; }

        /// <summary>Creates an new <see cref="AgentPoolProfile" /> instance.</summary>
        public AgentPoolProfile()
        {

        }
    }
    /// Profile for agent pool properties specified during creation
    public partial interface IAgentPoolProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable
    {
        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable auto-scaler. Default value is false",
        SerializedName = @"enableAutoScaling",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAutoScaling { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of nodes for auto-scaling",
        SerializedName = @"maxCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The maximum number of pods that can run on a node.",
        SerializedName = @"maxPods",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The minimum number of nodes for auto-scaling",
        SerializedName = @"minCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MinCount { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The node labels to be persisted across all nodes in agent pool.",
        SerializedName = @"nodeLabels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels) })]
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
        SerializedName = @"nodeTaints",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NodeTaint { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.",
        SerializedName = @"osSKU",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CBLMariner", "Windows2019", "Windows2022")]
        string OSSku { get; set; }
        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The particular KubernetesVersion Image OS Type (Linux, Windows)",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Windows", "Linux")]
        string OSType { get; set; }

    }
    /// Profile for agent pool properties specified during creation
    internal partial interface IAgentPoolProfileInternal

    {
        /// <summary>Whether to enable auto-scaler. Default value is false</summary>
        bool? EnableAutoScaling { get; set; }
        /// <summary>The maximum number of nodes for auto-scaling</summary>
        int? MaxCount { get; set; }
        /// <summary>The maximum number of pods that can run on a node.</summary>
        int? MaxPod { get; set; }
        /// <summary>The minimum number of nodes for auto-scaling</summary>
        int? MinCount { get; set; }
        /// <summary>The node labels to be persisted across all nodes in agent pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels NodeLabel { get; set; }
        /// <summary>
        /// Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        /// </summary>
        System.Collections.Generic.List<string> NodeTaint { get; set; }
        /// <summary>
        /// Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019
        /// when OSType is Windows.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CBLMariner", "Windows2019", "Windows2022")]
        string OSSku { get; set; }
        /// <summary>The particular KubernetesVersion Image OS Type (Linux, Windows)</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Windows", "Linux")]
        string OSType { get; set; }

    }
}