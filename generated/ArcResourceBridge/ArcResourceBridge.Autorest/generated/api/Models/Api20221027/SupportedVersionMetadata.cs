// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Extensions;

    /// <summary>The SupportedVersionMetadata object for appliance.</summary>
    public partial class SupportedVersionMetadata :
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadata,
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal
    {

        /// <summary>Backing field for <see cref="CatalogVersion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersion _catalogVersion;

        /// <summary>The newer supported version catalog version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersion CatalogVersion { get => (this._catalogVersion = this._catalogVersion ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.SupportedVersionCatalogVersion()); }

        /// <summary>The catalog version name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string CatalogVersionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Name; }

        /// <summary>The catalog version namespace for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string CatalogVersionNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Namespace; }

        /// <summary>The image audience name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string DataAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataAudience; }

        /// <summary>The image catalog name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string DataCatalog { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataCatalog; }

        /// <summary>The image offer name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string DataOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataOffer; }

        /// <summary>The image version for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.PropertyOrigin.Inlined)]
        public string DataVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataVersion; }

        /// <summary>Internal Acessors for CatalogVersion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersion Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.CatalogVersion { get => (this._catalogVersion = this._catalogVersion ?? new Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.SupportedVersionCatalogVersion()); set { {_catalogVersion = value;} } }

        /// <summary>Internal Acessors for CatalogVersionData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionData Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.CatalogVersionData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Data; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Data = value; }

        /// <summary>Internal Acessors for CatalogVersionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.CatalogVersionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Name = value; }

        /// <summary>Internal Acessors for CatalogVersionNamespace</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.CatalogVersionNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Namespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).Namespace = value; }

        /// <summary>Internal Acessors for DataAudience</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.DataAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataAudience; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataAudience = value; }

        /// <summary>Internal Acessors for DataCatalog</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.DataCatalog { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataCatalog; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataCatalog = value; }

        /// <summary>Internal Acessors for DataOffer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.DataOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataOffer = value; }

        /// <summary>Internal Acessors for DataVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionMetadataInternal.DataVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionInternal)CatalogVersion).DataVersion = value; }

        /// <summary>Creates an new <see cref="SupportedVersionMetadata" /> instance.</summary>
        public SupportedVersionMetadata()
        {

        }
    }
    /// The SupportedVersionMetadata object for appliance.
    public partial interface ISupportedVersionMetadata :
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.IJsonSerializable
    {
        /// <summary>The catalog version name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The catalog version name for the version available for upgrade.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CatalogVersionName { get;  }
        /// <summary>The catalog version namespace for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The catalog version namespace for the version available for upgrade.",
        SerializedName = @"namespace",
        PossibleTypes = new [] { typeof(string) })]
        string CatalogVersionNamespace { get;  }
        /// <summary>The image audience name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image audience name for the version available for upgrade.",
        SerializedName = @"audience",
        PossibleTypes = new [] { typeof(string) })]
        string DataAudience { get;  }
        /// <summary>The image catalog name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image catalog name for the version available for upgrade.",
        SerializedName = @"catalog",
        PossibleTypes = new [] { typeof(string) })]
        string DataCatalog { get;  }
        /// <summary>The image offer name for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image offer name for the version available for upgrade.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string DataOffer { get;  }
        /// <summary>The image version for the version available for upgrade.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The image version for the version available for upgrade.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DataVersion { get;  }

    }
    /// The SupportedVersionMetadata object for appliance.
    internal partial interface ISupportedVersionMetadataInternal

    {
        /// <summary>The newer supported version catalog version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersion CatalogVersion { get; set; }
        /// <summary>The newer supported version catalog version data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcResourceBridge.Models.Api20221027.ISupportedVersionCatalogVersionData CatalogVersionData { get; set; }
        /// <summary>The catalog version name for the version available for upgrade.</summary>
        string CatalogVersionName { get; set; }
        /// <summary>The catalog version namespace for the version available for upgrade.</summary>
        string CatalogVersionNamespace { get; set; }
        /// <summary>The image audience name for the version available for upgrade.</summary>
        string DataAudience { get; set; }
        /// <summary>The image catalog name for the version available for upgrade.</summary>
        string DataCatalog { get; set; }
        /// <summary>The image offer name for the version available for upgrade.</summary>
        string DataOffer { get; set; }
        /// <summary>The image version for the version available for upgrade.</summary>
        string DataVersion { get; set; }

    }
}