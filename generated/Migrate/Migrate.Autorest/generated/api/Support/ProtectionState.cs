// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support
{

    /// <summary>Gets or sets the protection state.</summary>
    public partial struct ProtectionState :
        System.IEquatable<ProtectionState>
    {
        /// <summary>Cancel failover failed on the primary side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverFailedOnPrimary = @"CancelFailoverFailedOnPrimary";

        /// <summary>Cancel failover failed on the recovery side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverFailedOnRecovery = @"CancelFailoverFailedOnRecovery";

        /// <summary>Cancel failover is in progress on the primary side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverInProgressOnPrimary = @"CancelFailoverInProgressOnPrimary";

        /// <summary>Cancel failover is in progress on the recovery side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverInProgressOnRecovery = @"CancelFailoverInProgressOnRecovery";

        /// <summary>Begin marker for cancel failover states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverStatesBegin = @"CancelFailoverStatesBegin";

        /// <summary>End marker for cancel failover states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CancelFailoverStatesEnd = @"CancelFailoverStatesEnd";

        /// <summary>Change recovery point has been completed successfully.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ChangeRecoveryPointCompleted = @"ChangeRecoveryPointCompleted";

        /// <summary>Change recovery point has failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ChangeRecoveryPointFailed = @"ChangeRecoveryPointFailed";

        /// <summary>Change recovery point has been initiated..</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ChangeRecoveryPointInitiated = @"ChangeRecoveryPointInitiated";

        /// <summary>Begin marker for change recovery point states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ChangeRecoveryPointStatesBegin = @"ChangeRecoveryPointStatesBegin";

        /// <summary>End marker for change recovery point states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ChangeRecoveryPointStatesEnd = @"ChangeRecoveryPointStatesEnd";

        /// <summary>Commit failover has been completed successfully.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverCompleted = @"CommitFailoverCompleted";

        /// <summary>Commit failover failed on the primary side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverFailedOnPrimary = @"CommitFailoverFailedOnPrimary";

        /// <summary>Commit failover failed on the recovery side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverFailedOnRecovery = @"CommitFailoverFailedOnRecovery";

        /// <summary>Commit failover is in progress on the primary side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverInProgressOnPrimary = @"CommitFailoverInProgressOnPrimary";

        /// <summary>Commit failover is in progress on the recovery side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverInProgressOnRecovery = @"CommitFailoverInProgressOnRecovery";

        /// <summary>Begin marker for commit failover states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverStatesBegin = @"CommitFailoverStatesBegin";

        /// <summary>End marker for commit failover states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState CommitFailoverStatesEnd = @"CommitFailoverStatesEnd";

        /// <summary>Disable protection failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState DisablingFailed = @"DisablingFailed";

        /// <summary>Disabling protection is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState DisablingProtection = @"DisablingProtection";

        /// <summary>Enable protection failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState EnablingFailed = @"EnablingFailed";

        /// <summary>Enable protection is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState EnablingProtection = @"EnablingProtection";

        /// <summary>Initial replication has completed on the primary side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationCompletedOnPrimary = @"InitialReplicationCompletedOnPrimary";

        /// <summary>Initial replication has completed on the recovery side.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationCompletedOnRecovery = @"InitialReplicationCompletedOnRecovery";

        /// <summary>Initial replication failed and would need to be started again.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationFailed = @"InitialReplicationFailed";

        /// <summary>Initial replication is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationInProgress = @"InitialReplicationInProgress";

        /// <summary>Begin marker for initial replication states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationStatesBegin = @"InitialReplicationStatesBegin";

        /// <summary>End marker for initial replication states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState InitialReplicationStatesEnd = @"InitialReplicationStatesEnd";

        /// <summary>
        /// Disabling protection succeeded. This is a transient state before the protected item is deleted.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState MarkedForDeletion = @"MarkedForDeletion";

        /// <summary>Planned failover has been completed successfully.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverCompleted = @"PlannedFailoverCompleted";

        /// <summary>Planned failover preparing protected entities is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverCompleting = @"PlannedFailoverCompleting";

        /// <summary>Planned failover preparing protected entities failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverCompletionFailed = @"PlannedFailoverCompletionFailed";

        /// <summary>Planned failover initiation failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverFailed = @"PlannedFailoverFailed";

        /// <summary>Planned failover has been initiated.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverInitiated = @"PlannedFailoverInitiated";

        /// <summary>Begin marker for planned failover transition states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverTransitionStatesBegin = @"PlannedFailoverTransitionStatesBegin";

        /// <summary>End marker for planned failover transition states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState PlannedFailoverTransitionStatesEnd = @"PlannedFailoverTransitionStatesEnd";

        /// <summary>
        /// Protected item is protected and replication is on-going. Any issues with replication will be surfaced separately via the
        /// health property and will not affect the state.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState Protected = @"Protected";

        /// <summary>Begin marker for protected steady-state states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ProtectedStatesBegin = @"ProtectedStatesBegin";

        /// <summary>End marker for protected steady-state states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ProtectedStatesEnd = @"ProtectedStatesEnd";

        /// <summary>Reprotect has failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ReprotectFailed = @"ReprotectFailed";

        /// <summary>Reprotect has been initiated.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ReprotectInitiated = @"ReprotectInitiated";

        /// <summary>Begin marker for reprotect states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ReprotectStatesBegin = @"ReprotectStatesBegin";

        /// <summary>End marker for reprotect states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState ReprotectStatesEnd = @"ReprotectStatesEnd";

        /// <summary>Unplanned failover preparing protected entities is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverCompleted = @"UnplannedFailoverCompleted";

        /// <summary>Unplanned failover preparing protected entities is in progress.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverCompleting = @"UnplannedFailoverCompleting";

        /// <summary>Unplanned failover preparing protected entities failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverCompletionFailed = @"UnplannedFailoverCompletionFailed";

        /// <summary>Unplanned failover initiation failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverFailed = @"UnplannedFailoverFailed";

        /// <summary>Unplanned failover has been initiated.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverInitiated = @"UnplannedFailoverInitiated";

        /// <summary>Begin marker for unplanned failover transition states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverTransitionStatesBegin = @"UnplannedFailoverTransitionStatesBegin";

        /// <summary>End marker for unplanned failover transition states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnplannedFailoverTransitionStatesEnd = @"UnplannedFailoverTransitionStatesEnd";

        /// <summary>Begin marker for unprotected states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnprotectedStatesBegin = @"UnprotectedStatesBegin";

        /// <summary>End marker for unprotected states.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState UnprotectedStatesEnd = @"UnprotectedStatesEnd";

        /// <summary>the value for an instance of the <see cref="ProtectionState" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to ProtectionState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ProtectionState" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ProtectionState(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ProtectionState</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ProtectionState (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ProtectionState && Equals((ProtectionState)obj);
        }

        /// <summary>Returns hashCode for enum ProtectionState</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="ProtectionState"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ProtectionState(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for ProtectionState</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ProtectionState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ProtectionState" />.</param>

        public static implicit operator ProtectionState(string value)
        {
            return new ProtectionState(value);
        }

        /// <summary>Implicit operator to convert ProtectionState to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ProtectionState" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ProtectionState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e1, Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ProtectionState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e1, Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.ProtectionState e2)
        {
            return e2.Equals(e1);
        }
    }
}