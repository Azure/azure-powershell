// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20240901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>Disk controller.</summary>
    public partial class DiskControllerInputs :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20240901.IDiskControllerInputs,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api20240901.IDiskControllerInputsInternal
    {

        /// <summary>Backing field for <see cref="ControllerId" /> property.</summary>
        private int _controllerId;

        /// <summary>Gets or sets the controller ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public int ControllerId { get => this._controllerId; set => this._controllerId = value; }

        /// <summary>Backing field for <see cref="ControllerLocation" /> property.</summary>
        private int _controllerLocation;

        /// <summary>Gets or sets the controller Location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public int ControllerLocation { get => this._controllerLocation; set => this._controllerLocation = value; }

        /// <summary>Backing field for <see cref="ControllerName" /> property.</summary>
        private string _controllerName;

        /// <summary>Gets or sets the controller name (IDE,SCSI).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string ControllerName { get => this._controllerName; set => this._controllerName = value; }

        /// <summary>Creates an new <see cref="DiskControllerInputs" /> instance.</summary>
        public DiskControllerInputs()
        {

        }
    }
    /// Disk controller.
    public partial interface IDiskControllerInputs :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the controller ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the controller ID.",
        SerializedName = @"controllerId",
        PossibleTypes = new [] { typeof(int) })]
        int ControllerId { get; set; }
        /// <summary>Gets or sets the controller Location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the controller Location.",
        SerializedName = @"controllerLocation",
        PossibleTypes = new [] { typeof(int) })]
        int ControllerLocation { get; set; }
        /// <summary>Gets or sets the controller name (IDE,SCSI).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the controller name (IDE,SCSI).",
        SerializedName = @"controllerName",
        PossibleTypes = new [] { typeof(string) })]
        string ControllerName { get; set; }

    }
    /// Disk controller.
    internal partial interface IDiskControllerInputsInternal

    {
        /// <summary>Gets or sets the controller ID.</summary>
        int ControllerId { get; set; }
        /// <summary>Gets or sets the controller Location.</summary>
        int ControllerLocation { get; set; }
        /// <summary>Gets or sets the controller name (IDE,SCSI).</summary>
        string ControllerName { get; set; }

    }
}