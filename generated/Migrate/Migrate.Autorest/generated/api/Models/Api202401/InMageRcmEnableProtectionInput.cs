// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>InMageRcm specific enable protection input.</summary>
    public partial class InMageRcmEnableProtectionInput :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmEnableProtectionInput,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmEnableProtectionInputInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInput"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInput __enableProtectionProviderSpecificInput = new Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.EnableProtectionProviderSpecificInput();

        /// <summary>The DiskEncryptionSet ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public string DiskDefaultDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).DiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).DiskEncryptionSetId = value ?? null; }

        /// <summary>The disk type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.DiskAccountType? DiskDefaultDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).DiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).DiskType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.DiskAccountType)""); }

        /// <summary>The log storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public string DiskDefaultLogStorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).LogStorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).LogStorageAccountId = value ?? null; }

        /// <summary>The logical sector size (in bytes), 512 by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public int? DiskDefaultSectorSizeInByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).SectorSizeInByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInputInternal)DisksDefault).SectorSizeInByte = value ?? default(int); }

        /// <summary>Backing field for <see cref="DisksDefault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInput _disksDefault;

        /// <summary>The default disk input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInput DisksDefault { get => (this._disksDefault = this._disksDefault ?? new Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.InMageRcmDisksDefaultInput()); set => this._disksDefault = value; }

        /// <summary>Backing field for <see cref="DisksToInclude" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDiskInput[] _disksToInclude;

        /// <summary>The disks to include list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDiskInput[] DisksToInclude { get => this._disksToInclude; set => this._disksToInclude = value; }

        /// <summary>Backing field for <see cref="FabricDiscoveryMachineId" /> property.</summary>
        private string _fabricDiscoveryMachineId;

        /// <summary>The ARM Id of discovered machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string FabricDiscoveryMachineId { get => this._fabricDiscoveryMachineId; set => this._fabricDiscoveryMachineId = value; }

        /// <summary>The class type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inherited)]
        public string InstanceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInputInternal)__enableProtectionProviderSpecificInput).InstanceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInputInternal)__enableProtectionProviderSpecificInput).InstanceType = value ; }

        /// <summary>Backing field for <see cref="LicenseType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.LicenseType? _licenseType;

        /// <summary>The license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.LicenseType? LicenseType { get => this._licenseType; set => this._licenseType = value; }

        /// <summary>Internal Acessors for DisksDefault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInput Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmEnableProtectionInputInternal.DisksDefault { get => (this._disksDefault = this._disksDefault ?? new Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.InMageRcmDisksDefaultInput()); set { {_disksDefault = value;} } }

        /// <summary>Internal Acessors for TargetVMSecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfileProperties Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmEnableProtectionInputInternal.TargetVMSecurityProfile { get => (this._targetVMSecurityProfile = this._targetVMSecurityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.SecurityProfileProperties()); set { {_targetVMSecurityProfile = value;} } }

        /// <summary>Backing field for <see cref="MultiVMGroupName" /> property.</summary>
        private string _multiVMGroupName;

        /// <summary>The multi VM group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string MultiVMGroupName { get => this._multiVMGroupName; set => this._multiVMGroupName = value; }

        /// <summary>Backing field for <see cref="ProcessServerId" /> property.</summary>
        private string _processServerId;

        /// <summary>The process server Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string ProcessServerId { get => this._processServerId; set => this._processServerId = value; }

        /// <summary>Backing field for <see cref="RunAsAccountId" /> property.</summary>
        private string _runAsAccountId;

        /// <summary>The run-as account Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string RunAsAccountId { get => this._runAsAccountId; set => this._runAsAccountId = value; }

        /// <summary>Backing field for <see cref="SeedManagedDiskTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] _seedManagedDiskTag;

        /// <summary>The tags for the seed managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] SeedManagedDiskTag { get => this._seedManagedDiskTag; set => this._seedManagedDiskTag = value; }

        /// <summary>Backing field for <see cref="SqlServerLicenseType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SqlServerLicenseType? _sqlServerLicenseType;

        /// <summary>The SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SqlServerLicenseType? SqlServerLicenseType { get => this._sqlServerLicenseType; set => this._sqlServerLicenseType = value; }

        /// <summary>Backing field for <see cref="TargetAvailabilitySetId" /> property.</summary>
        private string _targetAvailabilitySetId;

        /// <summary>The target availability set ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetAvailabilitySetId { get => this._targetAvailabilitySetId; set => this._targetAvailabilitySetId = value; }

        /// <summary>Backing field for <see cref="TargetAvailabilityZone" /> property.</summary>
        private string _targetAvailabilityZone;

        /// <summary>The target availability zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetAvailabilityZone { get => this._targetAvailabilityZone; set => this._targetAvailabilityZone = value; }

        /// <summary>
        /// Backing field for <see cref="TargetBootDiagnosticsStorageAccountId" /> property.
        /// </summary>
        private string _targetBootDiagnosticsStorageAccountId;

        /// <summary>The target boot diagnostics storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetBootDiagnosticsStorageAccountId { get => this._targetBootDiagnosticsStorageAccountId; set => this._targetBootDiagnosticsStorageAccountId = value; }

        /// <summary>Backing field for <see cref="TargetManagedDiskTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] _targetManagedDiskTag;

        /// <summary>The tags for the target managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetManagedDiskTag { get => this._targetManagedDiskTag; set => this._targetManagedDiskTag = value; }

        /// <summary>Backing field for <see cref="TargetNetworkId" /> property.</summary>
        private string _targetNetworkId;

        /// <summary>The selected target network ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetNetworkId { get => this._targetNetworkId; set => this._targetNetworkId = value; }

        /// <summary>Backing field for <see cref="TargetNicTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] _targetNicTag;

        /// <summary>The tags for the target NICs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetNicTag { get => this._targetNicTag; set => this._targetNicTag = value; }

        /// <summary>Backing field for <see cref="TargetProximityPlacementGroupId" /> property.</summary>
        private string _targetProximityPlacementGroupId;

        /// <summary>The target proximity placement group Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetProximityPlacementGroupId { get => this._targetProximityPlacementGroupId; set => this._targetProximityPlacementGroupId = value; }

        /// <summary>Backing field for <see cref="TargetResourceGroupId" /> property.</summary>
        private string _targetResourceGroupId;

        /// <summary>The target resource group ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetResourceGroupId { get => this._targetResourceGroupId; set => this._targetResourceGroupId = value; }

        /// <summary>Backing field for <see cref="TargetSubnetName" /> property.</summary>
        private string _targetSubnetName;

        /// <summary>The selected target subnet name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetSubnetName { get => this._targetSubnetName; set => this._targetSubnetName = value; }

        /// <summary>Backing field for <see cref="TargetVMName" /> property.</summary>
        private string _targetVMName;

        /// <summary>The target VM name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetVMName { get => this._targetVMName; set => this._targetVMName = value; }

        /// <summary>Backing field for <see cref="TargetVMSecurityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfileProperties _targetVMSecurityProfile;

        /// <summary>The target VM security profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfileProperties TargetVMSecurityProfile { get => (this._targetVMSecurityProfile = this._targetVMSecurityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.SecurityProfileProperties()); set => this._targetVMSecurityProfile = value; }

        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmconfidentialEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMConfidentialEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMConfidentialEncryption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration)""); }

        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmmonitoring { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMMonitoring; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMMonitoring = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration)""); }

        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmsecureBoot { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMSecureBoot; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMSecureBoot = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration)""); }

        /// <summary>The target VM security type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityProfileTargetVmsecurityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMSecurityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMSecurityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType)""); }

        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmtpm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMTpm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal)TargetVMSecurityProfile).TargetVMTpm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration)""); }

        /// <summary>Backing field for <see cref="TargetVMSize" /> property.</summary>
        private string _targetVMSize;

        /// <summary>The target VM size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TargetVMSize { get => this._targetVMSize; set => this._targetVMSize = value; }

        /// <summary>Backing field for <see cref="TargetVMTag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] _targetVMTag;

        /// <summary>The target VM tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetVMTag { get => this._targetVMTag; set => this._targetVMTag = value; }

        /// <summary>Backing field for <see cref="TestNetworkId" /> property.</summary>
        private string _testNetworkId;

        /// <summary>The selected test network ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TestNetworkId { get => this._testNetworkId; set => this._testNetworkId = value; }

        /// <summary>Backing field for <see cref="TestSubnetName" /> property.</summary>
        private string _testSubnetName;

        /// <summary>The selected test subnet name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string TestSubnetName { get => this._testSubnetName; set => this._testSubnetName = value; }

        /// <summary>Backing field for <see cref="UserSelectedOSName" /> property.</summary>
        private string _userSelectedOSName;

        /// <summary>The OS name selected by user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public string UserSelectedOSName { get => this._userSelectedOSName; set => this._userSelectedOSName = value; }

        /// <summary>Creates an new <see cref="InMageRcmEnableProtectionInput" /> instance.</summary>
        public InMageRcmEnableProtectionInput()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__enableProtectionProviderSpecificInput), __enableProtectionProviderSpecificInput);
            await eventListener.AssertObjectIsValid(nameof(__enableProtectionProviderSpecificInput), __enableProtectionProviderSpecificInput);
        }
    }
    /// InMageRcm specific enable protection input.
    public partial interface IInMageRcmEnableProtectionInput :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInput
    {
        /// <summary>The DiskEncryptionSet ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DiskEncryptionSet ARM Id.",
        SerializedName = @"diskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskDefaultDiskEncryptionSetId { get; set; }
        /// <summary>The disk type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The disk type.",
        SerializedName = @"diskType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.DiskAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.DiskAccountType? DiskDefaultDiskType { get; set; }
        /// <summary>The log storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The log storage account ARM Id.",
        SerializedName = @"logStorageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskDefaultLogStorageAccountId { get; set; }
        /// <summary>The logical sector size (in bytes), 512 by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical sector size (in bytes), 512 by default.",
        SerializedName = @"sectorSizeInBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskDefaultSectorSizeInByte { get; set; }
        /// <summary>The disks to include list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The disks to include list.",
        SerializedName = @"disksToInclude",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDiskInput) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDiskInput[] DisksToInclude { get; set; }
        /// <summary>The ARM Id of discovered machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The ARM Id of discovered machine.",
        SerializedName = @"fabricDiscoveryMachineId",
        PossibleTypes = new [] { typeof(string) })]
        string FabricDiscoveryMachineId { get; set; }
        /// <summary>The license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The license type.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.LicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.LicenseType? LicenseType { get; set; }
        /// <summary>The multi VM group name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The multi VM group name.",
        SerializedName = @"multiVmGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string MultiVMGroupName { get; set; }
        /// <summary>The process server Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The process server Id.",
        SerializedName = @"processServerId",
        PossibleTypes = new [] { typeof(string) })]
        string ProcessServerId { get; set; }
        /// <summary>The run-as account Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The run-as account Id.",
        SerializedName = @"runAsAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsAccountId { get; set; }
        /// <summary>The tags for the seed managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags for the seed managed disks.",
        SerializedName = @"seedManagedDiskTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] SeedManagedDiskTag { get; set; }
        /// <summary>The SQL Server license type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SQL Server license type.",
        SerializedName = @"sqlServerLicenseType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SqlServerLicenseType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SqlServerLicenseType? SqlServerLicenseType { get; set; }
        /// <summary>The target availability set ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target availability set ARM Id.",
        SerializedName = @"targetAvailabilitySetId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetAvailabilitySetId { get; set; }
        /// <summary>The target availability zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target availability zone.",
        SerializedName = @"targetAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string TargetAvailabilityZone { get; set; }
        /// <summary>The target boot diagnostics storage account ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target boot diagnostics storage account ARM Id.",
        SerializedName = @"targetBootDiagnosticsStorageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetBootDiagnosticsStorageAccountId { get; set; }
        /// <summary>The tags for the target managed disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags for the target managed disks.",
        SerializedName = @"targetManagedDiskTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetManagedDiskTag { get; set; }
        /// <summary>The selected target network ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The selected target network ARM Id.",
        SerializedName = @"targetNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetNetworkId { get; set; }
        /// <summary>The tags for the target NICs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags for the target NICs.",
        SerializedName = @"targetNicTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetNicTag { get; set; }
        /// <summary>The target proximity placement group Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target proximity placement group Id.",
        SerializedName = @"targetProximityPlacementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetProximityPlacementGroupId { get; set; }
        /// <summary>The target resource group ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The target resource group ARM Id.",
        SerializedName = @"targetResourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceGroupId { get; set; }
        /// <summary>The selected target subnet name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The selected target subnet name.",
        SerializedName = @"targetSubnetName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSubnetName { get; set; }
        /// <summary>The target VM name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target VM name.",
        SerializedName = @"targetVmName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVMName { get; set; }
        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether confidential compute encryption to be enabled.",
        SerializedName = @"targetVmConfidentialEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmconfidentialEncryption { get; set; }
        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether integrity monitoring to be enabled.",
        SerializedName = @"targetVmMonitoring",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmmonitoring { get; set; }
        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether secure boot to be enabled.",
        SerializedName = @"targetVmSecureBoot",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmsecureBoot { get; set; }
        /// <summary>The target VM security type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target VM security type.",
        SerializedName = @"targetVmSecurityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityProfileTargetVmsecurityType { get; set; }
        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether trusted platform module to be enabled.",
        SerializedName = @"targetVmTpm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmtpm { get; set; }
        /// <summary>The target VM size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target VM size.",
        SerializedName = @"targetVmSize",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVMSize { get; set; }
        /// <summary>The target VM tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target VM tags.",
        SerializedName = @"targetVmTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetVMTag { get; set; }
        /// <summary>The selected test network ARM Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The selected test network ARM Id.",
        SerializedName = @"testNetworkId",
        PossibleTypes = new [] { typeof(string) })]
        string TestNetworkId { get; set; }
        /// <summary>The selected test subnet name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The selected test subnet name.",
        SerializedName = @"testSubnetName",
        PossibleTypes = new [] { typeof(string) })]
        string TestSubnetName { get; set; }
        /// <summary>The OS name selected by user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS name selected by user.",
        SerializedName = @"userSelectedOSName",
        PossibleTypes = new [] { typeof(string) })]
        string UserSelectedOSName { get; set; }

    }
    /// InMageRcm specific enable protection input.
    internal partial interface IInMageRcmEnableProtectionInputInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IEnableProtectionProviderSpecificInputInternal
    {
        /// <summary>The DiskEncryptionSet ARM Id.</summary>
        string DiskDefaultDiskEncryptionSetId { get; set; }
        /// <summary>The disk type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.DiskAccountType? DiskDefaultDiskType { get; set; }
        /// <summary>The log storage account ARM Id.</summary>
        string DiskDefaultLogStorageAccountId { get; set; }
        /// <summary>The logical sector size (in bytes), 512 by default.</summary>
        int? DiskDefaultSectorSizeInByte { get; set; }
        /// <summary>The default disk input.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDisksDefaultInput DisksDefault { get; set; }
        /// <summary>The disks to include list.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IInMageRcmDiskInput[] DisksToInclude { get; set; }
        /// <summary>The ARM Id of discovered machine.</summary>
        string FabricDiscoveryMachineId { get; set; }
        /// <summary>The license type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.LicenseType? LicenseType { get; set; }
        /// <summary>The multi VM group name.</summary>
        string MultiVMGroupName { get; set; }
        /// <summary>The process server Id.</summary>
        string ProcessServerId { get; set; }
        /// <summary>The run-as account Id.</summary>
        string RunAsAccountId { get; set; }
        /// <summary>The tags for the seed managed disks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] SeedManagedDiskTag { get; set; }
        /// <summary>The SQL Server license type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SqlServerLicenseType? SqlServerLicenseType { get; set; }
        /// <summary>The target availability set ARM Id.</summary>
        string TargetAvailabilitySetId { get; set; }
        /// <summary>The target availability zone.</summary>
        string TargetAvailabilityZone { get; set; }
        /// <summary>The target boot diagnostics storage account ARM Id.</summary>
        string TargetBootDiagnosticsStorageAccountId { get; set; }
        /// <summary>The tags for the target managed disks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetManagedDiskTag { get; set; }
        /// <summary>The selected target network ARM Id.</summary>
        string TargetNetworkId { get; set; }
        /// <summary>The tags for the target NICs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetNicTag { get; set; }
        /// <summary>The target proximity placement group Id.</summary>
        string TargetProximityPlacementGroupId { get; set; }
        /// <summary>The target resource group ARM Id.</summary>
        string TargetResourceGroupId { get; set; }
        /// <summary>The selected target subnet name.</summary>
        string TargetSubnetName { get; set; }
        /// <summary>The target VM name.</summary>
        string TargetVMName { get; set; }
        /// <summary>The target VM security profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfileProperties TargetVMSecurityProfile { get; set; }
        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmconfidentialEncryption { get; set; }
        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmmonitoring { get; set; }
        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmsecureBoot { get; set; }
        /// <summary>The target VM security type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityProfileTargetVmsecurityType { get; set; }
        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecurityProfileTargetVmtpm { get; set; }
        /// <summary>The target VM size.</summary>
        string TargetVMSize { get; set; }
        /// <summary>The target VM tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.IUserCreatedResourceTag[] TargetVMTag { get; set; }
        /// <summary>The selected test network ARM Id.</summary>
        string TestNetworkId { get; set; }
        /// <summary>The selected test subnet name.</summary>
        string TestSubnetName { get; set; }
        /// <summary>The OS name selected by user.</summary>
        string UserSelectedOSName { get; set; }

    }
}