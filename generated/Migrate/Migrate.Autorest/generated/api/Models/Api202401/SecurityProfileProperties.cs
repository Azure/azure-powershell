// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Extensions;

    /// <summary>Security profile input.</summary>
    public partial class SecurityProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfileProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Models.Api202401.ISecurityProfilePropertiesInternal
    {

        /// <summary>Backing field for <see cref="TargetVMConfidentialEncryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? _targetVMConfidentialEncryption;

        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMConfidentialEncryption { get => this._targetVMConfidentialEncryption; set => this._targetVMConfidentialEncryption = value; }

        /// <summary>Backing field for <see cref="TargetVMMonitoring" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? _targetVMMonitoring;

        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMMonitoring { get => this._targetVMMonitoring; set => this._targetVMMonitoring = value; }

        /// <summary>Backing field for <see cref="TargetVMSecureBoot" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? _targetVMSecureBoot;

        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecureBoot { get => this._targetVMSecureBoot; set => this._targetVMSecureBoot = value; }

        /// <summary>Backing field for <see cref="TargetVMSecurityType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? _targetVMSecurityType;

        /// <summary>The target VM security type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityType { get => this._targetVMSecurityType; set => this._targetVMSecurityType = value; }

        /// <summary>Backing field for <see cref="TargetVMTpm" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? _targetVMTpm;

        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Origin(Microsoft.Azure.PowerShell.Cmdlets.Migrate.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMTpm { get => this._targetVMTpm; set => this._targetVMTpm = value; }

        /// <summary>Creates an new <see cref="SecurityProfileProperties" /> instance.</summary>
        public SecurityProfileProperties()
        {

        }
    }
    /// Security profile input.
    public partial interface ISecurityProfileProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.IJsonSerializable
    {
        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether confidential compute encryption to be enabled.",
        SerializedName = @"targetVmConfidentialEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMConfidentialEncryption { get; set; }
        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether integrity monitoring to be enabled.",
        SerializedName = @"targetVmMonitoring",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMMonitoring { get; set; }
        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether secure boot to be enabled.",
        SerializedName = @"targetVmSecureBoot",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecureBoot { get; set; }
        /// <summary>The target VM security type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target VM security type.",
        SerializedName = @"targetVmSecurityType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityType { get; set; }
        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Migrate.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether trusted platform module to be enabled.",
        SerializedName = @"targetVmTpm",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMTpm { get; set; }

    }
    /// Security profile input.
    internal partial interface ISecurityProfilePropertiesInternal

    {
        /// <summary>A value indicating whether confidential compute encryption to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMConfidentialEncryption { get; set; }
        /// <summary>A value indicating whether integrity monitoring to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMMonitoring { get; set; }
        /// <summary>A value indicating whether secure boot to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMSecureBoot { get; set; }
        /// <summary>The target VM security type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityType? TargetVMSecurityType { get; set; }
        /// <summary>A value indicating whether trusted platform module to be enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Migrate.Support.SecurityConfiguration? TargetVMTpm { get; set; }

    }
}