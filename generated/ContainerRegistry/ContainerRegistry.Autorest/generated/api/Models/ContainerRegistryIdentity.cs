// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    public partial class ContainerRegistryIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.IContainerRegistryIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.IContainerRegistryIdentityInternal
    {

        /// <summary>Backing field for <see cref="AgentPoolName" /> property.</summary>
        private string _agentPoolName;

        /// <summary>The name of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string AgentPoolName { get => this._agentPoolName; set => this._agentPoolName = value; }

        /// <summary>Backing field for <see cref="CacheRuleName" /> property.</summary>
        private string _cacheRuleName;

        /// <summary>The name of the cache rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string CacheRuleName { get => this._cacheRuleName; set => this._cacheRuleName = value; }

        /// <summary>Backing field for <see cref="ConnectedRegistryName" /> property.</summary>
        private string _connectedRegistryName;

        /// <summary>The name of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ConnectedRegistryName { get => this._connectedRegistryName; set => this._connectedRegistryName = value; }

        /// <summary>Backing field for <see cref="CredentialSetName" /> property.</summary>
        private string _credentialSetName;

        /// <summary>The name of the credential set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string CredentialSetName { get => this._credentialSetName; set => this._credentialSetName = value; }

        /// <summary>Backing field for <see cref="ExportPipelineName" /> property.</summary>
        private string _exportPipelineName;

        /// <summary>The name of the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ExportPipelineName { get => this._exportPipelineName; set => this._exportPipelineName = value; }

        /// <summary>Backing field for <see cref="GroupName" /> property.</summary>
        private string _groupName;

        /// <summary>The name of the private link resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string GroupName { get => this._groupName; set => this._groupName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="ImportPipelineName" /> property.</summary>
        private string _importPipelineName;

        /// <summary>The name of the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ImportPipelineName { get => this._importPipelineName; set => this._importPipelineName = value; }

        /// <summary>Backing field for <see cref="PipelineRunName" /> property.</summary>
        private string _pipelineRunName;

        /// <summary>The name of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string PipelineRunName { get => this._pipelineRunName; set => this._pipelineRunName = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnectionName" /> property.</summary>
        private string _privateEndpointConnectionName;

        /// <summary>The name of the private endpoint connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string PrivateEndpointConnectionName { get => this._privateEndpointConnectionName; set => this._privateEndpointConnectionName = value; }

        /// <summary>Backing field for <see cref="RegistryName" /> property.</summary>
        private string _registryName;

        /// <summary>The name of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RegistryName { get => this._registryName; set => this._registryName = value; }

        /// <summary>Backing field for <see cref="ReplicationName" /> property.</summary>
        private string _replicationName;

        /// <summary>The name of the replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ReplicationName { get => this._replicationName; set => this._replicationName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="RunId" /> property.</summary>
        private string _runId;

        /// <summary>The run ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RunId { get => this._runId; set => this._runId = value; }

        /// <summary>Backing field for <see cref="ScopeMapName" /> property.</summary>
        private string _scopeMapName;

        /// <summary>The name of the scope map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ScopeMapName { get => this._scopeMapName; set => this._scopeMapName = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The ID of the target subscription. The value must be an UUID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="TaskName" /> property.</summary>
        private string _taskName;

        /// <summary>The name of the container registry task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TaskName { get => this._taskName; set => this._taskName = value; }

        /// <summary>Backing field for <see cref="TaskRunName" /> property.</summary>
        private string _taskRunName;

        /// <summary>The name of the task run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TaskRunName { get => this._taskRunName; set => this._taskRunName = value; }

        /// <summary>Backing field for <see cref="TokenName" /> property.</summary>
        private string _tokenName;

        /// <summary>The name of the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TokenName { get => this._tokenName; set => this._tokenName = value; }

        /// <summary>Backing field for <see cref="WebhookName" /> property.</summary>
        private string _webhookName;

        /// <summary>The name of the webhook.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string WebhookName { get => this._webhookName; set => this._webhookName = value; }

        /// <summary>Creates an new <see cref="ContainerRegistryIdentity" /> instance.</summary>
        public ContainerRegistryIdentity()
        {

        }
    }
    public partial interface IContainerRegistryIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The name of the agent pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the agent pool.",
        SerializedName = @"agentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string AgentPoolName { get; set; }
        /// <summary>The name of the cache rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the cache rule.",
        SerializedName = @"cacheRuleName",
        PossibleTypes = new [] { typeof(string) })]
        string CacheRuleName { get; set; }
        /// <summary>The name of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the connected registry.",
        SerializedName = @"connectedRegistryName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectedRegistryName { get; set; }
        /// <summary>The name of the credential set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the credential set.",
        SerializedName = @"credentialSetName",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialSetName { get; set; }
        /// <summary>The name of the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the export pipeline.",
        SerializedName = @"exportPipelineName",
        PossibleTypes = new [] { typeof(string) })]
        string ExportPipelineName { get; set; }
        /// <summary>The name of the private link resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the private link resource.",
        SerializedName = @"groupName",
        PossibleTypes = new [] { typeof(string) })]
        string GroupName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The name of the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the import pipeline.",
        SerializedName = @"importPipelineName",
        PossibleTypes = new [] { typeof(string) })]
        string ImportPipelineName { get; set; }
        /// <summary>The name of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the pipeline run.",
        SerializedName = @"pipelineRunName",
        PossibleTypes = new [] { typeof(string) })]
        string PipelineRunName { get; set; }
        /// <summary>The name of the private endpoint connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the private endpoint connection.",
        SerializedName = @"privateEndpointConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>The name of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the container registry.",
        SerializedName = @"registryName",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryName { get; set; }
        /// <summary>The name of the replication.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the replication.",
        SerializedName = @"replicationName",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicationName { get; set; }
        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the resource group. The name is case insensitive.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>The run ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The run ID.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get; set; }
        /// <summary>The name of the scope map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the scope map.",
        SerializedName = @"scopeMapName",
        PossibleTypes = new [] { typeof(string) })]
        string ScopeMapName { get; set; }
        /// <summary>The ID of the target subscription. The value must be an UUID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the target subscription. The value must be an UUID.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The name of the container registry task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the container registry task.",
        SerializedName = @"taskName",
        PossibleTypes = new [] { typeof(string) })]
        string TaskName { get; set; }
        /// <summary>The name of the task run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the task run.",
        SerializedName = @"taskRunName",
        PossibleTypes = new [] { typeof(string) })]
        string TaskRunName { get; set; }
        /// <summary>The name of the token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the token.",
        SerializedName = @"tokenName",
        PossibleTypes = new [] { typeof(string) })]
        string TokenName { get; set; }
        /// <summary>The name of the webhook.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the webhook.",
        SerializedName = @"webhookName",
        PossibleTypes = new [] { typeof(string) })]
        string WebhookName { get; set; }

    }
    internal partial interface IContainerRegistryIdentityInternal

    {
        /// <summary>The name of the agent pool.</summary>
        string AgentPoolName { get; set; }
        /// <summary>The name of the cache rule.</summary>
        string CacheRuleName { get; set; }
        /// <summary>The name of the connected registry.</summary>
        string ConnectedRegistryName { get; set; }
        /// <summary>The name of the credential set.</summary>
        string CredentialSetName { get; set; }
        /// <summary>The name of the export pipeline.</summary>
        string ExportPipelineName { get; set; }
        /// <summary>The name of the private link resource.</summary>
        string GroupName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>The name of the import pipeline.</summary>
        string ImportPipelineName { get; set; }
        /// <summary>The name of the pipeline run.</summary>
        string PipelineRunName { get; set; }
        /// <summary>The name of the private endpoint connection.</summary>
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>The name of the container registry.</summary>
        string RegistryName { get; set; }
        /// <summary>The name of the replication.</summary>
        string ReplicationName { get; set; }
        /// <summary>The name of the resource group. The name is case insensitive.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>The run ID.</summary>
        string RunId { get; set; }
        /// <summary>The name of the scope map.</summary>
        string ScopeMapName { get; set; }
        /// <summary>The ID of the target subscription. The value must be an UUID.</summary>
        string SubscriptionId { get; set; }
        /// <summary>The name of the container registry task.</summary>
        string TaskName { get; set; }
        /// <summary>The name of the task run.</summary>
        string TaskRunName { get; set; }
        /// <summary>The name of the token.</summary>
        string TokenName { get; set; }
        /// <summary>The name of the webhook.</summary>
        string WebhookName { get; set; }

    }
}