// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties of task run.</summary>
    public partial class TaskRunProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal
    {

        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? AgentConfigurationCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentConfigurationCpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentConfigurationCpu = value ?? default(int); }

        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string AgentPoolName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentPoolName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentPoolName = value ?? null; }

        /// <summary>The time the run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).CreateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).CreateTime = value ?? default(global::System.DateTime); }

        /// <summary>The list of custom registries that were logged in during this run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string[] CustomRegistry { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).CustomRegistry; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).CustomRegistry = value ?? null /* arrayOf */; }

        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? FinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).FinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).FinishTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="ForceUpdateTag" /> property.</summary>
        private string _forceUpdateTag;

        /// <summary>
        /// How the run should be forced to rerun even if the run request configuration has not changed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ForceUpdateTag { get => this._forceUpdateTag; set => this._forceUpdateTag = value; }

        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ImageUpdateTriggerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerId = value ?? null; }

        /// <summary>The list of image updates that caused the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerImage = value ?? null /* arrayOf */; }

        /// <summary>The timestamp when the image update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImageUpdateTriggerTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTriggerTimestamp = value ?? default(global::System.DateTime); }

        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? IsArchiveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).IsArchiveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).IsArchiveEnabled = value ?? default(bool); }

        /// <summary>The last updated time for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LastUpdatedTime = value ?? default(global::System.DateTime); }

        /// <summary>The sha256-based digest of the image manifest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactDigest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactDigest = value ?? null; }

        /// <summary>The registry login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactRegistry { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactRegistry; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactRegistry = value ?? null; }

        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactRepository; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactRepository = value ?? null; }

        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifactTag = value ?? null; }

        /// <summary>Internal Acessors for AgentConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.AgentConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).AgentConfiguration = value; }

        /// <summary>Internal Acessors for ImageUpdateTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.ImageUpdateTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ImageUpdateTrigger = value; }

        /// <summary>Internal Acessors for LogArtifact</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.LogArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).LogArtifact = value; }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.Platform { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Platform; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Platform = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RunErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ErrorMessage = value; }

        /// <summary>Internal Acessors for RunRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequest Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunRequest { get => (this._runRequest = this._runRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.RunRequest()); set { {_runRequest = value;} } }

        /// <summary>Internal Acessors for RunResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRun Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResult { get => (this._runResult = this._runResult ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.Run()); set { {_runResult = value;} } }

        /// <summary>Internal Acessors for RunResultId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Id = value; }

        /// <summary>Internal Acessors for RunResultName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Name = value; }

        /// <summary>Internal Acessors for RunResultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Property = value; }

        /// <summary>Internal Acessors for RunResultSystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResultSystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemData = value; }

        /// <summary>Internal Acessors for RunResultType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.RunResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Type = value; }

        /// <summary>Internal Acessors for SourceTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.SourceTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTrigger = value; }

        /// <summary>Internal Acessors for TimerTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITaskRunPropertiesInternal.TimerTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTrigger = value; }

        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).OutputImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).OutputImage = value ?? null /* arrayOf */; }

        /// <summary>The OS architecture.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformArchitecture; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformArchitecture = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture)""); }

        /// <summary>The operating system type required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformOS; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformOS = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS)""); }

        /// <summary>Variant of the CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformVariant; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).PlatformVariant = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant)""); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of this task run</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ErrorMessage; }

        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).RunId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).RunId = value ?? null; }

        /// <summary>Backing field for <see cref="RunRequest" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequest _runRequest;

        /// <summary>The request (parameters) for the run</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequest RunRequest { get => (this._runRequest = this._runRequest ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.RunRequest()); set => this._runRequest = value; }

        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunRequestAgentPoolName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).AgentPoolName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).AgentPoolName = value ?? null; }

        /// <summary>The value that indicates whether archiving is enabled for the run or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? RunRequestIsArchiveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).IsArchiveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).IsArchiveEnabled = value ?? default(bool); }

        /// <summary>
        /// The template that describes the repository and tag information for run log artifact.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunRequestLogTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).LogTemplate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).LogTemplate = value ?? null; }

        /// <summary>The type of the run request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunRequestType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequestInternal)RunRequest).Type = value ?? null; }

        /// <summary>Backing field for <see cref="RunResult" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRun _runResult;

        /// <summary>The result of this task run</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRun RunResult { get => (this._runResult = this._runResult ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.Run()); }

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunResultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Id; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunResultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Name; }

        /// <summary>The provisioning state of a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? RunResultPropertiesProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).ProvisioningState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState)""); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? RunResultSystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunResultSystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType? RunResultSystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource modification (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? RunResultSystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunResultSystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType? RunResultSystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType)""); }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RunResultType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)RunResult).Type; }

        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).RunType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).RunType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType)""); }

        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceRegistryAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceRegistryAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceRegistryAuth = value ?? null; }

        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerBranchName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerBranchName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerBranchName = value ?? null; }

        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerCommitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerCommitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerCommitId = value ?? null; }

        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerEventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerEventType = value ?? null; }

        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerId = value ?? null; }

        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerProviderType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerProviderType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerProviderType = value ?? null; }

        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerPullRequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerPullRequestId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerPullRequestId = value ?? null; }

        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerRepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).SourceTriggerRepositoryUrl = value ?? null; }

        /// <summary>The time the run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus)""); }

        /// <summary>The task against which run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string Task { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Task; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).Task = value ?? null; }

        /// <summary>The timer trigger name that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TimerTriggerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTriggerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTriggerName = value ?? null; }

        /// <summary>The occurrence that triggered the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TimerTriggerScheduleOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTriggerScheduleOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).TimerTriggerScheduleOccurrence = value ?? null; }

        /// <summary>The update trigger token passed for the Run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string UpdateTriggerToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).UpdateTriggerToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunInternal)RunResult).UpdateTriggerToken = value ?? null; }

        /// <summary>Creates an new <see cref="TaskRunProperties" /> instance.</summary>
        public TaskRunProperties()
        {

        }
    }
    /// The properties of task run.
    public partial interface ITaskRunProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CPU configuration in terms of number of cores required for the run.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(int) })]
        int? AgentConfigurationCpu { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dedicated agent pool for the run.",
        SerializedName = @"agentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string AgentPoolName { get; set; }
        /// <summary>The time the run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run was scheduled.",
        SerializedName = @"createTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The list of custom registries that were logged in during this run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of custom registries that were logged in during this run.",
        SerializedName = @"customRegistries",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomRegistry { get; set; }
        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>
        /// How the run should be forced to rerun even if the run request configuration has not changed
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How the run should be forced to rerun even if the run request configuration has not changed",
        SerializedName = @"forceUpdateTag",
        PossibleTypes = new [] { typeof(string) })]
        string ForceUpdateTag { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID of the trigger.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ImageUpdateTriggerId { get; set; }
        /// <summary>The list of image updates that caused the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of image updates that caused the build.",
        SerializedName = @"images",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get; set; }
        /// <summary>The timestamp when the image update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when the image update happened.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImageUpdateTriggerTimestamp { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether archiving is enabled or not.",
        SerializedName = @"isArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsArchiveEnabled { get; set; }
        /// <summary>The last updated time for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The last updated time for the run.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedTime { get; set; }
        /// <summary>The sha256-based digest of the image manifest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sha256-based digest of the image manifest.",
        SerializedName = @"digest",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactDigest { get; set; }
        /// <summary>The registry login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The registry login server.",
        SerializedName = @"registry",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactRegistry { get; set; }
        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository name.",
        SerializedName = @"repository",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactRepository { get; set; }
        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tag name.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactTag { get; set; }
        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.",
        SerializedName = @"outputImages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get; set; }
        /// <summary>The OS architecture.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS architecture.",
        SerializedName = @"architecture",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get; set; }
        /// <summary>The operating system type required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operating system type required for the run.",
        SerializedName = @"os",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get; set; }
        /// <summary>Variant of the CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Variant of the CPU.",
        SerializedName = @"variant",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get; set; }
        /// <summary>The provisioning state of this task run</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of this task run",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message received from backend systems after the run is scheduled.",
        SerializedName = @"runErrorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string RunErrorMessage { get;  }
        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the run.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dedicated agent pool for the run.",
        SerializedName = @"agentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string RunRequestAgentPoolName { get; set; }
        /// <summary>The value that indicates whether archiving is enabled for the run or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether archiving is enabled for the run or not.",
        SerializedName = @"isArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RunRequestIsArchiveEnabled { get; set; }
        /// <summary>
        /// The template that describes the repository and tag information for run log artifact.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The template that describes the repository and tag information for run log artifact.",
        SerializedName = @"logTemplate",
        PossibleTypes = new [] { typeof(string) })]
        string RunRequestLogTemplate { get; set; }
        /// <summary>The type of the run request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the run request.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string RunRequestType { get; set; }
        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID.",
        SerializedName = @"ResourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string RunResultId { get;  }
        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the resource.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string RunResultName { get;  }
        /// <summary>The provisioning state of a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioning state of a run.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? RunResultPropertiesProvisioningState { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RunResultSystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string RunResultSystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType? RunResultSystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource modification (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource modification (UTC).",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RunResultSystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string RunResultSystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType? RunResultSystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string RunResultType { get;  }
        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of run.",
        SerializedName = @"runType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scope of the credentials that were used to login to the source registry during this run.",
        SerializedName = @"sourceRegistryAuth",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRegistryAuth { get; set; }
        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch name in the repository.",
        SerializedName = @"branchName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerBranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies a commit.",
        SerializedName = @"commitId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerCommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event type of the trigger.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerEventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID of the trigger.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerId { get; set; }
        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source control provider type.",
        SerializedName = @"providerType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies pull request.",
        SerializedName = @"pullRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerPullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository URL.",
        SerializedName = @"repositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerRepositoryUrl { get; set; }
        /// <summary>The time the run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the run.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The task against which run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The task against which run was scheduled.",
        SerializedName = @"task",
        PossibleTypes = new [] { typeof(string) })]
        string Task { get; set; }
        /// <summary>The timer trigger name that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timer trigger name that caused the run.",
        SerializedName = @"timerTriggerName",
        PossibleTypes = new [] { typeof(string) })]
        string TimerTriggerName { get; set; }
        /// <summary>The occurrence that triggered the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The occurrence that triggered the run.",
        SerializedName = @"scheduleOccurrence",
        PossibleTypes = new [] { typeof(string) })]
        string TimerTriggerScheduleOccurrence { get; set; }
        /// <summary>The update trigger token passed for the Run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The update trigger token passed for the Run.",
        SerializedName = @"updateTriggerToken",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateTriggerToken { get; set; }

    }
    /// The properties of task run.
    internal partial interface ITaskRunPropertiesInternal

    {
        /// <summary>The machine configuration of the run agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties AgentConfiguration { get; set; }
        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        int? AgentConfigurationCpu { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        string AgentPoolName { get; set; }
        /// <summary>The time the run was scheduled.</summary>
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The list of custom registries that were logged in during this run.</summary>
        string[] CustomRegistry { get; set; }
        /// <summary>The time the run finished.</summary>
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>
        /// How the run should be forced to rerun even if the run request configuration has not changed
        /// </summary>
        string ForceUpdateTag { get; set; }
        /// <summary>
        /// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger ImageUpdateTrigger { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        string ImageUpdateTriggerId { get; set; }
        /// <summary>The list of image updates that caused the build.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get; set; }
        /// <summary>The timestamp when the image update happened.</summary>
        global::System.DateTime? ImageUpdateTriggerTimestamp { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        bool? IsArchiveEnabled { get; set; }
        /// <summary>The last updated time for the run.</summary>
        global::System.DateTime? LastUpdatedTime { get; set; }
        /// <summary>The image description for the log artifact.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor LogArtifact { get; set; }
        /// <summary>The sha256-based digest of the image manifest.</summary>
        string LogArtifactDigest { get; set; }
        /// <summary>The registry login server.</summary>
        string LogArtifactRegistry { get; set; }
        /// <summary>The repository name.</summary>
        string LogArtifactRepository { get; set; }
        /// <summary>The tag name.</summary>
        string LogArtifactTag { get; set; }
        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get; set; }
        /// <summary>The platform properties against which the run will happen.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties Platform { get; set; }
        /// <summary>The OS architecture.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get; set; }
        /// <summary>The operating system type required for the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get; set; }
        /// <summary>Variant of the CPU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get; set; }
        /// <summary>The provisioning state of this task run</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        string RunErrorMessage { get; set; }
        /// <summary>The unique identifier for the run.</summary>
        string RunId { get; set; }
        /// <summary>The request (parameters) for the run</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunRequest RunRequest { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        string RunRequestAgentPoolName { get; set; }
        /// <summary>The value that indicates whether archiving is enabled for the run or not.</summary>
        bool? RunRequestIsArchiveEnabled { get; set; }
        /// <summary>
        /// The template that describes the repository and tag information for run log artifact.
        /// </summary>
        string RunRequestLogTemplate { get; set; }
        /// <summary>The type of the run request.</summary>
        string RunRequestType { get; set; }
        /// <summary>The result of this task run</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRun RunResult { get; set; }
        /// <summary>The resource ID.</summary>
        string RunResultId { get; set; }
        /// <summary>The name of the resource.</summary>
        string RunResultName { get; set; }
        /// <summary>The provisioning state of a run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? RunResultPropertiesProvisioningState { get; set; }
        /// <summary>The properties of a run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunProperties RunResultProperty { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData RunResultSystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? RunResultSystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string RunResultSystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType? RunResultSystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource modification (UTC).</summary>
        global::System.DateTime? RunResultSystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string RunResultSystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType? RunResultSystemDataLastModifiedByType { get; set; }
        /// <summary>The type of the resource.</summary>
        string RunResultType { get; set; }
        /// <summary>The type of run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        string SourceRegistryAuth { get; set; }
        /// <summary>The source trigger that caused the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor SourceTrigger { get; set; }
        /// <summary>The branch name in the repository.</summary>
        string SourceTriggerBranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        string SourceTriggerCommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        string SourceTriggerEventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        string SourceTriggerId { get; set; }
        /// <summary>The source control provider type.</summary>
        string SourceTriggerProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        string SourceTriggerPullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        string SourceTriggerRepositoryUrl { get; set; }
        /// <summary>The time the run started.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The task against which run was scheduled.</summary>
        string Task { get; set; }
        /// <summary>The timer trigger that caused the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor TimerTrigger { get; set; }
        /// <summary>The timer trigger name that caused the run.</summary>
        string TimerTriggerName { get; set; }
        /// <summary>The occurrence that triggered the run.</summary>
        string TimerTriggerScheduleOccurrence { get; set; }
        /// <summary>The update trigger token passed for the Run.</summary>
        string UpdateTriggerToken { get; set; }

    }
}