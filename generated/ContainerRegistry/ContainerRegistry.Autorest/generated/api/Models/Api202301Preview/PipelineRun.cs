// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>An object that represents a pipeline run for a container registry.</summary>
    public partial class PipelineRun :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRun,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ProxyResource();

        /// <summary>
        /// How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ForceUpdateTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ForceUpdateTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ForceUpdateTag = value ?? null; }

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.PipelineRunProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunRequest Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.Request { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).Request; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).Request = value; }

        /// <summary>Internal Acessors for RequestSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunSourceProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.RequestSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestSource = value; }

        /// <summary>Internal Acessors for RequestTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunTargetProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.RequestTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestTarget = value; }

        /// <summary>Internal Acessors for Response</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponse Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.Response { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).Response; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).Response = value; }

        /// <summary>Internal Acessors for ResponseProgress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.ResponseProgress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseProgress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseProgress = value; }

        /// <summary>Internal Acessors for ResponseSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.ResponseSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseSource = value; }

        /// <summary>Internal Acessors for ResponseTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.ResponseTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTarget = value; }

        /// <summary>Internal Acessors for ResponseTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.ResponseTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTrigger = value; }

        /// <summary>Internal Acessors for TriggerSourceTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineSourceTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunInternal.TriggerSourceTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TriggerSourceTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TriggerSourceTrigger = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>The percentage complete of the copy operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ProgressPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ProgressPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ProgressPercentage = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunProperties _property;

        /// <summary>The properties of a pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.PipelineRunProperties()); set => this._property = value; }

        /// <summary>The provisioning state of a pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// List of source artifacts to be transferred by the pipeline.
        /// Specify an image by repository ('hello-world'). This will use the 'latest' tag.
        /// Specify an image by tag ('hello-world:latest').
        /// Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string[] RequestArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestArtifact = value ?? null /* arrayOf */; }

        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RequestCatalogDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestCatalogDigest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestCatalogDigest = value ?? null; }

        /// <summary>The resource ID of the pipeline to run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string RequestPipelineResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestPipelineResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestPipelineResourceId = value ?? null; }

        /// <summary>The type of the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunSourceType? RequestSourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestSourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestSourceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunSourceType)""); }

        /// <summary>The type of the target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunTargetType? RequestTargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestTargetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).RequestTargetType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunTargetType)""); }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ResponseCatalogDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseCatalogDigest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseCatalogDigest = value ?? null; }

        /// <summary>The time the pipeline run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ResponseFinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseFinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseFinishTime = value ?? default(global::System.DateTime); }

        /// <summary>The artifacts imported in the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string[] ResponseImportedArtifact { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseImportedArtifact; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseImportedArtifact = value ?? null /* arrayOf */; }

        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ResponsePipelineRunErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponsePipelineRunErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponsePipelineRunErrorMessage = value ?? null; }

        /// <summary>The type of source for the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? ResponseSourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseSourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseSourceType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType)""); }

        /// <summary>The time the pipeline run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ResponseStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The current status of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ResponseStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseStatus = value ?? null; }

        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ResponseTargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTargetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).ResponseTargetType = value ?? null; }

        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceKeyVaultUri = value ?? null; }

        /// <summary>The name of the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceName = value ?? null; }

        /// <summary>The timestamp when the source update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? SourceTriggerTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceTriggerTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceTriggerTimestamp = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).SourceUri = value ?? null; }

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource modification (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType)""); }

        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetKeyVaultUri = value ?? null; }

        /// <summary>The name of the target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetName = value ?? null; }

        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunPropertiesInternal)Property).TargetUri = value ?? null; }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="PipelineRun" /> instance.</summary>
        public PipelineRun()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// An object that represents a pipeline run for a container registry.
    public partial interface IPipelineRun :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResource
    {
        /// <summary>
        /// How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.",
        SerializedName = @"forceUpdateTag",
        PossibleTypes = new [] { typeof(string) })]
        string ForceUpdateTag { get; set; }
        /// <summary>The percentage complete of the copy operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage complete of the copy operation.",
        SerializedName = @"percentage",
        PossibleTypes = new [] { typeof(string) })]
        string ProgressPercentage { get; set; }
        /// <summary>The provisioning state of a pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of a pipeline run.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// List of source artifacts to be transferred by the pipeline.
        /// Specify an image by repository ('hello-world'). This will use the 'latest' tag.
        /// Specify an image by tag ('hello-world:latest').
        /// Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of source artifacts to be transferred by the pipeline.
        Specify an image by repository ('hello-world'). This will use the 'latest' tag.
        Specify an image by tag ('hello-world:latest').
        Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').",
        SerializedName = @"artifacts",
        PossibleTypes = new [] { typeof(string) })]
        string[] RequestArtifact { get; set; }
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest of the tar used to transfer the artifacts.",
        SerializedName = @"catalogDigest",
        PossibleTypes = new [] { typeof(string) })]
        string RequestCatalogDigest { get; set; }
        /// <summary>The resource ID of the pipeline to run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the pipeline to run.",
        SerializedName = @"pipelineResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RequestPipelineResourceId { get; set; }
        /// <summary>The type of the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the source.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunSourceType? RequestSourceType { get; set; }
        /// <summary>The type of the target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the target.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunTargetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunTargetType? RequestTargetType { get; set; }
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest of the tar used to transfer the artifacts.",
        SerializedName = @"catalogDigest",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseCatalogDigest { get; set; }
        /// <summary>The time the pipeline run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the pipeline run finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ResponseFinishTime { get; set; }
        /// <summary>The artifacts imported in the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artifacts imported in the pipeline run.",
        SerializedName = @"importedArtifacts",
        PossibleTypes = new [] { typeof(string) })]
        string[] ResponseImportedArtifact { get; set; }
        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed error message for the pipeline run in the case of failure.",
        SerializedName = @"pipelineRunErrorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ResponsePipelineRunErrorMessage { get; set; }
        /// <summary>The type of source for the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of source for the import pipeline.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? ResponseSourceType { get; set; }
        /// <summary>The time the pipeline run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the pipeline run started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ResponseStartTime { get; set; }
        /// <summary>The current status of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the pipeline run.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseStatus { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of target for the export pipeline.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseTargetType { get; set; }
        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"They key vault secret uri to obtain the source storage SAS token.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceKeyVaultUri { get; set; }
        /// <summary>The name of the source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the source.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceName { get; set; }
        /// <summary>The timestamp when the source update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when the source update happened.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SourceTriggerTimestamp { get; set; }
        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source uri of the import pipeline.
        When 'AzureStorageBlob': ""https://accountName.blob.core.windows.net/containerName/blobName""
        When 'AzureStorageBlobContainer': ""https://accountName.blob.core.windows.net/containerName""",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceUri { get; set; }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"They key vault secret uri to obtain the target storage SAS token.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetKeyVaultUri { get; set; }
        /// <summary>The name of the target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the target.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TargetName { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target uri of the export pipeline.
        When 'AzureStorageBlob': ""https://accountName.blob.core.windows.net/containerName/blobName""
        When 'AzureStorageBlobContainer':  ""https://accountName.blob.core.windows.net/containerName""",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetUri { get; set; }

    }
    /// An object that represents a pipeline run for a container registry.
    internal partial interface IPipelineRunInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IProxyResourceInternal
    {
        /// <summary>
        /// How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
        /// </summary>
        string ForceUpdateTag { get; set; }
        /// <summary>The percentage complete of the copy operation.</summary>
        string ProgressPercentage { get; set; }
        /// <summary>The properties of a pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunProperties Property { get; set; }
        /// <summary>The provisioning state of a pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The request parameters for a pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunRequest Request { get; set; }
        /// <summary>
        /// List of source artifacts to be transferred by the pipeline.
        /// Specify an image by repository ('hello-world'). This will use the 'latest' tag.
        /// Specify an image by tag ('hello-world:latest').
        /// Specify an image by sha256-based manifest digest ('hello-world@sha256:abc123').
        /// </summary>
        string[] RequestArtifact { get; set; }
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        string RequestCatalogDigest { get; set; }
        /// <summary>The resource ID of the pipeline to run.</summary>
        string RequestPipelineResourceId { get; set; }
        /// <summary>The source properties of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunSourceProperties RequestSource { get; set; }
        /// <summary>The type of the source.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunSourceType? RequestSourceType { get; set; }
        /// <summary>The target properties of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunTargetProperties RequestTarget { get; set; }
        /// <summary>The type of the target.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineRunTargetType? RequestTargetType { get; set; }
        /// <summary>The response of a pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponse Response { get; set; }
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        string ResponseCatalogDigest { get; set; }
        /// <summary>The time the pipeline run finished.</summary>
        global::System.DateTime? ResponseFinishTime { get; set; }
        /// <summary>The artifacts imported in the pipeline run.</summary>
        string[] ResponseImportedArtifact { get; set; }
        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        string ResponsePipelineRunErrorMessage { get; set; }
        /// <summary>The current progress of the copy operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties ResponseProgress { get; set; }
        /// <summary>The source of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties ResponseSource { get; set; }
        /// <summary>The type of source for the import pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? ResponseSourceType { get; set; }
        /// <summary>The time the pipeline run started.</summary>
        global::System.DateTime? ResponseStartTime { get; set; }
        /// <summary>The current status of the pipeline run.</summary>
        string ResponseStatus { get; set; }
        /// <summary>The target of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties ResponseTarget { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        string ResponseTargetType { get; set; }
        /// <summary>The trigger that caused the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor ResponseTrigger { get; set; }
        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        string SourceKeyVaultUri { get; set; }
        /// <summary>The name of the source.</summary>
        string SourceName { get; set; }
        /// <summary>The timestamp when the source update happened.</summary>
        global::System.DateTime? SourceTriggerTimestamp { get; set; }
        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        string SourceUri { get; set; }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        string TargetKeyVaultUri { get; set; }
        /// <summary>The name of the target.</summary>
        string TargetName { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        string TargetUri { get; set; }
        /// <summary>The source trigger that caused the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineSourceTriggerDescriptor TriggerSourceTrigger { get; set; }

    }
}