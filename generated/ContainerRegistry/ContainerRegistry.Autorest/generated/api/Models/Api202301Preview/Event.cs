// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The event for a webhook.</summary>
    public partial class Event :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEvent,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfo"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfo __eventInfo = new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.EventInfo();

        /// <summary>
        /// The subject or username associated with the request context that generated the event.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ActorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ActorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ActorName = value ?? null; }

        /// <summary>The action that encompasses the provided event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 1)]
        public string ContentAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentAction = value ?? null; }

        /// <summary>The event ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ContentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentId = value ?? null; }

        /// <summary>The time at which the event occurred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 2)]
        public global::System.DateTime? ContentTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentTimestamp = value ?? default(global::System.DateTime); }

        /// <summary>The event ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 0)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfoInternal)__eventInfo).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfoInternal)__eventInfo).Id = value ?? null; }

        /// <summary>Internal Acessors for ContentActor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.ContentActor { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentActor; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentActor = value; }

        /// <summary>Internal Acessors for ContentRequest</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRequest Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.ContentRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentRequest = value; }

        /// <summary>Internal Acessors for ContentSource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISource Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.ContentSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentSource = value; }

        /// <summary>Internal Acessors for ContentTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITarget Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.ContentTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).ContentTarget = value; }

        /// <summary>Internal Acessors for RequestMessage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessage Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.RequestMessage { get => (this._requestMessage = this._requestMessage ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.EventRequestMessage()); set { {_requestMessage = value;} } }

        /// <summary>Internal Acessors for RequestMessageContent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventContent Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.RequestMessageContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Content; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Content = value; }

        /// <summary>Internal Acessors for ResponseMessage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessage Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInternal.ResponseMessage { get => (this._responseMessage = this._responseMessage ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.EventResponseMessage()); set { {_responseMessage = value;} } }

        /// <summary>
        /// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the
        /// standard http request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestAddr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestAddr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestAddr = value ?? null; }

        /// <summary>
        /// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestHost; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestHost = value ?? null; }

        /// <summary>The ID of the request that initiated the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestId = value ?? null; }

        /// <summary>Backing field for <see cref="RequestMessage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessage _requestMessage;

        /// <summary>The event request message sent to the service URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessage RequestMessage { get => (this._requestMessage = this._requestMessage ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.EventRequestMessage()); set => this._requestMessage = value; }

        /// <summary>The headers of the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageHeaders RequestMessageHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Header; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Header = value ?? null /* model class */; }

        /// <summary>The HTTP method used to send the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestMessageMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Method; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Method = value ?? null; }

        /// <summary>The URI used to send the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestMessageRequestUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestUri = value ?? null; }

        /// <summary>The HTTP message version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestMessageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).Version = value ?? null; }

        /// <summary>The request method that generated the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestMethod = value ?? null; }

        /// <summary>The user agent header of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string RequestUseragent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestUseragent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).RequestUseragent = value ?? null; }

        /// <summary>Backing field for <see cref="ResponseMessage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessage _responseMessage;

        /// <summary>The event response message received from the service URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessage ResponseMessage { get => (this._responseMessage = this._responseMessage ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.EventResponseMessage()); set => this._responseMessage = value; }

        /// <summary>The content of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ResponseMessageContent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Content; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Content = value ?? null; }

        /// <summary>The headers of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageHeaders ResponseMessageHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Header; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Header = value ?? null /* model class */; }

        /// <summary>The reason phrase of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ResponseMessageReasonPhrase { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).ReasonPhrase; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).ReasonPhrase = value ?? null; }

        /// <summary>The status code of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 3)]
        public string ResponseMessageStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).StatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).StatusCode = value ?? null; }

        /// <summary>The HTTP message version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ResponseMessageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageInternal)ResponseMessage).Version = value ?? null; }

        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string SourceAddr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).SourceAddr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).SourceAddr = value ?? null; }

        /// <summary>The running instance of an application. Changes after each restart.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string SourceInstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).SourceInstanceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).SourceInstanceId = value ?? null; }

        /// <summary>
        /// The digest of the content, as defined by the Registry V2 HTTP API Specification.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetDigest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetDigest = value ?? null; }

        /// <summary>The number of bytes of the content. Same as Size field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public long? TargetLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetLength; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetLength = value ?? default(long); }

        /// <summary>The MIME type of the referenced object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetMediaType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetMediaType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetMediaType = value ?? null; }

        /// <summary>The name of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetName = value ?? null; }

        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetRepository; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetRepository = value ?? null; }

        /// <summary>The number of bytes of the content. Same as Length field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public long? TargetSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetSize = value ?? default(long); }

        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetTag = value ?? null; }

        /// <summary>The direct URL to the content.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetUrl = value ?? null; }

        /// <summary>The version of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string TargetVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageInternal)RequestMessage).TargetVersion = value ?? null; }

        /// <summary>Creates an new <see cref="Event" /> instance.</summary>
        public Event()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__eventInfo), __eventInfo);
            await eventListener.AssertObjectIsValid(nameof(__eventInfo), __eventInfo);
        }
    }
    /// The event for a webhook.
    public partial interface IEvent :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfo
    {
        /// <summary>
        /// The subject or username associated with the request context that generated the event.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subject or username associated with the request context that generated the event.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ActorName { get; set; }
        /// <summary>The action that encompasses the provided event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The action that encompasses the provided event.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(string) })]
        string ContentAction { get; set; }
        /// <summary>The event ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ContentId { get; set; }
        /// <summary>The time at which the event occurred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time at which the event occurred.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ContentTimestamp { get; set; }
        /// <summary>
        /// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the
        /// standard http request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.",
        SerializedName = @"addr",
        PossibleTypes = new [] { typeof(string) })]
        string RequestAddr { get; set; }
        /// <summary>
        /// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string RequestHost { get; set; }
        /// <summary>The ID of the request that initiated the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the request that initiated the event.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RequestId { get; set; }
        /// <summary>The headers of the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The headers of the event request message.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageHeaders) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageHeaders RequestMessageHeader { get; set; }
        /// <summary>The HTTP method used to send the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP method used to send the event request message.",
        SerializedName = @"method",
        PossibleTypes = new [] { typeof(string) })]
        string RequestMessageMethod { get; set; }
        /// <summary>The URI used to send the event request message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URI used to send the event request message.",
        SerializedName = @"requestUri",
        PossibleTypes = new [] { typeof(string) })]
        string RequestMessageRequestUri { get; set; }
        /// <summary>The HTTP message version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP message version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string RequestMessageVersion { get; set; }
        /// <summary>The request method that generated the event.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The request method that generated the event.",
        SerializedName = @"method",
        PossibleTypes = new [] { typeof(string) })]
        string RequestMethod { get; set; }
        /// <summary>The user agent header of the request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user agent header of the request.",
        SerializedName = @"useragent",
        PossibleTypes = new [] { typeof(string) })]
        string RequestUseragent { get; set; }
        /// <summary>The content of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The content of the event response message.",
        SerializedName = @"content",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseMessageContent { get; set; }
        /// <summary>The headers of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The headers of the event response message.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageHeaders) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageHeaders ResponseMessageHeader { get; set; }
        /// <summary>The reason phrase of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reason phrase of the event response message.",
        SerializedName = @"reasonPhrase",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseMessageReasonPhrase { get; set; }
        /// <summary>The status code of the event response message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status code of the event response message.",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseMessageStatusCode { get; set; }
        /// <summary>The HTTP message version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HTTP message version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ResponseMessageVersion { get; set; }
        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.",
        SerializedName = @"addr",
        PossibleTypes = new [] { typeof(string) })]
        string SourceAddr { get; set; }
        /// <summary>The running instance of an application. Changes after each restart.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The running instance of an application. Changes after each restart.",
        SerializedName = @"instanceID",
        PossibleTypes = new [] { typeof(string) })]
        string SourceInstanceId { get; set; }
        /// <summary>
        /// The digest of the content, as defined by the Registry V2 HTTP API Specification.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest of the content, as defined by the Registry V2 HTTP API Specification.",
        SerializedName = @"digest",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDigest { get; set; }
        /// <summary>The number of bytes of the content. Same as Size field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of bytes of the content. Same as Size field.",
        SerializedName = @"length",
        PossibleTypes = new [] { typeof(long) })]
        long? TargetLength { get; set; }
        /// <summary>The MIME type of the referenced object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MIME type of the referenced object.",
        SerializedName = @"mediaType",
        PossibleTypes = new [] { typeof(string) })]
        string TargetMediaType { get; set; }
        /// <summary>The name of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the artifact.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string TargetName { get; set; }
        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository name.",
        SerializedName = @"repository",
        PossibleTypes = new [] { typeof(string) })]
        string TargetRepository { get; set; }
        /// <summary>The number of bytes of the content. Same as Length field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of bytes of the content. Same as Length field.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(long) })]
        long? TargetSize { get; set; }
        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tag name.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string TargetTag { get; set; }
        /// <summary>The direct URL to the content.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The direct URL to the content.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string TargetUrl { get; set; }
        /// <summary>The version of the artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the artifact.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVersion { get; set; }

    }
    /// The event for a webhook.
    internal partial interface IEventInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventInfoInternal
    {
        /// <summary>
        /// The subject or username associated with the request context that generated the event.
        /// </summary>
        string ActorName { get; set; }
        /// <summary>The action that encompasses the provided event.</summary>
        string ContentAction { get; set; }
        /// <summary>
        /// The agent that initiated the event. For most situations, this could be from the authorization context of the request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActor ContentActor { get; set; }
        /// <summary>The event ID.</summary>
        string ContentId { get; set; }
        /// <summary>The request that generated the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRequest ContentRequest { get; set; }
        /// <summary>
        /// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates
        /// it.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISource ContentSource { get; set; }
        /// <summary>The target of the event.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITarget ContentTarget { get; set; }
        /// <summary>The time at which the event occurred.</summary>
        global::System.DateTime? ContentTimestamp { get; set; }
        /// <summary>
        /// The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the
        /// standard http request.
        /// </summary>
        string RequestAddr { get; set; }
        /// <summary>
        /// The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
        /// </summary>
        string RequestHost { get; set; }
        /// <summary>The ID of the request that initiated the event.</summary>
        string RequestId { get; set; }
        /// <summary>The event request message sent to the service URI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessage RequestMessage { get; set; }
        /// <summary>The content of the event request message.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventContent RequestMessageContent { get; set; }
        /// <summary>The headers of the event request message.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventRequestMessageHeaders RequestMessageHeader { get; set; }
        /// <summary>The HTTP method used to send the event request message.</summary>
        string RequestMessageMethod { get; set; }
        /// <summary>The URI used to send the event request message.</summary>
        string RequestMessageRequestUri { get; set; }
        /// <summary>The HTTP message version.</summary>
        string RequestMessageVersion { get; set; }
        /// <summary>The request method that generated the event.</summary>
        string RequestMethod { get; set; }
        /// <summary>The user agent header of the request.</summary>
        string RequestUseragent { get; set; }
        /// <summary>The event response message received from the service URI.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessage ResponseMessage { get; set; }
        /// <summary>The content of the event response message.</summary>
        string ResponseMessageContent { get; set; }
        /// <summary>The headers of the event response message.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEventResponseMessageHeaders ResponseMessageHeader { get; set; }
        /// <summary>The reason phrase of the event response message.</summary>
        string ResponseMessageReasonPhrase { get; set; }
        /// <summary>The status code of the event response message.</summary>
        string ResponseMessageStatusCode { get; set; }
        /// <summary>The HTTP message version.</summary>
        string ResponseMessageVersion { get; set; }
        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        string SourceAddr { get; set; }
        /// <summary>The running instance of an application. Changes after each restart.</summary>
        string SourceInstanceId { get; set; }
        /// <summary>
        /// The digest of the content, as defined by the Registry V2 HTTP API Specification.
        /// </summary>
        string TargetDigest { get; set; }
        /// <summary>The number of bytes of the content. Same as Size field.</summary>
        long? TargetLength { get; set; }
        /// <summary>The MIME type of the referenced object.</summary>
        string TargetMediaType { get; set; }
        /// <summary>The name of the artifact.</summary>
        string TargetName { get; set; }
        /// <summary>The repository name.</summary>
        string TargetRepository { get; set; }
        /// <summary>The number of bytes of the content. Same as Length field.</summary>
        long? TargetSize { get; set; }
        /// <summary>The tag name.</summary>
        string TargetTag { get; set; }
        /// <summary>The direct URL to the content.</summary>
        string TargetUrl { get; set; }
        /// <summary>The version of the artifact.</summary>
        string TargetVersion { get; set; }

    }
}