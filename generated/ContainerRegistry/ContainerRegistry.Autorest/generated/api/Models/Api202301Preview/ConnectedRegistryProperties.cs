// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties of a connected registry.</summary>
    public partial class ConnectedRegistryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Activation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationProperties _activation;

        /// <summary>The activation properties of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationProperties Activation { get => (this._activation = this._activation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ActivationProperties()); }

        /// <summary>The activation status of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ActivationStatus? ActivationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationPropertiesInternal)Activation).Status; }

        /// <summary>Indicates the location of the certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string CertificateLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateLocation; }

        /// <summary>The type of certificate location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? CertificateType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateType; }

        /// <summary>Backing field for <see cref="ClientTokenId" /> property.</summary>
        private string[] _clientTokenId;

        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] ClientTokenId { get => this._clientTokenId; set => this._clientTokenId = value; }

        /// <summary>Backing field for <see cref="ConnectionState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState? _connectionState;

        /// <summary>The current connection state of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState? ConnectionState { get => this._connectionState; }

        /// <summary>Backing field for <see cref="LastActivityTime" /> property.</summary>
        private global::System.DateTime? _lastActivityTime;

        /// <summary>The last activity time of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastActivityTime { get => this._lastActivityTime; }

        /// <summary>Backing field for <see cref="Logging" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties _logging;

        /// <summary>The logging properties of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoggingProperties()); set => this._logging = value; }

        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).AuditLogStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).AuditLogStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus)""); }

        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).LogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).LogLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel)""); }

        /// <summary>Backing field for <see cref="LoginServer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerProperties _loginServer;

        /// <summary>The login server properties of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerProperties LoginServer { get => (this._loginServer = this._loginServer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoginServerProperties()); set => this._loginServer = value; }

        /// <summary>The host of the connected registry. Can be FQDN or IP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LoginServerHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).Host; }

        /// <summary>Internal Acessors for Activation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.Activation { get => (this._activation = this._activation ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ActivationProperties()); set { {_activation = value;} } }

        /// <summary>Internal Acessors for ActivationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ActivationStatus? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.ActivationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationPropertiesInternal)Activation).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationPropertiesInternal)Activation).Status = value; }

        /// <summary>Internal Acessors for CertificateLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.CertificateLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateLocation = value; }

        /// <summary>Internal Acessors for CertificateType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.CertificateType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).CertificateType = value; }

        /// <summary>Internal Acessors for ConnectionState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.ConnectionState { get => this._connectionState; set { {_connectionState = value;} } }

        /// <summary>Internal Acessors for LastActivityTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.LastActivityTime { get => this._lastActivityTime; set { {_lastActivityTime = value;} } }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoggingProperties()); set { {_logging = value;} } }

        /// <summary>Internal Acessors for LoginServer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.LoginServer { get => (this._loginServer = this._loginServer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoginServerProperties()); set { {_loginServer = value;} } }

        /// <summary>Internal Acessors for LoginServerHost</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.LoginServerHost { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).Host; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).Host = value; }

        /// <summary>Internal Acessors for LoginServerTl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITlsProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.LoginServerTl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).Tl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).Tl = value; }

        /// <summary>Internal Acessors for Parent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.Parent { get => (this._parent = this._parent ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ParentProperties()); set { {_parent = value;} } }

        /// <summary>Internal Acessors for ParentSyncProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.ParentSyncProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncProperty = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StatusDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties[] Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.StatusDetail { get => this._statusDetail; set { {_statusDetail = value;} } }

        /// <summary>Internal Acessors for SyncPropertyGatewayEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.SyncPropertyGatewayEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyGatewayEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyGatewayEndpoint = value; }

        /// <summary>Internal Acessors for SyncPropertyLastSyncTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.SyncPropertyLastSyncTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyLastSyncTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyLastSyncTime = value; }

        /// <summary>Internal Acessors for TlCertificate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITlsCertificateProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.TlCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).TlCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).TlCertificate = value; }

        /// <summary>Internal Acessors for TlStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.TlStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).TlStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).TlStatus = value; }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryPropertiesInternal.Version { get => this._version; set { {_version = value;} } }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectedRegistryMode _mode;

        /// <summary>
        /// The mode of the connected registry resource that indicates the permissions of the registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectedRegistryMode Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="NotificationsList" /> property.</summary>
        private string[] _notificationsList;

        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] NotificationsList { get => this._notificationsList; set => this._notificationsList = value; }

        /// <summary>Backing field for <see cref="Parent" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentProperties _parent;

        /// <summary>The parent of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentProperties Parent { get => (this._parent = this._parent ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ParentProperties()); set => this._parent = value; }

        /// <summary>
        /// The resource ID of the parent to which the connected registry will be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ParentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).Id = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="StatusDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties[] _statusDetail;

        /// <summary>The list of current statuses of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties[] StatusDetail { get => this._statusDetail; }

        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SyncPropertyGatewayEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyGatewayEndpoint; }

        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? SyncPropertyLastSyncTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyLastSyncTime; }

        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.TimeSpan SyncPropertyMessageTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyMessageTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyMessageTtl = value ; }

        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SyncPropertySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertySchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertySchedule = value ?? null; }

        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? SyncPropertySyncWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertySyncWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertySyncWindow = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SyncPropertyTokenId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyTokenId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentPropertiesInternal)Parent).SyncPropertyTokenId = value ; }

        /// <summary>Indicates whether HTTPS is enabled for the login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? TlStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerPropertiesInternal)LoginServer).TlStatus; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>The current version of ACR runtime on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Version { get => this._version; }

        /// <summary>Creates an new <see cref="ConnectedRegistryProperties" /> instance.</summary>
        public ConnectedRegistryProperties()
        {

        }
    }
    /// The properties of a connected registry.
    public partial interface IConnectedRegistryProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The activation status of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The activation status of the connected registry.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ActivationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ActivationStatus? ActivationStatus { get;  }
        /// <summary>Indicates the location of the certificates.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates the location of the certificates.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateLocation { get;  }
        /// <summary>The type of certificate location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of certificate location.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? CertificateType { get;  }
        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the ACR token resource IDs used to authenticate clients to the connected registry.",
        SerializedName = @"clientTokenIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClientTokenId { get; set; }
        /// <summary>The current connection state of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current connection state of the connected registry.",
        SerializedName = @"connectionState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState? ConnectionState { get;  }
        /// <summary>The last activity time of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last activity time of the connected registry.",
        SerializedName = @"lastActivityTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastActivityTime { get;  }
        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether audit logs are enabled on the connected registry.",
        SerializedName = @"auditLogStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get; set; }
        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The verbosity of logs persisted on the connected registry.",
        SerializedName = @"logLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get; set; }
        /// <summary>The host of the connected registry. Can be FQDN or IP.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The host of the connected registry. Can be FQDN or IP.",
        SerializedName = @"host",
        PossibleTypes = new [] { typeof(string) })]
        string LoginServerHost { get;  }
        /// <summary>
        /// The mode of the connected registry resource that indicates the permissions of the registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The mode of the connected registry resource that indicates the permissions of the registry.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectedRegistryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectedRegistryMode Mode { get; set; }
        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of notifications subscription information for the connected registry.",
        SerializedName = @"notificationsList",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationsList { get; set; }
        /// <summary>
        /// The resource ID of the parent to which the connected registry will be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the parent to which the connected registry will be associated.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ParentId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The list of current statuses of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of current statuses of the connected registry.",
        SerializedName = @"statusDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties[] StatusDetail { get;  }
        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The gateway endpoint used by the connected registry to communicate with its parent.",
        SerializedName = @"gatewayEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string SyncPropertyGatewayEndpoint { get;  }
        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time a sync occurred between the connected registry and its parent.",
        SerializedName = @"lastSyncTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SyncPropertyLastSyncTime { get;  }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"messageTtl",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan SyncPropertyMessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cron expression indicating the schedule that the connected registry will sync with its parent.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string SyncPropertySchedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"syncWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SyncPropertySyncWindow { get; set; }
        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.",
        SerializedName = @"tokenId",
        PossibleTypes = new [] { typeof(string) })]
        string SyncPropertyTokenId { get; set; }
        /// <summary>Indicates whether HTTPS is enabled for the login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether HTTPS is enabled for the login server.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? TlStatus { get;  }
        /// <summary>The current version of ACR runtime on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current version of ACR runtime on the connected registry.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// The properties of a connected registry.
    internal partial interface IConnectedRegistryPropertiesInternal

    {
        /// <summary>The activation properties of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IActivationProperties Activation { get; set; }
        /// <summary>The activation status of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ActivationStatus? ActivationStatus { get; set; }
        /// <summary>Indicates the location of the certificates.</summary>
        string CertificateLocation { get; set; }
        /// <summary>The type of certificate location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CertificateType? CertificateType { get; set; }
        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        string[] ClientTokenId { get; set; }
        /// <summary>The current connection state of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectionState? ConnectionState { get; set; }
        /// <summary>The last activity time of the connected registry.</summary>
        global::System.DateTime? LastActivityTime { get; set; }
        /// <summary>The logging properties of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Logging { get; set; }
        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get; set; }
        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get; set; }
        /// <summary>The login server properties of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoginServerProperties LoginServer { get; set; }
        /// <summary>The host of the connected registry. Can be FQDN or IP.</summary>
        string LoginServerHost { get; set; }
        /// <summary>The TLS properties of the connected registry login server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITlsProperties LoginServerTl { get; set; }
        /// <summary>
        /// The mode of the connected registry resource that indicates the permissions of the registry.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ConnectedRegistryMode Mode { get; set; }
        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        string[] NotificationsList { get; set; }
        /// <summary>The parent of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IParentProperties Parent { get; set; }
        /// <summary>
        /// The resource ID of the parent to which the connected registry will be associated.
        /// </summary>
        string ParentId { get; set; }
        /// <summary>The sync properties of the connected registry with its parent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncProperties ParentSyncProperty { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The list of current statuses of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatusDetailProperties[] StatusDetail { get; set; }
        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        string SyncPropertyGatewayEndpoint { get; set; }
        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        global::System.DateTime? SyncPropertyLastSyncTime { get; set; }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        global::System.TimeSpan SyncPropertyMessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        string SyncPropertySchedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        global::System.TimeSpan? SyncPropertySyncWindow { get; set; }
        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        string SyncPropertyTokenId { get; set; }
        /// <summary>The certificate used to configure HTTPS for the login server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITlsCertificateProperties TlCertificate { get; set; }
        /// <summary>Indicates whether HTTPS is enabled for the login server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TlsStatus? TlStatus { get; set; }
        /// <summary>The current version of ACR runtime on the connected registry.</summary>
        string Version { get; set; }

    }
}