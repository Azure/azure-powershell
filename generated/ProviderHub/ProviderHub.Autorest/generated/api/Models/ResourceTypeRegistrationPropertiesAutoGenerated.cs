// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Extensions;

    public partial class ResourceTypeRegistrationPropertiesAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal
    {

        /// <summary>Backing field for <see cref="AllowedUnauthorizedAction" /> property.</summary>
        private System.Collections.Generic.List<string> _allowedUnauthorizedAction;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AllowedUnauthorizedAction { get => this._allowedUnauthorizedAction; set => this._allowedUnauthorizedAction = value; }

        /// <summary>Backing field for <see cref="AuthorizationActionMapping" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> _authorizationActionMapping;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get => this._authorizationActionMapping; set => this._authorizationActionMapping = value; }

        /// <summary>Backing field for <see cref="CheckNameAvailabilitySpecification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications _checkNameAvailabilitySpecification;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications CheckNameAvailabilitySpecification { get => (this._checkNameAvailabilitySpecification = this._checkNameAvailabilitySpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications()); set => this._checkNameAvailabilitySpecification = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ICheckNameAvailabilitySpecificationsInternal)CheckNameAvailabilitySpecification).EnableDefaultValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ICheckNameAvailabilitySpecificationsInternal)CheckNameAvailabilitySpecification).EnableDefaultValidation = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ICheckNameAvailabilitySpecificationsInternal)CheckNameAvailabilitySpecification).ResourceTypesWithCustomValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ICheckNameAvailabilitySpecificationsInternal)CheckNameAvailabilitySpecification).ResourceTypesWithCustomValidation = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DefaultApiVersion" /> property.</summary>
        private string _defaultApiVersion;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string DefaultApiVersion { get => this._defaultApiVersion; set => this._defaultApiVersion = value; }

        /// <summary>Backing field for <see cref="DisallowedActionVerb" /> property.</summary>
        private System.Collections.Generic.List<string> _disallowedActionVerb;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> DisallowedActionVerb { get => this._disallowedActionVerb; set => this._disallowedActionVerb = value; }

        /// <summary>Backing field for <see cref="EnableAsyncOperation" /> property.</summary>
        private bool? _enableAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public bool? EnableAsyncOperation { get => this._enableAsyncOperation; set => this._enableAsyncOperation = value; }

        /// <summary>Backing field for <see cref="EnableThirdPartyS2S" /> property.</summary>
        private bool? _enableThirdPartyS2S;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public bool? EnableThirdPartyS2S { get => this._enableThirdPartyS2S; set => this._enableThirdPartyS2S = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> _endpoint;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> _extendedLocation;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get => this._extendedLocation; set => this._extendedLocation = value; }

        /// <summary>Backing field for <see cref="ExtensionOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions _extensionOption;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions ExtensionOption { get => (this._extensionOption = this._extensionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesExtensionOptions()); set => this._extensionOption = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBeginRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBeginRequest = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBeginResponse; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBeginResponse = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string FeatureRuleRequiredFeaturesPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IFeaturesRuleInternal)FeaturesRule).RequiredFeaturesPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IFeaturesRuleInternal)FeaturesRule).RequiredFeaturesPolicy = value ?? null; }

        /// <summary>Backing field for <see cref="FeaturesRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule _featuresRule;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule FeaturesRule { get => (this._featuresRule = this._featuresRule ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesFeaturesRule()); set => this._featuresRule = value; }

        /// <summary>Backing field for <see cref="IdentityManagement" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement _identityManagement;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement IdentityManagement { get => (this._identityManagement = this._identityManagement ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesIdentityManagement()); set => this._identityManagement = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string IdentityManagementApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IIdentityManagementPropertiesInternal)IdentityManagement).ApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IIdentityManagementPropertiesInternal)IdentityManagement).ApplicationId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string IdentityManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IIdentityManagementPropertiesInternal)IdentityManagement).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IIdentityManagementPropertiesInternal)IdentityManagement).Type = value ?? null; }

        /// <summary>Backing field for <see cref="IsPureProxy" /> property.</summary>
        private bool? _isPureProxy;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public bool? IsPureProxy { get => this._isPureProxy; set => this._isPureProxy = value; }

        /// <summary>Backing field for <see cref="LinkedAccessCheck" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> _linkedAccessCheck;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get => this._linkedAccessCheck; set => this._linkedAccessCheck = value; }

        /// <summary>Backing field for <see cref="LoggingRule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> _loggingRule;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get => this._loggingRule; set => this._loggingRule = value; }

        /// <summary>Backing field for <see cref="MarketplaceType" /> property.</summary>
        private string _marketplaceType;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string MarketplaceType { get => this._marketplaceType; set => this._marketplaceType = value; }

        /// <summary>Internal Acessors for CheckNameAvailabilitySpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.CheckNameAvailabilitySpecification { get => (this._checkNameAvailabilitySpecification = this._checkNameAvailabilitySpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications()); set { {_checkNameAvailabilitySpecification = value;} } }

        /// <summary>Internal Acessors for ExtensionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.ExtensionOption { get => (this._extensionOption = this._extensionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesExtensionOptions()); set { {_extensionOption = value;} } }

        /// <summary>Internal Acessors for ExtensionOptionResourceCreationBegin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.ExtensionOptionResourceCreationBegin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBegin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsInternal)ExtensionOption).ResourceCreationBegin = value ?? null /* model class */; }

        /// <summary>Internal Acessors for FeaturesRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.FeaturesRule { get => (this._featuresRule = this._featuresRule ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesFeaturesRule()); set { {_featuresRule = value;} } }

        /// <summary>Internal Acessors for IdentityManagement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.IdentityManagement { get => (this._identityManagement = this._identityManagement ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesIdentityManagement()); set { {_identityManagement = value;} } }

        /// <summary>Internal Acessors for RequestHeaderOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.RequestHeaderOption { get => (this._requestHeaderOption = this._requestHeaderOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesRequestHeaderOptions()); set { {_requestHeaderOption = value;} } }

        /// <summary>Internal Acessors for ResourceMovePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.ResourceMovePolicy { get => (this._resourceMovePolicy = this._resourceMovePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesResourceMovePolicy()); set { {_resourceMovePolicy = value;} } }

        /// <summary>Internal Acessors for SubscriptionLifecycleNotificationSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.SubscriptionLifecycleNotificationSpecification { get => (this._subscriptionLifecycleNotificationSpecification = this._subscriptionLifecycleNotificationSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications()); set { {_subscriptionLifecycleNotificationSpecification = value;} } }

        /// <summary>Internal Acessors for TemplateDeploymentOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal.TemplateDeploymentOption { get => (this._templateDeploymentOption = this._templateDeploymentOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions()); set { {_templateDeploymentOption = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="Regionality" /> property.</summary>
        private string _regionality;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string Regionality { get => this._regionality; set => this._regionality = value; }

        /// <summary>Backing field for <see cref="RequestHeaderOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions _requestHeaderOption;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions RequestHeaderOption { get => (this._requestHeaderOption = this._requestHeaderOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesRequestHeaderOptions()); set => this._requestHeaderOption = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string RequestHeaderOptionOptInHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IRequestHeaderOptionsInternal)RequestHeaderOption).OptInHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IRequestHeaderOptionsInternal)RequestHeaderOption).OptInHeader = value ?? null; }

        /// <summary>Backing field for <see cref="RequiredFeature" /> property.</summary>
        private System.Collections.Generic.List<string> _requiredFeature;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> RequiredFeature { get => this._requiredFeature; set => this._requiredFeature = value; }

        /// <summary>Backing field for <see cref="ResourceDeletionPolicy" /> property.</summary>
        private string _resourceDeletionPolicy;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string ResourceDeletionPolicy { get => this._resourceDeletionPolicy; set => this._resourceDeletionPolicy = value; }

        /// <summary>Backing field for <see cref="ResourceMovePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy _resourceMovePolicy;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy ResourceMovePolicy { get => (this._resourceMovePolicy = this._resourceMovePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesResourceMovePolicy()); set => this._resourceMovePolicy = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).CrossResourceGroupMoveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).CrossResourceGroupMoveEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).CrossSubscriptionMoveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).CrossSubscriptionMoveEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyValidationRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).ValidationRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceMovePolicyInternal)ResourceMovePolicy).ValidationRequired = value ?? default(bool); }

        /// <summary>Backing field for <see cref="RoutingType" /> property.</summary>
        private string _routingType;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string RoutingType { get => this._routingType; set => this._routingType = value; }

        /// <summary>Backing field for <see cref="ServiceTreeInfo" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> _serviceTreeInfo;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get => this._serviceTreeInfo; set => this._serviceTreeInfo = value; }

        /// <summary>
        /// Backing field for <see cref="SubscriptionLifecycleNotificationSpecification" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications _subscriptionLifecycleNotificationSpecification;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications SubscriptionLifecycleNotificationSpecification { get => (this._subscriptionLifecycleNotificationSpecification = this._subscriptionLifecycleNotificationSpecification ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications()); set => this._subscriptionLifecycleNotificationSpecification = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionLifecycleNotificationSpecificationsInternal)SubscriptionLifecycleNotificationSpecification).SoftDeleteTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionLifecycleNotificationSpecificationsInternal)SubscriptionLifecycleNotificationSpecification).SoftDeleteTtl = value ?? default(global::System.TimeSpan); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionLifecycleNotificationSpecificationsInternal)SubscriptionLifecycleNotificationSpecification).SubscriptionStateOverrideAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionLifecycleNotificationSpecificationsInternal)SubscriptionLifecycleNotificationSpecification).SubscriptionStateOverrideAction = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="SubscriptionStateRule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> _subscriptionStateRule;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get => this._subscriptionStateRule; set => this._subscriptionStateRule = value; }

        /// <summary>Backing field for <see cref="SwaggerSpecification" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> _swaggerSpecification;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get => this._swaggerSpecification; set => this._swaggerSpecification = value; }

        /// <summary>Backing field for <see cref="TemplateDeploymentOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions _templateDeploymentOption;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions TemplateDeploymentOption { get => (this._templateDeploymentOption = this._templateDeploymentOption ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptions()); set => this._templateDeploymentOption = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ITemplateDeploymentOptionsInternal)TemplateDeploymentOption).PreflightOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ITemplateDeploymentOptionsInternal)TemplateDeploymentOption).PreflightOption = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? TemplateDeploymentOptionPreflightSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ITemplateDeploymentOptionsInternal)TemplateDeploymentOption).PreflightSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ITemplateDeploymentOptionsInternal)TemplateDeploymentOption).PreflightSupported = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ThrottlingRule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> _throttlingRule;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get => this._throttlingRule; set => this._throttlingRule = value; }

        /// <summary>
        /// Creates an new <see cref="ResourceTypeRegistrationPropertiesAutoGenerated" /> instance.
        /// </summary>
        public ResourceTypeRegistrationPropertiesAutoGenerated()
        {

        }
    }
    public partial interface IResourceTypeRegistrationPropertiesAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"allowedUnauthorizedActions",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AllowedUnauthorizedAction { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"authorizationActionMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableDefaultValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"resourceTypesWithCustomValidation",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"defaultApiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultApiVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"disallowedActionVerbs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DisallowedActionVerb { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableAsyncOperation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAsyncOperation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableThirdPartyS2S",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableThirdPartyS2S { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"extendedLocations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"request",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"response",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"requiredFeaturesPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string FeatureRuleRequiredFeaturesPolicy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityManagementApplicationId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SystemAssigned", "UserAssigned", "Actor", "DelegatedResourceIdentity")]
        string IdentityManagementType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"isPureProxy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPureProxy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"linkedAccessChecks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"loggingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"marketplaceType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "AddOn", "Bypass", "Store")]
        string MarketplaceType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Accepted", "Running", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources", "TransientFailure", "RolloutInProgress")]
        string ProvisioningState { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"regionality",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Global", "Regional")]
        string Regionality { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"optInHeaders",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SignedUserToken", "ClientGroupMembership", "SignedAuxiliaryTokens", "UnboundedClientGroupMembership")]
        string RequestHeaderOptionOptInHeader { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"requiredFeatures",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RequiredFeature { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"resourceDeletionPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "CascadeDeleteAll", "CascadeDeleteProxyOnlyChildren")]
        string ResourceDeletionPolicy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"crossResourceGroupMoveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"crossSubscriptionMoveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"validationRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyValidationRequired { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"routingType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("Default", "ProxyOnly", "HostBased", "Extension", "Tenant", "Fanout", "LocationBased", "Failover", "CascadeExtension")]
        string RoutingType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"serviceTreeInfos",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"softDeleteTTL",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"subscriptionStateOverrideActions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"subscriptionStateRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"swaggerSpecifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"preflightOptions",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("None", "ContinueDeploymentOnFailure", "DefaultValidationOnly")]
        System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"preflightSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TemplateDeploymentOptionPreflightSupported { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"throttlingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get; set; }

    }
    internal partial interface IResourceTypeRegistrationPropertiesAutoGeneratedInternal

    {
        System.Collections.Generic.List<string> AllowedUnauthorizedAction { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications CheckNameAvailabilitySpecification { get; set; }

        bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get; set; }

        System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get; set; }

        string DefaultApiVersion { get; set; }

        System.Collections.Generic.List<string> DisallowedActionVerb { get; set; }

        bool? EnableAsyncOperation { get; set; }

        bool? EnableThirdPartyS2S { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions ExtensionOption { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin ExtensionOptionResourceCreationBegin { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get; set; }

        string FeatureRuleRequiredFeaturesPolicy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule FeaturesRule { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement IdentityManagement { get; set; }

        string IdentityManagementApplicationId { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SystemAssigned", "UserAssigned", "Actor", "DelegatedResourceIdentity")]
        string IdentityManagementType { get; set; }

        bool? IsPureProxy { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "AddOn", "Bypass", "Store")]
        string MarketplaceType { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Accepted", "Running", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources", "TransientFailure", "RolloutInProgress")]
        string ProvisioningState { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Global", "Regional")]
        string Regionality { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions RequestHeaderOption { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SignedUserToken", "ClientGroupMembership", "SignedAuxiliaryTokens", "UnboundedClientGroupMembership")]
        string RequestHeaderOptionOptInHeader { get; set; }

        System.Collections.Generic.List<string> RequiredFeature { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "CascadeDeleteAll", "CascadeDeleteProxyOnlyChildren")]
        string ResourceDeletionPolicy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy ResourceMovePolicy { get; set; }

        bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get; set; }

        bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get; set; }

        bool? ResourceMovePolicyValidationRequired { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("Default", "ProxyOnly", "HostBased", "Extension", "Tenant", "Fanout", "LocationBased", "Failover", "CascadeExtension")]
        string RoutingType { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications SubscriptionLifecycleNotificationSpecification { get; set; }

        global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions TemplateDeploymentOption { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("None", "ContinueDeploymentOnFailure", "DefaultValidationOnly")]
        System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get; set; }

        bool? TemplateDeploymentOptionPreflightSupported { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get; set; }

    }
}