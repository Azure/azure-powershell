// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(ResourceTypeRegistrationTypeConverter))]
    public partial class ResourceTypeRegistration
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ResourceTypeRegistration(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ResourceTypeRegistration(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ResourceTypeRegistration" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ResourceTypeRegistration" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ResourceTypeRegistration(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("RoutingType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RoutingType = (string) content.GetValueForProperty("RoutingType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RoutingType, global::System.Convert.ToString);
            }
            if (content.Contains("Regionality"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Regionality = (string) content.GetValueForProperty("Regionality",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Regionality, global::System.Convert.ToString);
            }
            if (content.Contains("MarketplaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).MarketplaceType = (string) content.GetValueForProperty("MarketplaceType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).MarketplaceType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateDeploymentOptionPreflightOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightOption = (System.Collections.Generic.List<string>) content.GetValueForProperty("TemplateDeploymentOptionPreflightOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightOption, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExtensionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions) content.GetValueForProperty("ExtensionOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesExtensionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeaturesRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeaturesRule = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule) content.GetValueForProperty("FeaturesRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeaturesRule, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesFeaturesRuleTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecification = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecification, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdentityManagement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagement = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement) content.GetValueForProperty("IdentityManagement",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagement, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesIdentityManagementTypeConverter.ConvertFrom);
            }
            if (content.Contains("CheckNameAvailabilitySpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecification = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications) content.GetValueForProperty("CheckNameAvailabilitySpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecification, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecificationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestHeaderOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions) content.GetValueForProperty("RequestHeaderOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesRequestHeaderOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TemplateDeploymentOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions) content.GetValueForProperty("TemplateDeploymentOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceMovePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicy = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy) content.GetValueForProperty("ResourceMovePolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicy, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesResourceMovePolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Endpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint>) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Endpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeEndpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("SwaggerSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SwaggerSpecification = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification>) content.GetValueForProperty("SwaggerSpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SwaggerSpecification, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SwaggerSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllowedUnauthorizedAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AllowedUnauthorizedAction = (System.Collections.Generic.List<string>) content.GetValueForProperty("AllowedUnauthorizedAction",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AllowedUnauthorizedAction, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AuthorizationActionMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AuthorizationActionMapping = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping>) content.GetValueForProperty("AuthorizationActionMapping",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AuthorizationActionMapping, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.AuthorizationActionMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("LinkedAccessCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LinkedAccessCheck = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck>) content.GetValueForProperty("LinkedAccessCheck",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LinkedAccessCheck, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.LinkedAccessCheckTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultApiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DefaultApiVersion = (string) content.GetValueForProperty("DefaultApiVersion",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DefaultApiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LoggingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule>) content.GetValueForProperty("LoggingRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LoggingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.LoggingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ThrottlingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ThrottlingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule>) content.GetValueForProperty("ThrottlingRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ThrottlingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ThrottlingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequiredFeature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequiredFeature = (System.Collections.Generic.List<string>) content.GetValueForProperty("RequiredFeature",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequiredFeature, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableAsyncOperation = (bool?) content.GetValueForProperty("EnableAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableAsyncOperation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableThirdPartyS2S"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableThirdPartyS2S = (bool?) content.GetValueForProperty("EnableThirdPartyS2S",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableThirdPartyS2S, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsPureProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IsPureProxy = (bool?) content.GetValueForProperty("IsPureProxy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IsPureProxy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DisallowedActionVerb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DisallowedActionVerb = (System.Collections.Generic.List<string>) content.GetValueForProperty("DisallowedActionVerb",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DisallowedActionVerb, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceTreeInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ServiceTreeInfo = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo>) content.GetValueForProperty("ServiceTreeInfo",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ServiceTreeInfo, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ServiceTreeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("SubscriptionStateRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionStateRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule>) content.GetValueForProperty("SubscriptionStateRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionStateRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SubscriptionStateRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtendedLocation = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions>) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtendedLocation, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ExtendedLocationOptionsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ResourceDeletionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceDeletionPolicy = (string) content.GetValueForProperty("ResourceDeletionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceDeletionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("ExtensionOptionResourceCreationBegin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBegin = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin) content.GetValueForProperty("ExtensionOptionResourceCreationBegin",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBegin, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeExtensionOptionsResourceCreationBeginTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureRuleRequiredFeaturesPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeatureRuleRequiredFeaturesPolicy = (string) content.GetValueForProperty("FeatureRuleRequiredFeaturesPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeatureRuleRequiredFeaturesPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction>) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SubscriptionStateOverrideActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl = (global::System.TimeSpan?) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("IdentityManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementType = (string) content.GetValueForProperty("IdentityManagementType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityManagementApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementApplicationId = (string) content.GetValueForProperty("IdentityManagementApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("CheckNameAvailabilitySpecificationEnableDefaultValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationEnableDefaultValidation = (bool?) content.GetValueForProperty("CheckNameAvailabilitySpecificationEnableDefaultValidation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationEnableDefaultValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation = (System.Collections.Generic.List<string>) content.GetValueForProperty("CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RequestHeaderOptionOptInHeader"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOptionOptInHeader = (string) content.GetValueForProperty("RequestHeaderOptionOptInHeader",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOptionOptInHeader, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateDeploymentOptionPreflightSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightSupported = (bool?) content.GetValueForProperty("TemplateDeploymentOptionPreflightSupported",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyValidationRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyValidationRequired = (bool?) content.GetValueForProperty("ResourceMovePolicyValidationRequired",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyValidationRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyCrossResourceGroupMoveEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossResourceGroupMoveEnabled = (bool?) content.GetValueForProperty("ResourceMovePolicyCrossResourceGroupMoveEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossResourceGroupMoveEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyCrossSubscriptionMoveEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossSubscriptionMoveEnabled = (bool?) content.GetValueForProperty("ResourceMovePolicyCrossSubscriptionMoveEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossSubscriptionMoveEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtensionOptionResourceCreationBeginRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginRequest = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExtensionOptionResourceCreationBeginRequest",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginRequest, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExtensionOptionResourceCreationBeginResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginResponse = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExtensionOptionResourceCreationBeginResponse",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginResponse, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistration"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ResourceTypeRegistration(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("RoutingType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RoutingType = (string) content.GetValueForProperty("RoutingType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RoutingType, global::System.Convert.ToString);
            }
            if (content.Contains("Regionality"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Regionality = (string) content.GetValueForProperty("Regionality",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Regionality, global::System.Convert.ToString);
            }
            if (content.Contains("MarketplaceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).MarketplaceType = (string) content.GetValueForProperty("MarketplaceType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).MarketplaceType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateDeploymentOptionPreflightOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightOption = (System.Collections.Generic.List<string>) content.GetValueForProperty("TemplateDeploymentOptionPreflightOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightOption, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExtensionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions) content.GetValueForProperty("ExtensionOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesExtensionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeaturesRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeaturesRule = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule) content.GetValueForProperty("FeaturesRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeaturesRule, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesFeaturesRuleTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecification = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecification, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecificationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IdentityManagement"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagement = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement) content.GetValueForProperty("IdentityManagement",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagement, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesIdentityManagementTypeConverter.ConvertFrom);
            }
            if (content.Contains("CheckNameAvailabilitySpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecification = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications) content.GetValueForProperty("CheckNameAvailabilitySpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecification, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecificationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("RequestHeaderOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions) content.GetValueForProperty("RequestHeaderOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesRequestHeaderOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TemplateDeploymentOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOption = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions) content.GetValueForProperty("TemplateDeploymentOption",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOption, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesTemplateDeploymentOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceMovePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicy = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy) content.GetValueForProperty("ResourceMovePolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicy, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationPropertiesResourceMovePolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Endpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint>) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).Endpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeEndpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("SwaggerSpecification"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SwaggerSpecification = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification>) content.GetValueForProperty("SwaggerSpecification",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SwaggerSpecification, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SwaggerSpecificationTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllowedUnauthorizedAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AllowedUnauthorizedAction = (System.Collections.Generic.List<string>) content.GetValueForProperty("AllowedUnauthorizedAction",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AllowedUnauthorizedAction, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AuthorizationActionMapping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AuthorizationActionMapping = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping>) content.GetValueForProperty("AuthorizationActionMapping",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).AuthorizationActionMapping, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.AuthorizationActionMappingTypeConverter.ConvertFrom));
            }
            if (content.Contains("LinkedAccessCheck"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LinkedAccessCheck = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck>) content.GetValueForProperty("LinkedAccessCheck",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LinkedAccessCheck, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.LinkedAccessCheckTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultApiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DefaultApiVersion = (string) content.GetValueForProperty("DefaultApiVersion",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DefaultApiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LoggingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LoggingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule>) content.GetValueForProperty("LoggingRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).LoggingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.LoggingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ThrottlingRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ThrottlingRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule>) content.GetValueForProperty("ThrottlingRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ThrottlingRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ThrottlingRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("RequiredFeature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequiredFeature = (System.Collections.Generic.List<string>) content.GetValueForProperty("RequiredFeature",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequiredFeature, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnableAsyncOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableAsyncOperation = (bool?) content.GetValueForProperty("EnableAsyncOperation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableAsyncOperation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableThirdPartyS2S"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableThirdPartyS2S = (bool?) content.GetValueForProperty("EnableThirdPartyS2S",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).EnableThirdPartyS2S, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsPureProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IsPureProxy = (bool?) content.GetValueForProperty("IsPureProxy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IsPureProxy, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DisallowedActionVerb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DisallowedActionVerb = (System.Collections.Generic.List<string>) content.GetValueForProperty("DisallowedActionVerb",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).DisallowedActionVerb, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ServiceTreeInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ServiceTreeInfo = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo>) content.GetValueForProperty("ServiceTreeInfo",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ServiceTreeInfo, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ServiceTreeInfoTypeConverter.ConvertFrom));
            }
            if (content.Contains("SubscriptionStateRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionStateRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule>) content.GetValueForProperty("SubscriptionStateRule",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionStateRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SubscriptionStateRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtendedLocation = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions>) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtendedLocation, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ExtendedLocationOptionsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ResourceDeletionPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceDeletionPolicy = (string) content.GetValueForProperty("ResourceDeletionPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceDeletionPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("ExtensionOptionResourceCreationBegin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBegin = (Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin) content.GetValueForProperty("ExtensionOptionResourceCreationBegin",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBegin, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeExtensionOptionsResourceCreationBeginTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeatureRuleRequiredFeaturesPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeatureRuleRequiredFeaturesPolicy = (string) content.GetValueForProperty("FeatureRuleRequiredFeaturesPolicy",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).FeatureRuleRequiredFeaturesPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction>) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction>(__y, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.SubscriptionStateOverrideActionTypeConverter.ConvertFrom));
            }
            if (content.Contains("SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl = (global::System.TimeSpan?) content.GetValueForProperty("SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("IdentityManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementType = (string) content.GetValueForProperty("IdentityManagementType",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementType, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityManagementApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementApplicationId = (string) content.GetValueForProperty("IdentityManagementApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).IdentityManagementApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("CheckNameAvailabilitySpecificationEnableDefaultValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationEnableDefaultValidation = (bool?) content.GetValueForProperty("CheckNameAvailabilitySpecificationEnableDefaultValidation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationEnableDefaultValidation, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation = (System.Collections.Generic.List<string>) content.GetValueForProperty("CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RequestHeaderOptionOptInHeader"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOptionOptInHeader = (string) content.GetValueForProperty("RequestHeaderOptionOptInHeader",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).RequestHeaderOptionOptInHeader, global::System.Convert.ToString);
            }
            if (content.Contains("TemplateDeploymentOptionPreflightSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightSupported = (bool?) content.GetValueForProperty("TemplateDeploymentOptionPreflightSupported",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).TemplateDeploymentOptionPreflightSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyValidationRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyValidationRequired = (bool?) content.GetValueForProperty("ResourceMovePolicyValidationRequired",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyValidationRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyCrossResourceGroupMoveEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossResourceGroupMoveEnabled = (bool?) content.GetValueForProperty("ResourceMovePolicyCrossResourceGroupMoveEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossResourceGroupMoveEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ResourceMovePolicyCrossSubscriptionMoveEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossSubscriptionMoveEnabled = (bool?) content.GetValueForProperty("ResourceMovePolicyCrossSubscriptionMoveEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ResourceMovePolicyCrossSubscriptionMoveEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExtensionOptionResourceCreationBeginRequest"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginRequest = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExtensionOptionResourceCreationBeginRequest",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginRequest, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExtensionOptionResourceCreationBeginResponse"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginResponse = (System.Collections.Generic.List<string>) content.GetValueForProperty("ExtensionOptionResourceCreationBeginResponse",((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal)this).ExtensionOptionResourceCreationBeginResponse, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(ResourceTypeRegistrationTypeConverter))]
    public partial interface IResourceTypeRegistration

    {

    }
}