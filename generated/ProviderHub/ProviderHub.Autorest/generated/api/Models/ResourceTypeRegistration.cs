// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Extensions;

    public partial class ResourceTypeRegistration :
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistration,
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ProxyResource();

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> AllowedUnauthorizedAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).AllowedUnauthorizedAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).AllowedUnauthorizedAction = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).AuthorizationActionMapping; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).AuthorizationActionMapping = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecificationEnableDefaultValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecificationEnableDefaultValidation = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string DefaultApiVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).DefaultApiVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).DefaultApiVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> DisallowedActionVerb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).DisallowedActionVerb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).DisallowedActionVerb = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? EnableAsyncOperation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).EnableAsyncOperation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).EnableAsyncOperation = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? EnableThirdPartyS2S { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).EnableThirdPartyS2S; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).EnableThirdPartyS2S = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).Endpoint = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtendedLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtendedLocation = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBeginRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBeginRequest = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBeginResponse; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBeginResponse = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string FeatureRuleRequiredFeaturesPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).FeatureRuleRequiredFeaturesPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).FeatureRuleRequiredFeaturesPolicy = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Id; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string IdentityManagementApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagementApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagementApplicationId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string IdentityManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagementType = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? IsPureProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IsPureProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IsPureProxy = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).LinkedAccessCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).LinkedAccessCheck = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).LoggingRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).LoggingRule = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string MarketplaceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).MarketplaceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).MarketplaceType = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Name = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Type = value ?? null; }

        /// <summary>Internal Acessors for CheckNameAvailabilitySpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.CheckNameAvailabilitySpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).CheckNameAvailabilitySpecification = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ExtensionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.ExtensionOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOption = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ExtensionOptionResourceCreationBegin</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.ExtensionOptionResourceCreationBegin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBegin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ExtensionOptionResourceCreationBegin = value ?? null /* model class */; }

        /// <summary>Internal Acessors for FeaturesRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.FeaturesRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).FeaturesRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).FeaturesRule = value ?? null /* model class */; }

        /// <summary>Internal Acessors for IdentityManagement</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.IdentityManagement { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagement; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).IdentityManagement = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RequestHeaderOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.RequestHeaderOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequestHeaderOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequestHeaderOption = value ?? null /* model class */; }

        /// <summary>Internal Acessors for ResourceMovePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.ResourceMovePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicy = value ?? null /* model class */; }

        /// <summary>Internal Acessors for SubscriptionLifecycleNotificationSpecification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.SubscriptionLifecycleNotificationSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecification = value ?? null /* model class */; }

        /// <summary>Internal Acessors for TemplateDeploymentOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationInternal.TemplateDeploymentOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOption = value ?? null /* model class */; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ResourceTypeRegistrationProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ProvisioningState = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string Regionality { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).Regionality; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).Regionality = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string RequestHeaderOptionOptInHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequestHeaderOptionOptInHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequestHeaderOptionOptInHeader = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> RequiredFeature { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequiredFeature; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RequiredFeature = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string ResourceDeletionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceDeletionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceDeletionPolicy = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyCrossResourceGroupMoveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyCrossResourceGroupMoveEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyCrossSubscriptionMoveEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyCrossSubscriptionMoveEnabled = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? ResourceMovePolicyValidationRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyValidationRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ResourceMovePolicyValidationRequired = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public string RoutingType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RoutingType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).RoutingType = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ServiceTreeInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ServiceTreeInfo = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl = value ?? default(global::System.TimeSpan); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionStateRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SubscriptionStateRule = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SwaggerSpecification; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).SwaggerSpecification = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOptionPreflightOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOptionPreflightOption = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public bool? TemplateDeploymentOptionPreflightSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOptionPreflightSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).TemplateDeploymentOptionPreflightSupported = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ThrottlingRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesAutoGeneratedInternal)Property).ThrottlingRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="ResourceTypeRegistration" /> instance.</summary>
        public ResourceTypeRegistration()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    public partial interface IResourceTypeRegistration :
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IProxyResource
    {
        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"allowedUnauthorizedActions",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AllowedUnauthorizedAction { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"authorizationActionMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableDefaultValidation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"resourceTypesWithCustomValidation",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"defaultApiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultApiVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"disallowedActionVerbs",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DisallowedActionVerb { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableAsyncOperation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableAsyncOperation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"enableThirdPartyS2S",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableThirdPartyS2S { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"extendedLocations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"request",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"response",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"requiredFeaturesPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string FeatureRuleRequiredFeaturesPolicy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityManagementApplicationId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SystemAssigned", "UserAssigned", "Actor", "DelegatedResourceIdentity")]
        string IdentityManagementType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"isPureProxy",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPureProxy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"linkedAccessChecks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"loggingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"marketplaceType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "AddOn", "Bypass", "Store")]
        string MarketplaceType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Accepted", "Running", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources", "TransientFailure", "RolloutInProgress")]
        string ProvisioningState { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"regionality",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Global", "Regional")]
        string Regionality { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"optInHeaders",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SignedUserToken", "ClientGroupMembership", "SignedAuxiliaryTokens", "UnboundedClientGroupMembership")]
        string RequestHeaderOptionOptInHeader { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"requiredFeatures",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RequiredFeature { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"resourceDeletionPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "CascadeDeleteAll", "CascadeDeleteProxyOnlyChildren")]
        string ResourceDeletionPolicy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"crossResourceGroupMoveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"crossSubscriptionMoveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"validationRequired",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ResourceMovePolicyValidationRequired { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"routingType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("Default", "ProxyOnly", "HostBased", "Extension", "Tenant", "Fanout", "LocationBased", "Failover", "CascadeExtension")]
        string RoutingType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"serviceTreeInfos",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"softDeleteTTL",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"subscriptionStateOverrideActions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"subscriptionStateRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"swaggerSpecifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"preflightOptions",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("None", "ContinueDeploymentOnFailure", "DefaultValidationOnly")]
        System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"preflightSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TemplateDeploymentOptionPreflightSupported { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"throttlingRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get; set; }

    }
    internal partial interface IResourceTypeRegistrationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IProxyResourceInternal
    {
        System.Collections.Generic.List<string> AllowedUnauthorizedAction { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IAuthorizationActionMapping> AuthorizationActionMapping { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesCheckNameAvailabilitySpecifications CheckNameAvailabilitySpecification { get; set; }

        bool? CheckNameAvailabilitySpecificationEnableDefaultValidation { get; set; }

        System.Collections.Generic.List<string> CheckNameAvailabilitySpecificationResourceTypesWithCustomValidation { get; set; }

        string DefaultApiVersion { get; set; }

        System.Collections.Generic.List<string> DisallowedActionVerb { get; set; }

        bool? EnableAsyncOperation { get; set; }

        bool? EnableThirdPartyS2S { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeEndpoint> Endpoint { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IExtendedLocationOptions> ExtendedLocation { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesExtensionOptions ExtensionOption { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeExtensionOptionsResourceCreationBegin ExtensionOptionResourceCreationBegin { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginRequest { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "DoNotMergeExistingReadOnlyAndSecretProperties", "IncludeInternalMetadata")]
        System.Collections.Generic.List<string> ExtensionOptionResourceCreationBeginResponse { get; set; }

        string FeatureRuleRequiredFeaturesPolicy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesFeaturesRule FeaturesRule { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesIdentityManagement IdentityManagement { get; set; }

        string IdentityManagementApplicationId { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SystemAssigned", "UserAssigned", "Actor", "DelegatedResourceIdentity")]
        string IdentityManagementType { get; set; }

        bool? IsPureProxy { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILinkedAccessCheck> LinkedAccessCheck { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ILoggingRule> LoggingRule { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "AddOn", "Bypass", "Store")]
        string MarketplaceType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationProperties Property { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Accepted", "Running", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "MovingResources", "TransientFailure", "RolloutInProgress")]
        string ProvisioningState { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "Global", "Regional")]
        string Regionality { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesRequestHeaderOptions RequestHeaderOption { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "SignedUserToken", "ClientGroupMembership", "SignedAuxiliaryTokens", "UnboundedClientGroupMembership")]
        string RequestHeaderOptionOptInHeader { get; set; }

        System.Collections.Generic.List<string> RequiredFeature { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("NotSpecified", "CascadeDeleteAll", "CascadeDeleteProxyOnlyChildren")]
        string ResourceDeletionPolicy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesResourceMovePolicy ResourceMovePolicy { get; set; }

        bool? ResourceMovePolicyCrossResourceGroupMoveEnabled { get; set; }

        bool? ResourceMovePolicyCrossSubscriptionMoveEnabled { get; set; }

        bool? ResourceMovePolicyValidationRequired { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("Default", "ProxyOnly", "HostBased", "Extension", "Tenant", "Fanout", "LocationBased", "Failover", "CascadeExtension")]
        string RoutingType { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IServiceTreeInfo> ServiceTreeInfo { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesSubscriptionLifecycleNotificationSpecifications SubscriptionLifecycleNotificationSpecification { get; set; }

        global::System.TimeSpan? SubscriptionLifecycleNotificationSpecificationSoftDeleteTtl { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateOverrideAction> SubscriptionLifecycleNotificationSpecificationSubscriptionStateOverrideAction { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISubscriptionStateRule> SubscriptionStateRule { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.ISwaggerSpecification> SwaggerSpecification { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IResourceTypeRegistrationPropertiesTemplateDeploymentOptions TemplateDeploymentOption { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.PSArgumentCompleterAttribute("None", "ContinueDeploymentOnFailure", "DefaultValidationOnly")]
        System.Collections.Generic.List<string> TemplateDeploymentOptionPreflightOption { get; set; }

        bool? TemplateDeploymentOptionPreflightSupported { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ProviderHub.Models.IThrottlingRule> ThrottlingRule { get; set; }

    }
}