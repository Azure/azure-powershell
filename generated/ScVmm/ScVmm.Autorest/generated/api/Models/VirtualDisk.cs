// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>Virtual disk model</summary>
    public partial class VirtualDisk :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal
    {

        /// <summary>Backing field for <see cref="Bus" /> property.</summary>
        private int? _bus;

        /// <summary>Gets or sets the disk bus.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? Bus { get => this._bus; set => this._bus = value; }

        /// <summary>Backing field for <see cref="BusType" /> property.</summary>
        private string _busType;

        /// <summary>Gets or sets the disk bus type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string BusType { get => this._busType; set => this._busType = value; }

        /// <summary>Backing field for <see cref="CreateDiffDisk" /> property.</summary>
        private string _createDiffDisk;

        /// <summary>Gets or sets a value indicating diff disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string CreateDiffDisk { get => this._createDiffDisk; set => this._createDiffDisk = value; }

        /// <summary>Backing field for <see cref="DiskId" /> property.</summary>
        private string _diskId;

        /// <summary>Gets or sets the disk id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string DiskId { get => this._diskId; set => this._diskId = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private int? _diskSizeGb;

        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name
        /// is not set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="Lun" /> property.</summary>
        private int? _lun;

        /// <summary>Gets or sets the disk lun.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? Lun { get => this._lun; set => this._lun = value; }

        /// <summary>Backing field for <see cref="MaxDiskSizeGb" /> property.</summary>
        private int? _maxDiskSizeGb;

        /// <summary>Gets the max disk size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? MaxDiskSizeGb { get => this._maxDiskSizeGb; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for MaxDiskSizeGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal.MaxDiskSizeGb { get => this._maxDiskSizeGb; set { {_maxDiskSizeGb = value;} } }

        /// <summary>Internal Acessors for StorageQosPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetails Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal.StorageQosPolicy { get => (this._storageQosPolicy = this._storageQosPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageQosPolicyDetails()); set { {_storageQosPolicy = value;} } }

        /// <summary>Internal Acessors for VhdFormatType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal.VhdFormatType { get => this._vhdFormatType; set { {_vhdFormatType = value;} } }

        /// <summary>Internal Acessors for VolumeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskInternal.VolumeType { get => this._volumeType; set { {_volumeType = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Gets or sets the name of the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The ID of the QoS policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string StorageQoSPolicyId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetailsInternal)StorageQosPolicy).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetailsInternal)StorageQosPolicy).Id = value ?? null; }

        /// <summary>The name of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string StorageQoSPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetailsInternal)StorageQosPolicy).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetailsInternal)StorageQosPolicy).Name = value ?? null; }

        /// <summary>Backing field for <see cref="StorageQosPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetails _storageQosPolicy;

        /// <summary>The QoS policy for the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetails StorageQosPolicy { get => (this._storageQosPolicy = this._storageQosPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageQosPolicyDetails()); set => this._storageQosPolicy = value; }

        /// <summary>Backing field for <see cref="TemplateDiskId" /> property.</summary>
        private string _templateDiskId;

        /// <summary>Gets or sets the disk id in the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string TemplateDiskId { get => this._templateDiskId; set => this._templateDiskId = value; }

        /// <summary>Backing field for <see cref="VhdFormatType" /> property.</summary>
        private string _vhdFormatType;

        /// <summary>Gets the disk vhd format type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string VhdFormatType { get => this._vhdFormatType; }

        /// <summary>Backing field for <see cref="VhdType" /> property.</summary>
        private string _vhdType;

        /// <summary>Gets or sets the disk vhd type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string VhdType { get => this._vhdType; set => this._vhdType = value; }

        /// <summary>Backing field for <see cref="VolumeType" /> property.</summary>
        private string _volumeType;

        /// <summary>Gets the disk volume type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string VolumeType { get => this._volumeType; }

        /// <summary>Creates an new <see cref="VirtualDisk" /> instance.</summary>
        public VirtualDisk()
        {

        }
    }
    /// Virtual disk model
    public partial interface IVirtualDisk :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets the disk bus.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk bus.",
        SerializedName = @"bus",
        PossibleTypes = new [] { typeof(int) })]
        int? Bus { get; set; }
        /// <summary>Gets or sets the disk bus type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk bus type.",
        SerializedName = @"busType",
        PossibleTypes = new [] { typeof(string) })]
        string BusType { get; set; }
        /// <summary>Gets or sets a value indicating diff disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Gets or sets a value indicating diff disk.",
        SerializedName = @"createDiffDisk",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string CreateDiffDisk { get; set; }
        /// <summary>Gets or sets the disk id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk id.",
        SerializedName = @"diskId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskId { get; set; }
        /// <summary>Gets or sets the disk total size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk total size.",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name
        /// is not set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Gets or sets the disk lun.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk lun.",
        SerializedName = @"lun",
        PossibleTypes = new [] { typeof(int) })]
        int? Lun { get; set; }
        /// <summary>Gets the max disk size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the max disk size.",
        SerializedName = @"maxDiskSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDiskSizeGb { get;  }
        /// <summary>Gets or sets the name of the disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the name of the disk.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The ID of the QoS policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the QoS policy.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string StorageQoSPolicyId { get; set; }
        /// <summary>The name of the policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the policy.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string StorageQoSPolicyName { get; set; }
        /// <summary>Gets or sets the disk id in the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Gets or sets the disk id in the template.",
        SerializedName = @"templateDiskId",
        PossibleTypes = new [] { typeof(string) })]
        string TemplateDiskId { get; set; }
        /// <summary>Gets the disk vhd format type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the disk vhd format type.",
        SerializedName = @"vhdFormatType",
        PossibleTypes = new [] { typeof(string) })]
        string VhdFormatType { get;  }
        /// <summary>Gets or sets the disk vhd type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the disk vhd type.",
        SerializedName = @"vhdType",
        PossibleTypes = new [] { typeof(string) })]
        string VhdType { get; set; }
        /// <summary>Gets the disk volume type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the disk volume type.",
        SerializedName = @"volumeType",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeType { get;  }

    }
    /// Virtual disk model
    internal partial interface IVirtualDiskInternal

    {
        /// <summary>Gets or sets the disk bus.</summary>
        int? Bus { get; set; }
        /// <summary>Gets or sets the disk bus type.</summary>
        string BusType { get; set; }
        /// <summary>Gets or sets a value indicating diff disk.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string CreateDiffDisk { get; set; }
        /// <summary>Gets or sets the disk id.</summary>
        string DiskId { get; set; }
        /// <summary>Gets or sets the disk total size.</summary>
        int? DiskSizeGb { get; set; }
        /// <summary>
        /// Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name
        /// is not set.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>Gets or sets the disk lun.</summary>
        int? Lun { get; set; }
        /// <summary>Gets the max disk size.</summary>
        int? MaxDiskSizeGb { get; set; }
        /// <summary>Gets or sets the name of the disk.</summary>
        string Name { get; set; }
        /// <summary>The ID of the QoS policy.</summary>
        string StorageQoSPolicyId { get; set; }
        /// <summary>The name of the policy.</summary>
        string StorageQoSPolicyName { get; set; }
        /// <summary>The QoS policy for the disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicyDetails StorageQosPolicy { get; set; }
        /// <summary>Gets or sets the disk id in the template.</summary>
        string TemplateDiskId { get; set; }
        /// <summary>Gets the disk vhd format type.</summary>
        string VhdFormatType { get; set; }
        /// <summary>Gets or sets the disk vhd type.</summary>
        string VhdType { get; set; }
        /// <summary>Gets the disk volume type.</summary>
        string VolumeType { get; set; }

    }
}