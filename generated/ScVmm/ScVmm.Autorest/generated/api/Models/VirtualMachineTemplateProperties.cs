// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>Defines the resource properties.</summary>
    public partial class VirtualMachineTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ComputerName" /> property.</summary>
        private string _computerName;

        /// <summary>Gets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string ComputerName { get => this._computerName; }

        /// <summary>Backing field for <see cref="CpuCount" /> property.</summary>
        private int? _cpuCount;

        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? CpuCount { get => this._cpuCount; }

        /// <summary>Backing field for <see cref="Disk" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk> _disk;

        /// <summary>Gets the disks of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk> Disk { get => this._disk; }

        /// <summary>Backing field for <see cref="DynamicMemoryEnabled" /> property.</summary>
        private string _dynamicMemoryEnabled;

        /// <summary>Gets a value indicating whether to enable dynamic memory or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string DynamicMemoryEnabled { get => this._dynamicMemoryEnabled; }

        /// <summary>Backing field for <see cref="DynamicMemoryMaxMb" /> property.</summary>
        private int? _dynamicMemoryMaxMb;

        /// <summary>Gets the max dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? DynamicMemoryMaxMb { get => this._dynamicMemoryMaxMb; }

        /// <summary>Backing field for <see cref="DynamicMemoryMinMb" /> property.</summary>
        private int? _dynamicMemoryMinMb;

        /// <summary>Gets the min dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? DynamicMemoryMinMb { get => this._dynamicMemoryMinMb; }

        /// <summary>Backing field for <see cref="Generation" /> property.</summary>
        private int? _generation;

        /// <summary>Gets the generation for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? Generation { get => this._generation; }

        /// <summary>Backing field for <see cref="InventoryItemId" /> property.</summary>
        private string _inventoryItemId;

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string InventoryItemId { get => this._inventoryItemId; set => this._inventoryItemId = value; }

        /// <summary>Backing field for <see cref="IsCustomizable" /> property.</summary>
        private string _isCustomizable;

        /// <summary>Gets a value indicating whether the vm template is customizable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string IsCustomizable { get => this._isCustomizable; }

        /// <summary>Backing field for <see cref="IsHighlyAvailable" /> property.</summary>
        private string _isHighlyAvailable;

        /// <summary>Gets highly available property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string IsHighlyAvailable { get => this._isHighlyAvailable; }

        /// <summary>Backing field for <see cref="LimitCpuForMigration" /> property.</summary>
        private string _limitCpuForMigration;

        /// <summary>
        /// Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string LimitCpuForMigration { get => this._limitCpuForMigration; }

        /// <summary>Backing field for <see cref="MemoryMb" /> property.</summary>
        private int? _memoryMb;

        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? MemoryMb { get => this._memoryMb; }

        /// <summary>Internal Acessors for ComputerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.ComputerName { get => this._computerName; set { {_computerName = value;} } }

        /// <summary>Internal Acessors for CpuCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.CpuCount { get => this._cpuCount; set { {_cpuCount = value;} } }

        /// <summary>Internal Acessors for Disk</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk> Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.Disk { get => this._disk; set { {_disk = value;} } }

        /// <summary>Internal Acessors for DynamicMemoryEnabled</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.DynamicMemoryEnabled { get => this._dynamicMemoryEnabled; set { {_dynamicMemoryEnabled = value;} } }

        /// <summary>Internal Acessors for DynamicMemoryMaxMb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.DynamicMemoryMaxMb { get => this._dynamicMemoryMaxMb; set { {_dynamicMemoryMaxMb = value;} } }

        /// <summary>Internal Acessors for DynamicMemoryMinMb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.DynamicMemoryMinMb { get => this._dynamicMemoryMinMb; set { {_dynamicMemoryMinMb = value;} } }

        /// <summary>Internal Acessors for Generation</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.Generation { get => this._generation; set { {_generation = value;} } }

        /// <summary>Internal Acessors for IsCustomizable</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.IsCustomizable { get => this._isCustomizable; set { {_isCustomizable = value;} } }

        /// <summary>Internal Acessors for IsHighlyAvailable</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.IsHighlyAvailable { get => this._isHighlyAvailable; set { {_isHighlyAvailable = value;} } }

        /// <summary>Internal Acessors for LimitCpuForMigration</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.LimitCpuForMigration { get => this._limitCpuForMigration; set { {_limitCpuForMigration = value;} } }

        /// <summary>Internal Acessors for MemoryMb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.MemoryMb { get => this._memoryMb; set { {_memoryMb = value;} } }

        /// <summary>Internal Acessors for NetworkInterface</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface> Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.NetworkInterface { get => this._networkInterface; set { {_networkInterface = value;} } }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for OSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.OSType { get => this._oSType; set { {_oSType = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplatePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NetworkInterface" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface> _networkInterface;

        /// <summary>Gets the network interfaces of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface> NetworkInterface { get => this._networkInterface; }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Unique ID of the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; set => this._uuid = value; }

        /// <summary>Backing field for <see cref="VmmServerId" /> property.</summary>
        private string _vmmServerId;

        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string VmmServerId { get => this._vmmServerId; set => this._vmmServerId = value; }

        /// <summary>Creates an new <see cref="VirtualMachineTemplateProperties" /> instance.</summary>
        public VirtualMachineTemplateProperties()
        {

        }
    }
    /// Defines the resource properties.
    public partial interface IVirtualMachineTemplateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable
    {
        /// <summary>Gets computer name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets computer name.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string ComputerName { get;  }
        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the desired number of vCPUs for the vm.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCount { get;  }
        /// <summary>Gets the disks of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the disks of the template.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk> Disk { get;  }
        /// <summary>Gets a value indicating whether to enable dynamic memory or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets a value indicating whether to enable dynamic memory or not.",
        SerializedName = @"dynamicMemoryEnabled",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string DynamicMemoryEnabled { get;  }
        /// <summary>Gets the max dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the max dynamic memory for the vm.",
        SerializedName = @"dynamicMemoryMaxMB",
        PossibleTypes = new [] { typeof(int) })]
        int? DynamicMemoryMaxMb { get;  }
        /// <summary>Gets the min dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the min dynamic memory for the vm.",
        SerializedName = @"dynamicMemoryMinMB",
        PossibleTypes = new [] { typeof(int) })]
        int? DynamicMemoryMinMb { get;  }
        /// <summary>Gets the generation for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the generation for the vm.",
        SerializedName = @"generation",
        PossibleTypes = new [] { typeof(int) })]
        int? Generation { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>Gets a value indicating whether the vm template is customizable or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets a value indicating whether the vm template is customizable or not.",
        SerializedName = @"isCustomizable",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string IsCustomizable { get;  }
        /// <summary>Gets highly available property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets highly available property.",
        SerializedName = @"isHighlyAvailable",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string IsHighlyAvailable { get;  }
        /// <summary>
        /// Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
        SerializedName = @"limitCpuForMigration",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string LimitCpuForMigration { get;  }
        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"MemoryMB is the desired size of a virtual machine's memory, in MB.",
        SerializedName = @"memoryMB",
        PossibleTypes = new [] { typeof(int) })]
        int? MemoryMb { get;  }
        /// <summary>Gets the network interfaces of the template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the network interfaces of the template.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface> NetworkInterface { get;  }
        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get;  }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get;  }
        /// <summary>Unique ID of the virtual machine template.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Unique ID of the virtual machine template.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get; set; }
        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Id of the vmmServer resource in which this resource resides.",
        SerializedName = @"vmmServerId",
        PossibleTypes = new [] { typeof(string) })]
        string VmmServerId { get; set; }

    }
    /// Defines the resource properties.
    internal partial interface IVirtualMachineTemplatePropertiesInternal

    {
        /// <summary>Gets computer name.</summary>
        string ComputerName { get; set; }
        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        int? CpuCount { get; set; }
        /// <summary>Gets the disks of the template.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk> Disk { get; set; }
        /// <summary>Gets a value indicating whether to enable dynamic memory or not.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string DynamicMemoryEnabled { get; set; }
        /// <summary>Gets the max dynamic memory for the vm.</summary>
        int? DynamicMemoryMaxMb { get; set; }
        /// <summary>Gets the min dynamic memory for the vm.</summary>
        int? DynamicMemoryMinMb { get; set; }
        /// <summary>Gets the generation for the vm.</summary>
        int? Generation { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string InventoryItemId { get; set; }
        /// <summary>Gets a value indicating whether the vm template is customizable or not.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string IsCustomizable { get; set; }
        /// <summary>Gets highly available property.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string IsHighlyAvailable { get; set; }
        /// <summary>
        /// Gets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string LimitCpuForMigration { get; set; }
        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        int? MemoryMb { get; set; }
        /// <summary>Gets the network interfaces of the template.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface> NetworkInterface { get; set; }
        /// <summary>Gets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets the type of the os.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get; set; }
        /// <summary>Unique ID of the virtual machine template.</summary>
        string Uuid { get; set; }
        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        string VmmServerId { get; set; }

    }
}