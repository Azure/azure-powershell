// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>Defines the resource properties.</summary>
    public partial class CloudProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CloudCapacity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacity _cloudCapacity;

        /// <summary>Capacity of the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacity CloudCapacity { get => (this._cloudCapacity = this._cloudCapacity ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CloudCapacity()); }

        /// <summary>
        /// CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public long? CloudCapacityCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).CpuCount; }

        /// <summary>MemoryMB specifies a memory usage limit in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public long? CloudCapacityMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).MemoryMb; }

        /// <summary>VMCount gives the max number of VMs that can be deployed in the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public long? CloudCapacityVMCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).VMCount; }

        /// <summary>Backing field for <see cref="CloudName" /> property.</summary>
        private string _cloudName;

        /// <summary>Name of the cloud in VmmServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string CloudName { get => this._cloudName; }

        /// <summary>Backing field for <see cref="InventoryItemId" /> property.</summary>
        private string _inventoryItemId;

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string InventoryItemId { get => this._inventoryItemId; set => this._inventoryItemId = value; }

        /// <summary>Internal Acessors for CloudCapacity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacity Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.CloudCapacity { get => (this._cloudCapacity = this._cloudCapacity ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CloudCapacity()); set { {_cloudCapacity = value;} } }

        /// <summary>Internal Acessors for CloudCapacityCpuCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.CloudCapacityCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).CpuCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).CpuCount = value; }

        /// <summary>Internal Acessors for CloudCapacityMemoryMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.CloudCapacityMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).MemoryMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).MemoryMb = value; }

        /// <summary>Internal Acessors for CloudCapacityVMCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.CloudCapacityVMCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).VMCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacityInternal)CloudCapacity).VMCount = value; }

        /// <summary>Internal Acessors for CloudName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.CloudName { get => this._cloudName; set { {_cloudName = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StorageQosPolicy</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy> Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudPropertiesInternal.StorageQosPolicy { get => this._storageQosPolicy; set { {_storageQosPolicy = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="StorageQosPolicy" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy> _storageQosPolicy;

        /// <summary>List of QoS policies available for the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy> StorageQosPolicy { get => this._storageQosPolicy; }

        /// <summary>Backing field for <see cref="Uuid" /> property.</summary>
        private string _uuid;

        /// <summary>Unique ID of the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string Uuid { get => this._uuid; set => this._uuid = value; }

        /// <summary>Backing field for <see cref="VmmServerId" /> property.</summary>
        private string _vmmServerId;

        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string VmmServerId { get => this._vmmServerId; set => this._vmmServerId = value; }

        /// <summary>Creates an new <see cref="CloudProperties" /> instance.</summary>
        public CloudProperties()
        {

        }
    }
    /// Defines the resource properties.
    public partial interface ICloudProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable
    {
        /// <summary>
        /// CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CloudCapacityCpuCount { get;  }
        /// <summary>MemoryMB specifies a memory usage limit in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"MemoryMB specifies a memory usage limit in megabytes.",
        SerializedName = @"memoryMB",
        PossibleTypes = new [] { typeof(long) })]
        long? CloudCapacityMemoryMb { get;  }
        /// <summary>VMCount gives the max number of VMs that can be deployed in the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"VMCount gives the max number of VMs that can be deployed in the cloud.",
        SerializedName = @"vmCount",
        PossibleTypes = new [] { typeof(long) })]
        long? CloudCapacityVMCount { get;  }
        /// <summary>Name of the cloud in VmmServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the cloud in VmmServer.",
        SerializedName = @"cloudName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudName { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string InventoryItemId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get;  }
        /// <summary>List of QoS policies available for the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of QoS policies available for the cloud.",
        SerializedName = @"storageQoSPolicies",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy> StorageQosPolicy { get;  }
        /// <summary>Unique ID of the cloud.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Unique ID of the cloud.",
        SerializedName = @"uuid",
        PossibleTypes = new [] { typeof(string) })]
        string Uuid { get; set; }
        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Id of the vmmServer resource in which this resource resides.",
        SerializedName = @"vmmServerId",
        PossibleTypes = new [] { typeof(string) })]
        string VmmServerId { get; set; }

    }
    /// Defines the resource properties.
    internal partial interface ICloudPropertiesInternal

    {
        /// <summary>Capacity of the cloud.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICloudCapacity CloudCapacity { get; set; }
        /// <summary>
        /// CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
        /// </summary>
        long? CloudCapacityCpuCount { get; set; }
        /// <summary>MemoryMB specifies a memory usage limit in megabytes.</summary>
        long? CloudCapacityMemoryMb { get; set; }
        /// <summary>VMCount gives the max number of VMs that can be deployed in the cloud.</summary>
        long? CloudCapacityVMCount { get; set; }
        /// <summary>Name of the cloud in VmmServer.</summary>
        string CloudName { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string InventoryItemId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted", "Created")]
        string ProvisioningState { get; set; }
        /// <summary>List of QoS policies available for the cloud.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageQosPolicy> StorageQosPolicy { get; set; }
        /// <summary>Unique ID of the cloud.</summary>
        string Uuid { get; set; }
        /// <summary>ARM Id of the vmmServer resource in which this resource resides.</summary>
        string VmmServerId { get; set; }

    }
}