// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>The Virtual machine template inventory item.</summary>
    public partial class VirtualMachineTemplateInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItem,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItemInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties __inventoryItemProperties = new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InventoryItemProperties();

        /// <summary>Backing field for <see cref="CpuCount" /> property.</summary>
        private int? _cpuCount;

        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? CpuCount { get => this._cpuCount; }

        /// <summary>Gets the Managed Object name in Vmm for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string InventoryItemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName; }

        /// <summary>They inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string InventoryType { get => "VirtualMachineTemplate"; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType = "VirtualMachineTemplate"; }

        /// <summary>Gets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; }

        /// <summary>Backing field for <see cref="MemoryMb" /> property.</summary>
        private int? _memoryMb;

        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public int? MemoryMb { get => this._memoryMb; }

        /// <summary>Internal Acessors for InventoryItemName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.InventoryItemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName = value; }

        /// <summary>Internal Acessors for ManagedResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid = value; }

        /// <summary>Internal Acessors for CpuCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItemInternal.CpuCount { get => this._cpuCount; set { {_cpuCount = value;} } }

        /// <summary>Internal Acessors for MemoryMb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItemInternal.MemoryMb { get => this._memoryMb; set { {_memoryMb = value;} } }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItemInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for OSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineTemplateInventoryItemInternal.OSType { get => this._oSType; set { {_oSType = value;} } }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; }

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; }

        /// <summary>Gets the UUID (which is assigned by Vmm) for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__inventoryItemProperties), __inventoryItemProperties);
            await eventListener.AssertObjectIsValid(nameof(__inventoryItemProperties), __inventoryItemProperties);
        }

        /// <summary>Creates an new <see cref="VirtualMachineTemplateInventoryItem" /> instance.</summary>
        public VirtualMachineTemplateInventoryItem()
        {
            this.__inventoryItemProperties.InventoryType = "VirtualMachineTemplate";
        }
    }
    /// The Virtual machine template inventory item.
    public partial interface IVirtualMachineTemplateInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties
    {
        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the desired number of vCPUs for the vm.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCount { get;  }
        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"MemoryMB is the desired size of a virtual machine's memory, in MB.",
        SerializedName = @"memoryMB",
        PossibleTypes = new [] { typeof(int) })]
        int? MemoryMb { get;  }
        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get;  }

    }
    /// The Virtual machine template inventory item.
    internal partial interface IVirtualMachineTemplateInventoryItemInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal
    {
        /// <summary>Gets the desired number of vCPUs for the vm.</summary>
        int? CpuCount { get; set; }
        /// <summary>MemoryMB is the desired size of a virtual machine's memory, in MB.</summary>
        int? MemoryMb { get; set; }
        /// <summary>Gets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets the type of the os.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get; set; }

    }
}