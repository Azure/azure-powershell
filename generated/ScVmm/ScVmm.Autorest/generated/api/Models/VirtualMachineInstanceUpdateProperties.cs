// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>Virtual Machine Instance Properties Update model</summary>
    public partial class VirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailabilitySet" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem> _availabilitySet;

        /// <summary>Availability Sets in vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem> AvailabilitySet { get => this._availabilitySet; set => this._availabilitySet = value; }

        /// <summary>Backing field for <see cref="HardwareProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdate _hardwareProfile;

        /// <summary>Hardware properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdate HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.HardwareProfileUpdate()); set => this._hardwareProfile = value; }

        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public int? HardwareProfileCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).CpuCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).CpuCount = value ?? default(int); }

        /// <summary>Gets or sets a value indicating whether to enable dynamic memory or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string HardwareProfileDynamicMemoryEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryEnabled = value ?? null; }

        /// <summary>Gets or sets the max dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public int? HardwareProfileDynamicMemoryMaxMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryMaxMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryMaxMb = value ?? default(int); }

        /// <summary>Gets or sets the min dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public int? HardwareProfileDynamicMemoryMinMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryMinMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).DynamicMemoryMinMb = value ?? default(int); }

        /// <summary>
        /// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string HardwareProfileLimitCpuForMigration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).LimitCpuForMigration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).LimitCpuForMigration = value ?? null; }

        /// <summary>MemoryMB is the size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public int? HardwareProfileMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).MemoryMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdateInternal)HardwareProfile).MemoryMb = value ?? default(int); }

        /// <summary>Backing field for <see cref="InfrastructureProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdate _infrastructureProfile;

        /// <summary>Gets the infrastructure profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdate InfrastructureProfile { get => (this._infrastructureProfile = this._infrastructureProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InfrastructureProfileUpdate()); set => this._infrastructureProfile = value; }

        /// <summary>Type of checkpoint supported for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string InfrastructureProfileCheckpointType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdateInternal)InfrastructureProfile).CheckpointType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdateInternal)InfrastructureProfile).CheckpointType = value ?? null; }

        /// <summary>Internal Acessors for HardwareProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.HardwareProfileUpdate()); set { {_hardwareProfile = value;} } }

        /// <summary>Internal Acessors for InfrastructureProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdatePropertiesInternal.InfrastructureProfile { get => (this._infrastructureProfile = this._infrastructureProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InfrastructureProfileUpdate()); set { {_infrastructureProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdatePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkProfileUpdate()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceUpdatePropertiesInternal.StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageProfileUpdate()); set { {_storageProfile = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdate _networkProfile;

        /// <summary>Network properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdate NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkProfileUpdate()); set => this._networkProfile = value; }

        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StorageProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdate _storageProfile;

        /// <summary>Storage properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdate StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageProfileUpdate()); set => this._storageProfile = value; }

        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskUpdate> StorageProfileDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdateInternal)StorageProfile).Disk; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdateInternal)StorageProfile).Disk = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="VirtualMachineInstanceUpdateProperties" /> instance.</summary>
        public VirtualMachineInstanceUpdateProperties()
        {

        }
    }
    /// Virtual Machine Instance Properties Update model
    public partial interface IVirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable
    {
        /// <summary>Availability Sets in vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Availability Sets in vm.",
        SerializedName = @"availabilitySets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem> AvailabilitySet { get; set; }
        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the number of vCPUs for the vm.",
        SerializedName = @"cpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileCpuCount { get; set; }
        /// <summary>Gets or sets a value indicating whether to enable dynamic memory or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets a value indicating whether to enable dynamic memory or not.",
        SerializedName = @"dynamicMemoryEnabled",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string HardwareProfileDynamicMemoryEnabled { get; set; }
        /// <summary>Gets or sets the max dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the max dynamic memory for the vm.",
        SerializedName = @"dynamicMemoryMaxMB",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileDynamicMemoryMaxMb { get; set; }
        /// <summary>Gets or sets the min dynamic memory for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the min dynamic memory for the vm.",
        SerializedName = @"dynamicMemoryMinMB",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileDynamicMemoryMinMb { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.",
        SerializedName = @"limitCpuForMigration",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string HardwareProfileLimitCpuForMigration { get; set; }
        /// <summary>MemoryMB is the size of a virtual machine's memory, in MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"MemoryMB is the size of a virtual machine's memory, in MB.",
        SerializedName = @"memoryMB",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileMemoryMb { get; set; }
        /// <summary>Type of checkpoint supported for the vm.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of checkpoint supported for the vm.",
        SerializedName = @"checkpointType",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureProfileCheckpointType { get; set; }
        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the list of network interfaces associated with the virtual machine.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterfaceUpdate) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the list of virtual disks associated with the virtual machine.",
        SerializedName = @"disks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskUpdate) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskUpdate> StorageProfileDisk { get; set; }

    }
    /// Virtual Machine Instance Properties Update model
    internal partial interface IVirtualMachineInstanceUpdatePropertiesInternal

    {
        /// <summary>Availability Sets in vm.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem> AvailabilitySet { get; set; }
        /// <summary>Hardware properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfileUpdate HardwareProfile { get; set; }
        /// <summary>Gets or sets the number of vCPUs for the vm.</summary>
        int? HardwareProfileCpuCount { get; set; }
        /// <summary>Gets or sets a value indicating whether to enable dynamic memory or not.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string HardwareProfileDynamicMemoryEnabled { get; set; }
        /// <summary>Gets or sets the max dynamic memory for the vm.</summary>
        int? HardwareProfileDynamicMemoryMaxMb { get; set; }
        /// <summary>Gets or sets the min dynamic memory for the vm.</summary>
        int? HardwareProfileDynamicMemoryMinMb { get; set; }
        /// <summary>
        /// Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("true", "false")]
        string HardwareProfileLimitCpuForMigration { get; set; }
        /// <summary>MemoryMB is the size of a virtual machine's memory, in MB.</summary>
        int? HardwareProfileMemoryMb { get; set; }
        /// <summary>Gets the infrastructure profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfileUpdate InfrastructureProfile { get; set; }
        /// <summary>Type of checkpoint supported for the vm.</summary>
        string InfrastructureProfileCheckpointType { get; set; }
        /// <summary>Network properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfileUpdate NetworkProfile { get; set; }
        /// <summary>
        /// Gets or sets the list of network interfaces associated with the virtual machine.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterfaceUpdate> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Storage properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfileUpdate StorageProfile { get; set; }
        /// <summary>Gets or sets the list of virtual disks associated with the virtual machine.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDiskUpdate> StorageProfileDisk { get; set; }

    }
}