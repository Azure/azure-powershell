// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.PowerShell;

    /// <summary>Define the virtualMachineInstance.</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstanceTypeConverter))]
    public partial class VirtualMachineInstance
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachineInstance(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachineInstance(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachineInstance" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VirtualMachineInstance" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstance FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachineInstance(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstancePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfile) content.GetValueForProperty("HardwareProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.HardwareProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfile) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("InfrastructureProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfile) content.GetValueForProperty("InfrastructureProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InfrastructureProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IOSProfileForVminstance) content.GetValueForProperty("OSProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.OSProfileForVminstanceTypeConverter.ConvertFrom);
            }
            if (content.Contains("AvailabilitySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).AvailabilitySet = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem>) content.GetValueForProperty("AvailabilitySet",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).AvailabilitySet, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.AvailabilitySetListItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).PowerState = (string) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).PowerState, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOstype"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOstype = (string) content.GetValueForProperty("OSProfileOstype",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOstype, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileMemoryMb = (int?) content.GetValueForProperty("HardwareProfileMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileCpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileCpuCount = (int?) content.GetValueForProperty("HardwareProfileCpuCount",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileCpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkProfileNetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfileNetworkInterface = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface>) content.GetValueForProperty("NetworkProfileNetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfileNetworkInterface, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkInterfaceTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageProfileDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfileDisk = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk>) content.GetValueForProperty("StorageProfileDisk",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfileDisk, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("InfrastructureProfileCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCloudId = (string) content.GetValueForProperty("InfrastructureProfileCloudId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileTemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileTemplateId = (string) content.GetValueForProperty("InfrastructureProfileTemplateId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileTemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileVMName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVMName = (string) content.GetValueForProperty("InfrastructureProfileVMName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVMName, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileUuid = (string) content.GetValueForProperty("InfrastructureProfileUuid",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileUuid, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileCheckpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint>) content.GetValueForProperty("InfrastructureProfileCheckpoint",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CheckpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("InfrastructureProfileCheckpointType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpointType = (string) content.GetValueForProperty("InfrastructureProfileCheckpointType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpointType, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileGeneration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileGeneration = (int?) content.GetValueForProperty("InfrastructureProfileGeneration",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileGeneration, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InfrastructureProfileBiosGuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileBiosGuid = (string) content.GetValueForProperty("InfrastructureProfileBiosGuid",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileBiosGuid, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileAdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileAdminPassword = (System.Security.SecureString) content.GetValueForProperty("OSProfileAdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileAdminPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("OSProfileComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileComputerName = (string) content.GetValueForProperty("OSProfileComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOssku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOssku = (string) content.GetValueForProperty("OSProfileOssku",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOssku, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOsversion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOsversion = (string) content.GetValueForProperty("OSProfileOsversion",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOsversion, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileLimitCpuForMigration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileLimitCpuForMigration = (string) content.GetValueForProperty("HardwareProfileLimitCpuForMigration",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileLimitCpuForMigration, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileDynamicMemoryEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryEnabled = (string) content.GetValueForProperty("HardwareProfileDynamicMemoryEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileDynamicMemoryMaxMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMaxMb = (int?) content.GetValueForProperty("HardwareProfileDynamicMemoryMaxMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMaxMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileDynamicMemoryMinMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMinMb = (int?) content.GetValueForProperty("HardwareProfileDynamicMemoryMinMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMinMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileIsHighlyAvailable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileIsHighlyAvailable = (string) content.GetValueForProperty("HardwareProfileIsHighlyAvailable",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileIsHighlyAvailable, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileLastRestoredVMCheckpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileLastRestoredVMCheckpoint = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint) content.GetValueForProperty("InfrastructureProfileLastRestoredVMCheckpoint",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileLastRestoredVMCheckpoint, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CheckpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("InfrastructureProfileInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileInventoryItemId = (string) content.GetValueForProperty("InfrastructureProfileInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileVmmServerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVmmServerId = (string) content.GetValueForProperty("InfrastructureProfileVmmServerId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVmmServerId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointId = (string) content.GetValueForProperty("LastRestoredVMCheckpointId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointParentCheckpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointParentCheckpointId = (string) content.GetValueForProperty("LastRestoredVMCheckpointParentCheckpointId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointParentCheckpointId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointName = (string) content.GetValueForProperty("LastRestoredVMCheckpointName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointName, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointDescription = (string) content.GetValueForProperty("LastRestoredVMCheckpointDescription",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointDescription, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstance"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachineInstance(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualMachineInstancePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IHardwareProfile) content.GetValueForProperty("HardwareProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.HardwareProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkProfile) content.GetValueForProperty("NetworkProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IStorageProfile) content.GetValueForProperty("StorageProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.StorageProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("InfrastructureProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInfrastructureProfile) content.GetValueForProperty("InfrastructureProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InfrastructureProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfile = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IOSProfileForVminstance) content.GetValueForProperty("OSProfile",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfile, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.OSProfileForVminstanceTypeConverter.ConvertFrom);
            }
            if (content.Contains("AvailabilitySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).AvailabilitySet = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem>) content.GetValueForProperty("AvailabilitySet",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).AvailabilitySet, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IAvailabilitySetListItem>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.AvailabilitySetListItemTypeConverter.ConvertFrom));
            }
            if (content.Contains("PowerState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).PowerState = (string) content.GetValueForProperty("PowerState",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).PowerState, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOstype"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOstype = (string) content.GetValueForProperty("OSProfileOstype",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOstype, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileMemoryMb = (int?) content.GetValueForProperty("HardwareProfileMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileCpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileCpuCount = (int?) content.GetValueForProperty("HardwareProfileCpuCount",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileCpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkProfileNetworkInterface"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfileNetworkInterface = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface>) content.GetValueForProperty("NetworkProfileNetworkInterface",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).NetworkProfileNetworkInterface, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.INetworkInterface>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.NetworkInterfaceTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageProfileDisk"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfileDisk = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk>) content.GetValueForProperty("StorageProfileDisk",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).StorageProfileDisk, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualDisk>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.VirtualDiskTypeConverter.ConvertFrom));
            }
            if (content.Contains("InfrastructureProfileCloudId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCloudId = (string) content.GetValueForProperty("InfrastructureProfileCloudId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCloudId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileTemplateId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileTemplateId = (string) content.GetValueForProperty("InfrastructureProfileTemplateId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileTemplateId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileVMName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVMName = (string) content.GetValueForProperty("InfrastructureProfileVMName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVMName, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileUuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileUuid = (string) content.GetValueForProperty("InfrastructureProfileUuid",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileUuid, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileCheckpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint>) content.GetValueForProperty("InfrastructureProfileCheckpoint",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint>(__y, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CheckpointTypeConverter.ConvertFrom));
            }
            if (content.Contains("InfrastructureProfileCheckpointType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpointType = (string) content.GetValueForProperty("InfrastructureProfileCheckpointType",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileCheckpointType, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileGeneration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileGeneration = (int?) content.GetValueForProperty("InfrastructureProfileGeneration",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileGeneration, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InfrastructureProfileBiosGuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileBiosGuid = (string) content.GetValueForProperty("InfrastructureProfileBiosGuid",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileBiosGuid, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileAdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileAdminPassword = (System.Security.SecureString) content.GetValueForProperty("OSProfileAdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileAdminPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("OSProfileComputerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileComputerName = (string) content.GetValueForProperty("OSProfileComputerName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileComputerName, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOssku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOssku = (string) content.GetValueForProperty("OSProfileOssku",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOssku, global::System.Convert.ToString);
            }
            if (content.Contains("OSProfileOsversion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOsversion = (string) content.GetValueForProperty("OSProfileOsversion",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).OSProfileOsversion, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileLimitCpuForMigration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileLimitCpuForMigration = (string) content.GetValueForProperty("HardwareProfileLimitCpuForMigration",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileLimitCpuForMigration, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileDynamicMemoryEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryEnabled = (string) content.GetValueForProperty("HardwareProfileDynamicMemoryEnabled",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("HardwareProfileDynamicMemoryMaxMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMaxMb = (int?) content.GetValueForProperty("HardwareProfileDynamicMemoryMaxMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMaxMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileDynamicMemoryMinMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMinMb = (int?) content.GetValueForProperty("HardwareProfileDynamicMemoryMinMb",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileDynamicMemoryMinMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HardwareProfileIsHighlyAvailable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileIsHighlyAvailable = (string) content.GetValueForProperty("HardwareProfileIsHighlyAvailable",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).HardwareProfileIsHighlyAvailable, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileLastRestoredVMCheckpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileLastRestoredVMCheckpoint = (Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.ICheckpoint) content.GetValueForProperty("InfrastructureProfileLastRestoredVMCheckpoint",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileLastRestoredVMCheckpoint, Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.CheckpointTypeConverter.ConvertFrom);
            }
            if (content.Contains("InfrastructureProfileInventoryItemId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileInventoryItemId = (string) content.GetValueForProperty("InfrastructureProfileInventoryItemId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileInventoryItemId, global::System.Convert.ToString);
            }
            if (content.Contains("InfrastructureProfileVmmServerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVmmServerId = (string) content.GetValueForProperty("InfrastructureProfileVmmServerId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).InfrastructureProfileVmmServerId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointId = (string) content.GetValueForProperty("LastRestoredVMCheckpointId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointParentCheckpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointParentCheckpointId = (string) content.GetValueForProperty("LastRestoredVMCheckpointParentCheckpointId",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointParentCheckpointId, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointName = (string) content.GetValueForProperty("LastRestoredVMCheckpointName",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointName, global::System.Convert.ToString);
            }
            if (content.Contains("LastRestoredVMCheckpointDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointDescription = (string) content.GetValueForProperty("LastRestoredVMCheckpointDescription",((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInstanceInternal)this).LastRestoredVMCheckpointDescription, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Define the virtualMachineInstance.
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstanceTypeConverter))]
    public partial interface IVirtualMachineInstance

    {

    }
}