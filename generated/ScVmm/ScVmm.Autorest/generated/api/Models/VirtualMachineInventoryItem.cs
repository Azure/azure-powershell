// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Extensions;

    /// <summary>The Virtual machine inventory item.</summary>
    public partial class VirtualMachineInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItem,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties __inventoryItemProperties = new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InventoryItemProperties();

        /// <summary>Backing field for <see cref="BiosGuid" /> property.</summary>
        private string _biosGuid;

        /// <summary>Gets the bios guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string BiosGuid { get => this._biosGuid; }

        /// <summary>Backing field for <see cref="Cloud" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetails _cloud;

        /// <summary>Cloud inventory resource details where the VM is present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetails Cloud { get => (this._cloud = this._cloud ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InventoryItemDetails()); set => this._cloud = value; }

        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string CloudInventoryItemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetailsInternal)Cloud).InventoryItemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetailsInternal)Cloud).InventoryItemId = value ?? null; }

        /// <summary>Gets or sets the Managed Object name in Vmm for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inlined)]
        public string CloudInventoryItemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetailsInternal)Cloud).InventoryItemName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetailsInternal)Cloud).InventoryItemName = value ?? null; }

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private System.Collections.Generic.List<string> _iPAddress;

        /// <summary>Gets or sets the nic ip addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Gets the Managed Object name in Vmm for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string InventoryItemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName; }

        /// <summary>They inventory type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string InventoryType { get => "VirtualMachine"; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryType = "VirtualMachine"; }

        /// <summary>Backing field for <see cref="ManagedMachineResourceId" /> property.</summary>
        private string _managedMachineResourceId;

        /// <summary>Gets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string ManagedMachineResourceId { get => this._managedMachineResourceId; }

        /// <summary>Gets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; }

        /// <summary>Internal Acessors for InventoryItemName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.InventoryItemName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).InventoryItemName = value; }

        /// <summary>Internal Acessors for ManagedResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.ManagedResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ManagedResourceId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for Uuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal.Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid = value; }

        /// <summary>Internal Acessors for BiosGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.BiosGuid { get => this._biosGuid; set { {_biosGuid = value;} } }

        /// <summary>Internal Acessors for Cloud</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetails Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.Cloud { get => (this._cloud = this._cloud ?? new Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.InventoryItemDetails()); set { {_cloud = value;} } }

        /// <summary>Internal Acessors for ManagedMachineResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.ManagedMachineResourceId { get => this._managedMachineResourceId; set { {_managedMachineResourceId = value;} } }

        /// <summary>Internal Acessors for OSName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.OSName { get => this._oSName; set { {_oSName = value;} } }

        /// <summary>Internal Acessors for OSType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.OSType { get => this._oSType; set { {_oSType = value;} } }

        /// <summary>Internal Acessors for OSVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.OSVersion { get => this._oSVersion; set { {_oSVersion = value;} } }

        /// <summary>Internal Acessors for PowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IVirtualMachineInventoryItemInternal.PowerState { get => this._powerState; set { {_powerState = value;} } }

        /// <summary>Backing field for <see cref="OSName" /> property.</summary>
        private string _oSName;

        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSName { get => this._oSName; }

        /// <summary>Backing field for <see cref="OSType" /> property.</summary>
        private string _oSType;

        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSType { get => this._oSType; }

        /// <summary>Backing field for <see cref="OSVersion" /> property.</summary>
        private string _oSVersion;

        /// <summary>Gets os version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string OSVersion { get => this._oSVersion; }

        /// <summary>Backing field for <see cref="PowerState" /> property.</summary>
        private string _powerState;

        /// <summary>Gets the power state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Owned)]
        public string PowerState { get => this._powerState; }

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).ProvisioningState; }

        /// <summary>Gets the UUID (which is assigned by Vmm) for the inventory item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Origin(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PropertyOrigin.Inherited)]
        public string Uuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal)__inventoryItemProperties).Uuid; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__inventoryItemProperties), __inventoryItemProperties);
            await eventListener.AssertObjectIsValid(nameof(__inventoryItemProperties), __inventoryItemProperties);
        }

        /// <summary>Creates an new <see cref="VirtualMachineInventoryItem" /> instance.</summary>
        public VirtualMachineInventoryItem()
        {
            this.__inventoryItemProperties.InventoryType = "VirtualMachine";
        }
    }
    /// The Virtual machine inventory item.
    public partial interface IVirtualMachineInventoryItem :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemProperties
    {
        /// <summary>Gets the bios guid.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the bios guid.",
        SerializedName = @"biosGuid",
        PossibleTypes = new [] { typeof(string) })]
        string BiosGuid { get;  }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the inventory Item ID for the resource.",
        SerializedName = @"inventoryItemId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudInventoryItemId { get; set; }
        /// <summary>Gets or sets the Managed Object name in Vmm for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the Managed Object name in Vmm for the resource.",
        SerializedName = @"inventoryItemName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudInventoryItemName { get; set; }
        /// <summary>Gets or sets the nic ip addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Gets or sets the nic ip addresses.",
        SerializedName = @"ipAddresses",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPAddress { get; set; }
        /// <summary>Gets the tracked resource id corresponding to the inventory resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the tracked resource id corresponding to the inventory resource.",
        SerializedName = @"managedMachineResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedMachineResourceId { get;  }
        /// <summary>Gets os name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets os name.",
        SerializedName = @"osName",
        PossibleTypes = new [] { typeof(string) })]
        string OSName { get;  }
        /// <summary>Gets the type of the os.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the type of the os.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get;  }
        /// <summary>Gets os version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets os version.",
        SerializedName = @"osVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSVersion { get;  }
        /// <summary>Gets the power state of the virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Gets the power state of the virtual machine.",
        SerializedName = @"powerState",
        PossibleTypes = new [] { typeof(string) })]
        string PowerState { get;  }

    }
    /// The Virtual machine inventory item.
    internal partial interface IVirtualMachineInventoryItemInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemPropertiesInternal
    {
        /// <summary>Gets the bios guid.</summary>
        string BiosGuid { get; set; }
        /// <summary>Cloud inventory resource details where the VM is present.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ScVmm.Models.IInventoryItemDetails Cloud { get; set; }
        /// <summary>Gets or sets the inventory Item ID for the resource.</summary>
        string CloudInventoryItemId { get; set; }
        /// <summary>Gets or sets the Managed Object name in Vmm for the resource.</summary>
        string CloudInventoryItemName { get; set; }
        /// <summary>Gets or sets the nic ip addresses.</summary>
        System.Collections.Generic.List<string> IPAddress { get; set; }
        /// <summary>Gets the tracked resource id corresponding to the inventory resource.</summary>
        string ManagedMachineResourceId { get; set; }
        /// <summary>Gets os name.</summary>
        string OSName { get; set; }
        /// <summary>Gets the type of the os.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ScVmm.PSArgumentCompleterAttribute("Windows", "Linux", "Other")]
        string OSType { get; set; }
        /// <summary>Gets os version.</summary>
        string OSVersion { get; set; }
        /// <summary>Gets the power state of the virtual machine.</summary>
        string PowerState { get; set; }

    }
}