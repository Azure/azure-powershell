// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Arc-enabled edge device with HCI OS.</summary>
    public partial class HciEdgeDevice :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevice,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevice"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevice __edgeDevice = new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.EdgeDevice();

        /// <summary>Device metadata details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string DeviceConfigurationDeviceMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfigurationDeviceMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfigurationDeviceMetadata = value ?? null; }

        /// <summary>NIC Details of device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetail[] DeviceConfigurationNicDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfigurationNicDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfigurationNicDetail = value ?? null /* arrayOf */; }

        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public bool? HostNetworkEnableStorageAutoIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkEnableStorageAutoIP; }

        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkIntent; }

        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public bool? HostNetworkStorageConnectivitySwitchless { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageConnectivitySwitchless; }

        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageNetwork; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Id; }

        /// <summary>Device kind to support polymorphic resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDeviceInternal)__edgeDevice).Kind; }

        /// <summary>Internal Acessors for Kind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDeviceInternal.Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDeviceInternal)__edgeDevice).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDeviceInternal)__edgeDevice).Kind = value; }

        /// <summary>Internal Acessors for DeviceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IDeviceConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.DeviceConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).DeviceConfiguration = value; }

        /// <summary>Internal Acessors for HostNetworkEnableStorageAutoIP</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.HostNetworkEnableStorageAutoIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkEnableStorageAutoIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkEnableStorageAutoIP = value; }

        /// <summary>Internal Acessors for HostNetworkIntent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.HostNetworkIntent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkIntent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkIntent = value; }

        /// <summary>Internal Acessors for HostNetworkStorageConnectivitySwitchless</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.HostNetworkStorageConnectivitySwitchless { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageConnectivitySwitchless; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageConnectivitySwitchless = value; }

        /// <summary>Internal Acessors for HostNetworkStorageNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.HostNetworkStorageNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).HostNetworkStorageNetwork = value; }

        /// <summary>Internal Acessors for NetworkProfileHostNetwork</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHostNetworkAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.NetworkProfileHostNetwork { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileHostNetwork; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileHostNetwork = value; }

        /// <summary>Internal Acessors for NetworkProfileNicDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.NetworkProfileNicDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileNicDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileNicDetail = value; }

        /// <summary>Internal Acessors for NetworkProfileSwitchDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.NetworkProfileSwitchDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileSwitchDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileSwitchDetail = value; }

        /// <summary>Internal Acessors for OSProfileAssemblyVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.OSProfileAssemblyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileAssemblyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileAssemblyVersion = value; }

        /// <summary>Internal Acessors for OSProfileBootType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.OSProfileBootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileBootType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileBootType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciEdgeDeviceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ReportedProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedProperty = value; }

        /// <summary>Internal Acessors for ReportedPropertyDeviceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertyDeviceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyDeviceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyDeviceState = value; }

        /// <summary>Internal Acessors for ReportedPropertyExtensionProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertyExtensionProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyExtensionProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyExtensionProfile = value; }

        /// <summary>Internal Acessors for ReportedPropertyExtensionProfileExtension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertyExtensionProfileExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyExtensionProfileExtension; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyExtensionProfileExtension = value; }

        /// <summary>Internal Acessors for ReportedPropertyNetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertyNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyNetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyNetworkProfile = value; }

        /// <summary>Internal Acessors for ReportedPropertyOSProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertyOSProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyOSProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyOSProfile = value; }

        /// <summary>Internal Acessors for ReportedPropertySbeDeploymentPackageInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.ReportedPropertySbeDeploymentPackageInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertySbeDeploymentPackageInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertySbeDeploymentPackageInfo = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.SbeDeploymentPackageInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoCode = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.SbeDeploymentPackageInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoMessage = value; }

        /// <summary>Internal Acessors for SbeDeploymentPackageInfoSbeManifest</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceInternal.SbeDeploymentPackageInfoSbeManifest { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoSbeManifest; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoSbeManifest = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Name; }

        /// <summary>List of NIC Details of device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileNicDetail; }

        /// <summary>List of switch details for edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).NetworkProfileSwitchDetail; }

        /// <summary>Version of assembly present on device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string OSProfileAssemblyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileAssemblyVersion; }

        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string OSProfileBootType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).OSProfileBootType; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceProperties _property;

        /// <summary>properties for Arc-enabled edge device with HCI OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.HciEdgeDeviceProperties()); set => this._property = value; }

        /// <summary>Provisioning state of edgeDevice resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevicePropertiesInternal)Property).ProvisioningState; }

        /// <summary>edge device state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? ReportedPropertyDeviceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyDeviceState; }

        /// <summary>List of Arc extensions installed on edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] ReportedPropertyExtensionProfileExtension { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).ReportedPropertyExtensionProfileExtension; }

        /// <summary>SBE deployment validation code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoCode; }

        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoMessage; }

        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string SbeDeploymentPackageInfoSbeManifest { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDevicePropertiesInternal)Property).SbeDeploymentPackageInfoSbeManifest; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api40.IResourceInternal)__edgeDevice).Type; }

        /// <summary>Creates an new <see cref="HciEdgeDevice" /> instance.</summary>
        public HciEdgeDevice()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__edgeDevice), __edgeDevice);
            await eventListener.AssertObjectIsValid(nameof(__edgeDevice), __edgeDevice);
        }
    }
    /// Arc-enabled edge device with HCI OS.
    public partial interface IHciEdgeDevice :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDevice
    {
        /// <summary>Device metadata details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Device metadata details.",
        SerializedName = @"deviceMetadata",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceConfigurationDeviceMetadata { get; set; }
        /// <summary>NIC Details of device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NIC Details of device",
        SerializedName = @"nicDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetail[] DeviceConfigurationNicDetail { get; set; }
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
        SerializedName = @"enableStorageAutoIp",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HostNetworkEnableStorageAutoIP { get;  }
        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
        SerializedName = @"intents",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get;  }
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Defines how the storage adapters between nodes are connected either switch or switch less.",
        SerializedName = @"storageConnectivitySwitchless",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HostNetworkStorageConnectivitySwitchless { get;  }
        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of StorageNetworks config to deploy AzureStackHCI Cluster.",
        SerializedName = @"storageNetworks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get;  }
        /// <summary>List of NIC Details of device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of NIC Details of device.",
        SerializedName = @"nicDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get;  }
        /// <summary>List of switch details for edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of switch details for edge device.",
        SerializedName = @"switchDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get;  }
        /// <summary>Version of assembly present on device</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of assembly present on device",
        SerializedName = @"assemblyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileAssemblyVersion { get;  }
        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The boot type of the device. e.g. UEFI, Legacy etc",
        SerializedName = @"bootType",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileBootType { get;  }
        /// <summary>Provisioning state of edgeDevice resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of edgeDevice resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>edge device state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"edge device state.",
        SerializedName = @"deviceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? ReportedPropertyDeviceState { get;  }
        /// <summary>List of Arc extensions installed on edge device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Arc extensions installed on edge device.",
        SerializedName = @"extensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] ReportedPropertyExtensionProfileExtension { get;  }
        /// <summary>SBE deployment validation code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"SBE deployment validation code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoCode { get;  }
        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A detailed message that explains the SBE package validation result.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoMessage { get;  }
        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This represents discovered update results for matching updates and store it as SBE manifest.",
        SerializedName = @"sbeManifest",
        PossibleTypes = new [] { typeof(string) })]
        string SbeDeploymentPackageInfoSbeManifest { get;  }

    }
    /// Arc-enabled edge device with HCI OS.
    internal partial interface IHciEdgeDeviceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IEdgeDeviceInternal
    {
        /// <summary>Device Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IDeviceConfiguration DeviceConfiguration { get; set; }
        /// <summary>Device metadata details.</summary>
        string DeviceConfigurationDeviceMetadata { get; set; }
        /// <summary>NIC Details of device</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetail[] DeviceConfigurationNicDetail { get; set; }
        /// <summary>
        /// Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage
        /// NICs when Network ATC is not assigning the IPs for storage automatically.
        /// </summary>
        bool? HostNetworkEnableStorageAutoIP { get; set; }
        /// <summary>
        /// The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own
        /// name, traffic type, adapter names, and overrides as recommended by your OEM.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IIntentsAutoGenerated[] HostNetworkIntent { get; set; }
        /// <summary>
        /// Defines how the storage adapters between nodes are connected either switch or switch less.
        /// </summary>
        bool? HostNetworkStorageConnectivitySwitchless { get; set; }
        /// <summary>List of StorageNetworks config to deploy AzureStackHCI Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IStorageNetworksAutoGenerated[] HostNetworkStorageNetwork { get; set; }
        /// <summary>HostNetwork config to deploy AzureStackHCI Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHostNetworkAutoGenerated NetworkProfileHostNetwork { get; set; }
        /// <summary>List of NIC Details of device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail[] NetworkProfileNicDetail { get; set; }
        /// <summary>List of switch details for edge device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail[] NetworkProfileSwitchDetail { get; set; }
        /// <summary>Version of assembly present on device</summary>
        string OSProfileAssemblyVersion { get; set; }
        /// <summary>The boot type of the device. e.g. UEFI, Legacy etc</summary>
        string OSProfileBootType { get; set; }
        /// <summary>properties for Arc-enabled edge device with HCI OS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciEdgeDeviceProperties Property { get; set; }
        /// <summary>Provisioning state of edgeDevice resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The instance view of all current configurations on HCI device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciReportedProperties ReportedProperty { get; set; }
        /// <summary>edge device state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.DeviceState? ReportedPropertyDeviceState { get; set; }
        /// <summary>Extensions details for edge device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionProfile ReportedPropertyExtensionProfile { get; set; }
        /// <summary>List of Arc extensions installed on edge device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IExtensionAutoGenerated[] ReportedPropertyExtensionProfileExtension { get; set; }
        /// <summary>HCI device network information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNetworkProfile ReportedPropertyNetworkProfile { get; set; }
        /// <summary>HCI device OS specific information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciOSProfile ReportedPropertyOSProfile { get; set; }
        /// <summary>Solution builder extension (SBE) deployment package information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISbeDeploymentPackageInfo ReportedPropertySbeDeploymentPackageInfo { get; set; }
        /// <summary>SBE deployment validation code.</summary>
        string SbeDeploymentPackageInfoCode { get; set; }
        /// <summary>A detailed message that explains the SBE package validation result.</summary>
        string SbeDeploymentPackageInfoMessage { get; set; }
        /// <summary>
        /// This represents discovered update results for matching updates and store it as SBE manifest.
        /// </summary>
        string SbeDeploymentPackageInfoSbeManifest { get; set; }

    }
}