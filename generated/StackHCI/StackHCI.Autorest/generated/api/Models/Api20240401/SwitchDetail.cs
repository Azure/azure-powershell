// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>List of switch details for edge device.</summary>
    public partial class SwitchDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetail,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetailInternal
    {

        /// <summary>Backing field for <see cref="Extension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension[] _extension;

        /// <summary>This represents extensions installed on virtualSwitch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension[] Extension { get => this._extension; }

        /// <summary>Internal Acessors for Extension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetailInternal.Extension { get => this._extension; set { {_extension = value;} } }

        /// <summary>Internal Acessors for SwitchName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetailInternal.SwitchName { get => this._switchName; set { {_switchName = value;} } }

        /// <summary>Internal Acessors for SwitchType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchDetailInternal.SwitchType { get => this._switchType; set { {_switchType = value;} } }

        /// <summary>Backing field for <see cref="SwitchName" /> property.</summary>
        private string _switchName;

        /// <summary>The name of the switch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SwitchName { get => this._switchName; }

        /// <summary>Backing field for <see cref="SwitchType" /> property.</summary>
        private string _switchType;

        /// <summary>The type of the switch. e.g. external, internal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SwitchType { get => this._switchType; }

        /// <summary>Creates an new <see cref="SwitchDetail" /> instance.</summary>
        public SwitchDetail()
        {

        }
    }
    /// List of switch details for edge device.
    public partial interface ISwitchDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>This represents extensions installed on virtualSwitch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This represents extensions installed on virtualSwitch.",
        SerializedName = @"extensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension[] Extension { get;  }
        /// <summary>The name of the switch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the switch.",
        SerializedName = @"switchName",
        PossibleTypes = new [] { typeof(string) })]
        string SwitchName { get;  }
        /// <summary>The type of the switch. e.g. external, internal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the switch. e.g. external, internal.",
        SerializedName = @"switchType",
        PossibleTypes = new [] { typeof(string) })]
        string SwitchType { get;  }

    }
    /// List of switch details for edge device.
    internal partial interface ISwitchDetailInternal

    {
        /// <summary>This represents extensions installed on virtualSwitch.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ISwitchExtension[] Extension { get; set; }
        /// <summary>The name of the switch.</summary>
        string SwitchName { get; set; }
        /// <summary>The type of the switch. e.g. external, internal.</summary>
        string SwitchType { get; set; }

    }
}