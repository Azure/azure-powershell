// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Log Collection Request</summary>
    public partial class LogCollectionRequest :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequest,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestInternal
    {

        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? FromDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestPropertiesInternal)Property).FromDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestPropertiesInternal)Property).FromDate = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestProperties Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionRequestProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestProperties _property;

        /// <summary>Properties for Log Collection Request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionRequestProperties()); set => this._property = value; }

        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public global::System.DateTime? ToDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestPropertiesInternal)Property).ToDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestPropertiesInternal)Property).ToDate = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="LogCollectionRequest" /> instance.</summary>
        public LogCollectionRequest()
        {

        }
    }
    /// Log Collection Request
    public partial interface ILogCollectionRequest :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"From DateTimeStamp from when logs need to be connected",
        SerializedName = @"fromDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FromDate { get; set; }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To DateTimeStamp till when logs need to be connected",
        SerializedName = @"toDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ToDate { get; set; }

    }
    /// Log Collection Request
    internal partial interface ILogCollectionRequestInternal

    {
        /// <summary>From DateTimeStamp from when logs need to be connected</summary>
        global::System.DateTime? FromDate { get; set; }
        /// <summary>Properties for Log Collection Request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionRequestProperties Property { get; set; }
        /// <summary>To DateTimeStamp till when logs need to be connected</summary>
        global::System.DateTime? ToDate { get; set; }

    }
}