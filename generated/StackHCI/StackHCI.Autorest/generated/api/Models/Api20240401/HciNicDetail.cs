// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>The NIC Detail of a device.</summary>
    public partial class HciNicDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetail,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal
    {

        /// <summary>Backing field for <see cref="AdapterName" /> property.</summary>
        private string _adapterName;

        /// <summary>Adapter Name of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AdapterName { get => this._adapterName; }

        /// <summary>Backing field for <see cref="ComponentId" /> property.</summary>
        private string _componentId;

        /// <summary>Component Id of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ComponentId { get => this._componentId; }

        /// <summary>Backing field for <see cref="DefaultGateway" /> property.</summary>
        private string _defaultGateway;

        /// <summary>Default Gateway of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DefaultGateway { get => this._defaultGateway; }

        /// <summary>Backing field for <see cref="DefaultIsolationId" /> property.</summary>
        private string _defaultIsolationId;

        /// <summary>Default Isolation of Management NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DefaultIsolationId { get => this._defaultIsolationId; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>DNS Servers for NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; }

        /// <summary>Backing field for <see cref="DriverVersion" /> property.</summary>
        private string _driverVersion;

        /// <summary>Driver Version of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DriverVersion { get => this._driverVersion; }

        /// <summary>Backing field for <see cref="InterfaceDescription" /> property.</summary>
        private string _interfaceDescription;

        /// <summary>Interface Description of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string InterfaceDescription { get => this._interfaceDescription; }

        /// <summary>Backing field for <see cref="Ip4Address" /> property.</summary>
        private string _ip4Address;

        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Ip4Address { get => this._ip4Address; }

        /// <summary>Backing field for <see cref="MacAddress" /> property.</summary>
        private string _macAddress;

        /// <summary>MAC address information of NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string MacAddress { get => this._macAddress; }

        /// <summary>Internal Acessors for AdapterName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.AdapterName { get => this._adapterName; set { {_adapterName = value;} } }

        /// <summary>Internal Acessors for ComponentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.ComponentId { get => this._componentId; set { {_componentId = value;} } }

        /// <summary>Internal Acessors for DefaultGateway</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.DefaultGateway { get => this._defaultGateway; set { {_defaultGateway = value;} } }

        /// <summary>Internal Acessors for DefaultIsolationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.DefaultIsolationId { get => this._defaultIsolationId; set { {_defaultIsolationId = value;} } }

        /// <summary>Internal Acessors for DnsServer</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.DnsServer { get => this._dnsServer; set { {_dnsServer = value;} } }

        /// <summary>Internal Acessors for DriverVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.DriverVersion { get => this._driverVersion; set { {_driverVersion = value;} } }

        /// <summary>Internal Acessors for InterfaceDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.InterfaceDescription { get => this._interfaceDescription; set { {_interfaceDescription = value;} } }

        /// <summary>Internal Acessors for Ip4Address</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.Ip4Address { get => this._ip4Address; set { {_ip4Address = value;} } }

        /// <summary>Internal Acessors for MacAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.MacAddress { get => this._macAddress; set { {_macAddress = value;} } }

        /// <summary>Internal Acessors for NicStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.NicStatus { get => this._nicStatus; set { {_nicStatus = value;} } }

        /// <summary>Internal Acessors for NicType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.NicType { get => this._nicType; set { {_nicType = value;} } }

        /// <summary>Internal Acessors for Slot</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.Slot { get => this._slot; set { {_slot = value;} } }

        /// <summary>Internal Acessors for SubnetMask</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.SubnetMask { get => this._subnetMask; set { {_subnetMask = value;} } }

        /// <summary>Internal Acessors for SwitchName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.SwitchName { get => this._switchName; set { {_switchName = value;} } }

        /// <summary>Internal Acessors for VlanId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IHciNicDetailInternal.VlanId { get => this._vlanId; set { {_vlanId = value;} } }

        /// <summary>Backing field for <see cref="NicStatus" /> property.</summary>
        private string _nicStatus;

        /// <summary>The status of NIC, up, disconnected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string NicStatus { get => this._nicStatus; }

        /// <summary>Backing field for <see cref="NicType" /> property.</summary>
        private string _nicType;

        /// <summary>The type of NIC, physical, virtual, management.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string NicType { get => this._nicType; }

        /// <summary>Backing field for <see cref="Slot" /> property.</summary>
        private string _slot;

        /// <summary>The slot attached to the NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Slot { get => this._slot; }

        /// <summary>Backing field for <see cref="SubnetMask" /> property.</summary>
        private string _subnetMask;

        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SubnetMask { get => this._subnetMask; }

        /// <summary>Backing field for <see cref="SwitchName" /> property.</summary>
        private string _switchName;

        /// <summary>The switch attached to the NIC, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SwitchName { get => this._switchName; }

        /// <summary>Backing field for <see cref="VlanId" /> property.</summary>
        private string _vlanId;

        /// <summary>The VLAN ID of the physical NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string VlanId { get => this._vlanId; }

        /// <summary>Creates an new <see cref="HciNicDetail" /> instance.</summary>
        public HciNicDetail()
        {

        }
    }
    /// The NIC Detail of a device.
    public partial interface IHciNicDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Adapter Name of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Adapter Name of NIC",
        SerializedName = @"adapterName",
        PossibleTypes = new [] { typeof(string) })]
        string AdapterName { get;  }
        /// <summary>Component Id of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Component Id of NIC",
        SerializedName = @"componentId",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentId { get;  }
        /// <summary>Default Gateway of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default Gateway of NIC",
        SerializedName = @"defaultGateway",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultGateway { get;  }
        /// <summary>Default Isolation of Management NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default Isolation of Management NIC",
        SerializedName = @"defaultIsolationId",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultIsolationId { get;  }
        /// <summary>DNS Servers for NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DNS Servers for NIC",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get;  }
        /// <summary>Driver Version of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Driver Version of NIC",
        SerializedName = @"driverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DriverVersion { get;  }
        /// <summary>Interface Description of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Interface Description of NIC",
        SerializedName = @"interfaceDescription",
        PossibleTypes = new [] { typeof(string) })]
        string InterfaceDescription { get;  }
        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subnet Mask of NIC",
        SerializedName = @"ip4Address",
        PossibleTypes = new [] { typeof(string) })]
        string Ip4Address { get;  }
        /// <summary>MAC address information of NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"MAC address information of NIC.",
        SerializedName = @"macAddress",
        PossibleTypes = new [] { typeof(string) })]
        string MacAddress { get;  }
        /// <summary>The status of NIC, up, disconnected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of NIC, up, disconnected.",
        SerializedName = @"nicStatus",
        PossibleTypes = new [] { typeof(string) })]
        string NicStatus { get;  }
        /// <summary>The type of NIC, physical, virtual, management.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of NIC, physical, virtual, management.",
        SerializedName = @"nicType",
        PossibleTypes = new [] { typeof(string) })]
        string NicType { get;  }
        /// <summary>The slot attached to the NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The slot attached to the NIC.",
        SerializedName = @"slot",
        PossibleTypes = new [] { typeof(string) })]
        string Slot { get;  }
        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subnet Mask of NIC",
        SerializedName = @"subnetMask",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetMask { get;  }
        /// <summary>The switch attached to the NIC, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The switch attached to the NIC, if any.",
        SerializedName = @"switchName",
        PossibleTypes = new [] { typeof(string) })]
        string SwitchName { get;  }
        /// <summary>The VLAN ID of the physical NIC.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The VLAN ID of the physical NIC.",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(string) })]
        string VlanId { get;  }

    }
    /// The NIC Detail of a device.
    internal partial interface IHciNicDetailInternal

    {
        /// <summary>Adapter Name of NIC</summary>
        string AdapterName { get; set; }
        /// <summary>Component Id of NIC</summary>
        string ComponentId { get; set; }
        /// <summary>Default Gateway of NIC</summary>
        string DefaultGateway { get; set; }
        /// <summary>Default Isolation of Management NIC</summary>
        string DefaultIsolationId { get; set; }
        /// <summary>DNS Servers for NIC</summary>
        string[] DnsServer { get; set; }
        /// <summary>Driver Version of NIC</summary>
        string DriverVersion { get; set; }
        /// <summary>Interface Description of NIC</summary>
        string InterfaceDescription { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        string Ip4Address { get; set; }
        /// <summary>MAC address information of NIC.</summary>
        string MacAddress { get; set; }
        /// <summary>The status of NIC, up, disconnected.</summary>
        string NicStatus { get; set; }
        /// <summary>The type of NIC, physical, virtual, management.</summary>
        string NicType { get; set; }
        /// <summary>The slot attached to the NIC.</summary>
        string Slot { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        string SubnetMask { get; set; }
        /// <summary>The switch attached to the NIC, if any.</summary>
        string SwitchName { get; set; }
        /// <summary>The VLAN ID of the physical NIC.</summary>
        string VlanId { get; set; }

    }
}