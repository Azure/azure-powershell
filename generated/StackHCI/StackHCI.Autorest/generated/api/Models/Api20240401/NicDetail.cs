// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>The NIC Detail of a device.</summary>
    public partial class NicDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetail,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.INicDetailInternal
    {

        /// <summary>Backing field for <see cref="AdapterName" /> property.</summary>
        private string _adapterName;

        /// <summary>Adapter Name of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AdapterName { get => this._adapterName; set => this._adapterName = value; }

        /// <summary>Backing field for <see cref="ComponentId" /> property.</summary>
        private string _componentId;

        /// <summary>Component Id of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string ComponentId { get => this._componentId; set => this._componentId = value; }

        /// <summary>Backing field for <see cref="DefaultGateway" /> property.</summary>
        private string _defaultGateway;

        /// <summary>Default Gateway of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DefaultGateway { get => this._defaultGateway; set => this._defaultGateway = value; }

        /// <summary>Backing field for <see cref="DefaultIsolationId" /> property.</summary>
        private string _defaultIsolationId;

        /// <summary>Default Isolation of Management NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DefaultIsolationId { get => this._defaultIsolationId; set => this._defaultIsolationId = value; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>DNS Servers for NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; set => this._dnsServer = value; }

        /// <summary>Backing field for <see cref="DriverVersion" /> property.</summary>
        private string _driverVersion;

        /// <summary>Driver Version of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DriverVersion { get => this._driverVersion; set => this._driverVersion = value; }

        /// <summary>Backing field for <see cref="InterfaceDescription" /> property.</summary>
        private string _interfaceDescription;

        /// <summary>Interface Description of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string InterfaceDescription { get => this._interfaceDescription; set => this._interfaceDescription = value; }

        /// <summary>Backing field for <see cref="Ip4Address" /> property.</summary>
        private string _ip4Address;

        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Ip4Address { get => this._ip4Address; set => this._ip4Address = value; }

        /// <summary>Backing field for <see cref="SubnetMask" /> property.</summary>
        private string _subnetMask;

        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string SubnetMask { get => this._subnetMask; set => this._subnetMask = value; }

        /// <summary>Creates an new <see cref="NicDetail" /> instance.</summary>
        public NicDetail()
        {

        }
    }
    /// The NIC Detail of a device.
    public partial interface INicDetail :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Adapter Name of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Adapter Name of NIC",
        SerializedName = @"adapterName",
        PossibleTypes = new [] { typeof(string) })]
        string AdapterName { get; set; }
        /// <summary>Component Id of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Component Id of NIC",
        SerializedName = @"componentId",
        PossibleTypes = new [] { typeof(string) })]
        string ComponentId { get; set; }
        /// <summary>Default Gateway of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default Gateway of NIC",
        SerializedName = @"defaultGateway",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultGateway { get; set; }
        /// <summary>Default Isolation of Management NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Default Isolation of Management NIC",
        SerializedName = @"defaultIsolationId",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultIsolationId { get; set; }
        /// <summary>DNS Servers for NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DNS Servers for NIC",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get; set; }
        /// <summary>Driver Version of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Driver Version of NIC",
        SerializedName = @"driverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DriverVersion { get; set; }
        /// <summary>Interface Description of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interface Description of NIC",
        SerializedName = @"interfaceDescription",
        PossibleTypes = new [] { typeof(string) })]
        string InterfaceDescription { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subnet Mask of NIC",
        SerializedName = @"ip4Address",
        PossibleTypes = new [] { typeof(string) })]
        string Ip4Address { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subnet Mask of NIC",
        SerializedName = @"subnetMask",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetMask { get; set; }

    }
    /// The NIC Detail of a device.
    internal partial interface INicDetailInternal

    {
        /// <summary>Adapter Name of NIC</summary>
        string AdapterName { get; set; }
        /// <summary>Component Id of NIC</summary>
        string ComponentId { get; set; }
        /// <summary>Default Gateway of NIC</summary>
        string DefaultGateway { get; set; }
        /// <summary>Default Isolation of Management NIC</summary>
        string DefaultIsolationId { get; set; }
        /// <summary>DNS Servers for NIC</summary>
        string[] DnsServer { get; set; }
        /// <summary>Driver Version of NIC</summary>
        string DriverVersion { get; set; }
        /// <summary>Interface Description of NIC</summary>
        string InterfaceDescription { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        string Ip4Address { get; set; }
        /// <summary>Subnet Mask of NIC</summary>
        string SubnetMask { get; set; }

    }
}