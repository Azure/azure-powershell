// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    public partial class PrecheckResult :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResult,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultInternal
    {

        /// <summary>Backing field for <see cref="AdditionalData" /> property.</summary>
        private string _additionalData;

        /// <summary>Property bag of key value pairs for additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string AdditionalData { get => this._additionalData; set => this._additionalData = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Detailed overview of the issue and what impact the issue has on the stamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The health check DisplayName localized of the individual test executed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="HealthCheckSource" /> property.</summary>
        private string _healthCheckSource;

        /// <summary>
        /// The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string HealthCheckSource { get => this._healthCheckSource; set => this._healthCheckSource = value; }

        /// <summary>Internal Acessors for Tag</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTags Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultInternal.Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.PrecheckResultTags()); set { {_tag = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>
        /// Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Remediation" /> property.</summary>
        private string _remediation;

        /// <summary>Set of steps that can be taken to resolve the issue found.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Remediation { get => this._remediation; set => this._remediation = value; }

        /// <summary>Backing field for <see cref="Severity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Severity? _severity;

        /// <summary>
        /// Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical
        /// is the only update-blocking severity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Severity? Severity { get => this._severity; set => this._severity = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? _status;

        /// <summary>
        /// The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed
        /// or failed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTags _tag;

        /// <summary>Key-value pairs that allow grouping/filtering individual tests.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.PrecheckResultTags()); set => this._tag = value; }

        /// <summary>Key that allow grouping/filtering individual tests.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string TagKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTagsInternal)Tag).Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTagsInternal)Tag).Key = value ?? null; }

        /// <summary>Value of the key that allow grouping/filtering individual tests.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string TagValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTagsInternal)Tag).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTagsInternal)Tag).Value = value ?? null; }

        /// <summary>Backing field for <see cref="TargetResourceId" /> property.</summary>
        private string _targetResourceId;

        /// <summary>The unique identifier for the affected resource (such as a node or drive).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string TargetResourceId { get => this._targetResourceId; set => this._targetResourceId = value; }

        /// <summary>Backing field for <see cref="TargetResourceName" /> property.</summary>
        private string _targetResourceName;

        /// <summary>The name of the affected resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string TargetResourceName { get => this._targetResourceName; set => this._targetResourceName = value; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>The time in which the HealthCheck was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; set => this._timestamp = value; }

        /// <summary>Backing field for <see cref="Title" /> property.</summary>
        private string _title;

        /// <summary>User-facing name; one or more sentences indicating the direct issue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string Title { get => this._title; set => this._title = value; }

        /// <summary>Creates an new <see cref="PrecheckResult" /> instance.</summary>
        public PrecheckResult()
        {

        }
    }
    public partial interface IPrecheckResult :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>Property bag of key value pairs for additional information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property bag of key value pairs for additional information.",
        SerializedName = @"additionalData",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalData { get; set; }
        /// <summary>Detailed overview of the issue and what impact the issue has on the stamp.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Detailed overview of the issue and what impact the issue has on the stamp.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The health check DisplayName localized of the individual test executed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The health check DisplayName localized of the individual test executed.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
        SerializedName = @"healthCheckSource",
        PossibleTypes = new [] { typeof(string) })]
        string HealthCheckSource { get; set; }
        /// <summary>
        /// Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Set of steps that can be taken to resolve the issue found.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set of steps that can be taken to resolve the issue found.",
        SerializedName = @"remediation",
        PossibleTypes = new [] { typeof(string) })]
        string Remediation { get; set; }
        /// <summary>
        /// Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical
        /// is the only update-blocking severity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical is the only update-blocking severity.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Severity) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Severity? Severity { get; set; }
        /// <summary>
        /// The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed
        /// or failed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed or failed.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get; set; }
        /// <summary>Key that allow grouping/filtering individual tests.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key that allow grouping/filtering individual tests.",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string TagKey { get; set; }
        /// <summary>Value of the key that allow grouping/filtering individual tests.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of the key that allow grouping/filtering individual tests.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string TagValue { get; set; }
        /// <summary>The unique identifier for the affected resource (such as a node or drive).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the affected resource (such as a node or drive).",
        SerializedName = @"targetResourceID",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceId { get; set; }
        /// <summary>The name of the affected resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the affected resource.",
        SerializedName = @"targetResourceName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetResourceName { get; set; }
        /// <summary>The time in which the HealthCheck was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time in which the HealthCheck was called.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>User-facing name; one or more sentences indicating the direct issue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User-facing name; one or more sentences indicating the direct issue.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string Title { get; set; }

    }
    internal partial interface IPrecheckResultInternal

    {
        /// <summary>Property bag of key value pairs for additional information.</summary>
        string AdditionalData { get; set; }
        /// <summary>Detailed overview of the issue and what impact the issue has on the stamp.</summary>
        string Description { get; set; }
        /// <summary>The health check DisplayName localized of the individual test executed.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).
        /// </summary>
        string HealthCheckSource { get; set; }
        /// <summary>
        /// Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.
        /// </summary>
        string Name { get; set; }
        /// <summary>Set of steps that can be taken to resolve the issue found.</summary>
        string Remediation { get; set; }
        /// <summary>
        /// Severity of the result (Critical, Warning, Informational, Hidden). This answers how important the result is. Critical
        /// is the only update-blocking severity.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Severity? Severity { get; set; }
        /// <summary>
        /// The status of the check running (i.e. Failed, Succeeded, In Progress). This answers whether the check ran, and passed
        /// or failed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.Status? Status { get; set; }
        /// <summary>Key-value pairs that allow grouping/filtering individual tests.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.IPrecheckResultTags Tag { get; set; }
        /// <summary>Key that allow grouping/filtering individual tests.</summary>
        string TagKey { get; set; }
        /// <summary>Value of the key that allow grouping/filtering individual tests.</summary>
        string TagValue { get; set; }
        /// <summary>The unique identifier for the affected resource (such as a node or drive).</summary>
        string TargetResourceId { get; set; }
        /// <summary>The name of the affected resource.</summary>
        string TargetResourceName { get; set; }
        /// <summary>The time in which the HealthCheck was called.</summary>
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>User-facing name; one or more sentences indicating the direct issue.</summary>
        string Title { get; set; }

    }
}