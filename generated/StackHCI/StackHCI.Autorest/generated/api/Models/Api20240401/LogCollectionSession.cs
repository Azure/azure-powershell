// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Extensions;

    /// <summary>Log Collection Session details of the cluster.</summary>
    public partial class LogCollectionSession :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSession,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal
    {

        /// <summary>Backing field for <see cref="CorrelationId" /> property.</summary>
        private string _correlationId;

        /// <summary>CorrelationId of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public string CorrelationId { get => this._correlationId; }

        /// <summary>Backing field for <see cref="EndTimeCollected" /> property.</summary>
        private global::System.DateTime? _endTimeCollected;

        /// <summary>End Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTimeCollected { get => this._endTimeCollected; }

        /// <summary>Backing field for <see cref="LogCollectionError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionError _logCollectionError;

        /// <summary>Log Collection Error details of the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionError LogCollectionError { get => (this._logCollectionError = this._logCollectionError ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionError()); }

        /// <summary>Error Code of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string LogCollectionErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorCode; }

        /// <summary>Error Message of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Inlined)]
        public string LogCollectionErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorMessage; }

        /// <summary>Backing field for <see cref="LogCollectionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus? _logCollectionStatus;

        /// <summary>LogCollection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus? LogCollectionStatus { get => this._logCollectionStatus; }

        /// <summary>Backing field for <see cref="LogEndTime" /> property.</summary>
        private global::System.DateTime? _logEndTime;

        /// <summary>End Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LogEndTime { get => this._logEndTime; }

        /// <summary>Backing field for <see cref="LogSize" /> property.</summary>
        private long? _logSize;

        /// <summary>Size of the logs collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public long? LogSize { get => this._logSize; }

        /// <summary>Backing field for <see cref="LogStartTime" /> property.</summary>
        private global::System.DateTime? _logStartTime;

        /// <summary>Start Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? LogStartTime { get => this._logStartTime; }

        /// <summary>Internal Acessors for CorrelationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.CorrelationId { get => this._correlationId; set { {_correlationId = value;} } }

        /// <summary>Internal Acessors for EndTimeCollected</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.EndTimeCollected { get => this._endTimeCollected; set { {_endTimeCollected = value;} } }

        /// <summary>Internal Acessors for LogCollectionError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionError Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogCollectionError { get => (this._logCollectionError = this._logCollectionError ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.LogCollectionError()); set { {_logCollectionError = value;} } }

        /// <summary>Internal Acessors for LogCollectionErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogCollectionErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorCode = value; }

        /// <summary>Internal Acessors for LogCollectionErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogCollectionErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionErrorInternal)LogCollectionError).ErrorMessage = value; }

        /// <summary>Internal Acessors for LogCollectionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogCollectionStatus { get => this._logCollectionStatus; set { {_logCollectionStatus = value;} } }

        /// <summary>Internal Acessors for LogEndTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogEndTime { get => this._logEndTime; set { {_logEndTime = value;} } }

        /// <summary>Internal Acessors for LogSize</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogSize { get => this._logSize; set { {_logSize = value;} } }

        /// <summary>Internal Acessors for LogStartTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.LogStartTime { get => this._logStartTime; set { {_logStartTime = value;} } }

        /// <summary>Internal Acessors for TimeCollected</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionSessionInternal.TimeCollected { get => this._timeCollected; set { {_timeCollected = value;} } }

        /// <summary>Backing field for <see cref="TimeCollected" /> property.</summary>
        private global::System.DateTime? _timeCollected;

        /// <summary>Duration of logs collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeCollected { get => this._timeCollected; }

        /// <summary>Creates an new <see cref="LogCollectionSession" /> instance.</summary>
        public LogCollectionSession()
        {

        }
    }
    /// Log Collection Session details of the cluster.
    public partial interface ILogCollectionSession :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.IJsonSerializable
    {
        /// <summary>CorrelationId of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"CorrelationId of the log collection",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string CorrelationId { get;  }
        /// <summary>End Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End Time of the logs when it was collected",
        SerializedName = @"endTimeCollected",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTimeCollected { get;  }
        /// <summary>Error Code of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error Code of the log collection",
        SerializedName = @"errorCode",
        PossibleTypes = new [] { typeof(string) })]
        string LogCollectionErrorCode { get;  }
        /// <summary>Error Message of the log collection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error Message of the log collection",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string LogCollectionErrorMessage { get;  }
        /// <summary>LogCollection status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"LogCollection status",
        SerializedName = @"logCollectionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus? LogCollectionStatus { get;  }
        /// <summary>End Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End Time of the logs when it was collected",
        SerializedName = @"logEndTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LogEndTime { get;  }
        /// <summary>Size of the logs collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Size of the logs collected",
        SerializedName = @"logSize",
        PossibleTypes = new [] { typeof(long) })]
        long? LogSize { get;  }
        /// <summary>Start Time of the logs when it was collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start Time of the logs when it was collected",
        SerializedName = @"logStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LogStartTime { get;  }
        /// <summary>Duration of logs collected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Duration of logs collected",
        SerializedName = @"timeCollected",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCollected { get;  }

    }
    /// Log Collection Session details of the cluster.
    internal partial interface ILogCollectionSessionInternal

    {
        /// <summary>CorrelationId of the log collection</summary>
        string CorrelationId { get; set; }
        /// <summary>End Time of the logs when it was collected</summary>
        global::System.DateTime? EndTimeCollected { get; set; }
        /// <summary>Log Collection Error details of the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Models.Api20240401.ILogCollectionError LogCollectionError { get; set; }
        /// <summary>Error Code of the log collection</summary>
        string LogCollectionErrorCode { get; set; }
        /// <summary>Error Message of the log collection</summary>
        string LogCollectionErrorMessage { get; set; }
        /// <summary>LogCollection status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.LogCollectionStatus? LogCollectionStatus { get; set; }
        /// <summary>End Time of the logs when it was collected</summary>
        global::System.DateTime? LogEndTime { get; set; }
        /// <summary>Size of the logs collected</summary>
        long? LogSize { get; set; }
        /// <summary>Start Time of the logs when it was collected</summary>
        global::System.DateTime? LogStartTime { get; set; }
        /// <summary>Duration of logs collected</summary>
        global::System.DateTime? TimeCollected { get; set; }

    }
}