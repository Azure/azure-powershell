// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support
{

    /// <summary>Aggregate state of Arc agent across the nodes in this HCI cluster.</summary>
    public partial struct ArcSettingAggregateState :
        System.IEquatable<ArcSettingAggregateState>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Accepted = @"Accepted";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Canceled = @"Canceled";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Connected = @"Connected";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Creating = @"Creating";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Deleted = @"Deleted";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Deleting = @"Deleting";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState DisableInProgress = @"DisableInProgress";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Disconnected = @"Disconnected";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Error = @"Error";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Failed = @"Failed";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState InProgress = @"InProgress";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Moving = @"Moving";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState NotSpecified = @"NotSpecified";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState PartiallyConnected = @"PartiallyConnected";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState PartiallySucceeded = @"PartiallySucceeded";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Provisioning = @"Provisioning";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Succeeded = @"Succeeded";

        public static Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState Updating = @"Updating";

        /// <summary>the value for an instance of the <see cref="ArcSettingAggregateState" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Creates an instance of the <see cref="ArcSettingAggregateState"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ArcSettingAggregateState(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Conversion from arbitrary object to ArcSettingAggregateState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ArcSettingAggregateState" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ArcSettingAggregateState(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ArcSettingAggregateState</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ArcSettingAggregateState (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ArcSettingAggregateState && Equals((ArcSettingAggregateState)obj);
        }

        /// <summary>Returns hashCode for enum ArcSettingAggregateState</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for ArcSettingAggregateState</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ArcSettingAggregateState</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ArcSettingAggregateState" />.</param>

        public static implicit operator ArcSettingAggregateState(string value)
        {
            return new ArcSettingAggregateState(value);
        }

        /// <summary>Implicit operator to convert ArcSettingAggregateState to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ArcSettingAggregateState" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ArcSettingAggregateState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e1, Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ArcSettingAggregateState</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e1, Microsoft.Azure.PowerShell.Cmdlets.StackHCI.Support.ArcSettingAggregateState e2)
        {
            return e2.Equals(e1);
        }
    }
}