// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.PowerShell;

    /// <summary>Resource properties.</summary>
    [System.ComponentModel.TypeConverter(typeof(DataCollectionRuleResourcePropertiesTypeConverter))]
    public partial class DataCollectionRuleResourceProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleResourceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DataCollectionRuleResourceProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MetadataProvisionedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedBy = (string) content.GetValueForProperty("MetadataProvisionedBy",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedBy, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataProvisionedByResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedByResourceId = (string) content.GetValueForProperty("MetadataProvisionedByResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedByResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImport = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImports) content.GetValueForProperty("DataSourceDataImport",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImport, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataSourcesSpecDataImportsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSourcePerformanceCounter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePerformanceCounter = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource>) content.GetValueForProperty("DataSourcePerformanceCounter",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePerformanceCounter, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PerfCounterDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceWindowsEventLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsEventLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource>) content.GetValueForProperty("DataSourceWindowsEventLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsEventLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.WindowsEventLogDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceSyslog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceSyslog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource>) content.GetValueForProperty("DataSourceSyslog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceSyslog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.SyslogDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceExtension = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource>) content.GetValueForProperty("DataSourceExtension",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceExtension, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ExtensionDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceLogFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceLogFile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource>) content.GetValueForProperty("DataSourceLogFile",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceLogFile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogFilesDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceIisLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceIisLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource>) content.GetValueForProperty("DataSourceIisLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceIisLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IisLogsDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceWindowsFirewallLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsFirewallLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource>) content.GetValueForProperty("DataSourceWindowsFirewallLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsFirewallLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.WindowsFirewallLogsDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourcePrometheusForwarder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePrometheusForwarder = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource>) content.GetValueForProperty("DataSourcePrometheusForwarder",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePrometheusForwarder, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PrometheusForwarderDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourcePlatformTelemetry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePlatformTelemetry = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource>) content.GetValueForProperty("DataSourcePlatformTelemetry",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePlatformTelemetry, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PlatformTelemetryDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationAzureMonitorMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetric = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecAzureMonitorMetrics) content.GetValueForProperty("DestinationAzureMonitorMetric",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetric, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DestinationsSpecAzureMonitorMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationLogAnalytic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationLogAnalytic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination>) content.GetValueForProperty("DestinationLogAnalytic",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationLogAnalytic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogAnalyticsDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationMonitoringAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationMonitoringAccount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination>) content.GetValueForProperty("DestinationMonitoringAccount",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationMonitoringAccount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.MonitoringAccountDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationEventHub"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHub = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination>) content.GetValueForProperty("DestinationEventHub",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHub, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.EventHubDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationEventHubsDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHubsDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination>) content.GetValueForProperty("DestinationEventHubsDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHubsDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.EventHubDirectDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageBlobsDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageBlobsDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>) content.GetValueForProperty("DestinationStorageBlobsDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageBlobsDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageBlobDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageTablesDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageTablesDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination>) content.GetValueForProperty("DestinationStorageTablesDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageTablesDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageTableDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageAccount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>) content.GetValueForProperty("DestinationStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageAccount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageBlobDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceDataImportEventHub"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHub = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub) content.GetValueForProperty("DataSourceDataImportEventHub",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHub, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataImportSourcesEventHubTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationAzureMonitorMetricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetricName = (string) content.GetValueForProperty("DestinationAzureMonitorMetricName",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetricName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubName = (string) content.GetValueForProperty("DataSourceDataImportEventHubName",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubConsumerGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubConsumerGroup = (string) content.GetValueForProperty("DataSourceDataImportEventHubConsumerGroup",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubConsumerGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubStream"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubStream = (string) content.GetValueForProperty("DataSourceDataImportEventHubStream",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubStream, global::System.Convert.ToString);
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSource = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources) content.GetValueForProperty("DataSource",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSource, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDataSourcesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Destination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Destination = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations) content.GetValueForProperty("Destination",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Destination, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDestinationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ImmutableId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ImmutableId = (string) content.GetValueForProperty("ImmutableId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ImmutableId, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionEndpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataCollectionEndpointId = (string) content.GetValueForProperty("DataCollectionEndpointId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataCollectionEndpointId, global::System.Convert.ToString);
            }
            if (content.Contains("StreamDeclaration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).StreamDeclaration = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations) content.GetValueForProperty("StreamDeclaration",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).StreamDeclaration, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleStreamDeclarationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataFlow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataFlow = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow>) content.GetValueForProperty("DataFlow",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataFlow, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataFlowTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleResourceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DataCollectionRuleResourceProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("MetadataProvisionedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedBy = (string) content.GetValueForProperty("MetadataProvisionedBy",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedBy, global::System.Convert.ToString);
            }
            if (content.Contains("MetadataProvisionedByResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedByResourceId = (string) content.GetValueForProperty("MetadataProvisionedByResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).MetadataProvisionedByResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImport"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImport = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImports) content.GetValueForProperty("DataSourceDataImport",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImport, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataSourcesSpecDataImportsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSourcePerformanceCounter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePerformanceCounter = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource>) content.GetValueForProperty("DataSourcePerformanceCounter",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePerformanceCounter, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPerfCounterDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PerfCounterDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceWindowsEventLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsEventLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource>) content.GetValueForProperty("DataSourceWindowsEventLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsEventLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsEventLogDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.WindowsEventLogDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceSyslog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceSyslog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource>) content.GetValueForProperty("DataSourceSyslog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceSyslog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ISyslogDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.SyslogDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceExtension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceExtension = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource>) content.GetValueForProperty("DataSourceExtension",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceExtension, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IExtensionDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ExtensionDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceLogFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceLogFile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource>) content.GetValueForProperty("DataSourceLogFile",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceLogFile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFilesDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogFilesDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceIisLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceIisLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource>) content.GetValueForProperty("DataSourceIisLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceIisLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IIisLogsDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IisLogsDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceWindowsFirewallLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsFirewallLog = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource>) content.GetValueForProperty("DataSourceWindowsFirewallLog",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceWindowsFirewallLog, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IWindowsFirewallLogsDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.WindowsFirewallLogsDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourcePrometheusForwarder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePrometheusForwarder = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource>) content.GetValueForProperty("DataSourcePrometheusForwarder",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePrometheusForwarder, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPrometheusForwarderDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PrometheusForwarderDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourcePlatformTelemetry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePlatformTelemetry = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource>) content.GetValueForProperty("DataSourcePlatformTelemetry",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourcePlatformTelemetry, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IPlatformTelemetryDataSource>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.PlatformTelemetryDataSourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationAzureMonitorMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetric = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDestinationsSpecAzureMonitorMetrics) content.GetValueForProperty("DestinationAzureMonitorMetric",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetric, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DestinationsSpecAzureMonitorMetricsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationLogAnalytic"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationLogAnalytic = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination>) content.GetValueForProperty("DestinationLogAnalytic",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationLogAnalytic, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogAnalyticsDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogAnalyticsDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationMonitoringAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationMonitoringAccount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination>) content.GetValueForProperty("DestinationMonitoringAccount",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationMonitoringAccount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IMonitoringAccountDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.MonitoringAccountDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationEventHub"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHub = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination>) content.GetValueForProperty("DestinationEventHub",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHub, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.EventHubDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationEventHubsDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHubsDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination>) content.GetValueForProperty("DestinationEventHubsDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationEventHubsDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IEventHubDirectDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.EventHubDirectDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageBlobsDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageBlobsDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>) content.GetValueForProperty("DestinationStorageBlobsDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageBlobsDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageBlobDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageTablesDirect"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageTablesDirect = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination>) content.GetValueForProperty("DestinationStorageTablesDirect",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageTablesDirect, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageTableDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageTableDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DestinationStorageAccount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageAccount = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>) content.GetValueForProperty("DestinationStorageAccount",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationStorageAccount, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IStorageBlobDestination>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.StorageBlobDestinationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataSourceDataImportEventHub"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHub = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub) content.GetValueForProperty("DataSourceDataImportEventHub",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHub, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataImportSourcesEventHubTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationAzureMonitorMetricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetricName = (string) content.GetValueForProperty("DestinationAzureMonitorMetricName",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DestinationAzureMonitorMetricName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubName = (string) content.GetValueForProperty("DataSourceDataImportEventHubName",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubName, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubConsumerGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubConsumerGroup = (string) content.GetValueForProperty("DataSourceDataImportEventHubConsumerGroup",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubConsumerGroup, global::System.Convert.ToString);
            }
            if (content.Contains("DataSourceDataImportEventHubStream"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubStream = (string) content.GetValueForProperty("DataSourceDataImportEventHubStream",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSourceDataImportEventHubStream, global::System.Convert.ToString);
            }
            if (content.Contains("Metadata"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Metadata = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleMetadata) content.GetValueForProperty("Metadata",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Metadata, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleMetadataTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataSource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSource = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDataSources) content.GetValueForProperty("DataSource",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataSource, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDataSourcesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Destination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Destination = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleDestinations) content.GetValueForProperty("Destination",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Destination, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleDestinationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ImmutableId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ImmutableId = (string) content.GetValueForProperty("ImmutableId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ImmutableId, global::System.Convert.ToString);
            }
            if (content.Contains("DataCollectionEndpointId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataCollectionEndpointId = (string) content.GetValueForProperty("DataCollectionEndpointId",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataCollectionEndpointId, global::System.Convert.ToString);
            }
            if (content.Contains("StreamDeclaration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).StreamDeclaration = (Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleStreamDeclarations) content.GetValueForProperty("StreamDeclaration",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).StreamDeclaration, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleStreamDeclarationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataFlow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataFlow = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow>) content.GetValueForProperty("DataFlow",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).DataFlow, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataFlow>(__y, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataFlowTypeConverter.ConvertFrom));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleResourceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleResourceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleResourceProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DataCollectionRuleResourceProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataCollectionRuleResourceProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleResourceProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleResourceProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DataCollectionRuleResourceProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DataCollectionRuleResourceProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="DataCollectionRuleResourceProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionRuleResourceProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Resource properties.
    [System.ComponentModel.TypeConverter(typeof(DataCollectionRuleResourcePropertiesTypeConverter))]
    public partial interface IDataCollectionRuleResourceProperties

    {

    }
}