// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Extensions;

    /// <summary>The endpoint used by clients to ingest logs.</summary>
    public partial class DataCollectionEndpointLogsIngestion :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionEndpointLogsIngestion,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataCollectionEndpointLogsIngestionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpec"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpec __logsIngestionEndpointSpec = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogsIngestionEndpointSpec();

        /// <summary>The endpoint. This property is READ-ONLY.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inherited)]
        public string Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpecInternal)__logsIngestionEndpointSpec).Endpoint; }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpecInternal.Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpecInternal)__logsIngestionEndpointSpec).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpecInternal)__logsIngestionEndpointSpec).Endpoint = value; }

        /// <summary>Creates an new <see cref="DataCollectionEndpointLogsIngestion" /> instance.</summary>
        public DataCollectionEndpointLogsIngestion()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__logsIngestionEndpointSpec), __logsIngestionEndpointSpec);
            await eventListener.AssertObjectIsValid(nameof(__logsIngestionEndpointSpec), __logsIngestionEndpointSpec);
        }
    }
    /// The endpoint used by clients to ingest logs.
    public partial interface IDataCollectionEndpointLogsIngestion :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpec
    {

    }
    /// The endpoint used by clients to ingest logs.
    internal partial interface IDataCollectionEndpointLogsIngestionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogsIngestionEndpointSpecInternal
    {

    }
}