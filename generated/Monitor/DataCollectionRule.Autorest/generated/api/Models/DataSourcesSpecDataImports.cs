// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Extensions;

    /// <summary>Specifications of pull based data sources</summary>
    public partial class DataSourcesSpecDataImports :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImports,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataSourcesSpecDataImportsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSources"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSources __dataImportSources = new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.DataImportSources();

        /// <summary>Definition of Event Hub configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub EventHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHub = value ?? null /* model class */; }

        /// <summary>Event Hub consumer group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inherited)]
        public string EventHubConsumerGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubConsumerGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubConsumerGroup = value ?? null; }

        /// <summary>
        /// A friendly name for the data source.
        /// This name should be unique across all data sources (regardless of type) within the data collection rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inherited)]
        public string EventHubName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubName = value ?? null; }

        /// <summary>The stream to collect from EventHub</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inherited)]
        public string EventHubStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubStream; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHubStream = value ?? null; }

        /// <summary>Internal Acessors for EventHub</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesEventHub Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal.EventHub { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHub; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal)__dataImportSources).EventHub = value; }

        /// <summary>Creates an new <see cref="DataSourcesSpecDataImports" /> instance.</summary>
        public DataSourcesSpecDataImports()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__dataImportSources), __dataImportSources);
            await eventListener.AssertObjectIsValid(nameof(__dataImportSources), __dataImportSources);
        }
    }
    /// Specifications of pull based data sources
    public partial interface IDataSourcesSpecDataImports :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSources
    {

    }
    /// Specifications of pull based data sources
    internal partial interface IDataSourcesSpecDataImportsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.IDataImportSourcesInternal
    {

    }
}