// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Extensions;

    /// <summary>Settings for different log file formats</summary>
    public partial class LogFileSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsInternal
    {

        /// <summary>Internal Acessors for Text</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsText Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsInternal.Text { get => (this._text = this._text ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogFileSettingsText()); set { {_text = value;} } }

        /// <summary>Backing field for <see cref="Text" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsText _text;

        /// <summary>Text settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsText Text { get => (this._text = this._text ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.LogFileSettingsText()); set => this._text = value; }

        /// <summary>One of the supported timestamp formats</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PropertyOrigin.Inlined)]
        public string TextRecordStartTimestampFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileTextSettingsInternal)Text).RecordStartTimestampFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileTextSettingsInternal)Text).RecordStartTimestampFormat = value ?? null; }

        /// <summary>Creates an new <see cref="LogFileSettings" /> instance.</summary>
        public LogFileSettings()
        {

        }
    }
    /// Settings for different log file formats
    public partial interface ILogFileSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.IJsonSerializable
    {
        /// <summary>One of the supported timestamp formats</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"One of the supported timestamp formats",
        SerializedName = @"recordStartTimestampFormat",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("ISO 8601", "YYYY-MM-DD HH:MM:SS", "M/D/YYYY HH:MM:SS AM/PM", "Mon DD, YYYY HH:MM:SS", "yyMMdd HH:mm:ss", "ddMMyy HH:mm:ss", "MMM d hh:mm:ss", "dd/MMM/yyyy:HH:mm:ss zzz", "yyyy-MM-ddTHH:mm:ssK")]
        string TextRecordStartTimestampFormat { get; set; }

    }
    /// Settings for different log file formats
    internal partial interface ILogFileSettingsInternal

    {
        /// <summary>Text settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.Models.ILogFileSettingsText Text { get; set; }
        /// <summary>One of the supported timestamp formats</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.DataCollection.PSArgumentCompleterAttribute("ISO 8601", "YYYY-MM-DD HH:MM:SS", "M/D/YYYY HH:MM:SS AM/PM", "Mon DD, YYYY HH:MM:SS", "yyMMdd HH:mm:ss", "ddMMyy HH:mm:ss", "MMM d hh:mm:ss", "dd/MMM/yyyy:HH:mm:ss zzz", "yyyy-MM-ddTHH:mm:ssK")]
        string TextRecordStartTimestampFormat { get; set; }

    }
}