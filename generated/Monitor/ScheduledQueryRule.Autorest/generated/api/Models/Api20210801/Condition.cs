// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Extensions;

    /// <summary>A condition of the scheduled query rule.</summary>
    public partial class Condition :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.ICondition,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionInternal
    {

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IDimension[] _dimension;

        /// <summary>List of Dimensions conditions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IDimension[] Dimension { get => this._dimension; set => this._dimension = value; }

        /// <summary>Backing field for <see cref="FailingPeriod" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriods _failingPeriod;

        /// <summary>
        /// The minimum number of violations required within the selected lookback time window required to raise an alert. Relevant
        /// only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriods FailingPeriod { get => (this._failingPeriod = this._failingPeriod ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.ConditionFailingPeriods()); set => this._failingPeriod = value; }

        /// <summary>
        /// The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods. Default value is
        /// 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Inlined)]
        public long? FailingPeriodMinFailingPeriodsToAlert { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriodsInternal)FailingPeriod).MinFailingPeriodsToAlert; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriodsInternal)FailingPeriod).MinFailingPeriodsToAlert = value ?? default(long); }

        /// <summary>
        /// The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity
        /// (windowSize) and the selected number of aggregated points. Default value is 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Inlined)]
        public long? FailingPeriodNumberOfEvaluationPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriodsInternal)FailingPeriod).NumberOfEvaluationPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriodsInternal)FailingPeriod).NumberOfEvaluationPeriod = value ?? default(long); }

        /// <summary>Backing field for <see cref="MetricMeasureColumn" /> property.</summary>
        private string _metricMeasureColumn;

        /// <summary>
        /// The column containing the metric measure number. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public string MetricMeasureColumn { get => this._metricMeasureColumn; set => this._metricMeasureColumn = value; }

        /// <summary>Backing field for <see cref="MetricName" /> property.</summary>
        private string _metricName;

        /// <summary>
        /// The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public string MetricName { get => this._metricName; set => this._metricName = value; }

        /// <summary>Internal Acessors for FailingPeriod</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriods Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionInternal.FailingPeriod { get => (this._failingPeriod = this._failingPeriod ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.ConditionFailingPeriods()); set { {_failingPeriod = value;} } }

        /// <summary>Backing field for <see cref="Operator" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.ConditionOperator? _operator;

        /// <summary>
        /// The criteria operator. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.ConditionOperator? Operator { get => this._operator; set => this._operator = value; }

        /// <summary>Backing field for <see cref="Query" /> property.</summary>
        private string _query;

        /// <summary>Log query alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public string Query { get => this._query; set => this._query = value; }

        /// <summary>Backing field for <see cref="ResourceIdColumn" /> property.</summary>
        private string _resourceIdColumn;

        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only
        /// for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public string ResourceIdColumn { get => this._resourceIdColumn; set => this._resourceIdColumn = value; }

        /// <summary>Backing field for <see cref="Threshold" /> property.</summary>
        private double? _threshold;

        /// <summary>
        /// the criteria threshold value that activates the alert. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public double? Threshold { get => this._threshold; set => this._threshold = value; }

        /// <summary>Backing field for <see cref="TimeAggregation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.TimeAggregation? _timeAggregation;

        /// <summary>Aggregation type. Relevant and required only for rules of the kind LogAlert.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.TimeAggregation? TimeAggregation { get => this._timeAggregation; set => this._timeAggregation = value; }

        /// <summary>Creates an new <see cref="Condition" /> instance.</summary>
        public Condition()
        {

        }
    }
    /// A condition of the scheduled query rule.
    public partial interface ICondition :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.IJsonSerializable
    {
        /// <summary>List of Dimensions conditions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Dimensions conditions",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IDimension) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IDimension[] Dimension { get; set; }
        /// <summary>
        /// The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods. Default value is
        /// 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods. Default value is 1",
        SerializedName = @"minFailingPeriodsToAlert",
        PossibleTypes = new [] { typeof(long) })]
        long? FailingPeriodMinFailingPeriodsToAlert { get; set; }
        /// <summary>
        /// The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity
        /// (windowSize) and the selected number of aggregated points. Default value is 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points. Default value is 1",
        SerializedName = @"numberOfEvaluationPeriods",
        PossibleTypes = new [] { typeof(long) })]
        long? FailingPeriodNumberOfEvaluationPeriod { get; set; }
        /// <summary>
        /// The column containing the metric measure number. Relevant only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The column containing the metric measure number. Relevant only for rules of the kind LogAlert.",
        SerializedName = @"metricMeasureColumn",
        PossibleTypes = new [] { typeof(string) })]
        string MetricMeasureColumn { get; set; }
        /// <summary>
        /// The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.",
        SerializedName = @"metricName",
        PossibleTypes = new [] { typeof(string) })]
        string MetricName { get; set; }
        /// <summary>
        /// The criteria operator. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The criteria operator. Relevant and required only for rules of the kind LogAlert.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.ConditionOperator) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.ConditionOperator? Operator { get; set; }
        /// <summary>Log query alert</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log query alert",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string Query { get; set; }
        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only
        /// for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only for rules of the kind LogAlert.",
        SerializedName = @"resourceIdColumn",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceIdColumn { get; set; }
        /// <summary>
        /// the criteria threshold value that activates the alert. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the criteria threshold value that activates the alert. Relevant and required only for rules of the kind LogAlert.",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(double) })]
        double? Threshold { get; set; }
        /// <summary>Aggregation type. Relevant and required only for rules of the kind LogAlert.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Aggregation type. Relevant and required only for rules of the kind LogAlert.",
        SerializedName = @"timeAggregation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.TimeAggregation) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.TimeAggregation? TimeAggregation { get; set; }

    }
    /// A condition of the scheduled query rule.
    internal partial interface IConditionInternal

    {
        /// <summary>List of Dimensions conditions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IDimension[] Dimension { get; set; }
        /// <summary>
        /// The minimum number of violations required within the selected lookback time window required to raise an alert. Relevant
        /// only for rules of the kind LogAlert.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Models.Api20210801.IConditionFailingPeriods FailingPeriod { get; set; }
        /// <summary>
        /// The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods. Default value is
        /// 1
        /// </summary>
        long? FailingPeriodMinFailingPeriodsToAlert { get; set; }
        /// <summary>
        /// The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity
        /// (windowSize) and the selected number of aggregated points. Default value is 1
        /// </summary>
        long? FailingPeriodNumberOfEvaluationPeriod { get; set; }
        /// <summary>
        /// The column containing the metric measure number. Relevant only for rules of the kind LogAlert.
        /// </summary>
        string MetricMeasureColumn { get; set; }
        /// <summary>
        /// The name of the metric to be sent. Relevant and required only for rules of the kind LogToMetric.
        /// </summary>
        string MetricName { get; set; }
        /// <summary>
        /// The criteria operator. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.ConditionOperator? Operator { get; set; }
        /// <summary>Log query alert</summary>
        string Query { get; set; }
        /// <summary>
        /// The column containing the resource id. The content of the column must be a uri formatted as resource id. Relevant only
        /// for rules of the kind LogAlert.
        /// </summary>
        string ResourceIdColumn { get; set; }
        /// <summary>
        /// the criteria threshold value that activates the alert. Relevant and required only for rules of the kind LogAlert.
        /// </summary>
        double? Threshold { get; set; }
        /// <summary>Aggregation type. Relevant and required only for rules of the kind LogAlert.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.ScheduledQueryRule.Support.TimeAggregation? TimeAggregation { get; set; }

    }
}