// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Extensions;

    /// <summary>Exporter Info.</summary>
    public partial class Exporter :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporter,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal
    {

        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiDataCollectionEndpointUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiDataCollectionEndpointUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiDataCollectionEndpointUrl = value ?? null; }

        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiDataCollectionRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiDataCollectionRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiDataCollectionRule = value ?? null; }

        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string ApiStream { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiStream; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiStream = value ?? null; }

        /// <summary>Backing field for <see cref="AzureMonitorWorkspaceLog" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporter _azureMonitorWorkspaceLog;

        /// <summary>Azure Monitor Workspace Logs specific configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporter AzureMonitorWorkspaceLog { get => (this._azureMonitorWorkspaceLog = this._azureMonitorWorkspaceLog ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.AzureMonitorWorkspaceLogsExporter()); set => this._azureMonitorWorkspaceLog = value; }

        /// <summary>Max storage usage in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? CacheMaxStorageUsage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).CacheMaxStorageUsage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).CacheMaxStorageUsage = value ?? default(int); }

        /// <summary>Retention period in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? CacheRetentionPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).CacheRetentionPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).CacheRetentionPeriod = value ?? default(int); }

        /// <summary>Size of the queue for log batches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? ConcurrencyBatchQueueSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ConcurrencyBatchQueueSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ConcurrencyBatchQueueSize = value ?? default(int); }

        /// <summary>Number of parallel workers processing the log queues.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public int? ConcurrencyWorkerCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ConcurrencyWorkerCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ConcurrencyWorkerCount = value ?? default(int); }

        /// <summary>Internal Acessors for ApiSchema</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.ApiSchema { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiSchema; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).ApiSchema = value; }

        /// <summary>Internal Acessors for AzureMonitorWorkspaceLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporter Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.AzureMonitorWorkspaceLog { get => (this._azureMonitorWorkspaceLog = this._azureMonitorWorkspaceLog ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.AzureMonitorWorkspaceLogsExporter()); set { {_azureMonitorWorkspaceLog = value;} } }

        /// <summary>Internal Acessors for AzureMonitorWorkspaceLogApi</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.AzureMonitorWorkspaceLogApi { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Api; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Api = value; }

        /// <summary>Internal Acessors for AzureMonitorWorkspaceLogCache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.AzureMonitorWorkspaceLogCache { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Cache; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Cache = value; }

        /// <summary>Internal Acessors for AzureMonitorWorkspaceLogConcurrency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.AzureMonitorWorkspaceLogConcurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Concurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).Concurrency = value; }

        /// <summary>Internal Acessors for Tcp</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporter Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IExporterInternal.Tcp { get => (this._tcp = this._tcp ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.TcpExporter()); set { {_tcp = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaRecordMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaRecordMap = value ?? null /* arrayOf */; }

        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaResourceMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaResourceMap = value ?? null /* arrayOf */; }

        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaScopeMap; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporterInternal)AzureMonitorWorkspaceLog).SchemaScopeMap = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Tcp" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporter _tcp;

        /// <summary>TCP based exporter. Used for pipelineGroup exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporter Tcp { get => (this._tcp = this._tcp ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.TcpExporter()); set => this._tcp = value; }

        /// <summary>TCP url to export.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string TcpUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporterInternal)Tcp).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporterInternal)Tcp).Url = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="Exporter" /> instance.</summary>
        public Exporter()
        {

        }
    }
    /// Exporter Info.
    public partial interface IExporter :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.IJsonSerializable
    {
        /// <summary>Data collection endpoint ingestion url.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data collection endpoint ingestion url.",
        SerializedName = @"dataCollectionEndpointUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ApiDataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data Collection Rule (DCR) immutable id.",
        SerializedName = @"dataCollectionRule",
        PossibleTypes = new [] { typeof(string) })]
        string ApiDataCollectionRule { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Stream name in destination. Azure Monitor stream is related to the destination table.",
        SerializedName = @"stream",
        PossibleTypes = new [] { typeof(string) })]
        string ApiStream { get; set; }
        /// <summary>Max storage usage in megabytes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Max storage usage in megabytes.",
        SerializedName = @"maxStorageUsage",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheMaxStorageUsage { get; set; }
        /// <summary>Retention period in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Retention period in minutes.",
        SerializedName = @"retentionPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? CacheRetentionPeriod { get; set; }
        /// <summary>Size of the queue for log batches.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Size of the queue for log batches.",
        SerializedName = @"batchQueueSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ConcurrencyBatchQueueSize { get; set; }
        /// <summary>Number of parallel workers processing the log queues.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of parallel workers processing the log queues.",
        SerializedName = @"workerCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ConcurrencyWorkerCount { get; set; }
        /// <summary>The name of exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of exporter.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Record Map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Record Map.",
        SerializedName = @"recordMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container or an application running in the process.",
        SerializedName = @"resourceMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A scope map is a logical unit of the application code with which the emitted telemetry can be associated.",
        SerializedName = @"scopeMap",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }
        /// <summary>TCP url to export.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"TCP url to export.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string TcpUrl { get; set; }
        /// <summary>The type of exporter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of exporter.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("AzureMonitorWorkspaceLogs", "PipelineGroup")]
        string Type { get; set; }

    }
    /// Exporter Info.
    internal partial interface IExporterInternal

    {
        /// <summary>Data collection endpoint ingestion url.</summary>
        string ApiDataCollectionEndpointUrl { get; set; }
        /// <summary>Data Collection Rule (DCR) immutable id.</summary>
        string ApiDataCollectionRule { get; set; }
        /// <summary>The schema mapping for incoming data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ISchemaMap ApiSchema { get; set; }
        /// <summary>
        /// Stream name in destination. Azure Monitor stream is related to the destination table.
        /// </summary>
        string ApiStream { get; set; }
        /// <summary>Azure Monitor Workspace Logs specific configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsExporter AzureMonitorWorkspaceLog { get; set; }
        /// <summary>API configurations for Azure Monitor workspace exporter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IAzureMonitorWorkspaceLogsApiConfig AzureMonitorWorkspaceLogApi { get; set; }
        /// <summary>Cache configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ICacheConfiguration AzureMonitorWorkspaceLogCache { get; set; }
        /// <summary>Concurrency configuration for the exporter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IConcurrencyConfiguration AzureMonitorWorkspaceLogConcurrency { get; set; }
        /// <summary>Max storage usage in megabytes.</summary>
        int? CacheMaxStorageUsage { get; set; }
        /// <summary>Retention period in minutes.</summary>
        int? CacheRetentionPeriod { get; set; }
        /// <summary>Size of the queue for log batches.</summary>
        int? ConcurrencyBatchQueueSize { get; set; }
        /// <summary>Number of parallel workers processing the log queues.</summary>
        int? ConcurrencyWorkerCount { get; set; }
        /// <summary>The name of exporter.</summary>
        string Name { get; set; }
        /// <summary>Record Map.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IRecordMap> SchemaRecordMap { get; set; }
        /// <summary>
        /// Resource Map captures information about the entity for which telemetry is recorded. For example, metrics exposed by a
        /// Kubernetes container can be linked to a resource that specifies the cluster, namespace, pod, and container name.Resource
        /// may capture an entire hierarchy of entity identification. It may describe the host in the cloud and specific container
        /// or an application running in the process.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IResourceMap> SchemaResourceMap { get; set; }
        /// <summary>
        /// A scope map is a logical unit of the application code with which the emitted telemetry can be associated.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IScopeMap> SchemaScopeMap { get; set; }
        /// <summary>TCP based exporter. Used for pipelineGroup exporter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.ITcpExporter Tcp { get; set; }
        /// <summary>TCP url to export.</summary>
        string TcpUrl { get; set; }
        /// <summary>The type of exporter.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("AzureMonitorWorkspaceLogs", "PipelineGroup")]
        string Type { get; set; }

    }
}