// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Extensions;

    /// <summary>Receiver using UDP as transport protocol.</summary>
    public partial class UdpReceiver :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IUdpReceiver,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IUdpReceiverInternal
    {

        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string DestinationFieldDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationFieldDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationFieldDestination = value ?? null; }

        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string DestinationFieldName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationFieldName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationFieldName = value ?? null; }

        /// <summary>Backing field for <see cref="Encoding" /> property.</summary>
        private string _encoding;

        /// <summary>The encoding of the stream being received.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string Encoding { get => this._encoding; set => this._encoding = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>TCP endpoint definition. Example: 0.0.0.0:<port>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="JsonArrayMapper" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapper _jsonArrayMapper;

        /// <summary>
        /// Json array mapper - allows this udp receiver to parse a value from a given source field as a json array, match a key to
        /// each parsed value and output the key-value map to a given output field.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapper JsonArrayMapper { get => (this._jsonArrayMapper = this._jsonArrayMapper ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.JsonArrayMapper()); set => this._jsonArrayMapper = value; }

        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> JsonArrayMapperKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).Key = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for JsonArrayMapper</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapper Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IUdpReceiverInternal.JsonArrayMapper { get => (this._jsonArrayMapper = this._jsonArrayMapper ?? new Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.JsonArrayMapper()); set { {_jsonArrayMapper = value;} } }

        /// <summary>Internal Acessors for JsonArrayMapperDestinationField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonMapperDestinationField Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IUdpReceiverInternal.JsonArrayMapperDestinationField { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationField; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).DestinationField = value; }

        /// <summary>Internal Acessors for JsonArrayMapperSourceField</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonMapperSourceField Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IUdpReceiverInternal.JsonArrayMapperSourceField { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).SourceField; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).SourceField = value; }

        /// <summary>Backing field for <see cref="ReadQueueLength" /> property.</summary>
        private int? _readQueueLength;

        /// <summary>Max read queue length.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Owned)]
        public int? ReadQueueLength { get => this._readQueueLength; set => this._readQueueLength = value; }

        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PropertyOrigin.Inlined)]
        public string SourceFieldName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).SourceFieldName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapperInternal)JsonArrayMapper).SourceFieldName = value ?? null; }

        /// <summary>Creates an new <see cref="UdpReceiver" /> instance.</summary>
        public UdpReceiver()
        {

        }
    }
    /// Receiver using UDP as transport protocol.
    public partial interface IUdpReceiver :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper will write the output map.",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("body", "attributes")]
        string DestinationFieldDestination { get; set; }
        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes and fieldName is empty, the object's attributes themselves will contain the key value output pairs.",
        SerializedName = @"fieldName",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationFieldName { get; set; }
        /// <summary>The encoding of the stream being received.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The encoding of the stream being received.",
        SerializedName = @"encoding",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("nop", "utf-8", "utf-16le", "utf-16be", "ascii", "big5")]
        string Encoding { get; set; }
        /// <summary>TCP endpoint definition. Example: 0.0.0.0:<port>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"TCP endpoint definition. Example: 0.0.0.0:<port>.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get; set; }
        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.",
        SerializedName = @"keys",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> JsonArrayMapperKey { get; set; }
        /// <summary>Max read queue length.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Max read queue length.",
        SerializedName = @"readQueueLength",
        PossibleTypes = new [] { typeof(int) })]
        int? ReadQueueLength { get; set; }
        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading the body of the message itself.",
        SerializedName = @"fieldName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceFieldName { get; set; }

    }
    /// Receiver using UDP as transport protocol.
    internal partial interface IUdpReceiverInternal

    {
        /// <summary>
        /// Define the destination's element. The element is the body or the attributes of the message, to which the json array mapper
        /// will write the output map.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("body", "attributes")]
        string DestinationFieldDestination { get; set; }
        /// <summary>
        /// Define a destination field name under the given element. Leaving this empty, means the root of the element. In case element=attributes
        /// and fieldName is empty, the object's attributes themselves will contain the key value output pairs.
        /// </summary>
        string DestinationFieldName { get; set; }
        /// <summary>The encoding of the stream being received.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.PSArgumentCompleterAttribute("nop", "utf-8", "utf-16le", "utf-16be", "ascii", "big5")]
        string Encoding { get; set; }
        /// <summary>TCP endpoint definition. Example: 0.0.0.0:<port>.</summary>
        string Endpoint { get; set; }
        /// <summary>
        /// Json array mapper - allows this udp receiver to parse a value from a given source field as a json array, match a key to
        /// each parsed value and output the key-value map to a given output field.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonArrayMapper JsonArrayMapper { get; set; }
        /// <summary>
        /// Define a destination field to which the parsed output will be written. The output is a map, it's keys is the given keys
        /// array and the matching values are the parsed json array elements.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonMapperDestinationField JsonArrayMapperDestinationField { get; set; }
        /// <summary>
        /// Define the names of the keys in the resulting map. The input json array elements are mapped in order, one for every key.
        /// </summary>
        System.Collections.Generic.List<string> JsonArrayMapperKey { get; set; }
        /// <summary>
        /// Define a source field from which a json array will be read and parsed to it's elements. The number of elements in the
        /// json array is expected to be the same as the length of keys.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.PipelineGroup.Models.IJsonMapperSourceField JsonArrayMapperSourceField { get; set; }
        /// <summary>Max read queue length.</summary>
        int? ReadQueueLength { get; set; }
        /// <summary>
        /// Define a source field name from which the json array mapper will read the json array. Leaving this empty, means reading
        /// the body of the message itself.
        /// </summary>
        string SourceFieldName { get; set; }

    }
}