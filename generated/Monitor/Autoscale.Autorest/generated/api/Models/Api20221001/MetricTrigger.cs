// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Extensions;

    /// <summary>The trigger that results in a scaling action.</summary>
    public partial class MetricTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IMetricTrigger,
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IMetricTriggerInternal
    {

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IScaleRuleMetricDimension[] _dimension;

        /// <summary>
        /// List of dimension conditions. For example: [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IScaleRuleMetricDimension[] Dimension { get => this._dimension; set => this._dimension = value; }

        /// <summary>Backing field for <see cref="DividePerInstance" /> property.</summary>
        private bool? _dividePerInstance;

        /// <summary>a value indicating whether metric should divide per instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public bool? DividePerInstance { get => this._dividePerInstance; set => this._dividePerInstance = value; }

        /// <summary>Backing field for <see cref="MetricName" /> property.</summary>
        private string _metricName;

        /// <summary>the name of the metric that defines what the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public string MetricName { get => this._metricName; set => this._metricName = value; }

        /// <summary>Backing field for <see cref="MetricNamespace" /> property.</summary>
        private string _metricNamespace;

        /// <summary>the namespace of the metric that defines what the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public string MetricNamespace { get => this._metricNamespace; set => this._metricNamespace = value; }

        /// <summary>Backing field for <see cref="MetricResourceLocation" /> property.</summary>
        private string _metricResourceLocation;

        /// <summary>the location of the resource the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public string MetricResourceLocation { get => this._metricResourceLocation; set => this._metricResourceLocation = value; }

        /// <summary>Backing field for <see cref="MetricResourceUri" /> property.</summary>
        private string _metricResourceUri;

        /// <summary>the resource identifier of the resource the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public string MetricResourceUri { get => this._metricResourceUri; set => this._metricResourceUri = value; }

        /// <summary>Backing field for <see cref="Operator" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.ComparisonOperationType _operator;

        /// <summary>the operator that is used to compare the metric data and the threshold.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.ComparisonOperationType Operator { get => this._operator; set => this._operator = value; }

        /// <summary>Backing field for <see cref="Statistic" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.MetricStatisticType _statistic;

        /// <summary>
        /// the metric statistic type. How the metrics from multiple instances are combined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.MetricStatisticType Statistic { get => this._statistic; set => this._statistic = value; }

        /// <summary>Backing field for <see cref="Threshold" /> property.</summary>
        private double _threshold;

        /// <summary>the threshold of the metric that triggers the scale action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public double Threshold { get => this._threshold; set => this._threshold = value; }

        /// <summary>Backing field for <see cref="TimeAggregation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.TimeAggregationType _timeAggregation;

        /// <summary>
        /// time aggregation type. How the data that is collected should be combined over time. The default value is Average.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.TimeAggregationType TimeAggregation { get => this._timeAggregation; set => this._timeAggregation = value; }

        /// <summary>Backing field for <see cref="TimeGrain" /> property.</summary>
        private global::System.TimeSpan _timeGrain;

        /// <summary>
        /// the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for
        /// the metric. Must be between 12 hours and 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public global::System.TimeSpan TimeGrain { get => this._timeGrain; set => this._timeGrain = value; }

        /// <summary>Backing field for <see cref="TimeWindow" /> property.</summary>
        private global::System.TimeSpan _timeWindow;

        /// <summary>
        /// the range of time in which instance data is collected. This value must be greater than the delay in metric collection,
        /// which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Origin(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.PropertyOrigin.Owned)]
        public global::System.TimeSpan TimeWindow { get => this._timeWindow; set => this._timeWindow = value; }

        /// <summary>Creates an new <see cref="MetricTrigger" /> instance.</summary>
        public MetricTrigger()
        {

        }
    }
    /// The trigger that results in a scaling action.
    public partial interface IMetricTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of dimension conditions. For example: [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of dimension conditions. For example: [{""DimensionName"":""AppName"",""Operator"":""Equals"",""Values"":[""App1""]},{""DimensionName"":""Deployment"",""Operator"":""Equals"",""Values"":[""default""]}].",
        SerializedName = @"dimensions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IScaleRuleMetricDimension) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IScaleRuleMetricDimension[] Dimension { get; set; }
        /// <summary>a value indicating whether metric should divide per instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"a value indicating whether metric should divide per instance.",
        SerializedName = @"dividePerInstance",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DividePerInstance { get; set; }
        /// <summary>the name of the metric that defines what the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the name of the metric that defines what the rule monitors.",
        SerializedName = @"metricName",
        PossibleTypes = new [] { typeof(string) })]
        string MetricName { get; set; }
        /// <summary>the namespace of the metric that defines what the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the namespace of the metric that defines what the rule monitors.",
        SerializedName = @"metricNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string MetricNamespace { get; set; }
        /// <summary>the location of the resource the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the location of the resource the rule monitors.",
        SerializedName = @"metricResourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string MetricResourceLocation { get; set; }
        /// <summary>the resource identifier of the resource the rule monitors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the resource identifier of the resource the rule monitors.",
        SerializedName = @"metricResourceUri",
        PossibleTypes = new [] { typeof(string) })]
        string MetricResourceUri { get; set; }
        /// <summary>the operator that is used to compare the metric data and the threshold.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the operator that is used to compare the metric data and the threshold.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.ComparisonOperationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.ComparisonOperationType Operator { get; set; }
        /// <summary>
        /// the metric statistic type. How the metrics from multiple instances are combined.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the metric statistic type. How the metrics from multiple instances are combined.",
        SerializedName = @"statistic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.MetricStatisticType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.MetricStatisticType Statistic { get; set; }
        /// <summary>the threshold of the metric that triggers the scale action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the threshold of the metric that triggers the scale action.",
        SerializedName = @"threshold",
        PossibleTypes = new [] { typeof(double) })]
        double Threshold { get; set; }
        /// <summary>
        /// time aggregation type. How the data that is collected should be combined over time. The default value is Average.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"time aggregation type. How the data that is collected should be combined over time. The default value is Average.",
        SerializedName = @"timeAggregation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.TimeAggregationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.TimeAggregationType TimeAggregation { get; set; }
        /// <summary>
        /// the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for
        /// the metric. Must be between 12 hours and 1 minute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute.",
        SerializedName = @"timeGrain",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan TimeGrain { get; set; }
        /// <summary>
        /// the range of time in which instance data is collected. This value must be greater than the delay in metric collection,
        /// which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.",
        SerializedName = @"timeWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan TimeWindow { get; set; }

    }
    /// The trigger that results in a scaling action.
    internal partial interface IMetricTriggerInternal

    {
        /// <summary>
        /// List of dimension conditions. For example: [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Models.Api20221001.IScaleRuleMetricDimension[] Dimension { get; set; }
        /// <summary>a value indicating whether metric should divide per instance.</summary>
        bool? DividePerInstance { get; set; }
        /// <summary>the name of the metric that defines what the rule monitors.</summary>
        string MetricName { get; set; }
        /// <summary>the namespace of the metric that defines what the rule monitors.</summary>
        string MetricNamespace { get; set; }
        /// <summary>the location of the resource the rule monitors.</summary>
        string MetricResourceLocation { get; set; }
        /// <summary>the resource identifier of the resource the rule monitors.</summary>
        string MetricResourceUri { get; set; }
        /// <summary>the operator that is used to compare the metric data and the threshold.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.ComparisonOperationType Operator { get; set; }
        /// <summary>
        /// the metric statistic type. How the metrics from multiple instances are combined.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.MetricStatisticType Statistic { get; set; }
        /// <summary>the threshold of the metric that triggers the scale action.</summary>
        double Threshold { get; set; }
        /// <summary>
        /// time aggregation type. How the data that is collected should be combined over time. The default value is Average.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Monitor.Autoscale.Support.TimeAggregationType TimeAggregation { get; set; }
        /// <summary>
        /// the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for
        /// the metric. Must be between 12 hours and 1 minute.
        /// </summary>
        global::System.TimeSpan TimeGrain { get; set; }
        /// <summary>
        /// the range of time in which instance data is collected. This value must be greater than the delay in metric collection,
        /// which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.
        /// </summary>
        global::System.TimeSpan TimeWindow { get; set; }

    }
}