// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api20201001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Extensions;

    /// <summary>Status of attestation service.</summary>
    public partial class StatusResult :
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api20201001.IStatusResult,
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api20201001.IStatusResultInternal
    {

        /// <summary>Backing field for <see cref="AttestUri" /> property.</summary>
        private string _attestUri;

        /// <summary>Gets the uri of attestation service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Origin(Microsoft.Azure.PowerShell.Cmdlets.Attestation.PropertyOrigin.Owned)]
        public string AttestUri { get => this._attestUri; set => this._attestUri = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api20201001.IStatusResultInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>List of private endpoint connections associated with the attestation provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Origin(Microsoft.Azure.PowerShell.Cmdlets.Attestation.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Attestation.Support.AttestationServiceStatus? _status;

        /// <summary>Status of attestation service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Origin(Microsoft.Azure.PowerShell.Cmdlets.Attestation.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Attestation.Support.AttestationServiceStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TrustModel" /> property.</summary>
        private string _trustModel;

        /// <summary>Trust model for the attestation provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Origin(Microsoft.Azure.PowerShell.Cmdlets.Attestation.PropertyOrigin.Owned)]
        public string TrustModel { get => this._trustModel; set => this._trustModel = value; }

        /// <summary>Creates an new <see cref="StatusResult" /> instance.</summary>
        public StatusResult()
        {

        }
    }
    /// Status of attestation service.
    public partial interface IStatusResult :
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.IJsonSerializable
    {
        /// <summary>Gets the uri of attestation service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets the uri of attestation service",
        SerializedName = @"attestUri",
        PossibleTypes = new [] { typeof(string) })]
        string AttestUri { get; set; }
        /// <summary>List of private endpoint connections associated with the attestation provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections associated with the attestation provider.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Status of attestation service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of attestation service.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Support.AttestationServiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Support.AttestationServiceStatus? Status { get; set; }
        /// <summary>Trust model for the attestation provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Trust model for the attestation provider.",
        SerializedName = @"trustModel",
        PossibleTypes = new [] { typeof(string) })]
        string TrustModel { get; set; }

    }
    /// Status of attestation service.
    internal partial interface IStatusResultInternal

    {
        /// <summary>Gets the uri of attestation service</summary>
        string AttestUri { get; set; }
        /// <summary>List of private endpoint connections associated with the attestation provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Status of attestation service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Attestation.Support.AttestationServiceStatus? Status { get; set; }
        /// <summary>Trust model for the attestation provider.</summary>
        string TrustModel { get; set; }

    }
}