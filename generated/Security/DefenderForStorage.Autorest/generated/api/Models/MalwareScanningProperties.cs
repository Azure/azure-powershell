// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Extensions;

    /// <summary>Properties of Malware Scanning.</summary>
    public partial class MalwareScanningProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IMalwareScanningProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IMalwareScanningPropertiesInternal
    {

        /// <summary>Internal Acessors for OnUpload</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadProperties Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IMalwareScanningPropertiesInternal.OnUpload { get => (this._onUpload = this._onUpload ?? new Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.OnUploadProperties()); set { {_onUpload = value;} } }

        /// <summary>Internal Acessors for OperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatus Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IMalwareScanningPropertiesInternal.OperationStatus { get => (this._operationStatus = this._operationStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.OperationStatus()); set { {_operationStatus = value;} } }

        /// <summary>Backing field for <see cref="OnUpload" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadProperties _onUpload;

        /// <summary>Properties of On Upload malware scanning.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadProperties OnUpload { get => (this._onUpload = this._onUpload ?? new Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.OnUploadProperties()); set => this._onUpload = value; }

        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Inlined)]
        public int? OnUploadCapGbPerMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadPropertiesInternal)OnUpload).CapGbPerMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadPropertiesInternal)OnUpload).CapGbPerMonth = value ?? default(int); }

        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Inlined)]
        public bool? OnUploadIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadPropertiesInternal)OnUpload).IsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadPropertiesInternal)OnUpload).IsEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="OperationStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatus _operationStatus;

        /// <summary>
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatus OperationStatus { get => (this._operationStatus = this._operationStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.OperationStatus()); }

        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Inlined)]
        public string OperationStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatusInternal)OperationStatus).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatusInternal)OperationStatus).Code = value ?? null; }

        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Inlined)]
        public string OperationStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatusInternal)OperationStatus).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatusInternal)OperationStatus).Message = value ?? null; }

        /// <summary>Backing field for <see cref="ScanResultsEventGridTopicResourceId" /> property.</summary>
        private string _scanResultsEventGridTopicResourceId;

        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Origin(Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.PropertyOrigin.Owned)]
        public string ScanResultsEventGridTopicResourceId { get => this._scanResultsEventGridTopicResourceId; set => this._scanResultsEventGridTopicResourceId = value; }

        /// <summary>Creates an new <see cref="MalwareScanningProperties" /> instance.</summary>
        public MalwareScanningProperties()
        {

        }
    }
    /// Properties of Malware Scanning.
    public partial interface IMalwareScanningProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.IJsonSerializable
    {
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.",
        SerializedName = @"capGBPerMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether On Upload malware scanning should be enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The operation status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string OperationStatusCode { get;  }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information regarding the success/failure of the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string OperationStatusMessage { get;  }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional. Resource id of an Event Grid Topic to send scan results to.",
        SerializedName = @"scanResultsEventGridTopicResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ScanResultsEventGridTopicResourceId { get; set; }

    }
    /// Properties of Malware Scanning.
    internal partial interface IMalwareScanningPropertiesInternal

    {
        /// <summary>Properties of On Upload malware scanning.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOnUploadProperties OnUpload { get; set; }
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DefenderForStorage.Models.IOperationStatus OperationStatus { get; set; }
        /// <summary>The operation status code.</summary>
        string OperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        string OperationStatusMessage { get; set; }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        string ScanResultsEventGridTopicResourceId { get; set; }

    }
}