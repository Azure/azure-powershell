// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Security.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Extensions;

    /// <summary>The AWS organization data for the master account</summary>
    public partial class AwsOrganizationalDataMaster :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataMaster,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataMasterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData __awsOrganizationalData = new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.AwsOrganizationalData();

        /// <summary>Backing field for <see cref="ExcludedAccountId" /> property.</summary>
        private System.Collections.Generic.List<string> _excludedAccountId;

        /// <summary>
        /// If the multi cloud account is of membership type organization, list of accounts excluded from offering
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ExcludedAccountId { get => this._excludedAccountId; set => this._excludedAccountId = value; }

        /// <summary>The multi cloud account's membership type in the organization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inherited)]
        public string OrganizationMembershipType { get => "Organization"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataInternal)__awsOrganizationalData).OrganizationMembershipType = "Organization"; }

        /// <summary>Backing field for <see cref="StacksetName" /> property.</summary>
        private string _stacksetName;

        /// <summary>
        /// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public string StacksetName { get => this._stacksetName; set => this._stacksetName = value; }

        /// <summary>Creates an new <see cref="AwsOrganizationalDataMaster" /> instance.</summary>
        public AwsOrganizationalDataMaster()
        {
            this.__awsOrganizationalData.OrganizationMembershipType = "Organization";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__awsOrganizationalData), __awsOrganizationalData);
            await eventListener.AssertObjectIsValid(nameof(__awsOrganizationalData), __awsOrganizationalData);
        }
    }
    /// The AWS organization data for the master account
    public partial interface IAwsOrganizationalDataMaster :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData
    {
        /// <summary>
        /// If the multi cloud account is of membership type organization, list of accounts excluded from offering
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If the multi cloud account is of membership type organization, list of accounts excluded from offering",
        SerializedName = @"excludedAccountIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ExcludedAccountId { get; set; }
        /// <summary>
        /// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset",
        SerializedName = @"stacksetName",
        PossibleTypes = new [] { typeof(string) })]
        string StacksetName { get; set; }

    }
    /// The AWS organization data for the master account
    internal partial interface IAwsOrganizationalDataMasterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataInternal
    {
        /// <summary>
        /// If the multi cloud account is of membership type organization, list of accounts excluded from offering
        /// </summary>
        System.Collections.Generic.List<string> ExcludedAccountId { get; set; }
        /// <summary>
        /// If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset
        /// </summary>
        string StacksetName { get; set; }

    }
}