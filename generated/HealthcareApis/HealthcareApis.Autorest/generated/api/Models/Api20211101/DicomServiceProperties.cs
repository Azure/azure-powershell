// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Extensions;

    /// <summary>Dicom Service properties.</summary>
    public partial class DicomServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AuthenticationConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfiguration _authenticationConfiguration;

        /// <summary>Dicom Service authentication configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfiguration AuthenticationConfiguration { get => (this._authenticationConfiguration = this._authenticationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.DicomServiceAuthenticationConfiguration()); set => this._authenticationConfiguration = value; }

        /// <summary>The audiences for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Inlined)]
        public string[] AuthenticationConfigurationAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Audience; }

        /// <summary>The authority url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Inlined)]
        public string AuthenticationConfigurationAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Authority; }

        /// <summary>Internal Acessors for AuthenticationConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfiguration Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.AuthenticationConfiguration { get => (this._authenticationConfiguration = this._authenticationConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.DicomServiceAuthenticationConfiguration()); set { {_authenticationConfiguration = value;} } }

        /// <summary>Internal Acessors for AuthenticationConfigurationAudience</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.AuthenticationConfigurationAudience { get => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Audience; set => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Audience = value; }

        /// <summary>Internal Acessors for AuthenticationConfigurationAuthority</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.AuthenticationConfigurationAuthority { get => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Authority; set => ((Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfigurationInternal)AuthenticationConfiguration).Authority = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ServiceUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServicePropertiesInternal.ServiceUrl { get => this._serviceUrl; set { {_serviceUrl = value;} } }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>The list of private endpoint connections that are set up for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="ServiceUrl" /> property.</summary>
        private string _serviceUrl;

        /// <summary>The url of the Dicom Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string ServiceUrl { get => this._serviceUrl; }

        /// <summary>Creates an new <see cref="DicomServiceProperties" /> instance.</summary>
        public DicomServiceProperties()
        {

        }
    }
    /// Dicom Service properties.
    public partial interface IDicomServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.IJsonSerializable
    {
        /// <summary>The audiences for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The audiences for the service",
        SerializedName = @"audiences",
        PossibleTypes = new [] { typeof(string) })]
        string[] AuthenticationConfigurationAudience { get;  }
        /// <summary>The authority url for the service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The authority url for the service",
        SerializedName = @"authority",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticationConfigurationAuthority { get;  }
        /// <summary>The list of private endpoint connections that are set up for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of private endpoint connections that are set up for this resource.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The url of the Dicom Services.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The url of the Dicom Services.",
        SerializedName = @"serviceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceUrl { get;  }

    }
    /// Dicom Service properties.
    internal partial interface IDicomServicePropertiesInternal

    {
        /// <summary>Dicom Service authentication configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IDicomServiceAuthenticationConfiguration AuthenticationConfiguration { get; set; }
        /// <summary>The audiences for the service</summary>
        string[] AuthenticationConfigurationAudience { get; set; }
        /// <summary>The authority url for the service</summary>
        string AuthenticationConfigurationAuthority { get; set; }
        /// <summary>The list of private endpoint connections that are set up for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api10.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Control permission for data plane traffic coming from public networks while private endpoint is enabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The url of the Dicom Services.</summary>
        string ServiceUrl { get; set; }

    }
}