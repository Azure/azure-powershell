// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Extensions;

    /// <summary>The settings for the CORS configuration of the service instance.</summary>
    public partial class ServiceCorsConfigurationInfo :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IServiceCorsConfigurationInfo,
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IServiceCorsConfigurationInfoInternal
    {

        /// <summary>Backing field for <see cref="AllowCredentials" /> property.</summary>
        private bool? _allowCredentials;

        /// <summary>If credentials are allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public bool? AllowCredentials { get => this._allowCredentials; set => this._allowCredentials = value; }

        /// <summary>Backing field for <see cref="Header" /> property.</summary>
        private string[] _header;

        /// <summary>The headers to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string[] Header { get => this._header; set => this._header = value; }

        /// <summary>Backing field for <see cref="MaxAge" /> property.</summary>
        private int? _maxAge;

        /// <summary>The max age to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public int? MaxAge { get => this._maxAge; set => this._maxAge = value; }

        /// <summary>Backing field for <see cref="Method" /> property.</summary>
        private string[] _method;

        /// <summary>The methods to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string[] Method { get => this._method; set => this._method = value; }

        /// <summary>Backing field for <see cref="Origin" /> property.</summary>
        private string[] _origin;

        /// <summary>The origins to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string[] Origin { get => this._origin; set => this._origin = value; }

        /// <summary>Creates an new <see cref="ServiceCorsConfigurationInfo" /> instance.</summary>
        public ServiceCorsConfigurationInfo()
        {

        }
    }
    /// The settings for the CORS configuration of the service instance.
    public partial interface IServiceCorsConfigurationInfo :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.IJsonSerializable
    {
        /// <summary>If credentials are allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If credentials are allowed via CORS.",
        SerializedName = @"allowCredentials",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AllowCredentials { get; set; }
        /// <summary>The headers to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The headers to be allowed via CORS.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(string) })]
        string[] Header { get; set; }
        /// <summary>The max age to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The max age to be allowed via CORS.",
        SerializedName = @"maxAge",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxAge { get; set; }
        /// <summary>The methods to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The methods to be allowed via CORS.",
        SerializedName = @"methods",
        PossibleTypes = new [] { typeof(string) })]
        string[] Method { get; set; }
        /// <summary>The origins to be allowed via CORS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The origins to be allowed via CORS.",
        SerializedName = @"origins",
        PossibleTypes = new [] { typeof(string) })]
        string[] Origin { get; set; }

    }
    /// The settings for the CORS configuration of the service instance.
    internal partial interface IServiceCorsConfigurationInfoInternal

    {
        /// <summary>If credentials are allowed via CORS.</summary>
        bool? AllowCredentials { get; set; }
        /// <summary>The headers to be allowed via CORS.</summary>
        string[] Header { get; set; }
        /// <summary>The max age to be allowed via CORS.</summary>
        int? MaxAge { get; set; }
        /// <summary>The methods to be allowed via CORS.</summary>
        string[] Method { get; set; }
        /// <summary>The origins to be allowed via CORS.</summary>
        string[] Origin { get; set; }

    }
}