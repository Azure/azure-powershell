// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Extensions;

    /// <summary>Event Hub ingestion endpoint configuration</summary>
    public partial class IotEventHubIngestionEndpointConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IIotEventHubIngestionEndpointConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Models.Api20211101.IIotEventHubIngestionEndpointConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ConsumerGroup" /> property.</summary>
        private string _consumerGroup;

        /// <summary>Consumer group of the event hub to connected to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string ConsumerGroup { get => this._consumerGroup; set => this._consumerGroup = value; }

        /// <summary>Backing field for <see cref="EventHubName" /> property.</summary>
        private string _eventHubName;

        /// <summary>Event Hub name to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string EventHubName { get => this._eventHubName; set => this._eventHubName = value; }

        /// <summary>Backing field for <see cref="FullyQualifiedEventHubNamespace" /> property.</summary>
        private string _fullyQualifiedEventHubNamespace;

        /// <summary>Fully qualified namespace of the Event Hub to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Origin(Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.PropertyOrigin.Owned)]
        public string FullyQualifiedEventHubNamespace { get => this._fullyQualifiedEventHubNamespace; set => this._fullyQualifiedEventHubNamespace = value; }

        /// <summary>
        /// Creates an new <see cref="IotEventHubIngestionEndpointConfiguration" /> instance.
        /// </summary>
        public IotEventHubIngestionEndpointConfiguration()
        {

        }
    }
    /// Event Hub ingestion endpoint configuration
    public partial interface IIotEventHubIngestionEndpointConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.IJsonSerializable
    {
        /// <summary>Consumer group of the event hub to connected to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Consumer group of the event hub to connected to.",
        SerializedName = @"consumerGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumerGroup { get; set; }
        /// <summary>Event Hub name to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Event Hub name to connect to.",
        SerializedName = @"eventHubName",
        PossibleTypes = new [] { typeof(string) })]
        string EventHubName { get; set; }
        /// <summary>Fully qualified namespace of the Event Hub to connect to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HealthcareApis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully qualified namespace of the Event Hub to connect to.",
        SerializedName = @"fullyQualifiedEventHubNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string FullyQualifiedEventHubNamespace { get; set; }

    }
    /// Event Hub ingestion endpoint configuration
    internal partial interface IIotEventHubIngestionEndpointConfigurationInternal

    {
        /// <summary>Consumer group of the event hub to connected to.</summary>
        string ConsumerGroup { get; set; }
        /// <summary>Event Hub name to connect to.</summary>
        string EventHubName { get; set; }
        /// <summary>Fully qualified namespace of the Event Hub to connect to.</summary>
        string FullyQualifiedEventHubNamespace { get; set; }

    }
}