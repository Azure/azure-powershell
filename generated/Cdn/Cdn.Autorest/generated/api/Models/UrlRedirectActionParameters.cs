// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Defines the parameters for the url redirect action.</summary>
    public partial class UrlRedirectActionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters __deliveryRuleActionParameters = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.DeliveryRuleActionParameters();

        /// <summary>Backing field for <see cref="CustomFragment" /> property.</summary>
        private string _customFragment;

        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CustomFragment { get => this._customFragment; set => this._customFragment = value; }

        /// <summary>Backing field for <see cref="CustomHostname" /> property.</summary>
        private string _customHostname;

        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CustomHostname { get => this._customHostname; set => this._customHostname = value; }

        /// <summary>Backing field for <see cref="CustomPath" /> property.</summary>
        private string _customPath;

        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CustomPath { get => this._customPath; set => this._customPath = value; }

        /// <summary>Backing field for <see cref="CustomQueryString" /> property.</summary>
        private string _customQueryString;

        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CustomQueryString { get => this._customQueryString; set => this._customQueryString = value; }

        /// <summary>Backing field for <see cref="DestinationProtocol" /> property.</summary>
        private string _destinationProtocol;

        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string DestinationProtocol { get => this._destinationProtocol; set => this._destinationProtocol = value; }

        /// <summary>Backing field for <see cref="RedirectType" /> property.</summary>
        private string _redirectType;

        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string RedirectType { get => this._redirectType; set => this._redirectType = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string TypeName { get => "DeliveryRuleUrlRedirectActionParameters"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal)__deliveryRuleActionParameters).TypeName = "DeliveryRuleUrlRedirectActionParameters"; }

        /// <summary>Creates an new <see cref="UrlRedirectActionParameters" /> instance.</summary>
        public UrlRedirectActionParameters()
        {
            this.__deliveryRuleActionParameters.TypeName = "DeliveryRuleUrlRedirectActionParameters";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__deliveryRuleActionParameters), __deliveryRuleActionParameters);
            await eventListener.AssertObjectIsValid(nameof(__deliveryRuleActionParameters), __deliveryRuleActionParameters);
        }
    }
    /// Defines the parameters for the url redirect action.
    public partial interface IUrlRedirectActionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters
    {
        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.",
        SerializedName = @"customFragment",
        PossibleTypes = new [] { typeof(string) })]
        string CustomFragment { get; set; }
        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Host to redirect. Leave empty to use the incoming host as the destination host.",
        SerializedName = @"customHostname",
        PossibleTypes = new [] { typeof(string) })]
        string CustomHostname { get; set; }
        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.",
        SerializedName = @"customPath",
        PossibleTypes = new [] { typeof(string) })]
        string CustomPath { get; set; }
        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.",
        SerializedName = @"customQueryString",
        PossibleTypes = new [] { typeof(string) })]
        string CustomQueryString { get; set; }
        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Protocol to use for the redirect. The default value is MatchRequest",
        SerializedName = @"destinationProtocol",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("MatchRequest", "Http", "Https")]
        string DestinationProtocol { get; set; }
        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The redirect type the rule will use when redirecting traffic.",
        SerializedName = @"redirectType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Moved", "Found", "TemporaryRedirect", "PermanentRedirect")]
        string RedirectType { get; set; }

    }
    /// Defines the parameters for the url redirect action.
    internal partial interface IUrlRedirectActionParametersInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal
    {
        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        string CustomFragment { get; set; }
        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        string CustomHostname { get; set; }
        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        string CustomPath { get; set; }
        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        string CustomQueryString { get; set; }
        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("MatchRequest", "Http", "Https")]
        string DestinationProtocol { get; set; }
        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Moved", "Found", "TemporaryRedirect", "PermanentRedirect")]
        string RedirectType { get; set; }

    }
}