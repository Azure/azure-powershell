// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Result for canMigrate operation.</summary>
    public partial class CanMigrateResult :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResult,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal
    {

        /// <summary>Flag that says if the profile can be migrated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.FormatTable(Index = 0)]
        public bool? CanMigrate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).CanMigrate; }

        /// <summary>Recommended sku for the migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.FormatTable(Index = 1)]
        public string DefaultSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).DefaultSku; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.FormatTable(Index = 2)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IMigrationErrorType> Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).Error = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for CanMigrate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal.CanMigrate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).CanMigrate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).CanMigrate = value; }

        /// <summary>Internal Acessors for DefaultSku</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal.DefaultSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).DefaultSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigratePropertiesInternal)Property).DefaultSku = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateProperties Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.CanMigrateProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateResultInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.CanMigrateProperties()); set => this._property = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.DoNotFormat]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="CanMigrateResult" /> instance.</summary>
        public CanMigrateResult()
        {

        }
    }
    /// Result for canMigrate operation.
    public partial interface ICanMigrateResult :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>Flag that says if the profile can be migrated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Flag that says if the profile can be migrated",
        SerializedName = @"canMigrate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CanMigrate { get;  }
        /// <summary>Recommended sku for the migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Recommended sku for the migration",
        SerializedName = @"defaultSku",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Standard_AzureFrontDoor", "Premium_AzureFrontDoor")]
        string DefaultSku { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IMigrationErrorType) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IMigrationErrorType> Error { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Result for canMigrate operation.
    internal partial interface ICanMigrateResultInternal

    {
        /// <summary>Flag that says if the profile can be migrated</summary>
        bool? CanMigrate { get; set; }
        /// <summary>Recommended sku for the migration</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Standard_AzureFrontDoor", "Premium_AzureFrontDoor")]
        string DefaultSku { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IMigrationErrorType> Error { get; set; }
        /// <summary>Resource ID.</summary>
        string Id { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICanMigrateProperties Property { get; set; }
        /// <summary>Resource type.</summary>
        string Type { get; set; }

    }
}