// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Defines the parameters for the cache expiration action.</summary>
    public partial class CacheExpirationActionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICacheExpirationActionParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICacheExpirationActionParametersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters __deliveryRuleActionParameters = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.DeliveryRuleActionParameters();

        /// <summary>Backing field for <see cref="CacheBehavior" /> property.</summary>
        private string _cacheBehavior;

        /// <summary>Caching behavior for the requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CacheBehavior { get => this._cacheBehavior; set => this._cacheBehavior = value; }

        /// <summary>Backing field for <see cref="CacheDuration" /> property.</summary>
        private string _cacheDuration;

        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CacheDuration { get => this._cacheDuration; set => this._cacheDuration = value; }

        /// <summary>Backing field for <see cref="CacheType" /> property.</summary>
        private string _cacheType= @"All";

        /// <summary>The level at which the content needs to be cached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string CacheType { get => this._cacheType; }

        /// <summary>Internal Acessors for CacheType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICacheExpirationActionParametersInternal.CacheType { get => this._cacheType; set { {_cacheType = value;} } }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string TypeName { get => "DeliveryRuleCacheExpirationActionParameters"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal)__deliveryRuleActionParameters).TypeName = "DeliveryRuleCacheExpirationActionParameters"; }

        /// <summary>Creates an new <see cref="CacheExpirationActionParameters" /> instance.</summary>
        public CacheExpirationActionParameters()
        {
            this.__deliveryRuleActionParameters.TypeName = "DeliveryRuleCacheExpirationActionParameters";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__deliveryRuleActionParameters), __deliveryRuleActionParameters);
            await eventListener.AssertObjectIsValid(nameof(__deliveryRuleActionParameters), __deliveryRuleActionParameters);
        }
    }
    /// Defines the parameters for the cache expiration action.
    public partial interface ICacheExpirationActionParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParameters
    {
        /// <summary>Caching behavior for the requests</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Caching behavior for the requests",
        SerializedName = @"cacheBehavior",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("BypassCache", "Override", "SetIfMissing")]
        string CacheBehavior { get; set; }
        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
        SerializedName = @"cacheDuration",
        PossibleTypes = new [] { typeof(string) })]
        string CacheDuration { get; set; }
        /// <summary>The level at which the content needs to be cached.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The level at which the content needs to be cached.",
        SerializedName = @"cacheType",
        PossibleTypes = new [] { typeof(string) })]
        string CacheType { get;  }

    }
    /// Defines the parameters for the cache expiration action.
    internal partial interface ICacheExpirationActionParametersInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal
    {
        /// <summary>Caching behavior for the requests</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("BypassCache", "Override", "SetIfMissing")]
        string CacheBehavior { get; set; }
        /// <summary>
        /// The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss
        /// </summary>
        string CacheDuration { get; set; }
        /// <summary>The level at which the content needs to be cached.</summary>
        string CacheType { get; set; }

    }
}