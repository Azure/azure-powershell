// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Defines the url redirect action for the delivery rule.</summary>
    public partial class UrlRedirectAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectAction,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction __deliveryRuleAction = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.DeliveryRuleAction();

        /// <summary>Internal Acessors for Parameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionInternal.Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.UrlRedirectActionParameters()); set { {_parameter = value;} } }

        /// <summary>The name of the action for the delivery rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Name { get => "UrlRedirect"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionInternal)__deliveryRuleAction).Name = "UrlRedirect"; }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParameters _parameter;

        /// <summary>Defines the parameters for the action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParameters Parameter { get => (this._parameter = this._parameter ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.UrlRedirectActionParameters()); set => this._parameter = value; }

        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterCustomFragment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomFragment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomFragment = value ?? null; }

        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterCustomHostname { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomHostname; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomHostname = value ?? null; }

        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterCustomPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomPath = value ?? null; }

        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterCustomQueryString { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomQueryString; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).CustomQueryString = value ?? null; }

        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterDestinationProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).DestinationProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).DestinationProtocol = value ?? null; }

        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterRedirectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).RedirectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParametersInternal)Parameter).RedirectType = value ; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ParameterTypeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal)Parameter).TypeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionParametersInternal)Parameter).TypeName = value ; }

        /// <summary>Creates an new <see cref="UrlRedirectAction" /> instance.</summary>
        public UrlRedirectAction()
        {
            this.__deliveryRuleAction.Name = "UrlRedirect";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__deliveryRuleAction), __deliveryRuleAction);
            await eventListener.AssertObjectIsValid(nameof(__deliveryRuleAction), __deliveryRuleAction);
        }
    }
    /// Defines the url redirect action for the delivery rule.
    public partial interface IUrlRedirectAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction
    {
        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.",
        SerializedName = @"customFragment",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterCustomFragment { get; set; }
        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Host to redirect. Leave empty to use the incoming host as the destination host.",
        SerializedName = @"customHostname",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterCustomHostname { get; set; }
        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.",
        SerializedName = @"customPath",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterCustomPath { get; set; }
        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.",
        SerializedName = @"customQueryString",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterCustomQueryString { get; set; }
        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Protocol to use for the redirect. The default value is MatchRequest",
        SerializedName = @"destinationProtocol",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("MatchRequest", "Http", "Https")]
        string ParameterDestinationProtocol { get; set; }
        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The redirect type the rule will use when redirecting traffic.",
        SerializedName = @"redirectType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Moved", "Found", "TemporaryRedirect", "PermanentRedirect")]
        string ParameterRedirectType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"typeName",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("DeliveryRuleUrlRedirectActionParameters", "DeliveryRuleUrlSigningActionParameters", "DeliveryRuleOriginGroupOverrideActionParameters", "DeliveryRuleUrlRewriteActionParameters", "DeliveryRuleHeaderActionParameters", "DeliveryRuleCacheExpirationActionParameters", "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters", "DeliveryRuleRouteConfigurationOverrideActionParameters")]
        string ParameterTypeName { get; set; }

    }
    /// Defines the url redirect action for the delivery rule.
    internal partial interface IUrlRedirectActionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleActionInternal
    {
        /// <summary>Defines the parameters for the action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IUrlRedirectActionParameters Parameter { get; set; }
        /// <summary>
        /// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
        /// </summary>
        string ParameterCustomFragment { get; set; }
        /// <summary>Host to redirect. Leave empty to use the incoming host as the destination host.</summary>
        string ParameterCustomHostname { get; set; }
        /// <summary>
        /// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination
        /// path.
        /// </summary>
        string ParameterCustomPath { get; set; }
        /// <summary>
        /// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string;
        /// leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added
        /// automatically so do not include them.
        /// </summary>
        string ParameterCustomQueryString { get; set; }
        /// <summary>Protocol to use for the redirect. The default value is MatchRequest</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("MatchRequest", "Http", "Https")]
        string ParameterDestinationProtocol { get; set; }
        /// <summary>The redirect type the rule will use when redirecting traffic.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Moved", "Found", "TemporaryRedirect", "PermanentRedirect")]
        string ParameterRedirectType { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("DeliveryRuleUrlRedirectActionParameters", "DeliveryRuleUrlSigningActionParameters", "DeliveryRuleOriginGroupOverrideActionParameters", "DeliveryRuleUrlRewriteActionParameters", "DeliveryRuleHeaderActionParameters", "DeliveryRuleCacheExpirationActionParameters", "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters", "DeliveryRuleRouteConfigurationOverrideActionParameters")]
        string ParameterTypeName { get; set; }

    }
}