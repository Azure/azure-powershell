// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>
    /// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
    /// </summary>
    public partial class KeyVaultCertificateSourceParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IKeyVaultCertificateSourceParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IKeyVaultCertificateSourceParametersInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICertificateSourceParameters"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICertificateSourceParameters __certificateSourceParameters = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.CertificateSourceParameters();

        /// <summary>Backing field for <see cref="DeleteRule" /> property.</summary>
        private string _deleteRule= @"NoAction";

        /// <summary>
        /// Describes the action that shall be taken when the certificate is removed from Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string DeleteRule { get => this._deleteRule; }

        /// <summary>Internal Acessors for DeleteRule</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IKeyVaultCertificateSourceParametersInternal.DeleteRule { get => this._deleteRule; set { {_deleteRule = value;} } }

        /// <summary>Internal Acessors for UpdateRule</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IKeyVaultCertificateSourceParametersInternal.UpdateRule { get => this._updateRule; set { {_updateRule = value;} } }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>Resource group of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="SecretName" /> property.</summary>
        private string _secretName;

        /// <summary>
        /// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string SecretName { get => this._secretName; set => this._secretName = value; }

        /// <summary>Backing field for <see cref="SecretVersion" /> property.</summary>
        private string _secretVersion;

        /// <summary>The version(GUID) of Key Vault Secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string SecretVersion { get => this._secretVersion; set => this._secretVersion = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription Id of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string TypeName { get => "KeyVaultCertificateSourceParameters"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICertificateSourceParametersInternal)__certificateSourceParameters).TypeName = "KeyVaultCertificateSourceParameters"; }

        /// <summary>Backing field for <see cref="UpdateRule" /> property.</summary>
        private string _updateRule= @"NoAction";

        /// <summary>
        /// Describes the action that shall be taken when the certificate is updated in Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string UpdateRule { get => this._updateRule; }

        /// <summary>Backing field for <see cref="VaultName" /> property.</summary>
        private string _vaultName;

        /// <summary>The name of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string VaultName { get => this._vaultName; set => this._vaultName = value; }

        /// <summary>Creates an new <see cref="KeyVaultCertificateSourceParameters" /> instance.</summary>
        public KeyVaultCertificateSourceParameters()
        {
            this.__certificateSourceParameters.TypeName = "KeyVaultCertificateSourceParameters";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__certificateSourceParameters), __certificateSourceParameters);
            await eventListener.AssertObjectIsValid(nameof(__certificateSourceParameters), __certificateSourceParameters);
        }
    }
    /// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
    public partial interface IKeyVaultCertificateSourceParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICertificateSourceParameters
    {
        /// <summary>
        /// Describes the action that shall be taken when the certificate is removed from Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the action that shall be taken when the certificate is removed from Key Vault.",
        SerializedName = @"deleteRule",
        PossibleTypes = new [] { typeof(string) })]
        string DeleteRule { get;  }
        /// <summary>Resource group of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource group of the user's Key Vault containing the SSL certificate",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>
        /// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.",
        SerializedName = @"secretName",
        PossibleTypes = new [] { typeof(string) })]
        string SecretName { get; set; }
        /// <summary>The version(GUID) of Key Vault Secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version(GUID) of Key Vault Secret in Key Vault.",
        SerializedName = @"secretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SecretVersion { get; set; }
        /// <summary>Subscription Id of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription Id of the user's Key Vault containing the SSL certificate",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>
        /// Describes the action that shall be taken when the certificate is updated in Key Vault.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the action that shall be taken when the certificate is updated in Key Vault.",
        SerializedName = @"updateRule",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateRule { get;  }
        /// <summary>The name of the user's Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the user's Key Vault containing the SSL certificate",
        SerializedName = @"vaultName",
        PossibleTypes = new [] { typeof(string) })]
        string VaultName { get; set; }

    }
    /// Describes the parameters for using a user's KeyVault certificate for securing custom domain.
    internal partial interface IKeyVaultCertificateSourceParametersInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.ICertificateSourceParametersInternal
    {
        /// <summary>
        /// Describes the action that shall be taken when the certificate is removed from Key Vault.
        /// </summary>
        string DeleteRule { get; set; }
        /// <summary>Resource group of the user's Key Vault containing the SSL certificate</summary>
        string ResourceGroupName { get; set; }
        /// <summary>
        /// The name of Key Vault Secret (representing the full certificate PFX) in Key Vault.
        /// </summary>
        string SecretName { get; set; }
        /// <summary>The version(GUID) of Key Vault Secret in Key Vault.</summary>
        string SecretVersion { get; set; }
        /// <summary>Subscription Id of the user's Key Vault containing the SSL certificate</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// Describes the action that shall be taken when the certificate is updated in Key Vault.
        /// </summary>
        string UpdateRule { get; set; }
        /// <summary>The name of the user's Key Vault containing the SSL certificate</summary>
        string VaultName { get; set; }

    }
}