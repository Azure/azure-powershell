// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>The JSON object that contains the properties of the rule to update.</summary>
    public partial class RuleUpdatePropertiesParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IRuleUpdatePropertiesParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IRuleUpdatePropertiesParametersInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction> _action;

        /// <summary>
        /// A list of actions that are executed when all the conditions of a rule are satisfied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction> Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleCondition> _condition;

        /// <summary>A list of conditions that must be matched for the actions to be executed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleCondition> Condition { get => this._condition; set => this._condition = value; }

        /// <summary>Backing field for <see cref="MatchProcessingBehavior" /> property.</summary>
        private string _matchProcessingBehavior;

        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string MatchProcessingBehavior { get => this._matchProcessingBehavior; set => this._matchProcessingBehavior = value; }

        /// <summary>Internal Acessors for RuleSetName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IRuleUpdatePropertiesParametersInternal.RuleSetName { get => this._ruleSetName; set { {_ruleSetName = value;} } }

        /// <summary>Backing field for <see cref="Order" /> property.</summary>
        private int? _order;

        /// <summary>
        /// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will
        /// be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition
        /// and actions listed in it will always be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public int? Order { get => this._order; set => this._order = value; }

        /// <summary>Backing field for <see cref="RuleSetName" /> property.</summary>
        private string _ruleSetName;

        /// <summary>The name of the rule set containing the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string RuleSetName { get => this._ruleSetName; }

        /// <summary>Creates an new <see cref="RuleUpdatePropertiesParameters" /> instance.</summary>
        public RuleUpdatePropertiesParameters()
        {

        }
    }
    /// The JSON object that contains the properties of the rule to update.
    public partial interface IRuleUpdatePropertiesParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A list of actions that are executed when all the conditions of a rule are satisfied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of actions that are executed when all the conditions of a rule are satisfied.",
        SerializedName = @"actions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction> Action { get; set; }
        /// <summary>A list of conditions that must be matched for the actions to be executed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A list of conditions that must be matched for the actions to be executed",
        SerializedName = @"conditions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleCondition) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleCondition> Condition { get; set; }
        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.",
        SerializedName = @"matchProcessingBehavior",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Continue", "Stop")]
        string MatchProcessingBehavior { get; set; }
        /// <summary>
        /// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will
        /// be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition
        /// and actions listed in it will always be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.",
        SerializedName = @"order",
        PossibleTypes = new [] { typeof(int) })]
        int? Order { get; set; }
        /// <summary>The name of the rule set containing the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The name of the rule set containing the rule.",
        SerializedName = @"ruleSetName",
        PossibleTypes = new [] { typeof(string) })]
        string RuleSetName { get;  }

    }
    /// The JSON object that contains the properties of the rule to update.
    internal partial interface IRuleUpdatePropertiesParametersInternal

    {
        /// <summary>
        /// A list of actions that are executed when all the conditions of a rule are satisfied.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleAction> Action { get; set; }
        /// <summary>A list of conditions that must be matched for the actions to be executed</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.IDeliveryRuleCondition> Condition { get; set; }
        /// <summary>
        /// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults
        /// to Continue.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Cdn.PSArgumentCompleterAttribute("Continue", "Stop")]
        string MatchProcessingBehavior { get; set; }
        /// <summary>
        /// The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will
        /// be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition
        /// and actions listed in it will always be applied.
        /// </summary>
        int? Order { get; set; }
        /// <summary>The name of the rule set containing the rule.</summary>
        string RuleSetName { get; set; }

    }
}