// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Extensions;

    /// <summary>
    /// AzureBareMetal instance info on Azure (ARM properties and AzureBareMetal properties)
    /// </summary>
    public partial class AzureBareMetalInstance :
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstance,
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.TrackedResource();

        /// <summary>Specifies the AzureBareMetal instance unique ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string AzureBareMetalInstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).AzureBareMetalInstanceId; }

        /// <summary>Specifies the AzureBareMetal instance SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string HardwareProfileAzureBareMetalInstanceSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileAzureBareMetalInstanceSize; }

        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string HardwareProfileHardwareType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileHardwareType; }

        /// <summary>Hardware revision of an AzureBareMetal instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string HwRevision { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HwRevision; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for AzureBareMetalInstanceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.AzureBareMetalInstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).AzureBareMetalInstanceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).AzureBareMetalInstanceId = value; }

        /// <summary>Internal Acessors for HardwareProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IHardwareProfile Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.HardwareProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfile = value; }

        /// <summary>Internal Acessors for HardwareProfileAzureBareMetalInstanceSize</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.HardwareProfileAzureBareMetalInstanceSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileAzureBareMetalInstanceSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileAzureBareMetalInstanceSize = value; }

        /// <summary>Internal Acessors for HardwareProfileHardwareType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.HardwareProfileHardwareType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileHardwareType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HardwareProfileHardwareType = value; }

        /// <summary>Internal Acessors for HwRevision</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.HwRevision { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HwRevision; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).HwRevision = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for NetworkProfileCircuitId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.NetworkProfileCircuitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfileCircuitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfileCircuitId = value; }

        /// <summary>Internal Acessors for OSProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IOSProfile Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.OSProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfile = value; }

        /// <summary>Internal Acessors for OSProfileOstype</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.OSProfileOstype { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileOstype; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileOstype = value; }

        /// <summary>Internal Acessors for OSProfileVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.OSProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileVersion = value; }

        /// <summary>Internal Acessors for PowerState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).PowerState; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).PowerState = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceProperties Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.AzureBareMetalInstanceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ProximityPlacementGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.ProximityPlacementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProximityPlacementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProximityPlacementGroup = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.StorageProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfile = value; }

        /// <summary>Internal Acessors for StorageProfileNfsIPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.StorageProfileNfsIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfileNfsIPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfileNfsIPAddress = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedAt = value; }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedBy = value; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedByType = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedAt = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedBy = value; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedByType = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>Specifies the circuit id for connecting to express route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string NetworkProfileCircuitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfileCircuitId; }

        /// <summary>Specifies the network interfaces for the AzureBareMetal instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IIPAddress> NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfileNetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).NetworkProfileNetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>Specifies the host OS name of the AzureBareMetal instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string OSProfileComputerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileComputerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileComputerName = value ?? null; }

        /// <summary>This property allows you to specify the type of the OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string OSProfileOstype { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileOstype; }

        /// <summary>Specifies the SSH public key used to access the operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string OSProfileSshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileSshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileSshPublicKey = value ?? null; }

        /// <summary>Specifies version of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string OSProfileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).OSProfileVersion; }

        /// <summary>
        /// ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string PartnerNodeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).PartnerNodeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).PartnerNodeId = value ?? null; }

        /// <summary>Resource power state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string PowerState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).PowerState; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceProperties _property;

        /// <summary>AzureBareMetal instance properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.AzureBareMetalInstanceProperties()); set => this._property = value; }

        /// <summary>State of provisioning of the AzureBareMetalInstance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProvisioningState; }

        /// <summary>Resource proximity placement group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string ProximityPlacementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).ProximityPlacementGroup; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>IP Address to connect to storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string StorageProfileNfsIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfileNfsIPAddress; }

        /// <summary>
        /// Specifies information about the operating system disk used by baremetal instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IDisk> StorageProfileOSDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfileOSDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstancePropertiesInternal)Property).StorageProfileOSDisk = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemData _systemData;

        /// <summary>The system metadata relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).CreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemDataInternal)SystemData).LastModifiedByType; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Origin(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="AzureBareMetalInstance" /> instance.</summary>
        public AzureBareMetalInstance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// AzureBareMetal instance info on Azure (ARM properties and AzureBareMetal properties)
    public partial interface IAzureBareMetalInstance :
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResource
    {
        /// <summary>Specifies the AzureBareMetal instance unique ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the AzureBareMetal instance unique ID.",
        SerializedName = @"azureBareMetalInstanceId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBareMetalInstanceId { get;  }
        /// <summary>Specifies the AzureBareMetal instance SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the AzureBareMetal instance SKU.",
        SerializedName = @"azureBareMetalInstanceSize",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("S72m", "S144m", "S72", "S144", "S192", "S192m", "S192xm", "S96", "S112", "S224", "S224m", "S224om", "S224oo", "S224oom", "S224ooo", "S384", "S384m", "S384xm", "S384xxm", "S448", "S448m", "S448om", "S448oo", "S448oom", "S448ooo", "S576m", "S576xm", "S672", "S672m", "S672om", "S672oo", "S672oom", "S672ooo", "S768", "S768m", "S768xm", "S896", "S896m", "S896om", "S896oo", "S896oom", "S896ooo", "S960m")]
        string HardwareProfileAzureBareMetalInstanceSize { get;  }
        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the hardware type (vendor and/or their product name)",
        SerializedName = @"hardwareType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("Cisco_UCS", "HPE")]
        string HardwareProfileHardwareType { get;  }
        /// <summary>Hardware revision of an AzureBareMetal instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Hardware revision of an AzureBareMetal instance",
        SerializedName = @"hwRevision",
        PossibleTypes = new [] { typeof(string) })]
        string HwRevision { get;  }
        /// <summary>Specifies the circuit id for connecting to express route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies the circuit id for connecting to express route.",
        SerializedName = @"circuitId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfileCircuitId { get;  }
        /// <summary>Specifies the network interfaces for the AzureBareMetal instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the network interfaces for the AzureBareMetal instance.",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IIPAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IIPAddress> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Specifies the host OS name of the AzureBareMetal instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the host OS name of the AzureBareMetal instance.",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileComputerName { get; set; }
        /// <summary>This property allows you to specify the type of the OS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"This property allows you to specify the type of the OS.",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileOstype { get;  }
        /// <summary>Specifies the SSH public key used to access the operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies the SSH public key used to access the operating system.",
        SerializedName = @"sshPublicKey",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileSshPublicKey { get; set; }
        /// <summary>Specifies version of operating system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Specifies version of operating system.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileVersion { get;  }
        /// <summary>
        /// ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance",
        SerializedName = @"partnerNodeId",
        PossibleTypes = new [] { typeof(string) })]
        string PartnerNodeId { get; set; }
        /// <summary>Resource power state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource power state",
        SerializedName = @"powerState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("starting", "started", "stopping", "stopped", "restarting", "unknown")]
        string PowerState { get;  }
        /// <summary>State of provisioning of the AzureBareMetalInstance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of provisioning of the AzureBareMetalInstance",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating")]
        string ProvisioningState { get;  }
        /// <summary>Resource proximity placement group</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource proximity placement group",
        SerializedName = @"proximityPlacementGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ProximityPlacementGroup { get;  }
        /// <summary>IP Address to connect to storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"IP Address to connect to storage.",
        SerializedName = @"nfsIpAddress",
        PossibleTypes = new [] { typeof(string) })]
        string StorageProfileNfsIPAddress { get;  }
        /// <summary>
        /// Specifies information about the operating system disk used by baremetal instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specifies information about the operating system disk used by baremetal instance.",
        SerializedName = @"osDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IDisk) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IDisk> StorageProfileOSDisk { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get;  }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get;  }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get;  }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get;  }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get;  }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get;  }

    }
    /// AzureBareMetal instance info on Azure (ARM properties and AzureBareMetal properties)
    internal partial interface IAzureBareMetalInstanceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ITrackedResourceInternal
    {
        /// <summary>Specifies the AzureBareMetal instance unique ID.</summary>
        string AzureBareMetalInstanceId { get; set; }
        /// <summary>Specifies the hardware settings for the AzureBareMetal instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IHardwareProfile HardwareProfile { get; set; }
        /// <summary>Specifies the AzureBareMetal instance SKU.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("S72m", "S144m", "S72", "S144", "S192", "S192m", "S192xm", "S96", "S112", "S224", "S224m", "S224om", "S224oo", "S224oom", "S224ooo", "S384", "S384m", "S384xm", "S384xxm", "S448", "S448m", "S448om", "S448oo", "S448oom", "S448ooo", "S576m", "S576xm", "S672", "S672m", "S672om", "S672oo", "S672oom", "S672ooo", "S768", "S768m", "S768xm", "S896", "S896m", "S896om", "S896oo", "S896oom", "S896ooo", "S960m")]
        string HardwareProfileAzureBareMetalInstanceSize { get; set; }
        /// <summary>Name of the hardware type (vendor and/or their product name)</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("Cisco_UCS", "HPE")]
        string HardwareProfileHardwareType { get; set; }
        /// <summary>Hardware revision of an AzureBareMetal instance</summary>
        string HwRevision { get; set; }
        /// <summary>Specifies the network settings for the AzureBareMetal instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.INetworkProfile NetworkProfile { get; set; }
        /// <summary>Specifies the circuit id for connecting to express route.</summary>
        string NetworkProfileCircuitId { get; set; }
        /// <summary>Specifies the network interfaces for the AzureBareMetal instance.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IIPAddress> NetworkProfileNetworkInterface { get; set; }
        /// <summary>Specifies the operating system settings for the AzureBareMetal instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IOSProfile OSProfile { get; set; }
        /// <summary>Specifies the host OS name of the AzureBareMetal instance.</summary>
        string OSProfileComputerName { get; set; }
        /// <summary>This property allows you to specify the type of the OS.</summary>
        string OSProfileOstype { get; set; }
        /// <summary>Specifies the SSH public key used to access the operating system.</summary>
        string OSProfileSshPublicKey { get; set; }
        /// <summary>Specifies version of operating system.</summary>
        string OSProfileVersion { get; set; }
        /// <summary>
        /// ARM ID of another AzureBareMetalInstance that will share a network with this AzureBareMetalInstance
        /// </summary>
        string PartnerNodeId { get; set; }
        /// <summary>Resource power state</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("starting", "started", "stopping", "stopped", "restarting", "unknown")]
        string PowerState { get; set; }
        /// <summary>AzureBareMetal instance properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IAzureBareMetalInstanceProperties Property { get; set; }
        /// <summary>State of provisioning of the AzureBareMetalInstance</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Failed", "Succeeded", "Deleting", "Migrating")]
        string ProvisioningState { get; set; }
        /// <summary>Resource proximity placement group</summary>
        string ProximityPlacementGroup { get; set; }
        /// <summary>Specifies the storage settings for the AzureBareMetal instance disks.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IStorageProfile StorageProfile { get; set; }
        /// <summary>IP Address to connect to storage.</summary>
        string StorageProfileNfsIPAddress { get; set; }
        /// <summary>
        /// Specifies information about the operating system disk used by baremetal instance.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.IDisk> StorageProfileOSDisk { get; set; }
        /// <summary>The system metadata relating to this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BareMetal.Models.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.BareMetal.PSArgumentCompleterAttribute("User", "Application", "ManagedIdentity", "Key")]
        string SystemDataLastModifiedByType { get; set; }

    }
}