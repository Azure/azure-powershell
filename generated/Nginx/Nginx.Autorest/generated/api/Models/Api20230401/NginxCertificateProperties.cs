// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Extensions;

    public partial class NginxCertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20230401.INginxCertificateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20230401.INginxCertificatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CertificateVirtualPath" /> property.</summary>
        private string _certificateVirtualPath;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string CertificateVirtualPath { get => this._certificateVirtualPath; set => this._certificateVirtualPath = value; }

        /// <summary>Backing field for <see cref="KeyVaultSecretId" /> property.</summary>
        private string _keyVaultSecretId;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string KeyVaultSecretId { get => this._keyVaultSecretId; set => this._keyVaultSecretId = value; }

        /// <summary>Backing field for <see cref="KeyVirtualPath" /> property.</summary>
        private string _keyVirtualPath;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public string KeyVirtualPath { get => this._keyVirtualPath; set => this._keyVirtualPath = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Nginx.Models.Api20230401.INginxCertificatePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Origin(Microsoft.Azure.PowerShell.Cmdlets.Nginx.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="NginxCertificateProperties" /> instance.</summary>
        public NginxCertificateProperties()
        {

        }
    }
    public partial interface INginxCertificateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"certificateVirtualPath",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateVirtualPath { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"keyVaultSecretId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSecretId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"keyVirtualPath",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVirtualPath { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Nginx.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get;  }

    }
    internal partial interface INginxCertificatePropertiesInternal

    {
        string CertificateVirtualPath { get; set; }

        string KeyVaultSecretId { get; set; }

        string KeyVirtualPath { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Nginx.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}