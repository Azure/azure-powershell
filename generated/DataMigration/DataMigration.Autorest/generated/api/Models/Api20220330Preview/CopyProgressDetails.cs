// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Details on progress of ADF copy activity</summary>
    public partial class CopyProgressDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal
    {

        /// <summary>Backing field for <see cref="CopyDuration" /> property.</summary>
        private int? _copyDuration;

        /// <summary>Copy Duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? CopyDuration { get => this._copyDuration; }

        /// <summary>Backing field for <see cref="CopyStart" /> property.</summary>
        private global::System.DateTime? _copyStart;

        /// <summary>Copy Start</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? CopyStart { get => this._copyStart; }

        /// <summary>Backing field for <see cref="CopyThroughput" /> property.</summary>
        private double? _copyThroughput;

        /// <summary>Copy throughput in KBps</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public double? CopyThroughput { get => this._copyThroughput; }

        /// <summary>Backing field for <see cref="DataRead" /> property.</summary>
        private long? _dataRead;

        /// <summary>Bytes read</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? DataRead { get => this._dataRead; }

        /// <summary>Backing field for <see cref="DataWritten" /> property.</summary>
        private long? _dataWritten;

        /// <summary>Bytes written</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? DataWritten { get => this._dataWritten; }

        /// <summary>Internal Acessors for CopyDuration</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.CopyDuration { get => this._copyDuration; set { {_copyDuration = value;} } }

        /// <summary>Internal Acessors for CopyStart</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.CopyStart { get => this._copyStart; set { {_copyStart = value;} } }

        /// <summary>Internal Acessors for CopyThroughput</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.CopyThroughput { get => this._copyThroughput; set { {_copyThroughput = value;} } }

        /// <summary>Internal Acessors for DataRead</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.DataRead { get => this._dataRead; set { {_dataRead = value;} } }

        /// <summary>Internal Acessors for DataWritten</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.DataWritten { get => this._dataWritten; set { {_dataWritten = value;} } }

        /// <summary>Internal Acessors for ParallelCopyType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.ParallelCopyType { get => this._parallelCopyType; set { {_parallelCopyType = value;} } }

        /// <summary>Internal Acessors for RowsCopied</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.RowsCopied { get => this._rowsCopied; set { {_rowsCopied = value;} } }

        /// <summary>Internal Acessors for RowsRead</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.RowsRead { get => this._rowsRead; set { {_rowsRead = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.Status { get => this._status; set { {_status = value;} } }

        /// <summary>Internal Acessors for TableName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.TableName { get => this._tableName; set { {_tableName = value;} } }

        /// <summary>Internal Acessors for UsedParallelCopy</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetailsInternal.UsedParallelCopy { get => this._usedParallelCopy; set { {_usedParallelCopy = value;} } }

        /// <summary>Backing field for <see cref="ParallelCopyType" /> property.</summary>
        private string _parallelCopyType;

        /// <summary>Type of parallel copy (Dynamic range, Physical partition, none).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ParallelCopyType { get => this._parallelCopyType; }

        /// <summary>Backing field for <see cref="RowsCopied" /> property.</summary>
        private long? _rowsCopied;

        /// <summary>Rows Copied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? RowsCopied { get => this._rowsCopied; }

        /// <summary>Backing field for <see cref="RowsRead" /> property.</summary>
        private long? _rowsRead;

        /// <summary>Rows read</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public long? RowsRead { get => this._rowsRead; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Status of the Copy activity (InProgress, Succeeded, Failed, Canceled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Status { get => this._status; }

        /// <summary>Backing field for <see cref="TableName" /> property.</summary>
        private string _tableName;

        /// <summary>Table Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TableName { get => this._tableName; }

        /// <summary>Backing field for <see cref="UsedParallelCopy" /> property.</summary>
        private int? _usedParallelCopy;

        /// <summary>The degree of parallelization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? UsedParallelCopy { get => this._usedParallelCopy; }

        /// <summary>Creates an new <see cref="CopyProgressDetails" /> instance.</summary>
        public CopyProgressDetails()
        {

        }
    }
    /// Details on progress of ADF copy activity
    public partial interface ICopyProgressDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Copy Duration in seconds</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Copy Duration in seconds",
        SerializedName = @"copyDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? CopyDuration { get;  }
        /// <summary>Copy Start</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Copy Start",
        SerializedName = @"copyStart",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CopyStart { get;  }
        /// <summary>Copy throughput in KBps</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Copy throughput in KBps",
        SerializedName = @"copyThroughput",
        PossibleTypes = new [] { typeof(double) })]
        double? CopyThroughput { get;  }
        /// <summary>Bytes read</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Bytes read",
        SerializedName = @"dataRead",
        PossibleTypes = new [] { typeof(long) })]
        long? DataRead { get;  }
        /// <summary>Bytes written</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Bytes written",
        SerializedName = @"dataWritten",
        PossibleTypes = new [] { typeof(long) })]
        long? DataWritten { get;  }
        /// <summary>Type of parallel copy (Dynamic range, Physical partition, none).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of parallel copy (Dynamic range, Physical partition, none).",
        SerializedName = @"parallelCopyType",
        PossibleTypes = new [] { typeof(string) })]
        string ParallelCopyType { get;  }
        /// <summary>Rows Copied</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Rows Copied",
        SerializedName = @"rowsCopied",
        PossibleTypes = new [] { typeof(long) })]
        long? RowsCopied { get;  }
        /// <summary>Rows read</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Rows read",
        SerializedName = @"rowsRead",
        PossibleTypes = new [] { typeof(long) })]
        long? RowsRead { get;  }
        /// <summary>Status of the Copy activity (InProgress, Succeeded, Failed, Canceled).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of the Copy activity (InProgress, Succeeded, Failed, Canceled).",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get;  }
        /// <summary>Table Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Table Name",
        SerializedName = @"tableName",
        PossibleTypes = new [] { typeof(string) })]
        string TableName { get;  }
        /// <summary>The degree of parallelization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The degree of parallelization.",
        SerializedName = @"usedParallelCopies",
        PossibleTypes = new [] { typeof(int) })]
        int? UsedParallelCopy { get;  }

    }
    /// Details on progress of ADF copy activity
    internal partial interface ICopyProgressDetailsInternal

    {
        /// <summary>Copy Duration in seconds</summary>
        int? CopyDuration { get; set; }
        /// <summary>Copy Start</summary>
        global::System.DateTime? CopyStart { get; set; }
        /// <summary>Copy throughput in KBps</summary>
        double? CopyThroughput { get; set; }
        /// <summary>Bytes read</summary>
        long? DataRead { get; set; }
        /// <summary>Bytes written</summary>
        long? DataWritten { get; set; }
        /// <summary>Type of parallel copy (Dynamic range, Physical partition, none).</summary>
        string ParallelCopyType { get; set; }
        /// <summary>Rows Copied</summary>
        long? RowsCopied { get; set; }
        /// <summary>Rows read</summary>
        long? RowsRead { get; set; }
        /// <summary>Status of the Copy activity (InProgress, Succeeded, Failed, Canceled).</summary>
        string Status { get; set; }
        /// <summary>Table Name</summary>
        string TableName { get; set; }
        /// <summary>The degree of parallelization.</summary>
        int? UsedParallelCopy { get; set; }

    }
}