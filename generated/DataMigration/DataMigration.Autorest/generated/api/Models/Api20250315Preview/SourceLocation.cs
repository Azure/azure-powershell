// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Source Location details of backups.</summary>
    public partial class SourceLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocation,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal
    {

        /// <summary>Backing field for <see cref="AzureBlob" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlob _azureBlob;

        /// <summary>Source Azure Blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlob AzureBlob { get => (this._azureBlob = this._azureBlob ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.AzureBlob()); set => this._azureBlob = value; }

        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobAccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).AccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).AccountKey = value ?? null; }

        /// <summary>Authentication type used for accessing Azure Blob Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthType? AzureBlobAuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).AuthType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthType)""); }

        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).BlobContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).BlobContainerName = value ?? null; }

        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).StorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).StorageAccountResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="FileShare" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShare _fileShare;

        /// <summary>Source File share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShare FileShare { get => (this._fileShare = this._fileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.SqlFileShare()); set => this._fileShare = value; }

        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public System.Security.SecureString FileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Password = value ?? null; }

        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Path = value ?? null; }

        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FileShareUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShareInternal)FileShare).Username = value ?? null; }

        /// <summary>Backing field for <see cref="FileStorageType" /> property.</summary>
        private string _fileStorageType;

        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string FileStorageType { get => this._fileStorageType; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityPrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityTenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityUserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Internal Acessors for AzureBlob</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlob Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.AzureBlob { get => (this._azureBlob = this._azureBlob ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.AzureBlob()); set { {_azureBlob = value;} } }

        /// <summary>Internal Acessors for AzureBlobIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.AzureBlobIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).Identity = value; }

        /// <summary>Internal Acessors for FileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.FileShare { get => (this._fileShare = this._fileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.SqlFileShare()); set { {_fileShare = value;} } }

        /// <summary>Internal Acessors for FileStorageType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.FileStorageType { get => this._fileStorageType; set { {_fileStorageType = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityPrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISourceLocationInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlobInternal)AzureBlob).IdentityTenantId = value; }

        /// <summary>Creates an new <see cref="SourceLocation" /> instance.</summary>
        public SourceLocation()
        {

        }
    }
    /// Source Location details of backups.
    public partial interface ISourceLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage Account Key.",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobAccountKey { get; set; }
        /// <summary>Authentication type used for accessing Azure Blob Storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type used for accessing Azure Blob Storage.",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthType? AzureBlobAuthType { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob container name where backups are stored.",
        SerializedName = @"blobContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobContainerName { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the storage account where backups are stored.",
        SerializedName = @"storageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for username to access file share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location as SMB share or local drive where backups are placed.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username to access the file share location for backups.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string FileShareUsername { get; set; }
        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup storage Type.",
        SerializedName = @"fileStorageType",
        PossibleTypes = new [] { typeof(string) })]
        string FileStorageType { get;  }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

    }
    /// Source Location details of backups.
    internal partial interface ISourceLocationInternal

    {
        /// <summary>Source Azure Blob.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IAzureBlob AzureBlob { get; set; }
        /// <summary>Storage Account Key.</summary>
        string AzureBlobAccountKey { get; set; }
        /// <summary>Authentication type used for accessing Azure Blob Storage.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.AuthType? AzureBlobAuthType { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        string AzureBlobContainerName { get; set; }
        /// <summary>Identity details for authentication using a Managed Identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentity AzureBlobIdentity { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Source File share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlFileShare FileShare { get; set; }
        /// <summary>Password for username to access file share location.</summary>
        System.Security.SecureString FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        string FileShareUsername { get; set; }
        /// <summary>Backup storage Type.</summary>
        string FileStorageType { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api60.IManagedServiceIdentityUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }

    }
}