// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database Migration Resource properties.</summary>
    public partial class DatabaseMigrationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBaseProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBaseProperties __databaseMigrationBaseProperties = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.DatabaseMigrationBaseProperties();

        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public global::System.DateTime? EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).EndedOn; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).Kind = value ; }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).EndedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).EndedOn = value; }

        /// <summary>Internal Acessors for MigrationFailureError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IErrorInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.MigrationFailureError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureError = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorCode = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorMessage = value; }

        /// <summary>Internal Acessors for MigrationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationStatus = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal.StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).StartedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).StartedOn = value; }

        /// <summary>Internal Acessors for SourceServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesInternal.SourceServerName { get => this._sourceServerName; set { {_sourceServerName = value;} } }

        /// <summary>Internal Acessors for SourceSqlConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesInternal.SourceSqlConnection { get => (this._sourceSqlConnection = this._sourceSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.SqlConnectionInformation()); set { {_sourceSqlConnection = value;} } }

        /// <summary>Error details in case of migration failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IErrorInfo MigrationFailureError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureError; }

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorCode; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationFailureErrorMessage; }

        /// <summary>ID for current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationOperationId = value ?? null; }

        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationService { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationService; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationService = value ?? null; }

        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).MigrationStatus; }

        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).ProvisioningError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).ProvisioningError = value ?? null; }

        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).ProvisioningState; }

        /// <summary>Resource Id of the target resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).Scope = value ?? null; }

        /// <summary>Backing field for <see cref="SourceDatabaseName" /> property.</summary>
        private string _sourceDatabaseName;

        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceDatabaseName { get => this._sourceDatabaseName; set => this._sourceDatabaseName = value; }

        /// <summary>Backing field for <see cref="SourceServerName" /> property.</summary>
        private string _sourceServerName;

        /// <summary>Name of the source sql server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceServerName { get => this._sourceServerName; }

        /// <summary>Backing field for <see cref="SourceSqlConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformation _sourceSqlConnection;

        /// <summary>Source SQL Server connection details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformation SourceSqlConnection { get => (this._sourceSqlConnection = this._sourceSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.SqlConnectionInformation()); set => this._sourceSqlConnection = value; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Authentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).DataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).DataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).EncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).EncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public System.Security.SecureString SourceSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Password = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).TrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).TrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformationInternal)SourceSqlConnection).UserName = value ?? null; }

        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public global::System.DateTime? StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)__databaseMigrationBaseProperties).StartedOn; }

        /// <summary>Backing field for <see cref="TargetDatabaseCollation" /> property.</summary>
        private string _targetDatabaseCollation;

        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetDatabaseCollation { get => this._targetDatabaseCollation; set => this._targetDatabaseCollation = value; }

        /// <summary>Creates an new <see cref="DatabaseMigrationProperties" /> instance.</summary>
        public DatabaseMigrationProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__databaseMigrationBaseProperties), __databaseMigrationBaseProperties);
            await eventListener.AssertObjectIsValid(nameof(__databaseMigrationBaseProperties), __databaseMigrationBaseProperties);
        }
    }
    /// Database Migration Resource properties.
    public partial interface IDatabaseMigrationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBaseProperties
    {
        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the source database.",
        SerializedName = @"sourceDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDatabaseName { get; set; }
        /// <summary>Name of the source sql server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the source sql server.",
        SerializedName = @"sourceServerName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerName { get;  }
        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source.",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt connection or not.",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to source SQL.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust server certificate or not.",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name to connect to source SQL.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Database collation to be used for the target database.",
        SerializedName = @"targetDatabaseCollation",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDatabaseCollation { get; set; }

    }
    /// Database Migration Resource properties.
    internal partial interface IDatabaseMigrationPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal
    {
        /// <summary>Name of the source database.</summary>
        string SourceDatabaseName { get; set; }
        /// <summary>Name of the source sql server.</summary>
        string SourceServerName { get; set; }
        /// <summary>Source SQL Server connection details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ISqlConnectionInformation SourceSqlConnection { get; set; }
        /// <summary>Authentication type.</summary>
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        System.Security.SecureString SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        string TargetDatabaseCollation { get; set; }

    }
}