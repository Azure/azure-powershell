// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.PowerShell;

    /// <summary>Database Migration Resource properties for CosmosDb for Mongo.</summary>
    [System.ComponentModel.TypeConverter(typeof(DatabaseMigrationPropertiesCosmosDbMongoTypeConverter))]
    public partial class DatabaseMigrationPropertiesCosmosDbMongo
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.DatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DatabaseMigrationPropertiesCosmosDbMongo(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SourceMongoConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnection = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoConnectionInformation) content.GetValueForProperty("SourceMongoConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnection, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoConnectionInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetMongoConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnection = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoConnectionInformation) content.GetValueForProperty("TargetMongoConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnection, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoConnectionInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CollectionList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).CollectionList = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoMigrationCollection[]) content.GetValueForProperty("CollectionList",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).CollectionList, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoMigrationCollection>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoMigrationCollectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("MigrationFailureErrorCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorCode = (string) content.GetValueForProperty("MigrationFailureErrorCode",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorCode, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationFailureErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorMessage = (string) content.GetValueForProperty("MigrationFailureErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationFailureError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureError = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IErrorInfo) content.GetValueForProperty("MigrationFailureError",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureError, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ErrorInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType.CreateFrom);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("MigrationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationStatus = (string) content.GetValueForProperty("MigrationStatus",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("StartedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).StartedOn = (global::System.DateTime?) content.GetValueForProperty("StartedOn",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).StartedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EndedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).EndedOn = (global::System.DateTime?) content.GetValueForProperty("EndedOn",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).EndedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MigrationService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationService = (string) content.GetValueForProperty("MigrationService",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationService, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationOperationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationOperationId = (string) content.GetValueForProperty("MigrationOperationId",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationOperationId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningError = (string) content.GetValueForProperty("ProvisioningError",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningError, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionHost = (string) content.GetValueForProperty("SourceMongoConnectionHost",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionHost, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPort = (int?) content.GetValueForProperty("SourceMongoConnectionPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SourceMongoConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUserName = (string) content.GetValueForProperty("SourceMongoConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPassword = (System.Security.SecureString) content.GetValueForProperty("SourceMongoConnectionPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("SourceMongoConnectionUseSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUseSsl = (bool?) content.GetValueForProperty("SourceMongoConnectionUseSsl",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUseSsl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceMongoConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionString = (string) content.GetValueForProperty("SourceMongoConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionString, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionHost = (string) content.GetValueForProperty("TargetMongoConnectionHost",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionHost, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPort = (int?) content.GetValueForProperty("TargetMongoConnectionPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetMongoConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUserName = (string) content.GetValueForProperty("TargetMongoConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPassword = (System.Security.SecureString) content.GetValueForProperty("TargetMongoConnectionPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("TargetMongoConnectionUseSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUseSsl = (bool?) content.GetValueForProperty("TargetMongoConnectionUseSsl",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUseSsl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TargetMongoConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionString = (string) content.GetValueForProperty("TargetMongoConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionString, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.DatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DatabaseMigrationPropertiesCosmosDbMongo(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SourceMongoConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnection = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoConnectionInformation) content.GetValueForProperty("SourceMongoConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnection, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoConnectionInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetMongoConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnection = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoConnectionInformation) content.GetValueForProperty("TargetMongoConnection",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnection, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoConnectionInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CollectionList"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).CollectionList = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoMigrationCollection[]) content.GetValueForProperty("CollectionList",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).CollectionList, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IMongoMigrationCollection>(__y, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.MongoMigrationCollectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("MigrationFailureErrorCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorCode = (string) content.GetValueForProperty("MigrationFailureErrorCode",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorCode, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationFailureErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorMessage = (string) content.GetValueForProperty("MigrationFailureErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationFailureError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureError = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IErrorInfo) content.GetValueForProperty("MigrationFailureError",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationFailureError, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.ErrorInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType.CreateFrom);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).Scope, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("MigrationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationStatus = (string) content.GetValueForProperty("MigrationStatus",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationStatus, global::System.Convert.ToString);
            }
            if (content.Contains("StartedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).StartedOn = (global::System.DateTime?) content.GetValueForProperty("StartedOn",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).StartedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("EndedOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).EndedOn = (global::System.DateTime?) content.GetValueForProperty("EndedOn",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).EndedOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MigrationService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationService = (string) content.GetValueForProperty("MigrationService",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationService, global::System.Convert.ToString);
            }
            if (content.Contains("MigrationOperationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationOperationId = (string) content.GetValueForProperty("MigrationOperationId",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).MigrationOperationId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningError"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningError = (string) content.GetValueForProperty("ProvisioningError",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationBasePropertiesInternal)this).ProvisioningError, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionHost = (string) content.GetValueForProperty("SourceMongoConnectionHost",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionHost, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPort = (int?) content.GetValueForProperty("SourceMongoConnectionPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SourceMongoConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUserName = (string) content.GetValueForProperty("SourceMongoConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceMongoConnectionPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPassword = (System.Security.SecureString) content.GetValueForProperty("SourceMongoConnectionPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("SourceMongoConnectionUseSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUseSsl = (bool?) content.GetValueForProperty("SourceMongoConnectionUseSsl",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionUseSsl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SourceMongoConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionString = (string) content.GetValueForProperty("SourceMongoConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).SourceMongoConnectionString, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionHost = (string) content.GetValueForProperty("TargetMongoConnectionHost",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionHost, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPort = (int?) content.GetValueForProperty("TargetMongoConnectionPort",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TargetMongoConnectionUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUserName = (string) content.GetValueForProperty("TargetMongoConnectionUserName",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUserName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetMongoConnectionPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPassword = (System.Security.SecureString) content.GetValueForProperty("TargetMongoConnectionPassword",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("TargetMongoConnectionUseSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUseSsl = (bool?) content.GetValueForProperty("TargetMongoConnectionUseSsl",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionUseSsl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TargetMongoConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionString = (string) content.GetValueForProperty("TargetMongoConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongoInternal)this).TargetMongoConnectionString, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.DatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongo DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DatabaseMigrationPropertiesCosmosDbMongo(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.DatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongo"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongo DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DatabaseMigrationPropertiesCosmosDbMongo(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DatabaseMigrationPropertiesCosmosDbMongo" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="DatabaseMigrationPropertiesCosmosDbMongo" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20250315Preview.IDatabaseMigrationPropertiesCosmosDbMongo FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Database Migration Resource properties for CosmosDb for Mongo.
    [System.ComponentModel.TypeConverter(typeof(DatabaseMigrationPropertiesCosmosDbMongoTypeConverter))]
    public partial interface IDatabaseMigrationPropertiesCosmosDbMongo

    {

    }
}