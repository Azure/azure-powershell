// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support
{

    /// <summary>Argument completer implementation for FileExtensionsType.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.FileExtensionsTypeTypeConverter))]
    public partial struct FileExtensionsType :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AVRO".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AVRO'", "AVRO", global::System.Management.Automation.CompletionResultType.ParameterValue, "AVRO");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ORC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ORC'", "ORC", global::System.Management.Automation.CompletionResultType.ParameterValue, "ORC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PARQUET".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PARQUET'", "PARQUET", global::System.Management.Automation.CompletionResultType.ParameterValue, "PARQUET");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "JSON".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'JSON'", "JSON", global::System.Management.Automation.CompletionResultType.ParameterValue, "JSON");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TXT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TXT'", "TXT", global::System.Management.Automation.CompletionResultType.ParameterValue, "TXT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XML".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XML'", "XML", global::System.Management.Automation.CompletionResultType.ParameterValue, "XML");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Documents".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Documents'", "Documents", global::System.Management.Automation.CompletionResultType.ParameterValue, "Documents");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CSV".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CSV'", "CSV", global::System.Management.Automation.CompletionResultType.ParameterValue, "CSV");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PSV".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PSV'", "PSV", global::System.Management.Automation.CompletionResultType.ParameterValue, "PSV");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SSV".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SSV'", "SSV", global::System.Management.Automation.CompletionResultType.ParameterValue, "SSV");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TSV".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TSV'", "TSV", global::System.Management.Automation.CompletionResultType.ParameterValue, "TSV");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "GZ".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'GZ'", "GZ", global::System.Management.Automation.CompletionResultType.ParameterValue, "GZ");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DOC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DOC'", "DOC", global::System.Management.Automation.CompletionResultType.ParameterValue, "DOC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DOCM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DOCM'", "DOCM", global::System.Management.Automation.CompletionResultType.ParameterValue, "DOCM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DOCX".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DOCX'", "DOCX", global::System.Management.Automation.CompletionResultType.ParameterValue, "DOCX");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DOT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DOT'", "DOT", global::System.Management.Automation.CompletionResultType.ParameterValue, "DOT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ODP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ODP'", "ODP", global::System.Management.Automation.CompletionResultType.ParameterValue, "ODP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ODS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ODS'", "ODS", global::System.Management.Automation.CompletionResultType.ParameterValue, "ODS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ODT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ODT'", "ODT", global::System.Management.Automation.CompletionResultType.ParameterValue, "ODT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PDF".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PDF'", "PDF", global::System.Management.Automation.CompletionResultType.ParameterValue, "PDF");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "POT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'POT'", "POT", global::System.Management.Automation.CompletionResultType.ParameterValue, "POT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PPS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PPS'", "PPS", global::System.Management.Automation.CompletionResultType.ParameterValue, "PPS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PPSX".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PPSX'", "PPSX", global::System.Management.Automation.CompletionResultType.ParameterValue, "PPSX");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PPT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PPT'", "PPT", global::System.Management.Automation.CompletionResultType.ParameterValue, "PPT");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PPTM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PPTM'", "PPTM", global::System.Management.Automation.CompletionResultType.ParameterValue, "PPTM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PPTX".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PPTX'", "PPTX", global::System.Management.Automation.CompletionResultType.ParameterValue, "PPTX");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLC".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLC'", "XLC", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLC");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLS".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLS'", "XLS", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLS");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLSB".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLSB'", "XLSB", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLSB");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLSM".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLSM'", "XLSM", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLSM");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLSX".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLSX'", "XLSX", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLSX");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "XLT".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'XLT'", "XLT", global::System.Management.Automation.CompletionResultType.ParameterValue, "XLT");
            }
        }
    }
}