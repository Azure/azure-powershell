// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Extensions;

    public partial class ResourceTypeFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilter,
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterInternal
    {

        /// <summary>Backing field for <see cref="Credential" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterCredential _credential;

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterCredential Credential { get => (this._credential = this._credential ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ResourceTypeFilterCredential()); set => this._credential = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string CredentialReferenceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ICredentialReferenceInternal)Credential).ReferenceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ICredentialReferenceInternal)Credential).ReferenceName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ICredentialReferenceInternal)Credential).CredentialType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ICredentialReferenceInternal)Credential).CredentialType = value ?? null; }

        /// <summary>Internal Acessors for Credential</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterCredential Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterInternal.Credential { get => (this._credential = this._credential ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ResourceTypeFilterCredential()); set { {_credential = value;} } }

        /// <summary>Internal Acessors for ResourceNameFilter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterResourceNameFilter Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterInternal.ResourceNameFilter { get => (this._resourceNameFilter = this._resourceNameFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ResourceTypeFilterResourceNameFilter()); set { {_resourceNameFilter = value;} } }

        /// <summary>Backing field for <see cref="ResourceNameFilter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterResourceNameFilter _resourceNameFilter;

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterResourceNameFilter ResourceNameFilter { get => (this._resourceNameFilter = this._resourceNameFilter ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ResourceTypeFilterResourceNameFilter()); set => this._resourceNameFilter = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ResourceNameFilterExcludePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).ExcludePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).ExcludePrefix = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ResourceNameFilterIncludePrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).IncludePrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).IncludePrefix = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ResourceNameFilterResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).Resource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceNameFilterInternal)ResourceNameFilter).Resource = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ScanRulesetName" /> property.</summary>
        private string _scanRulesetName;

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        public string ScanRulesetName { get => this._scanRulesetName; set => this._scanRulesetName = value; }

        /// <summary>Backing field for <see cref="ScanRulesetType" /> property.</summary>
        private string _scanRulesetType;

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        public string ScanRulesetType { get => this._scanRulesetType; set => this._scanRulesetType = value; }

        /// <summary>Creates an new <see cref="ResourceTypeFilter" /> instance.</summary>
        public ResourceTypeFilter()
        {

        }
    }
    public partial interface IResourceTypeFilter :
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"referenceName",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialReferenceName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"credentialType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("AccountKey", "ServicePrincipal", "BasicAuth", "SqlAuth", "AmazonARN")]
        string CredentialType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"excludePrefixes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ResourceNameFilterExcludePrefix { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"includePrefixes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ResourceNameFilterIncludePrefix { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"resources",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ResourceNameFilterResource { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"scanRulesetName",
        PossibleTypes = new [] { typeof(string) })]
        string ScanRulesetName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"scanRulesetType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Custom", "System")]
        string ScanRulesetType { get; set; }

    }
    internal partial interface IResourceTypeFilterInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterCredential Credential { get; set; }

        string CredentialReferenceName { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("AccountKey", "ServicePrincipal", "BasicAuth", "SqlAuth", "AmazonARN")]
        string CredentialType { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IResourceTypeFilterResourceNameFilter ResourceNameFilter { get; set; }

        System.Collections.Generic.List<string> ResourceNameFilterExcludePrefix { get; set; }

        System.Collections.Generic.List<string> ResourceNameFilterIncludePrefix { get; set; }

        System.Collections.Generic.List<string> ResourceNameFilterResource { get; set; }

        string ScanRulesetName { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Custom", "System")]
        string ScanRulesetType { get; set; }

    }
}