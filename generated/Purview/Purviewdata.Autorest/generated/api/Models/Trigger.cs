// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Extensions;

    [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.DoNotFormat]
    public partial class Trigger :
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITrigger,
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ProxyResource();

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).CreatedAt; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Id; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? IncrementalScanStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).IncrementalScanStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).IncrementalScanStartTime = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public int? Interval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).Interval = value ?? default(int); }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastModifiedAt; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastScheduled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastScheduled; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Name = value ?? null; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.CreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for LastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.LastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for LastScheduled</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.LastScheduled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastScheduled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).LastScheduled = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerProperties Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.TriggerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Recurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesRecurrence Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.Recurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).Recurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).Recurrence = value ?? null /* model class */; }

        /// <summary>Internal Acessors for RecurrenceSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerRecurrenceSchedule Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerInternal.RecurrenceSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceSchedule = value ?? null /* model class */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerProperties _property;

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.TriggerProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecurrenceEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceEndTime = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string RecurrenceFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceFrequency = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string RecurrenceInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceInterval = value ?? null; }

        /// <summary>Dictionary of <any></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleAdditionalProperties RecurrenceScheduleAdditionalProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleAdditionalProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleAdditionalProperty = value ?? null /* model class */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> RecurrenceScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleHour = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> RecurrenceScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMinute = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<int> RecurrenceScheduleMonthDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMonthDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMonthDay = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleOccurrence> RecurrenceScheduleMonthlyOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMonthlyOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleMonthlyOccurrence = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> RecurrenceScheduleWeekDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleWeekDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceScheduleWeekDay = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public global::System.DateTime? RecurrenceStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceStartTime = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string RecurrenceTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceTimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).RecurrenceTimeZone = value ?? null; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Origin(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PropertyOrigin.Inlined)]
        public string ScanLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).ScanLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesAutoGeneratedInternal)Property).ScanLevel = value ?? null; }

        /// <summary>Creates an new <see cref="Trigger" /> instance.</summary>
        public Trigger()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    public partial interface ITrigger :
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResource
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedAt { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"incrementalScanStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? IncrementalScanStartTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? Interval { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedAt { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"",
        SerializedName = @"lastScheduled",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastScheduled { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecurrenceEndTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Week", "Month")]
        string RecurrenceFrequency { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"recurrenceInterval",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceInterval { get; set; }
        /// <summary>Dictionary of <any></summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Dictionary of <any>",
        SerializedName = @"additionalProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleAdditionalProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleAdditionalProperties RecurrenceScheduleAdditionalProperty { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> RecurrenceScheduleHour { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> RecurrenceScheduleMinute { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"monthDays",
        PossibleTypes = new [] { typeof(int) })]
        System.Collections.Generic.List<int> RecurrenceScheduleMonthDay { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"monthlyOccurrences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleOccurrence) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleOccurrence> RecurrenceScheduleMonthlyOccurrence { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"weekDays",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")]
        System.Collections.Generic.List<string> RecurrenceScheduleWeekDay { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RecurrenceStartTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceTimeZone { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"scanLevel",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Full", "Incremental")]
        string ScanLevel { get; set; }

    }
    internal partial interface ITriggerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IProxyResourceInternal
    {
        global::System.DateTime? CreatedAt { get; set; }

        global::System.DateTime? IncrementalScanStartTime { get; set; }

        int? Interval { get; set; }

        global::System.DateTime? LastModifiedAt { get; set; }

        global::System.DateTime? LastScheduled { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerProperties Property { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerPropertiesRecurrence Recurrence { get; set; }

        global::System.DateTime? RecurrenceEndTime { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Week", "Month")]
        string RecurrenceFrequency { get; set; }

        string RecurrenceInterval { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.ITriggerRecurrenceSchedule RecurrenceSchedule { get; set; }
        /// <summary>Dictionary of <any></summary>
        Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleAdditionalProperties RecurrenceScheduleAdditionalProperty { get; set; }

        System.Collections.Generic.List<int> RecurrenceScheduleHour { get; set; }

        System.Collections.Generic.List<int> RecurrenceScheduleMinute { get; set; }

        System.Collections.Generic.List<int> RecurrenceScheduleMonthDay { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Models.IRecurrenceScheduleOccurrence> RecurrenceScheduleMonthlyOccurrence { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")]
        System.Collections.Generic.List<string> RecurrenceScheduleWeekDay { get; set; }

        global::System.DateTime? RecurrenceStartTime { get; set; }

        string RecurrenceTimeZone { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.PSArgumentCompleterAttribute("Full", "Incremental")]
        string ScanLevel { get; set; }

    }
}