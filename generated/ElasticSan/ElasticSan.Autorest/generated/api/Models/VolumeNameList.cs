// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>object to hold array of volume names</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.DoNotFormat]
    public partial class VolumeNameList :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeNameList,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeNameListInternal
    {

        /// <summary>Backing field for <see cref="VolumeName" /> property.</summary>
        private System.Collections.Generic.List<string> _volumeName;

        /// <summary>array of volume names</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> VolumeName { get => this._volumeName; set => this._volumeName = value; }

        /// <summary>Creates an new <see cref="VolumeNameList" /> instance.</summary>
        public VolumeNameList()
        {

        }
    }
    /// object to hold array of volume names
    public partial interface IVolumeNameList :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>array of volume names</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"array of volume names",
        SerializedName = @"volumeNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VolumeName { get; set; }

    }
    /// object to hold array of volume names
    internal partial interface IVolumeNameListInternal

    {
        /// <summary>array of volume names</summary>
        System.Collections.Generic.List<string> VolumeName { get; set; }

    }
}