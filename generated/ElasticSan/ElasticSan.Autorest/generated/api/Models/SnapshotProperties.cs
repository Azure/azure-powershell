// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>Properties for Snapshot.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.DoNotFormat]
    public partial class SnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationData _creationData;

        /// <summary>Data used when creating a volume snapshot.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationData CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.SnapshotCreationData()); set => this._creationData = value; }

        /// <summary>
        /// Fully qualified resource ID of the volume. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string CreationDataSourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationDataInternal)CreationData).SourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationDataInternal)CreationData).SourceId = value ; }

        /// <summary>Internal Acessors for CreationData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationData Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotPropertiesInternal.CreationData { get => (this._creationData = this._creationData ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.SnapshotCreationData()); set { {_creationData = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SourceVolumeSizeGiB</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotPropertiesInternal.SourceVolumeSizeGiB { get => this._sourceVolumeSizeGiB; set { {_sourceVolumeSizeGiB = value;} } }

        /// <summary>Internal Acessors for VolumeName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotPropertiesInternal.VolumeName { get => this._volumeName; set { {_volumeName = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SourceVolumeSizeGiB" /> property.</summary>
        private long? _sourceVolumeSizeGiB;

        /// <summary>Size of Source Volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public long? SourceVolumeSizeGiB { get => this._sourceVolumeSizeGiB; }

        /// <summary>Backing field for <see cref="VolumeName" /> property.</summary>
        private string _volumeName;

        /// <summary>Source Volume Name of a snapshot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string VolumeName { get => this._volumeName; }

        /// <summary>Creates an new <see cref="SnapshotProperties" /> instance.</summary>
        public SnapshotProperties()
        {

        }
    }
    /// Properties for Snapshot.
    public partial interface ISnapshotProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Fully qualified resource ID of the volume. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully qualified resource ID of the volume. E.g. ""/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}""",
        SerializedName = @"sourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CreationDataSourceId { get; set; }
        /// <summary>State of the operation on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State of the operation on the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Succeeded", "Failed", "Canceled", "Pending", "Creating", "Updating", "Deleting")]
        string ProvisioningState { get;  }
        /// <summary>Size of Source Volume</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Size of Source Volume",
        SerializedName = @"sourceVolumeSizeGiB",
        PossibleTypes = new [] { typeof(long) })]
        long? SourceVolumeSizeGiB { get;  }
        /// <summary>Source Volume Name of a snapshot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Source Volume Name of a snapshot",
        SerializedName = @"volumeName",
        PossibleTypes = new [] { typeof(string) })]
        string VolumeName { get;  }

    }
    /// Properties for Snapshot.
    internal partial interface ISnapshotPropertiesInternal

    {
        /// <summary>Data used when creating a volume snapshot.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.ISnapshotCreationData CreationData { get; set; }
        /// <summary>
        /// Fully qualified resource ID of the volume. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes/{volumeName}"
        /// </summary>
        string CreationDataSourceId { get; set; }
        /// <summary>State of the operation on the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Invalid", "Succeeded", "Failed", "Canceled", "Pending", "Creating", "Updating", "Deleting")]
        string ProvisioningState { get; set; }
        /// <summary>Size of Source Volume</summary>
        long? SourceVolumeSizeGiB { get; set; }
        /// <summary>Source Volume Name of a snapshot</summary>
        string VolumeName { get; set; }

    }
}