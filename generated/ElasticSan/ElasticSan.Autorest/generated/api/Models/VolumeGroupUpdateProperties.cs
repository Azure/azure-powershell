// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>VolumeGroup response properties.</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.DoNotFormat]
    public partial class VolumeGroupUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private string _encryption;

        /// <summary>Type of encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string Encryption { get => this._encryption; set => this._encryption = value; }

        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string EncryptionIdentityEncryptionUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).EncryptionIdentityEncryptionUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).EncryptionIdentityEncryptionUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="EncryptionProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties _encryptionProperty;

        /// <summary>Encryption Properties describing Key Vault and Identity information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties EncryptionProperty { get => (this._encryptionProperty = this._encryptionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.EncryptionProperties()); set => this._encryptionProperty = value; }

        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp; }

        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyIdentifier; }

        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyName = value ?? null; }

        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyVaultUri = value ?? null; }

        /// <summary>The version of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyKeyVersion = value ?? null; }

        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyLastKeyRotationTimestamp; }

        /// <summary>Internal Acessors for EncryptionProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.EncryptionProperty { get => (this._encryptionProperty = this._encryptionProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.EncryptionProperties()); set { {_encryptionProperty = value;} } }

        /// <summary>Internal Acessors for EncryptionPropertyEncryptionIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentity Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.EncryptionPropertyEncryptionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).EncryptionIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).EncryptionIdentity = value; }

        /// <summary>Internal Acessors for EncryptionPropertyKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.EncryptionPropertyKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultProperty = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.KeyVaultPropertyCurrentVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyCurrentVersionedKeyIdentifier = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyLastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionPropertiesInternal)EncryptionProperty).KeyVaultPropertyLastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for NetworkAcls</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVolumeGroupUpdatePropertiesInternal.NetworkAcls { get => (this._networkAcls = this._networkAcls ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.NetworkRuleSet()); set { {_networkAcls = value;} } }

        /// <summary>Backing field for <see cref="NetworkAcls" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet _networkAcls;

        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet NetworkAcls { get => (this._networkAcls = this._networkAcls ?? new Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.NetworkRuleSet()); set => this._networkAcls = value; }

        /// <summary>The list of virtual network rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSetInternal)NetworkAcls).VirtualNetworkRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSetInternal)NetworkAcls).VirtualNetworkRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ProtocolType" /> property.</summary>
        private string _protocolType;

        /// <summary>Type of storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string ProtocolType { get => this._protocolType; set => this._protocolType = value; }

        /// <summary>Creates an new <see cref="VolumeGroupUpdateProperties" /> instance.</summary>
        public VolumeGroupUpdateProperties()
        {

        }
    }
    /// VolumeGroup response properties.
    public partial interface IVolumeGroupUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>Type of encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of encryption",
        SerializedName = @"encryption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("EncryptionAtRestWithPlatformKey", "EncryptionAtRestWithCustomerManagedKey")]
        string Encryption { get; set; }
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionIdentityEncryptionUserAssignedIdentity { get; set; }
        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.",
        SerializedName = @"currentVersionedKeyExpirationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get;  }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The object identifier of the current versioned Key Vault Key in use.",
        SerializedName = @"currentVersionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get;  }
        /// <summary>The name of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of KeyVault key.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Uri of KeyVault.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of KeyVault key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version of KeyVault key.",
        SerializedName = @"keyVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp of last rotation of the Key Vault Key.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>The list of virtual network rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = false,
        Update = true,
        Description = @"The list of virtual network rules.",
        SerializedName = @"virtualNetworkRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get; set; }
        /// <summary>Type of storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of storage target",
        SerializedName = @"protocolType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Iscsi", "None")]
        string ProtocolType { get; set; }

    }
    /// VolumeGroup response properties.
    internal partial interface IVolumeGroupUpdatePropertiesInternal

    {
        /// <summary>Type of encryption</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("EncryptionAtRestWithPlatformKey", "EncryptionAtRestWithCustomerManagedKey")]
        string Encryption { get; set; }
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        string EncryptionIdentityEncryptionUserAssignedIdentity { get; set; }
        /// <summary>Encryption Properties describing Key Vault and Identity information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionProperties EncryptionProperty { get; set; }
        /// <summary>The identity to be used with service-side encryption at rest.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentity EncryptionPropertyEncryptionIdentity { get; set; }
        /// <summary>Properties provided by key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IKeyVaultProperties EncryptionPropertyKeyVaultProperty { get; set; }
        /// <summary>
        /// This is a read only property that represents the expiration time of the current version of the customer managed key used
        /// for encryption.
        /// </summary>
        global::System.DateTime? KeyVaultPropertyCurrentVersionedKeyExpirationTimestamp { get; set; }
        /// <summary>The object identifier of the current versioned Key Vault Key in use.</summary>
        string KeyVaultPropertyCurrentVersionedKeyIdentifier { get; set; }
        /// <summary>The name of KeyVault key.</summary>
        string KeyVaultPropertyKeyName { get; set; }
        /// <summary>The Uri of KeyVault.</summary>
        string KeyVaultPropertyKeyVaultUri { get; set; }
        /// <summary>The version of KeyVault key.</summary>
        string KeyVaultPropertyKeyVersion { get; set; }
        /// <summary>Timestamp of last rotation of the Key Vault Key.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>
        /// A collection of rules governing the accessibility from specific network locations.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.INetworkRuleSet NetworkAcls { get; set; }
        /// <summary>The list of virtual network rules.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IVirtualNetworkRule> NetworkAclsVirtualNetworkRule { get; set; }
        /// <summary>Type of storage target</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PSArgumentCompleterAttribute("Iscsi", "None")]
        string ProtocolType { get; set; }

    }
}