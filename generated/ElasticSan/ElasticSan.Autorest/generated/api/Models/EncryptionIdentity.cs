// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Extensions;

    /// <summary>Encryption identity for the volume group.</summary>
    public partial class EncryptionIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Models.IEncryptionIdentityInternal
    {

        /// <summary>Backing field for <see cref="EncryptionUserAssignedIdentity" /> property.</summary>
        private string _encryptionUserAssignedIdentity;

        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Origin(Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.PropertyOrigin.Owned)]
        public string EncryptionUserAssignedIdentity { get => this._encryptionUserAssignedIdentity; set => this._encryptionUserAssignedIdentity = value; }

        /// <summary>Creates an new <see cref="EncryptionIdentity" /> instance.</summary>
        public EncryptionIdentity()
        {

        }
    }
    /// Encryption identity for the volume group.
    public partial interface IEncryptionIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ElasticSan.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionUserAssignedIdentity { get; set; }

    }
    /// Encryption identity for the volume group.
    internal partial interface IEncryptionIdentityInternal

    {
        /// <summary>
        /// Resource identifier of the UserAssigned identity to be associated with server-side encryption on the volume group.
        /// </summary>
        string EncryptionUserAssignedIdentity { get; set; }

    }
}