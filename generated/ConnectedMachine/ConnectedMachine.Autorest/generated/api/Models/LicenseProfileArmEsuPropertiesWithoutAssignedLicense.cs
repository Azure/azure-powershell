// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Describes the properties of a License Profile ARM model.</summary>
    public partial class LicenseProfileArmEsuPropertiesWithoutAssignedLicense :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicense,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuProperties __licenseProfileStorageModelEsuProperties = new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseProfileStorageModelEsuProperties();

        /// <summary>The guid id of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public string AssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).AssignedLicenseImmutableId; }

        /// <summary>Backing field for <see cref="EsuEligibility" /> property.</summary>
        private string _esuEligibility;

        /// <summary>Indicates the eligibility state of Esu.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string EsuEligibility { get => this._esuEligibility; }

        /// <summary>The list of ESU keys.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> EsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).EsuKey; }

        /// <summary>Backing field for <see cref="EsuKeyState" /> property.</summary>
        private string _esuKeyState;

        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string EsuKeyState { get => this._esuKeyState; }

        /// <summary>Internal Acessors for EsuEligibility</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.EsuEligibility { get => this._esuEligibility; set { {_esuEligibility = value;} } }

        /// <summary>Internal Acessors for EsuKeyState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.EsuKeyState { get => this._esuKeyState; set { {_esuKeyState = value;} } }

        /// <summary>Internal Acessors for ServerType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal.ServerType { get => this._serverType; set { {_serverType = value;} } }

        /// <summary>Internal Acessors for AssignedLicenseImmutableId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal.AssignedLicenseImmutableId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).AssignedLicenseImmutableId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).AssignedLicenseImmutableId = value; }

        /// <summary>Internal Acessors for EsuKey</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IEsuKey> Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal.EsuKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).EsuKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal)__licenseProfileStorageModelEsuProperties).EsuKey = value; }

        /// <summary>Backing field for <see cref="ServerType" /> property.</summary>
        private string _serverType;

        /// <summary>The type of the Esu servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string ServerType { get => this._serverType; }

        /// <summary>
        /// Creates an new <see cref="LicenseProfileArmEsuPropertiesWithoutAssignedLicense" /> instance.
        /// </summary>
        public LicenseProfileArmEsuPropertiesWithoutAssignedLicense()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__licenseProfileStorageModelEsuProperties), __licenseProfileStorageModelEsuProperties);
            await eventListener.AssertObjectIsValid(nameof(__licenseProfileStorageModelEsuProperties), __licenseProfileStorageModelEsuProperties);
        }
    }
    /// Describes the properties of a License Profile ARM model.
    public partial interface ILicenseProfileArmEsuPropertiesWithoutAssignedLicense :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuProperties
    {
        /// <summary>Indicates the eligibility state of Esu.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates the eligibility state of Esu.",
        SerializedName = @"esuEligibility",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Eligible", "Ineligible", "Unknown")]
        string EsuEligibility { get;  }
        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Indicates whether there is an ESU Key currently active for the machine.",
        SerializedName = @"esuKeyState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Inactive", "Active")]
        string EsuKeyState { get;  }
        /// <summary>The type of the Esu servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of the Esu servers.",
        SerializedName = @"serverType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string ServerType { get;  }

    }
    /// Describes the properties of a License Profile ARM model.
    internal partial interface ILicenseProfileArmEsuPropertiesWithoutAssignedLicenseInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseProfileStorageModelEsuPropertiesInternal
    {
        /// <summary>Indicates the eligibility state of Esu.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Eligible", "Ineligible", "Unknown")]
        string EsuEligibility { get; set; }
        /// <summary>Indicates whether there is an ESU Key currently active for the machine.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Inactive", "Active")]
        string EsuKeyState { get; set; }
        /// <summary>The type of the Esu servers.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string ServerType { get; set; }

    }
}