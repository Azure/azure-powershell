// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Describes the Update properties of a License Profile.</summary>
    public partial class LicenseUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="LicenseDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetails _licenseDetail;

        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetails LicenseDetail { get => (this._licenseDetail = this._licenseDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseUpdatePropertiesLicenseDetails()); set => this._licenseDetail = value; }

        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string LicenseDetailEdition { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Edition; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Edition = value ?? null; }

        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public int? LicenseDetailProcessor { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Processor; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Processor = value ?? default(int); }

        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string LicenseDetailState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).State = value ?? null; }

        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string LicenseDetailTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Target = value ?? null; }

        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Inlined)]
        public string LicenseDetailType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetailsInternal)LicenseDetail).Type = value ?? null; }

        /// <summary>Backing field for <see cref="LicenseType" /> property.</summary>
        private string _licenseType;

        /// <summary>The type of the license resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string LicenseType { get => this._licenseType; set => this._licenseType = value; }

        /// <summary>Internal Acessors for LicenseDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetails Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesInternal.LicenseDetail { get => (this._licenseDetail = this._licenseDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.LicenseUpdatePropertiesLicenseDetails()); set { {_licenseDetail = value;} } }

        /// <summary>Creates an new <see cref="LicenseUpdateProperties" /> instance.</summary>
        public LicenseUpdateProperties()
        {

        }
    }
    /// Describes the Update properties of a License Profile.
    public partial interface ILicenseUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the edition of the license. The values are either Standard or Datacenter.",
        SerializedName = @"edition",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string LicenseDetailEdition { get; set; }
        /// <summary>Describes the number of processors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the number of processors.",
        SerializedName = @"processors",
        PossibleTypes = new [] { typeof(int) })]
        int? LicenseDetailProcessor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the state of the license.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string LicenseDetailState { get; set; }
        /// <summary>Describes the license target server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license target server.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string LicenseDetailTarget { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes the license core type (pCore or vCore).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string LicenseDetailType { get; set; }
        /// <summary>The type of the license resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The type of the license resource.",
        SerializedName = @"licenseType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("ESU")]
        string LicenseType { get; set; }

    }
    /// Describes the Update properties of a License Profile.
    internal partial interface ILicenseUpdatePropertiesInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.ILicenseUpdatePropertiesLicenseDetails LicenseDetail { get; set; }
        /// <summary>
        /// Describes the edition of the license. The values are either Standard or Datacenter.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Standard", "Datacenter")]
        string LicenseDetailEdition { get; set; }
        /// <summary>Describes the number of processors.</summary>
        int? LicenseDetailProcessor { get; set; }
        /// <summary>Describes the state of the license.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Activated", "Deactivated")]
        string LicenseDetailState { get; set; }
        /// <summary>Describes the license target server.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("Windows Server 2012", "Windows Server 2012 R2")]
        string LicenseDetailTarget { get; set; }
        /// <summary>Describes the license core type (pCore or vCore).</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("pCore", "vCore")]
        string LicenseDetailType { get; set; }
        /// <summary>The type of the license resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PSArgumentCompleterAttribute("ESU")]
        string LicenseType { get; set; }

    }
}