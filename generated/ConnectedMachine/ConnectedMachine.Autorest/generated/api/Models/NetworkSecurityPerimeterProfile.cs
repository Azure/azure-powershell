// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Extensions;

    /// <summary>Network Security Perimeter profile</summary>
    public partial class NetworkSecurityPerimeterProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfile,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal
    {

        /// <summary>Backing field for <see cref="AccessRule" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule> _accessRule;

        /// <summary>Collection of access rules for the profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule> AccessRule { get => this._accessRule; }

        /// <summary>Backing field for <see cref="AccessRulesVersion" /> property.</summary>
        private int? _accessRulesVersion;

        /// <summary>Access rules version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? AccessRulesVersion { get => this._accessRulesVersion; }

        /// <summary>Backing field for <see cref="DiagnosticSettingsVersion" /> property.</summary>
        private int? _diagnosticSettingsVersion;

        /// <summary>Diagnostic settings version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public int? DiagnosticSettingsVersion { get => this._diagnosticSettingsVersion; }

        /// <summary>Backing field for <see cref="EnabledLogCategory" /> property.</summary>
        private System.Collections.Generic.List<string> _enabledLogCategory;

        /// <summary>Collection of enabled log categories for the profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> EnabledLogCategory { get => this._enabledLogCategory; }

        /// <summary>Internal Acessors for AccessRule</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule> Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal.AccessRule { get => this._accessRule; set { {_accessRule = value;} } }

        /// <summary>Internal Acessors for AccessRulesVersion</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal.AccessRulesVersion { get => this._accessRulesVersion; set { {_accessRulesVersion = value;} } }

        /// <summary>Internal Acessors for DiagnosticSettingsVersion</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal.DiagnosticSettingsVersion { get => this._diagnosticSettingsVersion; set { {_diagnosticSettingsVersion = value;} } }

        /// <summary>Internal Acessors for EnabledLogCategory</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal.EnabledLogCategory { get => this._enabledLogCategory; set { {_enabledLogCategory = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.INetworkSecurityPerimeterProfileInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Creates an new <see cref="NetworkSecurityPerimeterProfile" /> instance.</summary>
        public NetworkSecurityPerimeterProfile()
        {

        }
    }
    /// Network Security Perimeter profile
    public partial interface INetworkSecurityPerimeterProfile :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.IJsonSerializable
    {
        /// <summary>Collection of access rules for the profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Collection of access rules for the profile",
        SerializedName = @"accessRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule> AccessRule { get;  }
        /// <summary>Access rules version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Access rules version number",
        SerializedName = @"accessRulesVersion",
        PossibleTypes = new [] { typeof(int) })]
        int? AccessRulesVersion { get;  }
        /// <summary>Diagnostic settings version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Diagnostic settings version number",
        SerializedName = @"diagnosticSettingsVersion",
        PossibleTypes = new [] { typeof(int) })]
        int? DiagnosticSettingsVersion { get;  }
        /// <summary>Collection of enabled log categories for the profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Collection of enabled log categories for the profile",
        SerializedName = @"enabledLogCategories",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> EnabledLogCategory { get;  }
        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the resource",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }

    }
    /// Network Security Perimeter profile
    internal partial interface INetworkSecurityPerimeterProfileInternal

    {
        /// <summary>Collection of access rules for the profile</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ConnectedMachine.Models.IAccessRule> AccessRule { get; set; }
        /// <summary>Access rules version number</summary>
        int? AccessRulesVersion { get; set; }
        /// <summary>Diagnostic settings version number</summary>
        int? DiagnosticSettingsVersion { get; set; }
        /// <summary>Collection of enabled log categories for the profile</summary>
        System.Collections.Generic.List<string> EnabledLogCategory { get; set; }
        /// <summary>Name of the resource</summary>
        string Name { get; set; }

    }
}