// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.PowerShell;

    /// <summary>Autonomous Database resource model.</summary>
    [System.ComponentModel.TypeConverter(typeof(AutonomousDatabaseTypeConverter))]
    public partial class AutonomousDatabase
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabase"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AutonomousDatabase(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseBaseProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabaseBasePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeModel = (string) content.GetValueForProperty("ComputeModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeModel, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDb = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseStandbySummary) content.GetValueForProperty("LocalStandbyDb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDb, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabaseStandbySummaryTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduledOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperation = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IScheduledOperationsType) content.GetValueForProperty("ScheduledOperation",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperation, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ScheduledOperationsTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApexDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetail = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IApexDetailsType) content.GetValueForProperty("ApexDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetail, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ApexDetailsTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IConnectionStringType) content.GetValueForProperty("ConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionString, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ConnectionStringTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrl = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IConnectionUrlType) content.GetValueForProperty("ConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrl, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ConnectionUrlTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("LongTermBackupSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupSchedule = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ILongTermBackUpScheduleDetails) content.GetValueForProperty("LongTermBackupSchedule",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupSchedule, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.LongTermBackUpScheduleDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AdminPassword = (System.Security.SecureString) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AdminPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("DataBaseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataBaseType = (string) content.GetValueForProperty("DataBaseType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataBaseType, global::System.Convert.ToString);
            }
            if (content.Contains("AutonomousMaintenanceScheduleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousMaintenanceScheduleType = (string) content.GetValueForProperty("AutonomousMaintenanceScheduleType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousMaintenanceScheduleType, global::System.Convert.ToString);
            }
            if (content.Contains("CharacterSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CharacterSet = (string) content.GetValueForProperty("CharacterSet",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CharacterSet, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeCount = (float?) content.GetValueForProperty("ComputeCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("CpuCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CpuCoreCount = (int?) content.GetValueForProperty("CpuCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CpuCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomerContact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CustomerContact = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICustomerContact>) content.GetValueForProperty("CustomerContact",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CustomerContact, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICustomerContact>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CustomerContactTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInTb = (int?) content.GetValueForProperty("DataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInTb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInGb = (int?) content.GetValueForProperty("DataStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DbVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbVersion = (string) content.GetValueForProperty("DbVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DbWorkload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbWorkload = (string) content.GetValueForProperty("DbWorkload",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbWorkload, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("IsAutoScalingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingEnabled = (bool?) content.GetValueForProperty("IsAutoScalingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsAutoScalingForStorageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingForStorageEnabled = (bool?) content.GetValueForProperty("IsAutoScalingForStorageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingForStorageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PeerDbIds"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbIds = (System.Collections.Generic.List<string>) content.GetValueForProperty("PeerDbIds",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbIds, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PeerDbId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbId = (string) content.GetValueForProperty("PeerDbId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbId, global::System.Convert.ToString);
            }
            if (content.Contains("IsLocalDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsLocalDataGuardEnabled = (bool?) content.GetValueForProperty("IsLocalDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsLocalDataGuardEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsRemoteDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsRemoteDataGuardEnabled = (bool?) content.GetValueForProperty("IsRemoteDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsRemoteDataGuardEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LocalDisasterRecoveryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalDisasterRecoveryType = (string) content.GetValueForProperty("LocalDisasterRecoveryType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalDisasterRecoveryType, global::System.Convert.ToString);
            }
            if (content.Contains("FailedDataRecoveryInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).FailedDataRecoveryInSecond = (int?) content.GetValueForProperty("FailedDataRecoveryInSecond",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).FailedDataRecoveryInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IsMtlsConnectionRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsMtlsConnectionRequired = (bool?) content.GetValueForProperty("IsMtlsConnectionRequired",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsMtlsConnectionRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsPreviewVersionWithServiceTermsAccepted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreviewVersionWithServiceTermsAccepted = (bool?) content.GetValueForProperty("IsPreviewVersionWithServiceTermsAccepted",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreviewVersionWithServiceTermsAccepted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NcharacterSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NcharacterSet = (string) content.GetValueForProperty("NcharacterSet",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NcharacterSet, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleState = (string) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointIP = (string) content.GetValueForProperty("PrivateEndpointIP",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointIP, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointLabel = (string) content.GetValueForProperty("PrivateEndpointLabel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointLabel, global::System.Convert.ToString);
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeMaintenanceBegin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceBegin = (global::System.DateTime?) content.GetValueForProperty("TimeMaintenanceBegin",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceBegin, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeMaintenanceEnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceEnd = (global::System.DateTime?) content.GetValueForProperty("TimeMaintenanceEnd",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceEnd, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ActualUsedDataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ActualUsedDataStorageSizeInTb = (double?) content.GetValueForProperty("ActualUsedDataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ActualUsedDataStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("AllocatedStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllocatedStorageSizeInTb = (double?) content.GetValueForProperty("AllocatedStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllocatedStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AvailableUpgradeVersion = (System.Collections.Generic.List<string>) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DataSafeStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataSafeStatus = (string) content.GetValueForProperty("DataSafeStatus",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataSafeStatus, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseEdition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DatabaseEdition = (string) content.GetValueForProperty("DatabaseEdition",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DatabaseEdition, global::System.Convert.ToString);
            }
            if (content.Contains("AutonomousDatabaseId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousDatabaseId = (string) content.GetValueForProperty("AutonomousDatabaseId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousDatabaseId, global::System.Convert.ToString);
            }
            if (content.Contains("InMemoryAreaInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).InMemoryAreaInGb = (int?) content.GetValueForProperty("InMemoryAreaInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).InMemoryAreaInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NextLongTermBackupTimeStamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NextLongTermBackupTimeStamp = (global::System.DateTime?) content.GetValueForProperty("NextLongTermBackupTimeStamp",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NextLongTermBackupTimeStamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreview = (bool?) content.GetValueForProperty("IsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LocalAdgAutoFailoverMaxDataLossLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalAdgAutoFailoverMaxDataLossLimit = (int?) content.GetValueForProperty("LocalAdgAutoFailoverMaxDataLossLimit",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalAdgAutoFailoverMaxDataLossLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryPerOracleComputeUnitInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).MemoryPerOracleComputeUnitInGb = (int?) content.GetValueForProperty("MemoryPerOracleComputeUnitInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).MemoryPerOracleComputeUnitInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OpenMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OpenMode = (string) content.GetValueForProperty("OpenMode",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OpenMode, global::System.Convert.ToString);
            }
            if (content.Contains("OperationsInsightsStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OperationsInsightsStatus = (string) content.GetValueForProperty("OperationsInsightsStatus",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OperationsInsightsStatus, global::System.Convert.ToString);
            }
            if (content.Contains("PermissionLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PermissionLevel = (string) content.GetValueForProperty("PermissionLevel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PermissionLevel, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpoint = (string) content.GetValueForProperty("PrivateEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisionableCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisionableCpu = (System.Collections.Generic.List<int>) content.GetValueForProperty("ProvisionableCpu",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisionableCpu, __y => TypeConverterExtensions.SelectToList<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceConsoleUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ServiceConsoleUrl = (string) content.GetValueForProperty("ServiceConsoleUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ServiceConsoleUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SqlWebDeveloperUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SqlWebDeveloperUrl = (string) content.GetValueForProperty("SqlWebDeveloperUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SqlWebDeveloperUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SupportedRegionsToCloneTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SupportedRegionsToCloneTo = (System.Collections.Generic.List<string>) content.GetValueForProperty("SupportedRegionsToCloneTo",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SupportedRegionsToCloneTo, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TimeDataGuardRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDataGuardRoleChanged = (string) content.GetValueForProperty("TimeDataGuardRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDataGuardRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("TimeDeletionOfFreeAutonomousDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDeletionOfFreeAutonomousDatabase = (string) content.GetValueForProperty("TimeDeletionOfFreeAutonomousDatabase",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDeletionOfFreeAutonomousDatabase, global::System.Convert.ToString);
            }
            if (content.Contains("TimeLocalDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeLocalDataGuardEnabled = (string) content.GetValueForProperty("TimeLocalDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeLocalDataGuardEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastFailover"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastFailover = (string) content.GetValueForProperty("TimeOfLastFailover",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastFailover, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastRefresh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefresh = (string) content.GetValueForProperty("TimeOfLastRefresh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefresh, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastRefreshPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefreshPoint = (string) content.GetValueForProperty("TimeOfLastRefreshPoint",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefreshPoint, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastSwitchover"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastSwitchover = (string) content.GetValueForProperty("TimeOfLastSwitchover",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastSwitchover, global::System.Convert.ToString);
            }
            if (content.Contains("TimeReclamationOfFreeAutonomousDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeReclamationOfFreeAutonomousDatabase = (string) content.GetValueForProperty("TimeReclamationOfFreeAutonomousDatabase",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeReclamationOfFreeAutonomousDatabase, global::System.Convert.ToString);
            }
            if (content.Contains("UsedDataStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInGb = (int?) content.GetValueForProperty("UsedDataStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UsedDataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInTb = (int?) content.GetValueForProperty("UsedDataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInTb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupRetentionPeriodInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).BackupRetentionPeriodInDay = (int?) content.GetValueForProperty("BackupRetentionPeriodInDay",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).BackupRetentionPeriodInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WhitelistedIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).WhitelistedIP = (System.Collections.Generic.List<string>) content.GetValueForProperty("WhitelistedIP",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).WhitelistedIP, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LongTermBackupScheduleRetentionPeriodInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRetentionPeriodInDay = (int?) content.GetValueForProperty("LongTermBackupScheduleRetentionPeriodInDay",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRetentionPeriodInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LocalStandbyDbLagTimeInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLagTimeInSecond = (int?) content.GetValueForProperty("LocalStandbyDbLagTimeInSecond",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLagTimeInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LocalStandbyDbLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleState = (string) content.GetValueForProperty("LocalStandbyDbLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleDetail = (string) content.GetValueForProperty("LocalStandbyDbLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbTimeDataGuardRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDataGuardRoleChanged = (string) content.GetValueForProperty("LocalStandbyDbTimeDataGuardRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDataGuardRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbTimeDisasterRecoveryRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDisasterRecoveryRoleChanged = (string) content.GetValueForProperty("LocalStandbyDbTimeDisasterRecoveryRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDisasterRecoveryRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduledOperationDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDayOfWeek) content.GetValueForProperty("ScheduledOperationDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DayOfWeekTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduledOperationScheduledStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStartTime = (string) content.GetValueForProperty("ScheduledOperationScheduledStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduledOperationScheduledStopTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStopTime = (string) content.GetValueForProperty("ScheduledOperationScheduledStopTime",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStopTime, global::System.Convert.ToString);
            }
            if (content.Contains("DayOfWeekName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DayOfWeekName = (string) content.GetValueForProperty("DayOfWeekName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DayOfWeekName, global::System.Convert.ToString);
            }
            if (content.Contains("ApexDetailApexVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailApexVersion = (string) content.GetValueForProperty("ApexDetailApexVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailApexVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ApexDetailOrdsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailOrdsVersion = (string) content.GetValueForProperty("ApexDetailOrdsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailOrdsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringAllConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringAllConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAllConnectionStringType) content.GetValueForProperty("ConnectionStringAllConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringAllConnectionString, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AllConnectionStringTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionStringDedicated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringDedicated = (string) content.GetValueForProperty("ConnectionStringDedicated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringDedicated, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringHigh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringHigh = (string) content.GetValueForProperty("ConnectionStringHigh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringHigh, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringLow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringLow = (string) content.GetValueForProperty("ConnectionStringLow",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringLow, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringMedium"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringMedium = (string) content.GetValueForProperty("ConnectionStringMedium",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringMedium, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IProfileType>) content.GetValueForProperty("ConnectionStringProfile",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IProfileType>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ProfileTypeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionUrlApexUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlApexUrl = (string) content.GetValueForProperty("ConnectionUrlApexUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlApexUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlDatabaseTransformsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlDatabaseTransformsUrl = (string) content.GetValueForProperty("ConnectionUrlDatabaseTransformsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlDatabaseTransformsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlGraphStudioUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlGraphStudioUrl = (string) content.GetValueForProperty("ConnectionUrlGraphStudioUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlGraphStudioUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlMachineLearningNotebookUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMachineLearningNotebookUrl = (string) content.GetValueForProperty("ConnectionUrlMachineLearningNotebookUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMachineLearningNotebookUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlMongoDbUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMongoDbUrl = (string) content.GetValueForProperty("ConnectionUrlMongoDbUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMongoDbUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlOrdsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlOrdsUrl = (string) content.GetValueForProperty("ConnectionUrlOrdsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlOrdsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlSqlDevWebUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlSqlDevWebUrl = (string) content.GetValueForProperty("ConnectionUrlSqlDevWebUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlSqlDevWebUrl, global::System.Convert.ToString);
            }
            if (content.Contains("LongTermBackupScheduleRepeatCadence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRepeatCadence = (string) content.GetValueForProperty("LongTermBackupScheduleRepeatCadence",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRepeatCadence, global::System.Convert.ToString);
            }
            if (content.Contains("LongTermBackupScheduleTimeOfBackup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleTimeOfBackup = (global::System.DateTime?) content.GetValueForProperty("LongTermBackupScheduleTimeOfBackup",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleTimeOfBackup, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LongTermBackupScheduleIsDisabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleIsDisabled = (bool?) content.GetValueForProperty("LongTermBackupScheduleIsDisabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleIsDisabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AllConnectionStringHigh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringHigh = (string) content.GetValueForProperty("AllConnectionStringHigh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringHigh, global::System.Convert.ToString);
            }
            if (content.Contains("AllConnectionStringLow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringLow = (string) content.GetValueForProperty("AllConnectionStringLow",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringLow, global::System.Convert.ToString);
            }
            if (content.Contains("AllConnectionStringMedium"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringMedium = (string) content.GetValueForProperty("AllConnectionStringMedium",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringMedium, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabase"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AutonomousDatabase(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseBaseProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabaseBasePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeModel = (string) content.GetValueForProperty("ComputeModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeModel, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LicenseModel = (string) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LicenseModel, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDb = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseStandbySummary) content.GetValueForProperty("LocalStandbyDb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDb, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabaseStandbySummaryTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduledOperation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperation = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IScheduledOperationsType) content.GetValueForProperty("ScheduledOperation",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperation, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ScheduledOperationsTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApexDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetail = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IApexDetailsType) content.GetValueForProperty("ApexDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetail, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ApexDetailsTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IConnectionStringType) content.GetValueForProperty("ConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionString, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ConnectionStringTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrl = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IConnectionUrlType) content.GetValueForProperty("ConnectionUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrl, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ConnectionUrlTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("LongTermBackupSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupSchedule = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ILongTermBackUpScheduleDetails) content.GetValueForProperty("LongTermBackupSchedule",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupSchedule, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.LongTermBackUpScheduleDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdminPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AdminPassword = (System.Security.SecureString) content.GetValueForProperty("AdminPassword",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AdminPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("DataBaseType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataBaseType = (string) content.GetValueForProperty("DataBaseType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataBaseType, global::System.Convert.ToString);
            }
            if (content.Contains("AutonomousMaintenanceScheduleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousMaintenanceScheduleType = (string) content.GetValueForProperty("AutonomousMaintenanceScheduleType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousMaintenanceScheduleType, global::System.Convert.ToString);
            }
            if (content.Contains("CharacterSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CharacterSet = (string) content.GetValueForProperty("CharacterSet",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CharacterSet, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeCount = (float?) content.GetValueForProperty("ComputeCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ComputeCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("CpuCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CpuCoreCount = (int?) content.GetValueForProperty("CpuCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CpuCoreCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CustomerContact"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CustomerContact = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICustomerContact>) content.GetValueForProperty("CustomerContact",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).CustomerContact, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICustomerContact>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CustomerContactTypeConverter.ConvertFrom));
            }
            if (content.Contains("DataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInTb = (int?) content.GetValueForProperty("DataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInTb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DataStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInGb = (int?) content.GetValueForProperty("DataStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DbVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbVersion = (string) content.GetValueForProperty("DbVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbVersion, global::System.Convert.ToString);
            }
            if (content.Contains("DbWorkload"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbWorkload = (string) content.GetValueForProperty("DbWorkload",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DbWorkload, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("IsAutoScalingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingEnabled = (bool?) content.GetValueForProperty("IsAutoScalingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsAutoScalingForStorageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingForStorageEnabled = (bool?) content.GetValueForProperty("IsAutoScalingForStorageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsAutoScalingForStorageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PeerDbIds"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbIds = (System.Collections.Generic.List<string>) content.GetValueForProperty("PeerDbIds",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbIds, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PeerDbId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbId = (string) content.GetValueForProperty("PeerDbId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PeerDbId, global::System.Convert.ToString);
            }
            if (content.Contains("IsLocalDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsLocalDataGuardEnabled = (bool?) content.GetValueForProperty("IsLocalDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsLocalDataGuardEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsRemoteDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsRemoteDataGuardEnabled = (bool?) content.GetValueForProperty("IsRemoteDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsRemoteDataGuardEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LocalDisasterRecoveryType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalDisasterRecoveryType = (string) content.GetValueForProperty("LocalDisasterRecoveryType",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalDisasterRecoveryType, global::System.Convert.ToString);
            }
            if (content.Contains("FailedDataRecoveryInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).FailedDataRecoveryInSecond = (int?) content.GetValueForProperty("FailedDataRecoveryInSecond",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).FailedDataRecoveryInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IsMtlsConnectionRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsMtlsConnectionRequired = (bool?) content.GetValueForProperty("IsMtlsConnectionRequired",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsMtlsConnectionRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsPreviewVersionWithServiceTermsAccepted"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreviewVersionWithServiceTermsAccepted = (bool?) content.GetValueForProperty("IsPreviewVersionWithServiceTermsAccepted",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreviewVersionWithServiceTermsAccepted, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NcharacterSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NcharacterSet = (string) content.GetValueForProperty("NcharacterSet",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NcharacterSet, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleState = (string) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointIP = (string) content.GetValueForProperty("PrivateEndpointIP",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointIP, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointLabel = (string) content.GetValueForProperty("PrivateEndpointLabel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpointLabel, global::System.Convert.ToString);
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("TimeCreated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeCreated = (global::System.DateTime?) content.GetValueForProperty("TimeCreated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeCreated, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeMaintenanceBegin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceBegin = (global::System.DateTime?) content.GetValueForProperty("TimeMaintenanceBegin",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceBegin, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TimeMaintenanceEnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceEnd = (global::System.DateTime?) content.GetValueForProperty("TimeMaintenanceEnd",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeMaintenanceEnd, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ActualUsedDataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ActualUsedDataStorageSizeInTb = (double?) content.GetValueForProperty("ActualUsedDataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ActualUsedDataStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("AllocatedStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllocatedStorageSizeInTb = (double?) content.GetValueForProperty("AllocatedStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllocatedStorageSizeInTb, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AvailableUpgradeVersion = (System.Collections.Generic.List<string>) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DataSafeStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataSafeStatus = (string) content.GetValueForProperty("DataSafeStatus",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DataSafeStatus, global::System.Convert.ToString);
            }
            if (content.Contains("DatabaseEdition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DatabaseEdition = (string) content.GetValueForProperty("DatabaseEdition",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DatabaseEdition, global::System.Convert.ToString);
            }
            if (content.Contains("AutonomousDatabaseId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousDatabaseId = (string) content.GetValueForProperty("AutonomousDatabaseId",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AutonomousDatabaseId, global::System.Convert.ToString);
            }
            if (content.Contains("InMemoryAreaInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).InMemoryAreaInGb = (int?) content.GetValueForProperty("InMemoryAreaInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).InMemoryAreaInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NextLongTermBackupTimeStamp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NextLongTermBackupTimeStamp = (global::System.DateTime?) content.GetValueForProperty("NextLongTermBackupTimeStamp",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).NextLongTermBackupTimeStamp, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreview = (bool?) content.GetValueForProperty("IsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).IsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LocalAdgAutoFailoverMaxDataLossLimit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalAdgAutoFailoverMaxDataLossLimit = (int?) content.GetValueForProperty("LocalAdgAutoFailoverMaxDataLossLimit",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalAdgAutoFailoverMaxDataLossLimit, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MemoryPerOracleComputeUnitInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).MemoryPerOracleComputeUnitInGb = (int?) content.GetValueForProperty("MemoryPerOracleComputeUnitInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).MemoryPerOracleComputeUnitInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("OpenMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OpenMode = (string) content.GetValueForProperty("OpenMode",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OpenMode, global::System.Convert.ToString);
            }
            if (content.Contains("OperationsInsightsStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OperationsInsightsStatus = (string) content.GetValueForProperty("OperationsInsightsStatus",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).OperationsInsightsStatus, global::System.Convert.ToString);
            }
            if (content.Contains("PermissionLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PermissionLevel = (string) content.GetValueForProperty("PermissionLevel",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PermissionLevel, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpoint = (string) content.GetValueForProperty("PrivateEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).PrivateEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisionableCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisionableCpu = (System.Collections.Generic.List<int>) content.GetValueForProperty("ProvisionableCpu",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ProvisionableCpu, __y => TypeConverterExtensions.SelectToList<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Role = (string) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).Role, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceConsoleUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ServiceConsoleUrl = (string) content.GetValueForProperty("ServiceConsoleUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ServiceConsoleUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SqlWebDeveloperUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SqlWebDeveloperUrl = (string) content.GetValueForProperty("SqlWebDeveloperUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SqlWebDeveloperUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SupportedRegionsToCloneTo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SupportedRegionsToCloneTo = (System.Collections.Generic.List<string>) content.GetValueForProperty("SupportedRegionsToCloneTo",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).SupportedRegionsToCloneTo, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TimeDataGuardRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDataGuardRoleChanged = (string) content.GetValueForProperty("TimeDataGuardRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDataGuardRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("TimeDeletionOfFreeAutonomousDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDeletionOfFreeAutonomousDatabase = (string) content.GetValueForProperty("TimeDeletionOfFreeAutonomousDatabase",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeDeletionOfFreeAutonomousDatabase, global::System.Convert.ToString);
            }
            if (content.Contains("TimeLocalDataGuardEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeLocalDataGuardEnabled = (string) content.GetValueForProperty("TimeLocalDataGuardEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeLocalDataGuardEnabled, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastFailover"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastFailover = (string) content.GetValueForProperty("TimeOfLastFailover",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastFailover, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastRefresh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefresh = (string) content.GetValueForProperty("TimeOfLastRefresh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefresh, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastRefreshPoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefreshPoint = (string) content.GetValueForProperty("TimeOfLastRefreshPoint",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastRefreshPoint, global::System.Convert.ToString);
            }
            if (content.Contains("TimeOfLastSwitchover"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastSwitchover = (string) content.GetValueForProperty("TimeOfLastSwitchover",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeOfLastSwitchover, global::System.Convert.ToString);
            }
            if (content.Contains("TimeReclamationOfFreeAutonomousDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeReclamationOfFreeAutonomousDatabase = (string) content.GetValueForProperty("TimeReclamationOfFreeAutonomousDatabase",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).TimeReclamationOfFreeAutonomousDatabase, global::System.Convert.ToString);
            }
            if (content.Contains("UsedDataStorageSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInGb = (int?) content.GetValueForProperty("UsedDataStorageSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("UsedDataStorageSizeInTb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInTb = (int?) content.GetValueForProperty("UsedDataStorageSizeInTb",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).UsedDataStorageSizeInTb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupRetentionPeriodInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).BackupRetentionPeriodInDay = (int?) content.GetValueForProperty("BackupRetentionPeriodInDay",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).BackupRetentionPeriodInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("WhitelistedIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).WhitelistedIP = (System.Collections.Generic.List<string>) content.GetValueForProperty("WhitelistedIP",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).WhitelistedIP, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LongTermBackupScheduleRetentionPeriodInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRetentionPeriodInDay = (int?) content.GetValueForProperty("LongTermBackupScheduleRetentionPeriodInDay",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRetentionPeriodInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LocalStandbyDbLagTimeInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLagTimeInSecond = (int?) content.GetValueForProperty("LocalStandbyDbLagTimeInSecond",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLagTimeInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LocalStandbyDbLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleState = (string) content.GetValueForProperty("LocalStandbyDbLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleState, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleDetail = (string) content.GetValueForProperty("LocalStandbyDbLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbTimeDataGuardRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDataGuardRoleChanged = (string) content.GetValueForProperty("LocalStandbyDbTimeDataGuardRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDataGuardRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("LocalStandbyDbTimeDisasterRecoveryRoleChanged"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDisasterRecoveryRoleChanged = (string) content.GetValueForProperty("LocalStandbyDbTimeDisasterRecoveryRoleChanged",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LocalStandbyDbTimeDisasterRecoveryRoleChanged, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduledOperationDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationDayOfWeek = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDayOfWeek) content.GetValueForProperty("ScheduledOperationDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationDayOfWeek, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DayOfWeekTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScheduledOperationScheduledStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStartTime = (string) content.GetValueForProperty("ScheduledOperationScheduledStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduledOperationScheduledStopTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStopTime = (string) content.GetValueForProperty("ScheduledOperationScheduledStopTime",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ScheduledOperationScheduledStopTime, global::System.Convert.ToString);
            }
            if (content.Contains("DayOfWeekName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DayOfWeekName = (string) content.GetValueForProperty("DayOfWeekName",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).DayOfWeekName, global::System.Convert.ToString);
            }
            if (content.Contains("ApexDetailApexVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailApexVersion = (string) content.GetValueForProperty("ApexDetailApexVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailApexVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ApexDetailOrdsVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailOrdsVersion = (string) content.GetValueForProperty("ApexDetailOrdsVersion",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ApexDetailOrdsVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringAllConnectionString"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringAllConnectionString = (Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAllConnectionStringType) content.GetValueForProperty("ConnectionStringAllConnectionString",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringAllConnectionString, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AllConnectionStringTypeTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConnectionStringDedicated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringDedicated = (string) content.GetValueForProperty("ConnectionStringDedicated",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringDedicated, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringHigh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringHigh = (string) content.GetValueForProperty("ConnectionStringHigh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringHigh, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringLow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringLow = (string) content.GetValueForProperty("ConnectionStringLow",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringLow, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringMedium"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringMedium = (string) content.GetValueForProperty("ConnectionStringMedium",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringMedium, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionStringProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringProfile = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IProfileType>) content.GetValueForProperty("ConnectionStringProfile",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionStringProfile, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IProfileType>(__y, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ProfileTypeTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionUrlApexUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlApexUrl = (string) content.GetValueForProperty("ConnectionUrlApexUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlApexUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlDatabaseTransformsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlDatabaseTransformsUrl = (string) content.GetValueForProperty("ConnectionUrlDatabaseTransformsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlDatabaseTransformsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlGraphStudioUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlGraphStudioUrl = (string) content.GetValueForProperty("ConnectionUrlGraphStudioUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlGraphStudioUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlMachineLearningNotebookUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMachineLearningNotebookUrl = (string) content.GetValueForProperty("ConnectionUrlMachineLearningNotebookUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMachineLearningNotebookUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlMongoDbUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMongoDbUrl = (string) content.GetValueForProperty("ConnectionUrlMongoDbUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlMongoDbUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlOrdsUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlOrdsUrl = (string) content.GetValueForProperty("ConnectionUrlOrdsUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlOrdsUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ConnectionUrlSqlDevWebUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlSqlDevWebUrl = (string) content.GetValueForProperty("ConnectionUrlSqlDevWebUrl",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).ConnectionUrlSqlDevWebUrl, global::System.Convert.ToString);
            }
            if (content.Contains("LongTermBackupScheduleRepeatCadence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRepeatCadence = (string) content.GetValueForProperty("LongTermBackupScheduleRepeatCadence",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleRepeatCadence, global::System.Convert.ToString);
            }
            if (content.Contains("LongTermBackupScheduleTimeOfBackup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleTimeOfBackup = (global::System.DateTime?) content.GetValueForProperty("LongTermBackupScheduleTimeOfBackup",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleTimeOfBackup, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LongTermBackupScheduleIsDisabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleIsDisabled = (bool?) content.GetValueForProperty("LongTermBackupScheduleIsDisabled",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).LongTermBackupScheduleIsDisabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AllConnectionStringHigh"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringHigh = (string) content.GetValueForProperty("AllConnectionStringHigh",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringHigh, global::System.Convert.ToString);
            }
            if (content.Contains("AllConnectionStringLow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringLow = (string) content.GetValueForProperty("AllConnectionStringLow",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringLow, global::System.Convert.ToString);
            }
            if (content.Contains("AllConnectionStringMedium"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringMedium = (string) content.GetValueForProperty("AllConnectionStringMedium",((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabaseInternal)this).AllConnectionStringMedium, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabase"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabase" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabase DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AutonomousDatabase(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.AutonomousDatabase"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabase" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabase DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AutonomousDatabase(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AutonomousDatabase" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AutonomousDatabase" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IAutonomousDatabase FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Autonomous Database resource model.
    [System.ComponentModel.TypeConverter(typeof(AutonomousDatabaseTypeConverter))]
    public partial interface IAutonomousDatabase

    {

    }
}