// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Extensions;

    /// <summary>The updatable properties of the CloudVmCluster.</summary>
    public partial class CloudVMClusterUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ComputeNode" /> property.</summary>
        private System.Collections.Generic.List<string> _computeNode;

        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ComputeNode { get => this._computeNode; set => this._computeNode = value; }

        /// <summary>Backing field for <see cref="CpuCoreCount" /> property.</summary>
        private int? _cpuCoreCount;

        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? CpuCoreCount { get => this._cpuCoreCount; set => this._cpuCoreCount = value; }

        /// <summary>Backing field for <see cref="DataCollectionOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions _dataCollectionOption;

        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptions()); set => this._dataCollectionOption = value; }

        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsHealthMonitoringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsIncidentLogsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DataStorageSizeInTb" /> property.</summary>
        private double? _dataStorageSizeInTb;

        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public double? DataStorageSizeInTb { get => this._dataStorageSizeInTb; set => this._dataStorageSizeInTb = value; }

        /// <summary>Backing field for <see cref="DbNodeStorageSizeInGb" /> property.</summary>
        private int? _dbNodeStorageSizeInGb;

        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? DbNodeStorageSizeInGb { get => this._dbNodeStorageSizeInGb; set => this._dbNodeStorageSizeInGb = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="LicenseModel" /> property.</summary>
        private string _licenseModel;

        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string LicenseModel { get => this._licenseModel; set => this._licenseModel = value; }

        /// <summary>Backing field for <see cref="MemorySizeInGb" /> property.</summary>
        private int? _memorySizeInGb;

        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? MemorySizeInGb { get => this._memorySizeInGb; set => this._memorySizeInGb = value; }

        /// <summary>Internal Acessors for DataCollectionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal.DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptions()); set { {_dataCollectionOption = value;} } }

        /// <summary>Backing field for <see cref="OcpuCount" /> property.</summary>
        private float? _ocpuCount;

        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public float? OcpuCount { get => this._ocpuCount; set => this._ocpuCount = value; }

        /// <summary>Backing field for <see cref="SshPublicKey" /> property.</summary>
        private System.Collections.Generic.List<string> _sshPublicKey;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SshPublicKey { get => this._sshPublicKey; set => this._sshPublicKey = value; }

        /// <summary>Backing field for <see cref="StorageSizeInGb" /> property.</summary>
        private int? _storageSizeInGb;

        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? StorageSizeInGb { get => this._storageSizeInGb; set => this._storageSizeInGb = value; }

        /// <summary>Creates an new <see cref="CloudVMClusterUpdateProperties" /> instance.</summary>
        public CloudVMClusterUpdateProperties()
        {

        }
    }
    /// The updatable properties of the CloudVmCluster.
    public partial interface ICloudVMClusterUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IJsonSerializable
    {
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = false,
        Update = true,
        Description = @"The list of compute servers to be added to the cloud VM cluster.",
        SerializedName = @"computeNodes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of CPU cores enabled on the cloud VM cluster.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.",
        SerializedName = @"isDiagnosticsEventsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isHealthMonitoringEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isIncidentLogsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The data disk group size to be allocated in TBs.",
        SerializedName = @"dataStorageSizeInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The local node storage to be allocated in GBs.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display Name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. ",
        SerializedName = @"licenseModel",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The memory to be allocated in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get; set; }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.",
        SerializedName = @"ocpuCount",
        PossibleTypes = new [] { typeof(float) })]
        float? OcpuCount { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = false,
        Update = true,
        Description = @"The data disk group size to be allocated in GBs per VM.",
        SerializedName = @"storageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeInGb { get; set; }

    }
    /// The updatable properties of the CloudVmCluster.
    internal partial interface ICloudVMClusterUpdatePropertiesInternal

    {
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        System.Collections.Generic.List<string> ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions DataCollectionOption { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>Display Name</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>The memory to be allocated in GBs.</summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        float? OcpuCount { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        int? StorageSizeInGb { get; set; }

    }
}