// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Extensions;

    /// <summary>ExascaleDbStorageVault resource definition</summary>
    public partial class ExascaleDbStorageVault :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVault,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.TrackedResource();

        /// <summary>
        /// The size of additional Flash Cache in percentage of High Capacity database storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? AdditionalFlashCacheInPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).AdditionalFlashCacheInPercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).AdditionalFlashCacheInPercent = value ?? default(int); }

        /// <summary>Exadata Database Storage Vault description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>
        /// The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Available Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? HighCapacityDatabaseStorageAvailableSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageAvailableSizeInGb; }

        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? HighCapacityDatabaseStorageInputTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageInputTotalSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageInputTotalSizeInGb = value ?? default(int); }

        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? HighCapacityDatabaseStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageTotalSizeInGb; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Id; }

        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string LifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleDetail; }

        /// <summary>Exadata Database Storage Vault lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string LifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleState; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)__trackedResource).Location = value ?? null; }

        /// <summary>Internal Acessors for HighCapacityDatabaseStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageDetails Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.HighCapacityDatabaseStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorage = value ?? null /* model class */; }

        /// <summary>Internal Acessors for HighCapacityDatabaseStorageAvailableSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.HighCapacityDatabaseStorageAvailableSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageAvailableSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageAvailableSizeInGb = value ?? default(int); }

        /// <summary>Internal Acessors for HighCapacityDatabaseStorageInput</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageInputDetails Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.HighCapacityDatabaseStorageInput { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageInput; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageInput = value ?? null /* model class */; }

        /// <summary>Internal Acessors for HighCapacityDatabaseStorageTotalSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.HighCapacityDatabaseStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageTotalSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).HighCapacityDatabaseStorageTotalSizeInGb = value ?? default(int); }

        /// <summary>Internal Acessors for LifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.LifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleDetail = value ?? null; }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.LifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).LifecycleState = value ?? null; }

        /// <summary>Internal Acessors for OciUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.OciUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).OciUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).OciUrl = value ?? null; }

        /// <summary>Internal Acessors for Ocid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.Ocid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).Ocid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).Ocid = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultProperties Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExascaleDbStorageVaultProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for VMClusterCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultInternal.VMClusterCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).VMClusterCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).VMClusterCount = value ?? default(int); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Name = value ?? null; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemData = value ?? null /* model class */; }

        /// <summary>Internal Acessors for SystemDataCreatedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataCreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataCreatedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for SystemDataLastModifiedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>Internal Acessors for SystemDataLastModifiedByType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Type = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Name; }

        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string OciUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).OciUrl; }

        /// <summary>The OCID of the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string Ocid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).Ocid; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExascaleDbStorageVaultProperties()); set => this._property = value; }

        /// <summary>Exadata Database Storage Vault provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemData = value ?? null /* model class */; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedAt; }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedBy; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataCreatedByType; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>The time zone that you want to use for the Exadata Database Storage Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string TimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).TimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).TimeZone = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IResourceInternal)__trackedResource).Type; }

        /// <summary>The number of Exadata VM clusters used the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? VMClusterCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultPropertiesInternal)Property).VMClusterCount; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private System.Collections.Generic.List<string> _zone;

        /// <summary>The availability zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="ExascaleDbStorageVault" /> instance.</summary>
        public ExascaleDbStorageVault()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// ExascaleDbStorageVault resource definition
    public partial interface IExascaleDbStorageVault :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResource
    {
        /// <summary>
        /// The size of additional Flash Cache in percentage of High Capacity database storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The size of additional Flash Cache in percentage of High Capacity database storage.",
        SerializedName = @"additionalFlashCacheInPercent",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalFlashCacheInPercent { get; set; }
        /// <summary>Exadata Database Storage Vault description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Exadata Database Storage Vault description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Available Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Available Capacity",
        SerializedName = @"availableSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? HighCapacityDatabaseStorageAvailableSizeInGb { get;  }
        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = true,
        Update = false,
        Description = @"Total Capacity",
        SerializedName = @"totalSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? HighCapacityDatabaseStorageInputTotalSizeInGb { get; set; }
        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total Capacity",
        SerializedName = @"totalSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? HighCapacityDatabaseStorageTotalSizeInGb { get;  }
        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information about the current lifecycle state.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetail { get;  }
        /// <summary>Exadata Database Storage Vault lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exadata Database Storage Vault lifecycle state",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "Failed")]
        string LifecycleState { get;  }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
        SerializedName = @"ociUrl",
        PossibleTypes = new [] { typeof(string) })]
        string OciUrl { get;  }
        /// <summary>The OCID of the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the Exadata Database Storage Vault.",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>Exadata Database Storage Vault provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exadata Database Storage Vault provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get;  }
        /// <summary>The time zone that you want to use for the Exadata Database Storage Vault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The time zone that you want to use for the Exadata Database Storage Vault",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }
        /// <summary>The number of Exadata VM clusters used the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The number of Exadata VM clusters used the Exadata Database Storage Vault.",
        SerializedName = @"vmClusterCount",
        PossibleTypes = new [] { typeof(int) })]
        int? VMClusterCount { get;  }
        /// <summary>The availability zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The availability zones.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Zone { get; set; }

    }
    /// ExascaleDbStorageVault resource definition
    internal partial interface IExascaleDbStorageVaultInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ITrackedResourceInternal
    {
        /// <summary>
        /// The size of additional Flash Cache in percentage of High Capacity database storage.
        /// </summary>
        int? AdditionalFlashCacheInPercent { get; set; }
        /// <summary>Exadata Database Storage Vault description.</summary>
        string Description { get; set; }
        /// <summary>
        /// The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>Response exadata Database Storage Details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageDetails HighCapacityDatabaseStorage { get; set; }
        /// <summary>Available Capacity</summary>
        int? HighCapacityDatabaseStorageAvailableSizeInGb { get; set; }
        /// <summary>Create exadata Database Storage Details</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageInputDetails HighCapacityDatabaseStorageInput { get; set; }
        /// <summary>Total Capacity</summary>
        int? HighCapacityDatabaseStorageInputTotalSizeInGb { get; set; }
        /// <summary>Total Capacity</summary>
        int? HighCapacityDatabaseStorageTotalSizeInGb { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        string LifecycleDetail { get; set; }
        /// <summary>Exadata Database Storage Vault lifecycle state</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "Failed")]
        string LifecycleState { get; set; }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        string OciUrl { get; set; }
        /// <summary>The OCID of the Exadata Database Storage Vault.</summary>
        string Ocid { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExascaleDbStorageVaultProperties Property { get; set; }
        /// <summary>Exadata Database Storage Vault provisioning state</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get; set; }
        /// <summary>The time zone that you want to use for the Exadata Database Storage Vault</summary>
        string TimeZone { get; set; }
        /// <summary>The number of Exadata VM clusters used the Exadata Database Storage Vault.</summary>
        int? VMClusterCount { get; set; }
        /// <summary>The availability zones.</summary>
        System.Collections.Generic.List<string> Zone { get; set; }

    }
}