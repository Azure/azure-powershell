// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Extensions;

    /// <summary>ExadbVmCluster resource model</summary>
    public partial class ExadbVMClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BackupSubnetCidr" /> property.</summary>
        private string _backupSubnetCidr;

        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string BackupSubnetCidr { get => this._backupSubnetCidr; set => this._backupSubnetCidr = value; }

        /// <summary>Backing field for <see cref="BackupSubnetOcid" /> property.</summary>
        private string _backupSubnetOcid;

        /// <summary>Cluster backup subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string BackupSubnetOcid { get => this._backupSubnetOcid; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>
        /// The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character,
        /// and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and
        /// is not case sensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="DataCollectionOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions _dataCollectionOption;

        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptions()); set => this._dataCollectionOption = value; }

        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsHealthMonitoringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsIncidentLogsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private string _domain;

        /// <summary>A domain name used for the Exadata VM cluster on Exascale Infrastructure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string Domain { get => this._domain; set => this._domain = value; }

        /// <summary>Backing field for <see cref="EnabledEcpuCount" /> property.</summary>
        private int? _enabledEcpuCount;

        /// <summary>
        /// The number of ECPUs to enable for an Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? EnabledEcpuCount { get => this._enabledEcpuCount; set => this._enabledEcpuCount = value; }

        /// <summary>Backing field for <see cref="ExascaleDbStorageVaultId" /> property.</summary>
        private string _exascaleDbStorageVaultId;

        /// <summary>The Azure Resource ID of the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ExascaleDbStorageVaultId { get => this._exascaleDbStorageVaultId; set => this._exascaleDbStorageVaultId = value; }

        /// <summary>Backing field for <see cref="GiVersion" /> property.</summary>
        private string _giVersion;

        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string GiVersion { get => this._giVersion; }

        /// <summary>Backing field for <see cref="GridImageOcid" /> property.</summary>
        private string _gridImageOcid;

        /// <summary>
        /// Grid Setup will be done using this Grid Image OCID. Can be obtained using giMinorVersions API
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string GridImageOcid { get => this._gridImageOcid; set => this._gridImageOcid = value; }

        /// <summary>Backing field for <see cref="GridImageType" /> property.</summary>
        private string _gridImageType;

        /// <summary>The type of Grid Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string GridImageType { get => this._gridImageType; }

        /// <summary>Backing field for <see cref="Hostname" /> property.</summary>
        private string _hostname;

        /// <summary>The hostname for the Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string Hostname { get => this._hostname; set => this._hostname = value; }

        /// <summary>Backing field for <see cref="IormConfigCache" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig _iormConfigCache;

        /// <summary>iormConfigCache details for Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig IormConfigCache { get => (this._iormConfigCache = this._iormConfigCache ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadataIormConfig()); }

        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig> IormConfigCacheDbPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).DbPlan; }

        /// <summary>Additional information about the current lifecycleState.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string IormConfigCacheLifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleDetail; }

        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string IormConfigCacheLifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleState; }

        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string IormConfigCacheObjective { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).Objective; }

        /// <summary>Backing field for <see cref="LicenseModel" /> property.</summary>
        private string _licenseModel;

        /// <summary>
        /// The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string LicenseModel { get => this._licenseModel; set => this._licenseModel = value; }

        /// <summary>Backing field for <see cref="LifecycleDetail" /> property.</summary>
        private string _lifecycleDetail;

        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string LifecycleDetail { get => this._lifecycleDetail; }

        /// <summary>Backing field for <see cref="LifecycleState" /> property.</summary>
        private string _lifecycleState;

        /// <summary>CloudVmCluster lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string LifecycleState { get => this._lifecycleState; }

        /// <summary>Backing field for <see cref="ListenerPort" /> property.</summary>
        private int? _listenerPort;

        /// <summary>
        /// The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? ListenerPort { get => this._listenerPort; }

        /// <summary>Backing field for <see cref="MemorySizeInGb" /> property.</summary>
        private int? _memorySizeInGb;

        /// <summary>
        /// The memory that you want to be allocated in GBs. Memory is calculated based on 11 GB per VM core reserved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? MemorySizeInGb { get => this._memorySizeInGb; }

        /// <summary>Internal Acessors for BackupSubnetOcid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.BackupSubnetOcid { get => this._backupSubnetOcid; set { {_backupSubnetOcid = value;} } }

        /// <summary>Internal Acessors for DataCollectionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.DataCollectionOptions()); set { {_dataCollectionOption = value;} } }

        /// <summary>Internal Acessors for GiVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.GiVersion { get => this._giVersion; set { {_giVersion = value;} } }

        /// <summary>Internal Acessors for GridImageType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.GridImageType { get => this._gridImageType; set { {_gridImageType = value;} } }

        /// <summary>Internal Acessors for IormConfigCache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.IormConfigCache { get => (this._iormConfigCache = this._iormConfigCache ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadataIormConfig()); set { {_iormConfigCache = value;} } }

        /// <summary>Internal Acessors for IormConfigCacheDbPlan</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig> Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.IormConfigCacheDbPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).DbPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).DbPlan = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for IormConfigCacheLifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.IormConfigCacheLifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleDetail = value ?? null; }

        /// <summary>Internal Acessors for IormConfigCacheLifecycleState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.IormConfigCacheLifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).LifecycleState = value ?? null; }

        /// <summary>Internal Acessors for IormConfigCacheObjective</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.IormConfigCacheObjective { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).Objective; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfigInternal)IormConfigCache).Objective = value ?? null; }

        /// <summary>Internal Acessors for LifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.LifecycleDetail { get => this._lifecycleDetail; set { {_lifecycleDetail = value;} } }

        /// <summary>Internal Acessors for LifecycleState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.LifecycleState { get => this._lifecycleState; set { {_lifecycleState = value;} } }

        /// <summary>Internal Acessors for ListenerPort</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ListenerPort { get => this._listenerPort; set { {_listenerPort = value;} } }

        /// <summary>Internal Acessors for MemorySizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.MemorySizeInGb { get => this._memorySizeInGb; set { {_memorySizeInGb = value;} } }

        /// <summary>Internal Acessors for NsgUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.NsgUrl { get => this._nsgUrl; set { {_nsgUrl = value;} } }

        /// <summary>Internal Acessors for OciUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.OciUrl { get => this._ociUrl; set { {_ociUrl = value;} } }

        /// <summary>Internal Acessors for Ocid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.Ocid { get => this._ocid; set { {_ocid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ScanDnsName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ScanDnsName { get => this._scanDnsName; set { {_scanDnsName = value;} } }

        /// <summary>Internal Acessors for ScanDnsRecordId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ScanDnsRecordId { get => this._scanDnsRecordId; set { {_scanDnsRecordId = value;} } }

        /// <summary>Internal Acessors for ScanIPId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ScanIPId { get => this._scanIPId; set { {_scanIPId = value;} } }

        /// <summary>Internal Acessors for SnapshotFileSystemStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.SnapshotFileSystemStorage { get => (this._snapshotFileSystemStorage = this._snapshotFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); set { {_snapshotFileSystemStorage = value;} } }

        /// <summary>Internal Acessors for SnapshotFileSystemStorageTotalSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.SnapshotFileSystemStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)SnapshotFileSystemStorage).TotalSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)SnapshotFileSystemStorage).TotalSizeInGb = value ?? default(int); }

        /// <summary>Internal Acessors for SubnetOcid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.SubnetOcid { get => this._subnetOcid; set { {_subnetOcid = value;} } }

        /// <summary>Internal Acessors for TotalFileSystemStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.TotalFileSystemStorage { get => (this._totalFileSystemStorage = this._totalFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); set { {_totalFileSystemStorage = value;} } }

        /// <summary>Internal Acessors for TotalFileSystemStorageTotalSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.TotalFileSystemStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)TotalFileSystemStorage).TotalSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)TotalFileSystemStorage).TotalSizeInGb = value ?? default(int); }

        /// <summary>Internal Acessors for VMFileSystemStorage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.VMFileSystemStorage { get => (this._vMFileSystemStorage = this._vMFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); set { {_vMFileSystemStorage = value;} } }

        /// <summary>Internal Acessors for VipId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.VipId { get => this._vipId; set { {_vipId = value;} } }

        /// <summary>Internal Acessors for ZoneOcid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterPropertiesInternal.ZoneOcid { get => this._zoneOcid; set { {_zoneOcid = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int _nodeCount;

        /// <summary>The number of nodes in the Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int NodeCount { get => this._nodeCount; set => this._nodeCount = value; }

        /// <summary>Backing field for <see cref="NsgCidr" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr> _nsgCidr;

        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr> NsgCidr { get => this._nsgCidr; set => this._nsgCidr = value; }

        /// <summary>Backing field for <see cref="NsgUrl" /> property.</summary>
        private string _nsgUrl;

        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string NsgUrl { get => this._nsgUrl; }

        /// <summary>Backing field for <see cref="OciUrl" /> property.</summary>
        private string _ociUrl;

        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string OciUrl { get => this._ociUrl; }

        /// <summary>Backing field for <see cref="Ocid" /> property.</summary>
        private string _ocid;

        /// <summary>ExadbVmCluster ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string Ocid { get => this._ocid; }

        /// <summary>Backing field for <see cref="PrivateZoneOcid" /> property.</summary>
        private string _privateZoneOcid;

        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string PrivateZoneOcid { get => this._privateZoneOcid; set => this._privateZoneOcid = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Exadata VM cluster on Exascale Infrastructure provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ScanDnsName" /> property.</summary>
        private string _scanDnsName;

        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ScanDnsName { get => this._scanDnsName; }

        /// <summary>Backing field for <see cref="ScanDnsRecordId" /> property.</summary>
        private string _scanDnsRecordId;

        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ScanDnsRecordId { get => this._scanDnsRecordId; }

        /// <summary>Backing field for <see cref="ScanIPId" /> property.</summary>
        private System.Collections.Generic.List<string> _scanIPId;

        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN
        /// IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the
        /// requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ScanIPId { get => this._scanIPId; }

        /// <summary>Backing field for <see cref="ScanListenerPortTcp" /> property.</summary>
        private int? _scanListenerPortTcp;

        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? ScanListenerPortTcp { get => this._scanListenerPortTcp; set => this._scanListenerPortTcp = value; }

        /// <summary>Backing field for <see cref="ScanListenerPortTcpSsl" /> property.</summary>
        private int? _scanListenerPortTcpSsl;

        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? ScanListenerPortTcpSsl { get => this._scanListenerPortTcpSsl; set => this._scanListenerPortTcpSsl = value; }

        /// <summary>Backing field for <see cref="Shape" /> property.</summary>
        private string _shape;

        /// <summary>The shape of the Exadata VM cluster on Exascale Infrastructure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string Shape { get => this._shape; set => this._shape = value; }

        /// <summary>Backing field for <see cref="SnapshotFileSystemStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails _snapshotFileSystemStorage;

        /// <summary>Snapshot filesystem storage details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails SnapshotFileSystemStorage { get => (this._snapshotFileSystemStorage = this._snapshotFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); }

        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? SnapshotFileSystemStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)SnapshotFileSystemStorage).TotalSizeInGb; }

        /// <summary>Backing field for <see cref="SshPublicKey" /> property.</summary>
        private System.Collections.Generic.List<string> _sshPublicKey;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> SshPublicKey { get => this._sshPublicKey; set => this._sshPublicKey = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary>Client subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Backing field for <see cref="SubnetOcid" /> property.</summary>
        private string _subnetOcid;

        /// <summary>Cluster subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string SubnetOcid { get => this._subnetOcid; }

        /// <summary>Backing field for <see cref="SystemVersion" /> property.</summary>
        private string _systemVersion;

        /// <summary>Operating system version of the image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string SystemVersion { get => this._systemVersion; set => this._systemVersion = value; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private string _timeZone;

        /// <summary>
        /// The time zone of the Exadata VM cluster on Exascale Infrastructure. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string TimeZone { get => this._timeZone; set => this._timeZone = value; }

        /// <summary>Backing field for <see cref="TotalEcpuCount" /> property.</summary>
        private int? _totalEcpuCount;

        /// <summary>The number of Total ECPUs for an Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public int? TotalEcpuCount { get => this._totalEcpuCount; set => this._totalEcpuCount = value; }

        /// <summary>Backing field for <see cref="TotalFileSystemStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails _totalFileSystemStorage;

        /// <summary>Total file system storage details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails TotalFileSystemStorage { get => (this._totalFileSystemStorage = this._totalFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); }

        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? TotalFileSystemStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)TotalFileSystemStorage).TotalSizeInGb; }

        /// <summary>Backing field for <see cref="VMFileSystemStorage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails _vMFileSystemStorage;

        /// <summary>Filesystem storage details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails VMFileSystemStorage { get => (this._vMFileSystemStorage = this._vMFileSystemStorage ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ExadbVMClusterStorageDetails()); set => this._vMFileSystemStorage = value; }

        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? VMFileSystemStorageTotalSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)VMFileSystemStorage).TotalSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetailsInternal)VMFileSystemStorage).TotalSizeInGb = value ?? default(int); }

        /// <summary>Backing field for <see cref="VipId" /> property.</summary>
        private System.Collections.Generic.List<string> _vipId;

        /// <summary>
        /// The virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure. The Cluster Ready Services
        /// (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If
        /// one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this
        /// list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> VipId { get => this._vipId; }

        /// <summary>Backing field for <see cref="VnetId" /> property.</summary>
        private string _vnetId;

        /// <summary>VNET for network connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string VnetId { get => this._vnetId; set => this._vnetId = value; }

        /// <summary>Backing field for <see cref="ZoneOcid" /> property.</summary>
        private string _zoneOcid;

        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public string ZoneOcid { get => this._zoneOcid; }

        /// <summary>Creates an new <see cref="ExadbVMClusterProperties" /> instance.</summary>
        public ExadbVMClusterProperties()
        {

        }
    }
    /// ExadbVmCluster resource model
    public partial interface IExadbVMClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IJsonSerializable
    {
        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Client OCI backup subnet CIDR, default is 192.168.252.0/22",
        SerializedName = @"backupSubnetCidr",
        PossibleTypes = new [] { typeof(string) })]
        string BackupSubnetCidr { get; set; }
        /// <summary>Cluster backup subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Cluster backup subnet ocid",
        SerializedName = @"backupSubnetOcid",
        PossibleTypes = new [] { typeof(string) })]
        string BackupSubnetOcid { get;  }
        /// <summary>
        /// The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character,
        /// and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and
        /// is not case sensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.",
        SerializedName = @"isDiagnosticsEventsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isHealthMonitoringEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isIncidentLogsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Display Name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>A domain name used for the Exadata VM cluster on Exascale Infrastructure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"A domain name used for the Exadata VM cluster on Exascale Infrastructure",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string Domain { get; set; }
        /// <summary>
        /// The number of ECPUs to enable for an Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The number of ECPUs to enable for an Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"enabledEcpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? EnabledEcpuCount { get; set; }
        /// <summary>The Azure Resource ID of the Exadata Database Storage Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The Azure Resource ID of the Exadata Database Storage Vault.",
        SerializedName = @"exascaleDbStorageVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string ExascaleDbStorageVaultId { get; set; }
        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Oracle Grid Infrastructure (GI) software version",
        SerializedName = @"giVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GiVersion { get;  }
        /// <summary>
        /// Grid Setup will be done using this Grid Image OCID. Can be obtained using giMinorVersions API
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Grid Setup will be done using this Grid Image OCID. Can be obtained using giMinorVersions API",
        SerializedName = @"gridImageOcid",
        PossibleTypes = new [] { typeof(string) })]
        string GridImageOcid { get; set; }
        /// <summary>The type of Grid Image</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of Grid Image",
        SerializedName = @"gridImageType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("ReleaseUpdate", "CustomImage")]
        string GridImageType { get;  }
        /// <summary>The hostname for the Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The hostname for the  Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"hostname",
        PossibleTypes = new [] { typeof(string) })]
        string Hostname { get; set; }
        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"An array of IORM settings for all the database in the Exadata DB system.",
        SerializedName = @"dbPlans",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig> IormConfigCacheDbPlan { get;  }
        /// <summary>Additional information about the current lifecycleState.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information about the current lifecycleState.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string IormConfigCacheLifecycleDetail { get;  }
        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current state of IORM configuration for the Exadata DB system.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("BootStrapping", "Enabled", "Disabled", "Updating", "Failed")]
        string IormConfigCacheLifecycleState { get;  }
        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current value for the IORM objective. The default is AUTO.",
        SerializedName = @"objective",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LowLatency", "HighThroughput", "Balanced", "Auto", "Basic")]
        string IormConfigCacheObjective { get;  }
        /// <summary>
        /// The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is LICENSE_INCLUDED. ",
        SerializedName = @"licenseModel",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Additional information about the current lifecycle state.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetail { get;  }
        /// <summary>CloudVmCluster lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"CloudVmCluster lifecycle state",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get;  }
        /// <summary>
        /// The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"listenerPort",
        PossibleTypes = new [] { typeof(int) })]
        int? ListenerPort { get;  }
        /// <summary>
        /// The memory that you want to be allocated in GBs. Memory is calculated based on 11 GB per VM core reserved.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The memory that you want to be allocated in GBs. Memory is calculated based on 11 GB per VM core reserved.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get;  }
        /// <summary>The number of nodes in the Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of nodes in the Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int NodeCount { get; set; }
        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.",
        SerializedName = @"nsgCidrs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr> NsgCidr { get; set; }
        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.",
        SerializedName = @"nsgUrl",
        PossibleTypes = new [] { typeof(string) })]
        string NsgUrl { get;  }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
        SerializedName = @"ociUrl",
        PossibleTypes = new [] { typeof(string) })]
        string OciUrl { get;  }
        /// <summary>ExadbVmCluster ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ExadbVmCluster ocid",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.",
        SerializedName = @"privateZoneOcid",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateZoneOcid { get; set; }
        /// <summary>Exadata VM cluster on Exascale Infrastructure provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Exadata VM cluster on Exascale Infrastructure provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get;  }
        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure. ",
        SerializedName = @"scanDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string ScanDnsName { get;  }
        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"scanDnsRecordId",
        PossibleTypes = new [] { typeof(string) })]
        string ScanDnsRecordId { get;  }
        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN
        /// IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the
        /// requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.",
        SerializedName = @"scanIpIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ScanIPId { get;  }
        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The TCP Single Client Access Name (SCAN) port. The default port is 1521.",
        SerializedName = @"scanListenerPortTcp",
        PossibleTypes = new [] { typeof(int) })]
        int? ScanListenerPortTcp { get; set; }
        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The TCPS Single Client Access Name (SCAN) port. The default port is 2484.",
        SerializedName = @"scanListenerPortTcpSsl",
        PossibleTypes = new [] { typeof(int) })]
        int? ScanListenerPortTcpSsl { get; set; }
        /// <summary>The shape of the Exadata VM cluster on Exascale Infrastructure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The shape of the Exadata VM cluster on Exascale Infrastructure resource",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get; set; }
        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total Capacity",
        SerializedName = @"totalSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? SnapshotFileSystemStorageTotalSizeInGb { get;  }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>Client subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Client subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary>Cluster subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Cluster subnet ocid",
        SerializedName = @"subnetOcid",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetOcid { get;  }
        /// <summary>Operating system version of the image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Operating system version of the image.",
        SerializedName = @"systemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SystemVersion { get; set; }
        /// <summary>
        /// The time zone of the Exadata VM cluster on Exascale Infrastructure. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The time zone of the Exadata VM cluster on Exascale Infrastructure. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }
        /// <summary>The number of Total ECPUs for an Exadata VM cluster on Exascale Infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"The number of Total ECPUs for an Exadata VM cluster on Exascale Infrastructure.",
        SerializedName = @"totalEcpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalEcpuCount { get; set; }
        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Total Capacity",
        SerializedName = @"totalSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalFileSystemStorageTotalSizeInGb { get;  }
        /// <summary>Total Capacity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"Total Capacity",
        SerializedName = @"totalSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? VMFileSystemStorageTotalSizeInGb { get; set; }
        /// <summary>
        /// The virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure. The Cluster Ready Services
        /// (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If
        /// one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this
        /// list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.",
        SerializedName = @"vipIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VipId { get;  }
        /// <summary>VNET for network connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"VNET for network connectivity",
        SerializedName = @"vnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetId { get; set; }
        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.",
        SerializedName = @"zoneOcid",
        PossibleTypes = new [] { typeof(string) })]
        string ZoneOcid { get;  }

    }
    /// ExadbVmCluster resource model
    internal partial interface IExadbVMClusterPropertiesInternal

    {
        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        string BackupSubnetCidr { get; set; }
        /// <summary>Cluster backup subnet ocid</summary>
        string BackupSubnetOcid { get; set; }
        /// <summary>
        /// The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character,
        /// and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and
        /// is not case sensitive.
        /// </summary>
        string ClusterName { get; set; }
        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions DataCollectionOption { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>Display Name</summary>
        string DisplayName { get; set; }
        /// <summary>A domain name used for the Exadata VM cluster on Exascale Infrastructure</summary>
        string Domain { get; set; }
        /// <summary>
        /// The number of ECPUs to enable for an Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        int? EnabledEcpuCount { get; set; }
        /// <summary>The Azure Resource ID of the Exadata Database Storage Vault.</summary>
        string ExascaleDbStorageVaultId { get; set; }
        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        string GiVersion { get; set; }
        /// <summary>
        /// Grid Setup will be done using this Grid Image OCID. Can be obtained using giMinorVersions API
        /// </summary>
        string GridImageOcid { get; set; }
        /// <summary>The type of Grid Image</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("ReleaseUpdate", "CustomImage")]
        string GridImageType { get; set; }
        /// <summary>The hostname for the Exadata VM cluster on Exascale Infrastructure.</summary>
        string Hostname { get; set; }
        /// <summary>iormConfigCache details for Exadata VM cluster on Exascale Infrastructure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadataIormConfig IormConfigCache { get; set; }
        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDbIormConfig> IormConfigCacheDbPlan { get; set; }
        /// <summary>Additional information about the current lifecycleState.</summary>
        string IormConfigCacheLifecycleDetail { get; set; }
        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("BootStrapping", "Enabled", "Disabled", "Updating", "Failed")]
        string IormConfigCacheLifecycleState { get; set; }
        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LowLatency", "HighThroughput", "Balanced", "Auto", "Basic")]
        string IormConfigCacheObjective { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is LICENSE_INCLUDED.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        string LifecycleDetail { get; set; }
        /// <summary>CloudVmCluster lifecycle state</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Provisioning", "Available", "Updating", "Terminating", "Terminated", "MaintenanceInProgress", "Failed")]
        string LifecycleState { get; set; }
        /// <summary>
        /// The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        int? ListenerPort { get; set; }
        /// <summary>
        /// The memory that you want to be allocated in GBs. Memory is calculated based on 11 GB per VM core reserved.
        /// </summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>The number of nodes in the Exadata VM cluster on Exascale Infrastructure.</summary>
        int NodeCount { get; set; }
        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.INsgCidr> NsgCidr { get; set; }
        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        string NsgUrl { get; set; }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        string OciUrl { get; set; }
        /// <summary>ExadbVmCluster ocid</summary>
        string Ocid { get; set; }
        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        string PrivateZoneOcid { get; set; }
        /// <summary>Exadata VM cluster on Exascale Infrastructure provisioning state</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        string ScanDnsName { get; set; }
        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        string ScanDnsRecordId { get; set; }
        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN
        /// IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the
        /// requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        System.Collections.Generic.List<string> ScanIPId { get; set; }
        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        int? ScanListenerPortTcp { get; set; }
        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        int? ScanListenerPortTcpSsl { get; set; }
        /// <summary>The shape of the Exadata VM cluster on Exascale Infrastructure resource</summary>
        string Shape { get; set; }
        /// <summary>Snapshot filesystem storage details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails SnapshotFileSystemStorage { get; set; }
        /// <summary>Total Capacity</summary>
        int? SnapshotFileSystemStorageTotalSizeInGb { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.
        /// </summary>
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>Client subnet</summary>
        string SubnetId { get; set; }
        /// <summary>Cluster subnet ocid</summary>
        string SubnetOcid { get; set; }
        /// <summary>Operating system version of the image.</summary>
        string SystemVersion { get; set; }
        /// <summary>
        /// The time zone of the Exadata VM cluster on Exascale Infrastructure. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        string TimeZone { get; set; }
        /// <summary>The number of Total ECPUs for an Exadata VM cluster on Exascale Infrastructure.</summary>
        int? TotalEcpuCount { get; set; }
        /// <summary>Total file system storage details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails TotalFileSystemStorage { get; set; }
        /// <summary>Total Capacity</summary>
        int? TotalFileSystemStorageTotalSizeInGb { get; set; }
        /// <summary>Filesystem storage details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IExadbVMClusterStorageDetails VMFileSystemStorage { get; set; }
        /// <summary>Total Capacity</summary>
        int? VMFileSystemStorageTotalSizeInGb { get; set; }
        /// <summary>
        /// The virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure. The Cluster Ready Services
        /// (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If
        /// one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this
        /// list is empty.
        /// </summary>
        System.Collections.Generic.List<string> VipId { get; set; }
        /// <summary>VNET for network connectivity</summary>
        string VnetId { get; set; }
        /// <summary>
        /// The OCID of the zone the Exadata VM cluster on Exascale Infrastructure is associated with.
        /// </summary>
        string ZoneOcid { get; set; }

    }
}