// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Extensions;

    /// <summary>The type used for update operations of the CloudVmCluster.</summary>
    public partial class CloudVMClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateInternal
    {

        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ComputeNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).ComputeNode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).ComputeNode = value ?? null /* arrayOf */; }

        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? CpuCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).CpuCoreCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).CpuCoreCount = value ?? default(int); }

        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsDiagnosticsEventsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsDiagnosticsEventsEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsHealthMonitoringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsHealthMonitoringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsHealthMonitoringEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsIncidentLogsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsIncidentLogsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOptionIsIncidentLogsEnabled = value ?? default(bool); }

        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public double? DataStorageSizeInTb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataStorageSizeInTb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataStorageSizeInTb = value ?? default(double); }

        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? DbNodeStorageSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DbNodeStorageSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DbNodeStorageSizeInGb = value ?? default(int); }

        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public string LicenseModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).LicenseModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).LicenseModel = value ?? null; }

        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? MemorySizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).MemorySizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).MemorySizeInGb = value ?? default(int); }

        /// <summary>Internal Acessors for DataCollectionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateInternal.DataCollectionOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).DataCollectionOption = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMClusterUpdateProperties()); set { {_property = value;} } }

        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public float? OcpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).OcpuCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).OcpuCount = value ?? default(float); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateProperties _property;

        /// <summary>The updatable properties of the CloudVmCluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMClusterUpdateProperties()); set => this._property = value; }

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Inlined)]
        public int? StorageSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).StorageSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdatePropertiesInternal)Property).StorageSizeInGb = value ?? default(int); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateTags _tag;

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Origin(Microsoft.Azure.PowerShell.Cmdlets.Oracle.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.CloudVMClusterUpdateTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="CloudVMClusterUpdate" /> instance.</summary>
        public CloudVMClusterUpdate()
        {

        }
    }
    /// The type used for update operations of the CloudVmCluster.
    public partial interface ICloudVMClusterUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.IJsonSerializable
    {
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = false,
        Create = false,
        Update = true,
        Description = @"The list of compute servers to be added to the cloud VM cluster.",
        SerializedName = @"computeNodes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of CPU cores enabled on the cloud VM cluster.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.",
        SerializedName = @"isDiagnosticsEventsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isHealthMonitoringEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isIncidentLogsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The data disk group size to be allocated in TBs.",
        SerializedName = @"dataStorageSizeInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The local node storage to be allocated in GBs.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Display Name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. ",
        SerializedName = @"licenseModel",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The memory to be allocated in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get; set; }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.",
        SerializedName = @"ocpuCount",
        PossibleTypes = new [] { typeof(float) })]
        float? OcpuCount { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = false,
        Update = true,
        Description = @"The data disk group size to be allocated in GBs per VM.",
        SerializedName = @"storageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeInGb { get; set; }
        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Oracle.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateTags Tag { get; set; }

    }
    /// The type used for update operations of the CloudVmCluster.
    internal partial interface ICloudVMClusterUpdateInternal

    {
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        System.Collections.Generic.List<string> ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.IDataCollectionOptions DataCollectionOption { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>Display Name</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Oracle.PSArgumentCompleterAttribute("LicenseIncluded", "BringYourOwnLicense")]
        string LicenseModel { get; set; }
        /// <summary>The memory to be allocated in GBs.</summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        float? OcpuCount { get; set; }
        /// <summary>The updatable properties of the CloudVmCluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateProperties Property { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        System.Collections.Generic.List<string> SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        int? StorageSizeInGb { get; set; }
        /// <summary>Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Oracle.Models.ICloudVMClusterUpdateTags Tag { get; set; }

    }
}