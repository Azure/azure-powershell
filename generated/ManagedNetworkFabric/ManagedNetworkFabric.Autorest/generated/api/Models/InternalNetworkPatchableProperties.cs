// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>The InternalNetwork patchable properties.</summary>
    public partial class InternalNetworkPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IInternalNetworkPatchableProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IInternalNetworkPatchablePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ConnectedIPv4Subnet" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> _connectedIPv4Subnet;

        /// <summary>List of Connected IPv4 Subnets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv4Subnet { get => this._connectedIPv4Subnet; set => this._connectedIPv4Subnet = value; }

        /// <summary>Backing field for <see cref="ConnectedIPv6Subnet" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> _connectedIPv6Subnet;

        /// <summary>List of connected IPv6 Subnets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv6Subnet { get => this._connectedIPv6Subnet; set => this._connectedIPv6Subnet = value; }

        /// <summary>Backing field for <see cref="EgressAclId" /> property.</summary>
        private string _egressAclId;

        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string EgressAclId { get => this._egressAclId; set => this._egressAclId = value; }

        /// <summary>Backing field for <see cref="ExportRoutePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicy _exportRoutePolicy;

        /// <summary>Export Route Policy either IPv4 or IPv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicy ExportRoutePolicy { get => (this._exportRoutePolicy = this._exportRoutePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ExportRoutePolicy()); set => this._exportRoutePolicy = value; }

        /// <summary>Backing field for <see cref="ExportRoutePolicyId" /> property.</summary>
        private string _exportRoutePolicyId;

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string ExportRoutePolicyId { get => this._exportRoutePolicyId; set => this._exportRoutePolicyId = value; }

        /// <summary>Backing field for <see cref="ImportRoutePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicy _importRoutePolicy;

        /// <summary>Import Route Policy either IPv4 or IPv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicy ImportRoutePolicy { get => (this._importRoutePolicy = this._importRoutePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ImportRoutePolicy()); set => this._importRoutePolicy = value; }

        /// <summary>Backing field for <see cref="ImportRoutePolicyId" /> property.</summary>
        private string _importRoutePolicyId;

        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string ImportRoutePolicyId { get => this._importRoutePolicyId; set => this._importRoutePolicyId = value; }

        /// <summary>Backing field for <see cref="IngressAclId" /> property.</summary>
        private string _ingressAclId;

        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string IngressAclId { get => this._ingressAclId; set => this._ingressAclId = value; }

        /// <summary>Backing field for <see cref="IsMonitoringEnabled" /> property.</summary>
        private string _isMonitoringEnabled;

        /// <summary>To check whether monitoring of internal network is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string IsMonitoringEnabled { get => this._isMonitoringEnabled; set => this._isMonitoringEnabled = value; }

        /// <summary>Backing field for <see cref="Mtu" /> property.</summary>
        private int? _mtu;

        /// <summary>Maximum transmission unit. Default value is 1500.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public int? Mtu { get => this._mtu; set => this._mtu = value; }

        /// <summary>Creates an new <see cref="InternalNetworkPatchableProperties" /> instance.</summary>
        public InternalNetworkPatchableProperties()
        {

        }
    }
    /// The InternalNetwork patchable properties.
    public partial interface IInternalNetworkPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>List of Connected IPv4 Subnets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of Connected IPv4 Subnets.",
        SerializedName = @"connectedIPv4Subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv4Subnet { get; set; }
        /// <summary>List of connected IPv6 Subnets.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of connected IPv6 Subnets.",
        SerializedName = @"connectedIPv6Subnets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv6Subnet { get; set; }
        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Egress Acl. ARM resource ID of Access Control Lists.",
        SerializedName = @"egressAclId",
        PossibleTypes = new [] { typeof(string) })]
        string EgressAclId { get; set; }
        /// <summary>Export Route Policy either IPv4 or IPv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Export Route Policy either IPv4 or IPv6.",
        SerializedName = @"exportRoutePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicy ExportRoutePolicy { get; set; }
        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
        SerializedName = @"exportRoutePolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string ExportRoutePolicyId { get; set; }
        /// <summary>Import Route Policy either IPv4 or IPv6.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Import Route Policy either IPv4 or IPv6.",
        SerializedName = @"importRoutePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicy ImportRoutePolicy { get; set; }
        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.",
        SerializedName = @"importRoutePolicyId",
        PossibleTypes = new [] { typeof(string) })]
        string ImportRoutePolicyId { get; set; }
        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Ingress Acl. ARM resource ID of Access Control Lists.",
        SerializedName = @"ingressAclId",
        PossibleTypes = new [] { typeof(string) })]
        string IngressAclId { get; set; }
        /// <summary>To check whether monitoring of internal network is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"To check whether monitoring of internal network is enabled or not.",
        SerializedName = @"isMonitoringEnabled",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("True", "False")]
        string IsMonitoringEnabled { get; set; }
        /// <summary>Maximum transmission unit. Default value is 1500.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum transmission unit. Default value is 1500.",
        SerializedName = @"mtu",
        PossibleTypes = new [] { typeof(int) })]
        int? Mtu { get; set; }

    }
    /// The InternalNetwork patchable properties.
    internal partial interface IInternalNetworkPatchablePropertiesInternal

    {
        /// <summary>List of Connected IPv4 Subnets.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv4Subnet { get; set; }
        /// <summary>List of connected IPv6 Subnets.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IConnectedSubnet> ConnectedIPv6Subnet { get; set; }
        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        string EgressAclId { get; set; }
        /// <summary>Export Route Policy either IPv4 or IPv6.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicy ExportRoutePolicy { get; set; }
        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        string ExportRoutePolicyId { get; set; }
        /// <summary>Import Route Policy either IPv4 or IPv6.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicy ImportRoutePolicy { get; set; }
        /// <summary>
        /// ARM Resource ID of the RoutePolicy. This is used for the backward compatibility.
        /// </summary>
        string ImportRoutePolicyId { get; set; }
        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        string IngressAclId { get; set; }
        /// <summary>To check whether monitoring of internal network is enabled or not.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("True", "False")]
        string IsMonitoringEnabled { get; set; }
        /// <summary>Maximum transmission unit. Default value is 1500.</summary>
        int? Mtu { get; set; }

    }
}