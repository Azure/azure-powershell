// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>IP Prefix Rule properties.</summary>
    public partial class IPPrefixRule :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPPrefixRule,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPPrefixRuleInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private string _action;

        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private string _condition;

        /// <summary>Specify prefix-list bounds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Condition { get => this._condition; set => this._condition = value; }

        /// <summary>Backing field for <see cref="NetworkPrefix" /> property.</summary>
        private string _networkPrefix;

        /// <summary>
        /// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string NetworkPrefix { get => this._networkPrefix; set => this._networkPrefix = value; }

        /// <summary>Backing field for <see cref="SequenceNumber" /> property.</summary>
        private long _sequenceNumber;

        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long SequenceNumber { get => this._sequenceNumber; set => this._sequenceNumber = value; }

        /// <summary>Backing field for <see cref="SubnetMaskLength" /> property.</summary>
        private string _subnetMaskLength;

        /// <summary>
        /// SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible
        /// values of IPv6 are 1 - 128.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string SubnetMaskLength { get => this._subnetMaskLength; set => this._subnetMaskLength = value; }

        /// <summary>Creates an new <see cref="IPPrefixRule" /> instance.</summary>
        public IPPrefixRule()
        {

        }
    }
    /// IP Prefix Rule properties.
    public partial interface IIPPrefixRule :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Action to be taken on the configuration. Example: Permit | Deny.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny")]
        string Action { get; set; }
        /// <summary>Specify prefix-list bounds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Specify prefix-list bounds.",
        SerializedName = @"condition",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("EqualTo", "GreaterThanOrEqualTo", "LesserThanOrEqualTo", "Range")]
        string Condition { get; set; }
        /// <summary>
        /// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126 ",
        SerializedName = @"networkPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkPrefix { get; set; }
        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.",
        SerializedName = @"sequenceNumber",
        PossibleTypes = new [] { typeof(long) })]
        long SequenceNumber { get; set; }
        /// <summary>
        /// SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible
        /// values of IPv6 are 1 - 128.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible values of IPv6 are 1 - 128.",
        SerializedName = @"subnetMaskLength",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetMaskLength { get; set; }

    }
    /// IP Prefix Rule properties.
    internal partial interface IIPPrefixRuleInternal

    {
        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny")]
        string Action { get; set; }
        /// <summary>Specify prefix-list bounds.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("EqualTo", "GreaterThanOrEqualTo", "LesserThanOrEqualTo", "Range")]
        string Condition { get; set; }
        /// <summary>
        /// Network Prefix specifying IPv4/IPv6 packets to be permitted or denied. Example: 1.1.1.0/24 | 3FFE:FFFF:0:CD30::/126
        /// </summary>
        string NetworkPrefix { get; set; }
        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        long SequenceNumber { get; set; }
        /// <summary>
        /// SubnetMaskLength gives the minimum NetworkPrefix length to be matched. Possible values for IPv4 are 1 - 32 . Possible
        /// values of IPv6 are 1 - 128.
        /// </summary>
        string SubnetMaskLength { get; set; }

    }
}