// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Port condition that needs to be matched.</summary>
    public partial class PortCondition :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IPortCondition,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IPortConditionInternal
    {

        /// <summary>Backing field for <see cref="Layer4Protocol" /> property.</summary>
        private string _layer4Protocol;

        /// <summary>Layer4 protocol type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Layer4Protocol { get => this._layer4Protocol; set => this._layer4Protocol = value; }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private System.Collections.Generic.List<string> _port;

        /// <summary>List of the Ports that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Port { get => this._port; set => this._port = value; }

        /// <summary>Backing field for <see cref="PortGroupName" /> property.</summary>
        private System.Collections.Generic.List<string> _portGroupName;

        /// <summary>List of the port Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> PortGroupName { get => this._portGroupName; set => this._portGroupName = value; }

        /// <summary>Backing field for <see cref="PortType" /> property.</summary>
        private string _portType;

        /// <summary>Port type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string PortType { get => this._portType; set => this._portType = value; }

        /// <summary>Creates an new <see cref="PortCondition" /> instance.</summary>
        public PortCondition()
        {

        }
    }
    /// Port condition that needs to be matched.
    public partial interface IPortCondition :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>Layer4 protocol type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Layer4 protocol type that needs to be matched.",
        SerializedName = @"layer4Protocol",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("TCP", "UDP")]
        string Layer4Protocol { get; set; }
        /// <summary>List of the Ports that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the Ports that need to be matched.",
        SerializedName = @"ports",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Port { get; set; }
        /// <summary>List of the port Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the port Group Names that need to be matched.",
        SerializedName = @"portGroupNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> PortGroupName { get; set; }
        /// <summary>Port type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Port type that needs to be matched.",
        SerializedName = @"portType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourcePort", "DestinationPort")]
        string PortType { get; set; }

    }
    /// Port condition that needs to be matched.
    internal partial interface IPortConditionInternal

    {
        /// <summary>Layer4 protocol type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("TCP", "UDP")]
        string Layer4Protocol { get; set; }
        /// <summary>List of the Ports that need to be matched.</summary>
        System.Collections.Generic.List<string> Port { get; set; }
        /// <summary>List of the port Group Names that need to be matched.</summary>
        System.Collections.Generic.List<string> PortGroupName { get; set; }
        /// <summary>Port type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourcePort", "DestinationPort")]
        string PortType { get; set; }

    }
}