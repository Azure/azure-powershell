// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>NetworkFabricControllerProperties defines the resource properties.</summary>
    public partial class NetworkFabricControllerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource __annotationResource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.AnnotationResource();

        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchableProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchableProperties __networkFabricControllerPatchableProperties = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.NetworkFabricControllerPatchableProperties();

        /// <summary>Switch configuration description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string Annotation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal)__annotationResource).Annotation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal)__annotationResource).Annotation = value ?? null; }

        /// <summary>
        /// As part of an update, the Infrastructure ExpressRoute CircuitID should be provided to create and Provision a NFC. This
        /// Express route is dedicated for Infrastructure services. (This is a Mandatory attribute)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExpressRouteConnectionInformation> InfrastructureExpressRouteConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchablePropertiesInternal)__networkFabricControllerPatchableProperties).InfrastructureExpressRouteConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchablePropertiesInternal)__networkFabricControllerPatchableProperties).InfrastructureExpressRouteConnection = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="InfrastructureService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices _infrastructureService;

        /// <summary>InfrastructureServices IP ranges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices InfrastructureService { get => (this._infrastructureService = this._infrastructureService ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ControllerServices()); }

        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureServiceIpv4AddressSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)InfrastructureService).Ipv4AddressSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)InfrastructureService).Ipv4AddressSpace = value ?? null /* arrayOf */; }

        /// <summary>The IPv6 is not supported right now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureServiceIpv6AddressSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)InfrastructureService).Ipv6AddressSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)InfrastructureService).Ipv6AddressSpace = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Ipv4AddressSpace" /> property.</summary>
        private string _ipv4AddressSpace;

        /// <summary>IPv4 Network Fabric Controller Address Space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Ipv4AddressSpace { get => this._ipv4AddressSpace; set => this._ipv4AddressSpace = value; }

        /// <summary>Backing field for <see cref="Ipv6AddressSpace" /> property.</summary>
        private string _ipv6AddressSpace;

        /// <summary>IPv6 Network Fabric Controller Address Space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Ipv6AddressSpace { get => this._ipv6AddressSpace; set => this._ipv6AddressSpace = value; }

        /// <summary>Backing field for <see cref="IsWorkloadManagementNetworkEnabled" /> property.</summary>
        private string _isWorkloadManagementNetworkEnabled;

        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string IsWorkloadManagementNetworkEnabled { get => this._isWorkloadManagementNetworkEnabled; set => this._isWorkloadManagementNetworkEnabled = value; }

        /// <summary>Backing field for <see cref="ManagedResourceGroupConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfiguration _managedResourceGroupConfiguration;

        /// <summary>Managed Resource Group configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedResourceGroupConfiguration()); set => this._managedResourceGroupConfiguration = value; }

        /// <summary>Managed resource group location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Location = value ?? null; }

        /// <summary>The NFC service will be hosted in a Managed resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string ManagedResourceGroupConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfigurationInternal)ManagedResourceGroupConfiguration).Name = value ?? null; }

        /// <summary>Internal Acessors for InfrastructureService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.InfrastructureService { get => (this._infrastructureService = this._infrastructureService ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ControllerServices()); set { {_infrastructureService = value;} } }

        /// <summary>Internal Acessors for ManagedResourceGroupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfiguration Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.ManagedResourceGroupConfiguration { get => (this._managedResourceGroupConfiguration = this._managedResourceGroupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedResourceGroupConfiguration()); set { {_managedResourceGroupConfiguration = value;} } }

        /// <summary>Internal Acessors for NetworkFabricId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.NetworkFabricId { get => this._networkFabricId; set { {_networkFabricId = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TenantInternetGatewayId</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.TenantInternetGatewayId { get => this._tenantInternetGatewayId; set { {_tenantInternetGatewayId = value;} } }

        /// <summary>Internal Acessors for WorkloadManagementNetwork</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.WorkloadManagementNetwork { get => this._workloadManagementNetwork; set { {_workloadManagementNetwork = value;} } }

        /// <summary>Internal Acessors for WorkloadService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPropertiesInternal.WorkloadService { get => (this._workloadService = this._workloadService ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ControllerServices()); set { {_workloadService = value;} } }

        /// <summary>Backing field for <see cref="NetworkFabricId" /> property.</summary>
        private System.Collections.Generic.List<string> _networkFabricId;

        /// <summary>
        /// The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> NetworkFabricId { get => this._networkFabricId; }

        /// <summary>Backing field for <see cref="NfcSku" /> property.</summary>
        private string _nfcSku;

        /// <summary>Network Fabric Controller SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string NfcSku { get => this._nfcSku; set => this._nfcSku = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>
        /// Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this
        /// process, the states keep changing based on the status of NFC provisioning.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="TenantInternetGatewayId" /> property.</summary>
        private System.Collections.Generic.List<string> _tenantInternetGatewayId;

        /// <summary>List of tenant InternetGateway resource IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> TenantInternetGatewayId { get => this._tenantInternetGatewayId; }

        /// <summary>
        /// As part of an update, the workload ExpressRoute CircuitID should be provided to create and Provision a NFC. This Express
        /// route is dedicated for Workload services. (This is a Mandatory attribute).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExpressRouteConnectionInformation> WorkloadExpressRouteConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchablePropertiesInternal)__networkFabricControllerPatchableProperties).WorkloadExpressRouteConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchablePropertiesInternal)__networkFabricControllerPatchableProperties).WorkloadExpressRouteConnection = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="WorkloadManagementNetwork" /> property.</summary>
        private bool? _workloadManagementNetwork;

        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public bool? WorkloadManagementNetwork { get => this._workloadManagementNetwork; }

        /// <summary>Backing field for <see cref="WorkloadService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices _workloadService;

        /// <summary>WorkloadServices IP ranges.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices WorkloadService { get => (this._workloadService = this._workloadService ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ControllerServices()); }

        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadServiceIpv4AddressSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)WorkloadService).Ipv4AddressSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)WorkloadService).Ipv4AddressSpace = value ?? null /* arrayOf */; }

        /// <summary>The IPv6 is not supported right now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadServiceIpv6AddressSpace { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)WorkloadService).Ipv6AddressSpace; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServicesInternal)WorkloadService).Ipv6AddressSpace = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="NetworkFabricControllerProperties" /> instance.</summary>
        public NetworkFabricControllerProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__annotationResource), __annotationResource);
            await eventListener.AssertObjectIsValid(nameof(__annotationResource), __annotationResource);
            await eventListener.AssertNotNull(nameof(__networkFabricControllerPatchableProperties), __networkFabricControllerPatchableProperties);
            await eventListener.AssertObjectIsValid(nameof(__networkFabricControllerPatchableProperties), __networkFabricControllerPatchableProperties);
        }
    }
    /// NetworkFabricControllerProperties defines the resource properties.
    public partial interface INetworkFabricControllerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchableProperties
    {
        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.",
        SerializedName = @"ipv4AddressSpaces",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureServiceIpv4AddressSpace { get;  }
        /// <summary>The IPv6 is not supported right now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The IPv6 is not supported right now.",
        SerializedName = @"ipv6AddressSpaces",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureServiceIpv6AddressSpace { get;  }
        /// <summary>IPv4 Network Fabric Controller Address Space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4 Network Fabric Controller Address Space.",
        SerializedName = @"ipv4AddressSpace",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4AddressSpace { get; set; }
        /// <summary>IPv6 Network Fabric Controller Address Space.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6 Network Fabric Controller Address Space.",
        SerializedName = @"ipv6AddressSpace",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6AddressSpace { get; set; }
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints.",
        SerializedName = @"isWorkloadManagementNetworkEnabled",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("True", "False")]
        string IsWorkloadManagementNetworkEnabled { get; set; }
        /// <summary>Managed resource group location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Managed resource group location.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>The NFC service will be hosted in a Managed resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The NFC service will be hosted in a Managed resource group.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>
        /// The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.",
        SerializedName = @"networkFabricIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> NetworkFabricId { get;  }
        /// <summary>Network Fabric Controller SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Network Fabric Controller SKU.",
        SerializedName = @"nfcSku",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Basic", "Standard", "HighPerformance")]
        string NfcSku { get; set; }
        /// <summary>
        /// Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this
        /// process, the states keep changing based on the status of NFC provisioning.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this process, the states keep changing based on the status of NFC provisioning.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Accepted", "Succeeded", "Updating", "Deleting", "Failed", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>List of tenant InternetGateway resource IDs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of tenant InternetGateway resource IDs",
        SerializedName = @"tenantInternetGatewayIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> TenantInternetGatewayId { get;  }
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.",
        SerializedName = @"workloadManagementNetwork",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WorkloadManagementNetwork { get;  }
        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19 is considered. The IPV4 address subnet is an optional attribute.",
        SerializedName = @"ipv4AddressSpaces",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadServiceIpv4AddressSpace { get;  }
        /// <summary>The IPv6 is not supported right now.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The IPv6 is not supported right now.",
        SerializedName = @"ipv6AddressSpaces",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadServiceIpv6AddressSpace { get;  }

    }
    /// NetworkFabricControllerProperties defines the resource properties.
    internal partial interface INetworkFabricControllerPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricControllerPatchablePropertiesInternal
    {
        /// <summary>InfrastructureServices IP ranges.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices InfrastructureService { get; set; }
        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        System.Collections.Generic.List<string> InfrastructureServiceIpv4AddressSpace { get; set; }
        /// <summary>The IPv6 is not supported right now.</summary>
        System.Collections.Generic.List<string> InfrastructureServiceIpv6AddressSpace { get; set; }
        /// <summary>IPv4 Network Fabric Controller Address Space.</summary>
        string Ipv4AddressSpace { get; set; }
        /// <summary>IPv6 Network Fabric Controller Address Space.</summary>
        string Ipv6AddressSpace { get; set; }
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("True", "False")]
        string IsWorkloadManagementNetworkEnabled { get; set; }
        /// <summary>Managed Resource Group configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedResourceGroupConfiguration ManagedResourceGroupConfiguration { get; set; }
        /// <summary>Managed resource group location.</summary>
        string ManagedResourceGroupConfigurationLocation { get; set; }
        /// <summary>The NFC service will be hosted in a Managed resource group.</summary>
        string ManagedResourceGroupConfigurationName { get; set; }
        /// <summary>
        /// The NF-ID will be an input parameter used by the NF to link and get associated with the parent NFC Service.
        /// </summary>
        System.Collections.Generic.List<string> NetworkFabricId { get; set; }
        /// <summary>Network Fabric Controller SKU.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Basic", "Standard", "HighPerformance")]
        string NfcSku { get; set; }
        /// <summary>
        /// Provides you the latest status of the NFC service, whether it is Accepted, updating, Succeeded or Failed. During this
        /// process, the states keep changing based on the status of NFC provisioning.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Accepted", "Succeeded", "Updating", "Deleting", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>List of tenant InternetGateway resource IDs</summary>
        System.Collections.Generic.List<string> TenantInternetGatewayId { get; set; }
        /// <summary>
        /// A workload management network is required for all the tenant (workload) traffic. This traffic is only dedicated for Tenant
        /// workloads which are required to access internet or any other MSFT/Public endpoints. This is used for the backward compatibility.
        /// </summary>
        bool? WorkloadManagementNetwork { get; set; }
        /// <summary>WorkloadServices IP ranges.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IControllerServices WorkloadService { get; set; }
        /// <summary>
        /// The IPv4 Address space is optional, if the value is not defined at the time of NFC creation, then the default value 10.0.0.0/19
        /// is considered. The IPV4 address subnet is an optional attribute.
        /// </summary>
        System.Collections.Generic.List<string> WorkloadServiceIpv4AddressSpace { get; set; }
        /// <summary>The IPv6 is not supported right now.</summary>
        System.Collections.Generic.List<string> WorkloadServiceIpv6AddressSpace { get; set; }

    }
}