// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Network to Network Interconnect patchable properties.</summary>
    public partial class NetworkToNetworkInterconnectPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkToNetworkInterconnectPatchableProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkToNetworkInterconnectPatchablePropertiesInternal
    {

        /// <summary>Backing field for <see cref="EgressAclId" /> property.</summary>
        private string _egressAclId;

        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string EgressAclId { get => this._egressAclId; set => this._egressAclId = value; }

        /// <summary>Backing field for <see cref="ExportRoutePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicyInformation _exportRoutePolicy;

        /// <summary>Export Route Policy information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicyInformation ExportRoutePolicy { get => (this._exportRoutePolicy = this._exportRoutePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ExportRoutePolicyInformation()); set => this._exportRoutePolicy = value; }

        /// <summary>Backing field for <see cref="ImportRoutePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicyInformation _importRoutePolicy;

        /// <summary>Import Route Policy information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicyInformation ImportRoutePolicy { get => (this._importRoutePolicy = this._importRoutePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ImportRoutePolicyInformation()); set => this._importRoutePolicy = value; }

        /// <summary>Backing field for <see cref="IngressAclId" /> property.</summary>
        private string _ingressAclId;

        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string IngressAclId { get => this._ingressAclId; set => this._ingressAclId = value; }

        /// <summary>Backing field for <see cref="Layer2Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer2Configuration _layer2Configuration;

        /// <summary>Common properties for Layer2Configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer2Configuration Layer2Configuration { get => (this._layer2Configuration = this._layer2Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.Layer2Configuration()); set => this._layer2Configuration = value; }

        /// <summary>Internal Acessors for OptionBLayer3Configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3Configuration Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkToNetworkInterconnectPatchablePropertiesInternal.OptionBLayer3Configuration { get => (this._optionBLayer3Configuration = this._optionBLayer3Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.OptionBLayer3Configuration()); set { {_optionBLayer3Configuration = value;} } }

        /// <summary>Internal Acessors for OptionBLayer3ConfigurationFabricAsn</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkToNetworkInterconnectPatchablePropertiesInternal.OptionBLayer3ConfigurationFabricAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).FabricAsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).FabricAsn = value; }

        /// <summary>Backing field for <see cref="NpbStaticRouteConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INpbStaticRouteConfiguration _npbStaticRouteConfiguration;

        /// <summary>NPB Static Route Configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INpbStaticRouteConfiguration NpbStaticRouteConfiguration { get => (this._npbStaticRouteConfiguration = this._npbStaticRouteConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.NpbStaticRouteConfiguration()); set => this._npbStaticRouteConfiguration = value; }

        /// <summary>Backing field for <see cref="OptionBLayer3Configuration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3Configuration _optionBLayer3Configuration;

        /// <summary>Common properties for Layer3Configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3Configuration OptionBLayer3Configuration { get => (this._optionBLayer3Configuration = this._optionBLayer3Configuration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.OptionBLayer3Configuration()); set => this._optionBLayer3Configuration = value; }

        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public long? OptionBLayer3ConfigurationFabricAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).FabricAsn; }

        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public long? OptionBLayer3ConfigurationPeerAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).PeerAsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).PeerAsn = value ?? default(long); }

        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string OptionBLayer3ConfigurationPrimaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).PrimaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).PrimaryIpv4Prefix = value ?? null; }

        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string OptionBLayer3ConfigurationPrimaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).PrimaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).PrimaryIpv6Prefix = value ?? null; }

        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string OptionBLayer3ConfigurationSecondaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).SecondaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).SecondaryIpv4Prefix = value ?? null; }

        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string OptionBLayer3ConfigurationSecondaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).SecondaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)OptionBLayer3Configuration).SecondaryIpv6Prefix = value ?? null; }

        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? OptionBLayer3ConfigurationVlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).VlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal)OptionBLayer3Configuration).VlanId = value ?? default(int); }

        /// <summary>
        /// Creates an new <see cref="NetworkToNetworkInterconnectPatchableProperties" /> instance.
        /// </summary>
        public NetworkToNetworkInterconnectPatchableProperties()
        {

        }
    }
    /// Network to Network Interconnect patchable properties.
    public partial interface INetworkToNetworkInterconnectPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Egress Acl. ARM resource ID of Access Control Lists.",
        SerializedName = @"egressAclId",
        PossibleTypes = new [] { typeof(string) })]
        string EgressAclId { get; set; }
        /// <summary>Export Route Policy information</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Export Route Policy information",
        SerializedName = @"exportRoutePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicyInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicyInformation ExportRoutePolicy { get; set; }
        /// <summary>Import Route Policy information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Import Route Policy information.",
        SerializedName = @"importRoutePolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicyInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicyInformation ImportRoutePolicy { get; set; }
        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Ingress Acl. ARM resource ID of Access Control Lists.",
        SerializedName = @"ingressAclId",
        PossibleTypes = new [] { typeof(string) })]
        string IngressAclId { get; set; }
        /// <summary>Common properties for Layer2Configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Common properties for Layer2Configuration.",
        SerializedName = @"layer2Configuration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer2Configuration) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer2Configuration Layer2Configuration { get; set; }
        /// <summary>NPB Static Route Configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"NPB Static Route Configuration properties.",
        SerializedName = @"npbStaticRouteConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INpbStaticRouteConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INpbStaticRouteConfiguration NpbStaticRouteConfiguration { get; set; }
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ASN of CE devices for CE/PE connectivity.",
        SerializedName = @"fabricASN",
        PossibleTypes = new [] { typeof(long) })]
        long? OptionBLayer3ConfigurationFabricAsn { get;  }
        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ASN of PE devices for CE/PE connectivity.Example : 28",
        SerializedName = @"peerASN",
        PossibleTypes = new [] { typeof(long) })]
        long? OptionBLayer3ConfigurationPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4 Address Prefix.",
        SerializedName = @"primaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string OptionBLayer3ConfigurationPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6 Address Prefix.",
        SerializedName = @"primaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string OptionBLayer3ConfigurationPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv4 Address Prefix.",
        SerializedName = @"secondaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string OptionBLayer3ConfigurationSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv6 Address Prefix.",
        SerializedName = @"secondaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string OptionBLayer3ConfigurationSecondaryIpv6Prefix { get; set; }
        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VLAN for CE/PE Layer 3 connectivity.Example : 501",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(int) })]
        int? OptionBLayer3ConfigurationVlanId { get; set; }

    }
    /// Network to Network Interconnect patchable properties.
    internal partial interface INetworkToNetworkInterconnectPatchablePropertiesInternal

    {
        /// <summary>Egress Acl. ARM resource ID of Access Control Lists.</summary>
        string EgressAclId { get; set; }
        /// <summary>Export Route Policy information</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IExportRoutePolicyInformation ExportRoutePolicy { get; set; }
        /// <summary>Import Route Policy information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IImportRoutePolicyInformation ImportRoutePolicy { get; set; }
        /// <summary>Ingress Acl. ARM resource ID of Access Control Lists.</summary>
        string IngressAclId { get; set; }
        /// <summary>Common properties for Layer2Configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer2Configuration Layer2Configuration { get; set; }
        /// <summary>NPB Static Route Configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INpbStaticRouteConfiguration NpbStaticRouteConfiguration { get; set; }
        /// <summary>Common properties for Layer3Configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3Configuration OptionBLayer3Configuration { get; set; }
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        long? OptionBLayer3ConfigurationFabricAsn { get; set; }
        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        long? OptionBLayer3ConfigurationPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        string OptionBLayer3ConfigurationPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        string OptionBLayer3ConfigurationPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        string OptionBLayer3ConfigurationSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        string OptionBLayer3ConfigurationSecondaryIpv6Prefix { get; set; }
        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        int? OptionBLayer3ConfigurationVlanId { get; set; }

    }
}