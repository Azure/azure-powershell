// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>OptionB Layer3 Configuration properties.</summary>
    public partial class OptionBLayer3Configuration :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3Configuration,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixProperties __layer3IPPrefixProperties = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.Layer3IPPrefixProperties();

        /// <summary>Backing field for <see cref="FabricAsn" /> property.</summary>
        private long? _fabricAsn;

        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long? FabricAsn { get => this._fabricAsn; }

        /// <summary>Internal Acessors for FabricAsn</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBLayer3ConfigurationInternal.FabricAsn { get => this._fabricAsn; set { {_fabricAsn = value;} } }

        /// <summary>Backing field for <see cref="PeerAsn" /> property.</summary>
        private long? _peerAsn;

        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long? PeerAsn { get => this._peerAsn; set => this._peerAsn = value; }

        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string PrimaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).PrimaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).PrimaryIpv4Prefix = value ?? null; }

        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string PrimaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).PrimaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).PrimaryIpv6Prefix = value ?? null; }

        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string SecondaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).SecondaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).SecondaryIpv4Prefix = value ?? null; }

        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string SecondaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).SecondaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)__layer3IPPrefixProperties).SecondaryIpv6Prefix = value ?? null; }

        /// <summary>Backing field for <see cref="VlanId" /> property.</summary>
        private int? _vlanId;

        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public int? VlanId { get => this._vlanId; set => this._vlanId = value; }

        /// <summary>Creates an new <see cref="OptionBLayer3Configuration" /> instance.</summary>
        public OptionBLayer3Configuration()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__layer3IPPrefixProperties), __layer3IPPrefixProperties);
            await eventListener.AssertObjectIsValid(nameof(__layer3IPPrefixProperties), __layer3IPPrefixProperties);
        }
    }
    /// OptionB Layer3 Configuration properties.
    public partial interface IOptionBLayer3Configuration :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixProperties
    {
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"ASN of CE devices for CE/PE connectivity.",
        SerializedName = @"fabricASN",
        PossibleTypes = new [] { typeof(long) })]
        long? FabricAsn { get;  }
        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ASN of PE devices for CE/PE connectivity.Example : 28",
        SerializedName = @"peerASN",
        PossibleTypes = new [] { typeof(long) })]
        long? PeerAsn { get; set; }
        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VLAN for CE/PE Layer 3 connectivity.Example : 501",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(int) })]
        int? VlanId { get; set; }

    }
    /// OptionB Layer3 Configuration properties.
    internal partial interface IOptionBLayer3ConfigurationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal
    {
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        long? FabricAsn { get; set; }
        /// <summary>ASN of PE devices for CE/PE connectivity.Example : 28</summary>
        long? PeerAsn { get; set; }
        /// <summary>VLAN for CE/PE Layer 3 connectivity.Example : 501</summary>
        int? VlanId { get; set; }

    }
}