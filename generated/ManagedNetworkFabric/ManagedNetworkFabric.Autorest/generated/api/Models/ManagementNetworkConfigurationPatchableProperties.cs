// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Configuration to be used to setup the management network.</summary>
    public partial class ManagementNetworkConfigurationPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal
    {

        /// <summary>Backing field for <see cref="InfrastructureVpnConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties _infrastructureVpnConfiguration;

        /// <summary>VPN Configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties InfrastructureVpnConfiguration { get => (this._infrastructureVpnConfiguration = this._infrastructureVpnConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VpnConfigurationPatchableProperties()); set => this._infrastructureVpnConfiguration = value; }

        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationNetworkToNetworkInterconnectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).NetworkToNetworkInterconnectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).NetworkToNetworkInterconnectId = value ?? null; }

        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState; }

        /// <summary>Interval in milliseconds. Example: 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationIntervalInMilliSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationIntervalInMilliSecond = value ?? default(int); }

        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationMultiplier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationMultiplier = value ?? default(int); }

        /// <summary>MTU to use for option A peering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? InfrastructureVpnConfigurationOptionAPropertiesMtu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyMtu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyMtu = value ?? default(int); }

        /// <summary>Peer ASN number.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public long? InfrastructureVpnConfigurationOptionAPropertiesPeerAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPeerAsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPeerAsn = value ?? default(long); }

        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPrimaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPrimaryIpv4Prefix = value ?? null; }

        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPrimaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyPrimaryIpv6Prefix = value ?? null; }

        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertySecondaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertySecondaryIpv4Prefix = value ?? null; }

        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertySecondaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertySecondaryIpv6Prefix = value ?? null; }

        /// <summary>Vlan Id.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? InfrastructureVpnConfigurationOptionAPropertiesVlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyVlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyVlanId = value ?? default(int); }

        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesExportRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyExportRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyExportRouteTarget = value ?? null /* arrayOf */; }

        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesImportRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyImportRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyImportRouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetExportIpv4RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetExportIpv4RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetExportIpv6RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetExportIpv6RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetImportIpv4RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetImportIpv4RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetImportIpv6RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).RouteTargetImportIpv6RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Peering option list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string InfrastructureVpnConfigurationPeeringOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).PeeringOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).PeeringOption = value ?? null; }

        /// <summary>Internal Acessors for InfrastructureVpnConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfiguration { get => (this._infrastructureVpnConfiguration = this._infrastructureVpnConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VpnConfigurationPatchableProperties()); set { {_infrastructureVpnConfiguration = value;} } }

        /// <summary>
        /// Internal Acessors for InfrastructureVpnConfigurationOptionAPropertiesBfdConfiguration
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IBfdConfiguration Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfigurationOptionAPropertiesBfdConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfiguration = value; }

        /// <summary>
        /// Internal Acessors for InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState = value; }

        /// <summary>Internal Acessors for InfrastructureVpnConfigurationOptionAProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesOptionAProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfigurationOptionAProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionAProperty = value; }

        /// <summary>
        /// Internal Acessors for InfrastructureVpnConfigurationOptionBPropertiesRouteTarget
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRouteTargetInformation Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfigurationOptionBPropertiesRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBPropertyRouteTarget = value; }

        /// <summary>Internal Acessors for InfrastructureVpnConfigurationOptionBProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.InfrastructureVpnConfigurationOptionBProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)InfrastructureVpnConfiguration).OptionBProperty = value; }

        /// <summary>Internal Acessors for WorkloadVpnConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfiguration { get => (this._workloadVpnConfiguration = this._workloadVpnConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VpnConfigurationPatchableProperties()); set { {_workloadVpnConfiguration = value;} } }

        /// <summary>Internal Acessors for WorkloadVpnConfigurationOptionAPropertiesBfdConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IBfdConfiguration Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfigurationOptionAPropertiesBfdConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfiguration = value; }

        /// <summary>
        /// Internal Acessors for WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState = value; }

        /// <summary>Internal Acessors for WorkloadVpnConfigurationOptionAProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesOptionAProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfigurationOptionAProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAProperty = value; }

        /// <summary>Internal Acessors for WorkloadVpnConfigurationOptionBPropertiesRouteTarget</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRouteTargetInformation Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfigurationOptionBPropertiesRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyRouteTarget = value; }

        /// <summary>Internal Acessors for WorkloadVpnConfigurationOptionBProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchablePropertiesInternal.WorkloadVpnConfigurationOptionBProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBProperty = value; }

        /// <summary>Backing field for <see cref="WorkloadVpnConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties _workloadVpnConfiguration;

        /// <summary>VPN Configuration properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties WorkloadVpnConfiguration { get => (this._workloadVpnConfiguration = this._workloadVpnConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VpnConfigurationPatchableProperties()); set => this._workloadVpnConfiguration = value; }

        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationNetworkToNetworkInterconnectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).NetworkToNetworkInterconnectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).NetworkToNetworkInterconnectId = value ?? null; }

        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationAdministrativeState; }

        /// <summary>Interval in milliseconds. Example: 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationIntervalInMilliSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationIntervalInMilliSecond = value ?? default(int); }

        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationMultiplier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyBfdConfigurationMultiplier = value ?? default(int); }

        /// <summary>MTU to use for option A peering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? WorkloadVpnConfigurationOptionAPropertiesMtu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyMtu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyMtu = value ?? default(int); }

        /// <summary>Peer ASN number.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public long? WorkloadVpnConfigurationOptionAPropertiesPeerAsn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPeerAsn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPeerAsn = value ?? default(long); }

        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPrimaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPrimaryIpv4Prefix = value ?? null; }

        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPrimaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyPrimaryIpv6Prefix = value ?? null; }

        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertySecondaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertySecondaryIpv4Prefix = value ?? null; }

        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertySecondaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertySecondaryIpv6Prefix = value ?? null; }

        /// <summary>Vlan Id.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public int? WorkloadVpnConfigurationOptionAPropertiesVlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyVlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionAPropertyVlanId = value ?? default(int); }

        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesExportRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyExportRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyExportRouteTarget = value ?? null /* arrayOf */; }

        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesImportRouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyImportRouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).OptionBPropertyImportRouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetExportIpv4RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetExportIpv4RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetExportIpv6RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetExportIpv6RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetImportIpv4RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetImportIpv4RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetImportIpv6RouteTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).RouteTargetImportIpv6RouteTarget = value ?? null /* arrayOf */; }

        /// <summary>Peering option list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string WorkloadVpnConfigurationPeeringOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).PeeringOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesInternal)WorkloadVpnConfiguration).PeeringOption = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="ManagementNetworkConfigurationPatchableProperties" /> instance.
        /// </summary>
        public ManagementNetworkConfigurationPatchableProperties()
        {

        }
    }
    /// Configuration to be used to setup the management network.
    public partial interface IManagementNetworkConfigurationPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Resource ID of the Network To Network Interconnect.",
        SerializedName = @"networkToNetworkInterconnectId",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVpnConfigurationNetworkToNetworkInterconnectId { get; set; }
        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
        SerializedName = @"administrativeState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Enabled", "Disabled", "MAT", "RMA")]
        string InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get;  }
        /// <summary>Interval in milliseconds. Example: 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Interval in milliseconds. Example: 300.",
        SerializedName = @"intervalInMilliSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get; set; }
        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Multiplier for the Bfd Configuration. Example: 5.",
        SerializedName = @"multiplier",
        PossibleTypes = new [] { typeof(int) })]
        int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get; set; }
        /// <summary>MTU to use for option A peering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"MTU to use for option A peering.",
        SerializedName = @"mtu",
        PossibleTypes = new [] { typeof(int) })]
        int? InfrastructureVpnConfigurationOptionAPropertiesMtu { get; set; }
        /// <summary>Peer ASN number.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Peer ASN number.Example : 28",
        SerializedName = @"peerASN",
        PossibleTypes = new [] { typeof(long) })]
        long? InfrastructureVpnConfigurationOptionAPropertiesPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4 Address Prefix.",
        SerializedName = @"primaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6 Address Prefix.",
        SerializedName = @"primaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv4 Address Prefix.",
        SerializedName = @"secondaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv6 Address Prefix.",
        SerializedName = @"secondaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get; set; }
        /// <summary>Vlan Id.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Vlan Id.Example : 501",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(int) })]
        int? InfrastructureVpnConfigurationOptionAPropertiesVlanId { get; set; }
        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.",
        SerializedName = @"exportRouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesExportRouteTarget { get; set; }
        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes into CE. This is for backward compatibility.",
        SerializedName = @"importRouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesImportRouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes into CE.",
        SerializedName = @"exportIpv4RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes from CE.",
        SerializedName = @"exportIpv6RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes into CE.",
        SerializedName = @"importIpv4RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes from CE.",
        SerializedName = @"importIpv6RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get; set; }
        /// <summary>Peering option list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Peering option list.",
        SerializedName = @"peeringOption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("OptionA", "OptionB")]
        string InfrastructureVpnConfigurationPeeringOption { get; set; }
        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Resource ID of the Network To Network Interconnect.",
        SerializedName = @"networkToNetworkInterconnectId",
        PossibleTypes = new [] { typeof(string) })]
        string WorkloadVpnConfigurationNetworkToNetworkInterconnectId { get; set; }
        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Administrative state of the BfdConfiguration. Example: Enabled | Disabled.",
        SerializedName = @"administrativeState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Enabled", "Disabled", "MAT", "RMA")]
        string WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get;  }
        /// <summary>Interval in milliseconds. Example: 300.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Interval in milliseconds. Example: 300.",
        SerializedName = @"intervalInMilliSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get; set; }
        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Multiplier for the Bfd Configuration. Example: 5.",
        SerializedName = @"multiplier",
        PossibleTypes = new [] { typeof(int) })]
        int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get; set; }
        /// <summary>MTU to use for option A peering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"MTU to use for option A peering.",
        SerializedName = @"mtu",
        PossibleTypes = new [] { typeof(int) })]
        int? WorkloadVpnConfigurationOptionAPropertiesMtu { get; set; }
        /// <summary>Peer ASN number.Example : 28</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Peer ASN number.Example : 28",
        SerializedName = @"peerASN",
        PossibleTypes = new [] { typeof(long) })]
        long? WorkloadVpnConfigurationOptionAPropertiesPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4 Address Prefix.",
        SerializedName = @"primaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6 Address Prefix.",
        SerializedName = @"primaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv4 Address Prefix.",
        SerializedName = @"secondaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv6 Address Prefix.",
        SerializedName = @"secondaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get; set; }
        /// <summary>Vlan Id.Example : 501</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Vlan Id.Example : 501",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(int) })]
        int? WorkloadVpnConfigurationOptionAPropertiesVlanId { get; set; }
        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.",
        SerializedName = @"exportRouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesExportRouteTarget { get; set; }
        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes into CE. This is for backward compatibility.",
        SerializedName = @"importRouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesImportRouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes into CE.",
        SerializedName = @"exportIpv4RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for outgoing routes from CE.",
        SerializedName = @"exportIpv6RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes into CE.",
        SerializedName = @"importIpv4RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Route Targets to be applied for incoming routes from CE.",
        SerializedName = @"importIpv6RouteTargets",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get; set; }
        /// <summary>Peering option list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Peering option list.",
        SerializedName = @"peeringOption",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("OptionA", "OptionB")]
        string WorkloadVpnConfigurationPeeringOption { get; set; }

    }
    /// Configuration to be used to setup the management network.
    internal partial interface IManagementNetworkConfigurationPatchablePropertiesInternal

    {
        /// <summary>VPN Configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties InfrastructureVpnConfiguration { get; set; }
        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        string InfrastructureVpnConfigurationNetworkToNetworkInterconnectId { get; set; }
        /// <summary>BFD Configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IBfdConfiguration InfrastructureVpnConfigurationOptionAPropertiesBfdConfiguration { get; set; }
        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Enabled", "Disabled", "MAT", "RMA")]
        string InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get; set; }
        /// <summary>Interval in milliseconds. Example: 300.</summary>
        int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get; set; }
        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        int? InfrastructureVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get; set; }
        /// <summary>MTU to use for option A peering.</summary>
        int? InfrastructureVpnConfigurationOptionAPropertiesMtu { get; set; }
        /// <summary>Peer ASN number.Example : 28</summary>
        long? InfrastructureVpnConfigurationOptionAPropertiesPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        string InfrastructureVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        string InfrastructureVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get; set; }
        /// <summary>Vlan Id.Example : 501</summary>
        int? InfrastructureVpnConfigurationOptionAPropertiesVlanId { get; set; }
        /// <summary>option A properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesOptionAProperties InfrastructureVpnConfigurationOptionAProperty { get; set; }
        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesExportRouteTarget { get; set; }
        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesImportRouteTarget { get; set; }
        /// <summary>Route Targets to be applied.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRouteTargetInformation InfrastructureVpnConfigurationOptionBPropertiesRouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        System.Collections.Generic.List<string> InfrastructureVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get; set; }
        /// <summary>option B properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBProperties InfrastructureVpnConfigurationOptionBProperty { get; set; }
        /// <summary>Peering option list.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("OptionA", "OptionB")]
        string InfrastructureVpnConfigurationPeeringOption { get; set; }
        /// <summary>VPN Configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchableProperties WorkloadVpnConfiguration { get; set; }
        /// <summary>ARM Resource ID of the Network To Network Interconnect.</summary>
        string WorkloadVpnConfigurationNetworkToNetworkInterconnectId { get; set; }
        /// <summary>BFD Configuration properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IBfdConfiguration WorkloadVpnConfigurationOptionAPropertiesBfdConfiguration { get; set; }
        /// <summary>Administrative state of the BfdConfiguration. Example: Enabled | Disabled.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Enabled", "Disabled", "MAT", "RMA")]
        string WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationAdministrativeState { get; set; }
        /// <summary>Interval in milliseconds. Example: 300.</summary>
        int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationIntervalInMilliSecond { get; set; }
        /// <summary>Multiplier for the Bfd Configuration. Example: 5.</summary>
        int? WorkloadVpnConfigurationOptionAPropertiesBfdConfigurationMultiplier { get; set; }
        /// <summary>MTU to use for option A peering.</summary>
        int? WorkloadVpnConfigurationOptionAPropertiesMtu { get; set; }
        /// <summary>Peer ASN number.Example : 28</summary>
        long? WorkloadVpnConfigurationOptionAPropertiesPeerAsn { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        string WorkloadVpnConfigurationOptionAPropertiesPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        string WorkloadVpnConfigurationOptionAPropertiesSecondaryIpv6Prefix { get; set; }
        /// <summary>Vlan Id.Example : 501</summary>
        int? WorkloadVpnConfigurationOptionAPropertiesVlanId { get; set; }
        /// <summary>option A properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVpnConfigurationPatchablePropertiesOptionAProperties WorkloadVpnConfigurationOptionAProperty { get; set; }
        /// <summary>
        /// Route Targets to be applied for outgoing routes from CE. This is for backward compatibility.
        /// </summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesExportRouteTarget { get; set; }
        /// <summary>
        /// Route Targets to be applied for incoming routes into CE. This is for backward compatibility.
        /// </summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesImportRouteTarget { get; set; }
        /// <summary>Route Targets to be applied.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRouteTargetInformation WorkloadVpnConfigurationOptionBPropertiesRouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes into CE.</summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for outgoing routes from CE.</summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsExportIpv6RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes into CE.</summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv4RouteTarget { get; set; }
        /// <summary>Route Targets to be applied for incoming routes from CE.</summary>
        System.Collections.Generic.List<string> WorkloadVpnConfigurationOptionBPropertiesRouteTargetsImportIpv6RouteTarget { get; set; }
        /// <summary>option B properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IOptionBProperties WorkloadVpnConfigurationOptionBProperty { get; set; }
        /// <summary>Peering option list.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("OptionA", "OptionB")]
        string WorkloadVpnConfigurationPeeringOption { get; set; }

    }
}