// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Defines the condition that can be filtered using the selected IPs.</summary>
    public partial class IPMatchCondition :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchCondition,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal
    {

        /// <summary>Backing field for <see cref="IPGroupName" /> property.</summary>
        private System.Collections.Generic.List<string> _iPGroupName;

        /// <summary>The List of IP Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> IPGroupName { get => this._iPGroupName; set => this._iPGroupName = value; }

        /// <summary>Backing field for <see cref="IPPrefixValue" /> property.</summary>
        private System.Collections.Generic.List<string> _iPPrefixValue;

        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> IPPrefixValue { get => this._iPPrefixValue; set => this._iPPrefixValue = value; }

        /// <summary>Backing field for <see cref="PrefixType" /> property.</summary>
        private string _prefixType;

        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string PrefixType { get => this._prefixType; set => this._prefixType = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>IP Address type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="IPMatchCondition" /> instance.</summary>
        public IPMatchCondition()
        {

        }
    }
    /// Defines the condition that can be filtered using the selected IPs.
    public partial interface IIPMatchCondition :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>The List of IP Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The List of IP Group Names that need to be matched.",
        SerializedName = @"ipGroupNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPGroupName { get; set; }
        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of IP Prefixes that need to be matched.",
        SerializedName = @"ipPrefixValues",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPPrefixValue { get; set; }
        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Prefix Type that needs to be matched.",
        SerializedName = @"prefixType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Prefix", "LongestPrefix")]
        string PrefixType { get; set; }
        /// <summary>IP Address type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address type that needs to be matched.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourceIP", "DestinationIP")]
        string Type { get; set; }

    }
    /// Defines the condition that can be filtered using the selected IPs.
    internal partial interface IIPMatchConditionInternal

    {
        /// <summary>The List of IP Group Names that need to be matched.</summary>
        System.Collections.Generic.List<string> IPGroupName { get; set; }
        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        System.Collections.Generic.List<string> IPPrefixValue { get; set; }
        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Prefix", "LongestPrefix")]
        string PrefixType { get; set; }
        /// <summary>IP Address type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourceIP", "DestinationIP")]
        string Type { get; set; }

    }
}