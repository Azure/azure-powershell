// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Cluster log analytics profile to enable or disable OMS agent for cluster.</summary>
    public partial class ClusterLogAnalyticsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsProfileInternal
    {

        /// <summary>Backing field for <see cref="ApplicationLog" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs _applicationLog;

        /// <summary>Collection of logs to be enabled or disabled for log analytics.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs ApplicationLog { get => (this._applicationLog = this._applicationLog ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsApplicationLogs()); set => this._applicationLog = value; }

        /// <summary>True if stderror is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public bool? ApplicationLogStdErrorEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogsInternal)ApplicationLog).StdErrorEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogsInternal)ApplicationLog).StdErrorEnabled = value ?? default(bool); }

        /// <summary>True if stdout is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public bool? ApplicationLogStdOutEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogsInternal)ApplicationLog).StdOutEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogsInternal)ApplicationLog).StdOutEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool _enabled;

        /// <summary>True if log analytics is enabled for the cluster, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="MetricsEnabled" /> property.</summary>
        private bool? _metricsEnabled;

        /// <summary>True if metrics are enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? MetricsEnabled { get => this._metricsEnabled; set => this._metricsEnabled = value; }

        /// <summary>Internal Acessors for ApplicationLog</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsProfileInternal.ApplicationLog { get => (this._applicationLog = this._applicationLog ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ClusterLogAnalyticsApplicationLogs()); set { {_applicationLog = value;} } }

        /// <summary>Creates an new <see cref="ClusterLogAnalyticsProfile" /> instance.</summary>
        public ClusterLogAnalyticsProfile()
        {

        }
    }
    /// Cluster log analytics profile to enable or disable OMS agent for cluster.
    public partial interface IClusterLogAnalyticsProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>True if stderror is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if stderror is enabled, otherwise false.",
        SerializedName = @"stdErrorEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApplicationLogStdErrorEnabled { get; set; }
        /// <summary>True if stdout is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if stdout is enabled, otherwise false.",
        SerializedName = @"stdOutEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ApplicationLogStdOutEnabled { get; set; }
        /// <summary>True if log analytics is enabled for the cluster, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if log analytics is enabled for the cluster, otherwise false.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool Enabled { get; set; }
        /// <summary>True if metrics are enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if metrics are enabled, otherwise false.",
        SerializedName = @"metricsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MetricsEnabled { get; set; }

    }
    /// Cluster log analytics profile to enable or disable OMS agent for cluster.
    internal partial interface IClusterLogAnalyticsProfileInternal

    {
        /// <summary>Collection of logs to be enabled or disabled for log analytics.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs ApplicationLog { get; set; }
        /// <summary>True if stderror is enabled, otherwise false.</summary>
        bool? ApplicationLogStdErrorEnabled { get; set; }
        /// <summary>True if stdout is enabled, otherwise false.</summary>
        bool? ApplicationLogStdOutEnabled { get; set; }
        /// <summary>True if log analytics is enabled for the cluster, otherwise false.</summary>
        bool Enabled { get; set; }
        /// <summary>True if metrics are enabled, otherwise false.</summary>
        bool? MetricsEnabled { get; set; }

    }
}