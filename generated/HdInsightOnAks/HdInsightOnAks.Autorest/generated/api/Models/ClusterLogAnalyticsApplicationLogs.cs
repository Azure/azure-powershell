// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>Collection of logs to be enabled or disabled for log analytics.</summary>
    public partial class ClusterLogAnalyticsApplicationLogs :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogs,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IClusterLogAnalyticsApplicationLogsInternal
    {

        /// <summary>Backing field for <see cref="StdErrorEnabled" /> property.</summary>
        private bool? _stdErrorEnabled;

        /// <summary>True if stderror is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? StdErrorEnabled { get => this._stdErrorEnabled; set => this._stdErrorEnabled = value; }

        /// <summary>Backing field for <see cref="StdOutEnabled" /> property.</summary>
        private bool? _stdOutEnabled;

        /// <summary>True if stdout is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public bool? StdOutEnabled { get => this._stdOutEnabled; set => this._stdOutEnabled = value; }

        /// <summary>Creates an new <see cref="ClusterLogAnalyticsApplicationLogs" /> instance.</summary>
        public ClusterLogAnalyticsApplicationLogs()
        {

        }
    }
    /// Collection of logs to be enabled or disabled for log analytics.
    public partial interface IClusterLogAnalyticsApplicationLogs :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>True if stderror is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if stderror is enabled, otherwise false.",
        SerializedName = @"stdErrorEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? StdErrorEnabled { get; set; }
        /// <summary>True if stdout is enabled, otherwise false.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"True if stdout is enabled, otherwise false.",
        SerializedName = @"stdOutEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? StdOutEnabled { get; set; }

    }
    /// Collection of logs to be enabled or disabled for log analytics.
    internal partial interface IClusterLogAnalyticsApplicationLogsInternal

    {
        /// <summary>True if stderror is enabled, otherwise false.</summary>
        bool? StdErrorEnabled { get; set; }
        /// <summary>True if stdout is enabled, otherwise false.</summary>
        bool? StdOutEnabled { get; set; }

    }
}