// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Extensions;

    /// <summary>The Flink cluster profile.</summary>
    public partial class FlinkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal
    {

        /// <summary>Backing field for <see cref="CatalogOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions _catalogOption;

        /// <summary>Flink cluster catalog options.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions CatalogOption { get => (this._catalogOption = this._catalogOption ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptions()); set => this._catalogOption = value; }

        /// <summary>Backing field for <see cref="DeploymentMode" /> property.</summary>
        private string _deploymentMode;

        /// <summary>
        /// A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values =>
        /// Application, Session. Default value is Session
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public string DeploymentMode { get => this._deploymentMode; set => this._deploymentMode = value; }

        /// <summary>Backing field for <see cref="HistoryServer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _historyServer;

        /// <summary>History Server container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition HistoryServer { get => (this._historyServer = this._historyServer ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._historyServer = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float? HistoryServerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Cpu = value ?? default(float); }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long? HistoryServerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)HistoryServer).Memory = value ?? default(long); }

        /// <summary>
        /// The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionAuthenticationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionAuthenticationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionAuthenticationMode = value ?? null; }

        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionPasswordSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionPasswordSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionPasswordSecret = value ?? null; }

        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUrl = value ?? null; }

        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string HiveMetastoreDbConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).HiveMetastoreDbConnectionUserName = value ?? null; }

        /// <summary>Backing field for <see cref="JobManager" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _jobManager;

        /// <summary>Job Manager container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition JobManager { get => (this._jobManager = this._jobManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._jobManager = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float JobManagerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Cpu = value ; }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long JobManagerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)JobManager).Memory = value ; }

        /// <summary>Backing field for <see cref="JobSpec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile _jobSpec;

        /// <summary>
        /// Job specifications for flink clusters in application deployment mode. The specification is immutable even if job properties
        /// are changed by calling the RunJob API, please use the ListJob API to get the latest job information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile JobSpec { get => (this._jobSpec = this._jobSpec ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfile()); set => this._jobSpec = value; }

        /// <summary>
        /// A string property representing additional JVM arguments for the Flink job. It should be space separated value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecArg { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).Arg; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).Arg = value ?? null; }

        /// <summary>
        /// A string property that specifies the entry class for the Flink job. If not specified, the entry point is auto-detected
        /// from the flink job jar package.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecEntryClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).EntryClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).EntryClass = value ?? null; }

        /// <summary>A string property that represents the name of the job JAR.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecJarName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).JarName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).JarName = value ?? null; }

        /// <summary>A string property that specifies the directory where the job JAR is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecJobJarDirectory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).JobJarDirectory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).JobJarDirectory = value ?? null; }

        /// <summary>A string property that represents the name of the savepoint for the Flink job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecSavePointName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).SavePointName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).SavePointName = value ?? null; }

        /// <summary>
        /// A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum
        /// values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string JobSpecUpgradeMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).UpgradeMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfileInternal)JobSpec).UpgradeMode = value ?? null; }

        /// <summary>Internal Acessors for CatalogOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.CatalogOption { get => (this._catalogOption = this._catalogOption ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkCatalogOptions()); set { {_catalogOption = value;} } }

        /// <summary>Internal Acessors for CatalogOptionHive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.CatalogOptionHive { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).Hive; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptionsInternal)CatalogOption).Hive = value; }

        /// <summary>Internal Acessors for HistoryServer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.HistoryServer { get => (this._historyServer = this._historyServer ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_historyServer = value;} } }

        /// <summary>Internal Acessors for JobManager</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.JobManager { get => (this._jobManager = this._jobManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_jobManager = value;} } }

        /// <summary>Internal Acessors for JobSpec</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.JobSpec { get => (this._jobSpec = this._jobSpec ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkJobProfile()); set { {_jobSpec = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfile()); set { {_storage = value;} } }

        /// <summary>Internal Acessors for TaskManager</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkProfileInternal.TaskManager { get => (this._taskManager = this._taskManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set { {_taskManager = value;} } }

        /// <summary>Backing field for <see cref="NumReplica" /> property.</summary>
        private int? _numReplica;

        /// <summary>The number of task managers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        public int? NumReplica { get => this._numReplica; set => this._numReplica = value; }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile _storage;

        /// <summary>The storage profile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.FlinkStorageProfile()); set => this._storage = value; }

        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageStoragekey { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).Storagekey; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).Storagekey = value ?? null; }

        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public string StorageUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).StorageUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfileInternal)Storage).StorageUri = value ; }

        /// <summary>Backing field for <see cref="TaskManager" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition _taskManager;

        /// <summary>Task Manager container/ process CPU and memory requirements</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition TaskManager { get => (this._taskManager = this._taskManager ?? new Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.ComputeResourceDefinition()); set => this._taskManager = value; }

        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public float TaskManagerCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Cpu = value ; }

        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Origin(Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PropertyOrigin.Inlined)]
        public long TaskManagerMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Memory; set => ((Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinitionInternal)TaskManager).Memory = value ; }

        /// <summary>Creates an new <see cref="FlinkProfile" /> instance.</summary>
        public FlinkProfile()
        {

        }
    }
    /// The Flink cluster profile.
    public partial interface IFlinkProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values =>
        /// Application, Session. Default value is Session
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values => Application, Session. Default value is Session",
        SerializedName = @"deploymentMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Application", "Session")]
        string DeploymentMode { get; set; }
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float? HistoryServerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long? HistoryServerMemory { get; set; }
        /// <summary>
        /// The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization",
        SerializedName = @"metastoreDbConnectionAuthenticationMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("SqlAuth", "IdentityAuth")]
        string HiveMetastoreDbConnectionAuthenticationMode { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secret reference name from secretsProfile.secrets containing password for database connection.",
        SerializedName = @"metastoreDbConnectionPasswordSecret",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Connection string for hive metastore database.",
        SerializedName = @"metastoreDbConnectionURL",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"User name for database connection.",
        SerializedName = @"metastoreDbConnectionUserName",
        PossibleTypes = new [] { typeof(string) })]
        string HiveMetastoreDbConnectionUserName { get; set; }
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float JobManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long JobManagerMemory { get; set; }
        /// <summary>
        /// A string property representing additional JVM arguments for the Flink job. It should be space separated value.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property representing additional JVM arguments for the Flink job. It should be space separated value.",
        SerializedName = @"args",
        PossibleTypes = new [] { typeof(string) })]
        string JobSpecArg { get; set; }
        /// <summary>
        /// A string property that specifies the entry class for the Flink job. If not specified, the entry point is auto-detected
        /// from the flink job jar package.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that specifies the entry class for the Flink job. If not specified, the entry point is auto-detected from the flink job jar package.",
        SerializedName = @"entryClass",
        PossibleTypes = new [] { typeof(string) })]
        string JobSpecEntryClass { get; set; }
        /// <summary>A string property that represents the name of the job JAR.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that represents the name of the job JAR.",
        SerializedName = @"jarName",
        PossibleTypes = new [] { typeof(string) })]
        string JobSpecJarName { get; set; }
        /// <summary>A string property that specifies the directory where the job JAR is located.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that specifies the directory where the job JAR is located.",
        SerializedName = @"jobJarDirectory",
        PossibleTypes = new [] { typeof(string) })]
        string JobSpecJobJarDirectory { get; set; }
        /// <summary>A string property that represents the name of the savepoint for the Flink job</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that represents the name of the savepoint for the Flink job",
        SerializedName = @"savePointName",
        PossibleTypes = new [] { typeof(string) })]
        string JobSpecSavePointName { get; set; }
        /// <summary>
        /// A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum
        /// values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.",
        SerializedName = @"upgradeMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("STATELESS_UPDATE", "UPDATE", "LAST_STATE_UPDATE")]
        string JobSpecUpgradeMode { get; set; }
        /// <summary>The number of task managers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of task managers.",
        SerializedName = @"numReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? NumReplica { get; set; }
        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage key is only required for wasb(s) storage.",
        SerializedName = @"storagekey",
        PossibleTypes = new [] { typeof(string) })]
        string StorageStoragekey { get; set; }
        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage account uri which is used for savepoint and checkpoint state.",
        SerializedName = @"storageUri",
        PossibleTypes = new [] { typeof(string) })]
        string StorageUri { get; set; }
        /// <summary>The required CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required CPU.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(float) })]
        float TaskManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The required memory in MB, Container memory will be 110 percentile",
        SerializedName = @"memory",
        PossibleTypes = new [] { typeof(long) })]
        long TaskManagerMemory { get; set; }

    }
    /// The Flink cluster profile.
    internal partial interface IFlinkProfileInternal

    {
        /// <summary>Flink cluster catalog options.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkCatalogOptions CatalogOption { get; set; }
        /// <summary>Hive Catalog Option for Flink cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkHiveCatalogOption CatalogOptionHive { get; set; }
        /// <summary>
        /// A string property that indicates the deployment mode of Flink cluster. It can have one of the following enum values =>
        /// Application, Session. Default value is Session
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("Application", "Session")]
        string DeploymentMode { get; set; }
        /// <summary>History Server container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition HistoryServer { get; set; }
        /// <summary>The required CPU.</summary>
        float? HistoryServerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long? HistoryServerMemory { get; set; }
        /// <summary>
        /// The authentication mode to connect to your Hive metastore database. More details: https://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql#authentication-and-authorization
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("SqlAuth", "IdentityAuth")]
        string HiveMetastoreDbConnectionAuthenticationMode { get; set; }
        /// <summary>
        /// Secret reference name from secretsProfile.secrets containing password for database connection.
        /// </summary>
        string HiveMetastoreDbConnectionPasswordSecret { get; set; }
        /// <summary>Connection string for hive metastore database.</summary>
        string HiveMetastoreDbConnectionUrl { get; set; }
        /// <summary>User name for database connection.</summary>
        string HiveMetastoreDbConnectionUserName { get; set; }
        /// <summary>Job Manager container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition JobManager { get; set; }
        /// <summary>The required CPU.</summary>
        float JobManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long JobManagerMemory { get; set; }
        /// <summary>
        /// Job specifications for flink clusters in application deployment mode. The specification is immutable even if job properties
        /// are changed by calling the RunJob API, please use the ListJob API to get the latest job information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkJobProfile JobSpec { get; set; }
        /// <summary>
        /// A string property representing additional JVM arguments for the Flink job. It should be space separated value.
        /// </summary>
        string JobSpecArg { get; set; }
        /// <summary>
        /// A string property that specifies the entry class for the Flink job. If not specified, the entry point is auto-detected
        /// from the flink job jar package.
        /// </summary>
        string JobSpecEntryClass { get; set; }
        /// <summary>A string property that represents the name of the job JAR.</summary>
        string JobSpecJarName { get; set; }
        /// <summary>A string property that specifies the directory where the job JAR is located.</summary>
        string JobSpecJobJarDirectory { get; set; }
        /// <summary>A string property that represents the name of the savepoint for the Flink job</summary>
        string JobSpecSavePointName { get; set; }
        /// <summary>
        /// A string property that indicates the upgrade mode to be performed on the Flink job. It can have one of the following enum
        /// values => STATELESS_UPDATE, UPDATE, LAST_STATE_UPDATE.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.PSArgumentCompleterAttribute("STATELESS_UPDATE", "UPDATE", "LAST_STATE_UPDATE")]
        string JobSpecUpgradeMode { get; set; }
        /// <summary>The number of task managers.</summary>
        int? NumReplica { get; set; }
        /// <summary>The storage profile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IFlinkStorageProfile Storage { get; set; }
        /// <summary>Storage key is only required for wasb(s) storage.</summary>
        string StorageStoragekey { get; set; }
        /// <summary>Storage account uri which is used for savepoint and checkpoint state.</summary>
        string StorageUri { get; set; }
        /// <summary>Task Manager container/ process CPU and memory requirements</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HdInsightOnAks.Models.IComputeResourceDefinition TaskManager { get; set; }
        /// <summary>The required CPU.</summary>
        float TaskManagerCpu { get; set; }
        /// <summary>The required memory in MB, Container memory will be 110 percentile</summary>
        long TaskManagerMemory { get; set; }

    }
}