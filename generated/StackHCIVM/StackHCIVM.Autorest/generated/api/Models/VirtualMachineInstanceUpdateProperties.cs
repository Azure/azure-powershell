// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Extensions;

    /// <summary>Defines the resource properties for the update.</summary>
    public partial class VirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="HardwareProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdate _hardwareProfile;

        /// <summary>
        /// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdate HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.HardwareProfileUpdate()); set => this._hardwareProfile = value; }

        /// <summary>RAM in MB for the virtual machine instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public long? HardwareProfileMemoryMb { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).MemoryMb; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).MemoryMb = value ?? default(long); }

        /// <summary>number of processors for the virtual machine instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public int? HardwareProfileProcessor { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).Processor; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).Processor = value ?? default(int); }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string HardwareProfileVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdateInternal)HardwareProfile).VMSize = value ?? null; }

        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public bool? LinuxConfigurationProvisionVMAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfigurationProvisionVMAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfigurationProvisionVMAgent = value ?? default(bool); }

        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public bool? LinuxConfigurationProvisionVMConfigAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfigurationProvisionVMConfigAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfigurationProvisionVMConfigAgent = value ?? default(bool); }

        /// <summary>Internal Acessors for HardwareProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.HardwareProfile { get => (this._hardwareProfile = this._hardwareProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.HardwareProfileUpdate()); set { {_hardwareProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.NetworkProfileUpdate()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for OSProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.OSProfileUpdate()); set { {_oSProfile = value;} } }

        /// <summary>Internal Acessors for OSProfileLinuxConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateLinuxConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.OSProfileLinuxConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).LinuxConfiguration = value; }

        /// <summary>Internal Acessors for OSProfileWindowsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateWindowsConfiguration Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.OSProfileWindowsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowsConfiguration = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdate Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualMachineInstanceUpdatePropertiesInternal.StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.StorageProfileUpdate()); set { {_storageProfile = value;} } }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdate _networkProfile;

        /// <summary>
        /// NetworkProfile - describes the network update configuration the virtual machine instance
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdate NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.NetworkProfileUpdate()); set => this._networkProfile = value; }

        /// <summary>
        /// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateNetworkInterfacesItem> NetworkProfileNetworkInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateInternal)NetworkProfile).NetworkInterface = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="OSProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdate _oSProfile;

        /// <summary>OsProfile - describes the update configuration of the operating system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdate OSProfile { get => (this._oSProfile = this._oSProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.OSProfileUpdate()); set => this._oSProfile = value; }

        /// <summary>ComputerName - name of the computer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string OSProfileComputerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).ComputerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).ComputerName = value ?? null; }

        /// <summary>Backing field for <see cref="StorageProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdate _storageProfile;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdate StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.StorageProfileUpdate()); set => this._storageProfile = value; }

        /// <summary>adds data disks to the virtual machine instance for the update call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateDataDisksItem> StorageProfileDataDisk { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateInternal)StorageProfile).DataDisk; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateInternal)StorageProfile).DataDisk = value ?? null /* arrayOf */; }

        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public bool? WindowConfigurationProvisionVMAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowConfigurationProvisionVMAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowConfigurationProvisionVMAgent = value ?? default(bool); }

        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public bool? WindowConfigurationProvisionVMConfigAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowConfigurationProvisionVMConfigAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateInternal)OSProfile).WindowConfigurationProvisionVMConfigAgent = value ?? default(bool); }

        /// <summary>Creates an new <see cref="VirtualMachineInstanceUpdateProperties" /> instance.</summary>
        public VirtualMachineInstanceUpdateProperties()
        {

        }
    }
    /// Defines the resource properties for the update.
    public partial interface IVirtualMachineInstanceUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.IJsonSerializable
    {
        /// <summary>RAM in MB for the virtual machine instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"RAM in MB for the virtual machine instance",
        SerializedName = @"memoryMB",
        PossibleTypes = new [] { typeof(long) })]
        long? HardwareProfileMemoryMb { get; set; }
        /// <summary>number of processors for the virtual machine instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"number of processors for the virtual machine instance",
        SerializedName = @"processors",
        PossibleTypes = new [] { typeof(int) })]
        int? HardwareProfileProcessor { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Default", "Standard_A2_v2", "Standard_A4_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1", "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12", "Standard_K8S5_v1", "Custom")]
        string HardwareProfileVMSize { get; set; }
        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.",
        SerializedName = @"provisionVMAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.",
        SerializedName = @"provisionVMConfigAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxConfigurationProvisionVMConfigAgent { get; set; }
        /// <summary>
        /// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance",
        SerializedName = @"networkInterfaces",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateNetworkInterfacesItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateNetworkInterfacesItem> NetworkProfileNetworkInterface { get; set; }
        /// <summary>ComputerName - name of the computer</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ComputerName - name of the computer",
        SerializedName = @"computerName",
        PossibleTypes = new [] { typeof(string) })]
        string OSProfileComputerName { get; set; }
        /// <summary>adds data disks to the virtual machine instance for the update call</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"adds data disks to the virtual machine instance for the update call",
        SerializedName = @"dataDisks",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateDataDisksItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateDataDisksItem> StorageProfileDataDisk { get; set; }
        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation process.",
        SerializedName = @"provisionVMAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.",
        SerializedName = @"provisionVMConfigAgent",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowConfigurationProvisionVMConfigAgent { get; set; }

    }
    /// Defines the resource properties for the update.
    internal partial interface IVirtualMachineInstanceUpdatePropertiesInternal

    {
        /// <summary>
        /// HardwareProfile - Specifies the hardware settings for the virtual machine instance.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IHardwareProfileUpdate HardwareProfile { get; set; }
        /// <summary>RAM in MB for the virtual machine instance</summary>
        long? HardwareProfileMemoryMb { get; set; }
        /// <summary>number of processors for the virtual machine instance</summary>
        int? HardwareProfileProcessor { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Default", "Standard_A2_v2", "Standard_A4_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3", "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2", "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1", "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12", "Standard_K8S5_v1", "Custom")]
        string HardwareProfileVMSize { get; set; }
        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        bool? LinuxConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        bool? LinuxConfigurationProvisionVMConfigAgent { get; set; }
        /// <summary>
        /// NetworkProfile - describes the network update configuration the virtual machine instance
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdate NetworkProfile { get; set; }
        /// <summary>
        /// NetworkInterfaces - list of network interfaces to be attached to the virtual machine instance
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.INetworkProfileUpdateNetworkInterfacesItem> NetworkProfileNetworkInterface { get; set; }
        /// <summary>OsProfile - describes the update configuration of the operating system</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdate OSProfile { get; set; }
        /// <summary>ComputerName - name of the computer</summary>
        string OSProfileComputerName { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateLinuxConfiguration OSProfileLinuxConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IOSProfileUpdateWindowsConfiguration OSProfileWindowsConfiguration { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdate StorageProfile { get; set; }
        /// <summary>adds data disks to the virtual machine instance for the update call</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IStorageProfileUpdateDataDisksItem> StorageProfileDataDisk { get; set; }
        /// <summary>
        /// Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine instance creation
        /// process.
        /// </summary>
        bool? WindowConfigurationProvisionVMAgent { get; set; }
        /// <summary>
        /// Used to indicate whether the VM Config Agent should be installed during the virtual machine creation process.
        /// </summary>
        bool? WindowConfigurationProvisionVMConfigAgent { get; set; }

    }
}