// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Extensions;

    /// <summary>Properties under the virtual hard disk resource</summary>
    public partial class VirtualHardDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BlockSizeByte" /> property.</summary>
        private int? _blockSizeByte;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public int? BlockSizeByte { get => this._blockSizeByte; set => this._blockSizeByte = value; }

        /// <summary>Backing field for <see cref="ContainerId" /> property.</summary>
        private string _containerId;

        /// <summary>Storage ContainerID of the storage container to be used for VHD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public string ContainerId { get => this._containerId; set => this._containerId = value; }

        /// <summary>Backing field for <see cref="DiskFileFormat" /> property.</summary>
        private string _diskFileFormat;

        /// <summary>The format of the actual VHD file [vhd, vhdx]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public string DiskFileFormat { get => this._diskFileFormat; set => this._diskFileFormat = value; }

        /// <summary>Backing field for <see cref="DiskSizeGb" /> property.</summary>
        private long? _diskSizeGb;

        /// <summary>Size of the disk in GB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public long? DiskSizeGb { get => this._diskSizeGb; set => this._diskSizeGb = value; }

        /// <summary>Backing field for <see cref="Dynamic" /> property.</summary>
        private bool? _dynamic;

        /// <summary>Boolean for enabling dynamic sizing on the virtual hard disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public bool? Dynamic { get => this._dynamic; set => this._dynamic = value; }

        /// <summary>Backing field for <see cref="HyperVGeneration" /> property.</summary>
        private string _hyperVGeneration;

        /// <summary>The hypervisor generation of the Virtual Machine [V1, V2]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public string HyperVGeneration { get => this._hyperVGeneration; set => this._hyperVGeneration = value; }

        /// <summary>Backing field for <see cref="LogicalSectorByte" /> property.</summary>
        private int? _logicalSectorByte;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public int? LogicalSectorByte { get => this._logicalSectorByte; set => this._logicalSectorByte = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatus Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.VirtualHardDiskStatus()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusProvisioningStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusProvisioningStatus Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskPropertiesInternal.StatusProvisioningStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatus = value; }

        /// <summary>Backing field for <see cref="PhysicalSectorByte" /> property.</summary>
        private int? _physicalSectorByte;

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public int? PhysicalSectorByte { get => this._physicalSectorByte; set => this._physicalSectorByte = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the virtual hard disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string ProvisioningStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatusStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatusStatus = value ?? null; }

        /// <summary>The ID of the operation performed on the virtual hard disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string ProvisioningStatusOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatusOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ProvisioningStatusOperationId = value ?? null; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatus _status;

        /// <summary>The observed state of virtual hard disks</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.VirtualHardDiskStatus()); }

        /// <summary>VirtualHardDisk provisioning error code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string StatusErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ErrorCode = value ?? null; }

        /// <summary>Descriptive error message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Origin(Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PropertyOrigin.Inlined)]
        public string StatusErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusInternal)Status).ErrorMessage = value ?? null; }

        /// <summary>Creates an new <see cref="VirtualHardDiskProperties" /> instance.</summary>
        public VirtualHardDiskProperties()
        {

        }
    }
    /// Properties under the virtual hard disk resource
    public partial interface IVirtualHardDiskProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"blockSizeBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? BlockSizeByte { get; set; }
        /// <summary>Storage ContainerID of the storage container to be used for VHD</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Storage ContainerID of the storage container to be used for VHD",
        SerializedName = @"containerId",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerId { get; set; }
        /// <summary>The format of the actual VHD file [vhd, vhdx]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The format of the actual VHD file [vhd, vhdx]",
        SerializedName = @"diskFileFormat",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("vhdx", "vhd")]
        string DiskFileFormat { get; set; }
        /// <summary>Size of the disk in GB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Size of the disk in GB",
        SerializedName = @"diskSizeGB",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskSizeGb { get; set; }
        /// <summary>Boolean for enabling dynamic sizing on the virtual hard disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Boolean for enabling dynamic sizing on the virtual hard disk",
        SerializedName = @"dynamic",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Dynamic { get; set; }
        /// <summary>The hypervisor generation of the Virtual Machine [V1, V2]</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The hypervisor generation of the Virtual Machine [V1, V2]",
        SerializedName = @"hyperVGeneration",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("V1", "V2")]
        string HyperVGeneration { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"logicalSectorBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? LogicalSectorByte { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"physicalSectorBytes",
        PossibleTypes = new [] { typeof(int) })]
        int? PhysicalSectorByte { get; set; }
        /// <summary>Provisioning state of the virtual hard disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the virtual hard disk.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Succeeded", "Failed", "InProgress", "Accepted", "Deleting", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>
        /// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Succeeded", "Failed", "InProgress")]
        string ProvisioningStatus { get;  }
        /// <summary>The ID of the operation performed on the virtual hard disk</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The ID of the operation performed on the virtual hard disk",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningStatusOperationId { get;  }
        /// <summary>VirtualHardDisk provisioning error code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"VirtualHardDisk provisioning error code",
        SerializedName = @"errorCode",
        PossibleTypes = new [] { typeof(string) })]
        string StatusErrorCode { get;  }
        /// <summary>Descriptive error message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Descriptive error message",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusErrorMessage { get;  }

    }
    /// Properties under the virtual hard disk resource
    internal partial interface IVirtualHardDiskPropertiesInternal

    {
        int? BlockSizeByte { get; set; }
        /// <summary>Storage ContainerID of the storage container to be used for VHD</summary>
        string ContainerId { get; set; }
        /// <summary>The format of the actual VHD file [vhd, vhdx]</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("vhdx", "vhd")]
        string DiskFileFormat { get; set; }
        /// <summary>Size of the disk in GB</summary>
        long? DiskSizeGb { get; set; }
        /// <summary>Boolean for enabling dynamic sizing on the virtual hard disk</summary>
        bool? Dynamic { get; set; }
        /// <summary>The hypervisor generation of the Virtual Machine [V1, V2]</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("V1", "V2")]
        string HyperVGeneration { get; set; }

        int? LogicalSectorByte { get; set; }

        int? PhysicalSectorByte { get; set; }
        /// <summary>Provisioning state of the virtual hard disk.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Succeeded", "Failed", "InProgress", "Accepted", "Deleting", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// The status of the operation performed on the virtual hard disk [Succeeded, Failed, InProgress]
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.PSArgumentCompleterAttribute("Succeeded", "Failed", "InProgress")]
        string ProvisioningStatus { get; set; }
        /// <summary>The ID of the operation performed on the virtual hard disk</summary>
        string ProvisioningStatusOperationId { get; set; }
        /// <summary>The observed state of virtual hard disks</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatus Status { get; set; }
        /// <summary>VirtualHardDisk provisioning error code</summary>
        string StatusErrorCode { get; set; }
        /// <summary>Descriptive error message</summary>
        string StatusErrorMessage { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.StackHCIVM.Models.IVirtualHardDiskStatusProvisioningStatus StatusProvisioningStatus { get; set; }

    }
}