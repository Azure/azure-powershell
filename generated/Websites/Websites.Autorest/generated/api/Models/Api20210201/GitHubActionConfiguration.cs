// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Extensions;

    /// <summary>The GitHub action configuration.</summary>
    public partial class GitHubActionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionConfigurationInternal
    {

        /// <summary>Backing field for <see cref="CodeConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfiguration _codeConfiguration;

        /// <summary>GitHub Action code configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfiguration CodeConfiguration { get => (this._codeConfiguration = this._codeConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.GitHubActionCodeConfiguration()); set => this._codeConfiguration = value; }

        /// <summary>
        /// Runtime stack is used to determine the workflow file content for code base apps.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string CodeConfigurationRuntimeStack { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfigurationInternal)CodeConfiguration).RuntimeStack; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfigurationInternal)CodeConfiguration).RuntimeStack = value ?? null; }

        /// <summary>
        /// Runtime version is used to determine what build version to set in the workflow file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string CodeConfigurationRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfigurationInternal)CodeConfiguration).RuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfigurationInternal)CodeConfiguration).RuntimeVersion = value ?? null; }

        /// <summary>Backing field for <see cref="ContainerConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfiguration _containerConfiguration;

        /// <summary>GitHub Action container configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfiguration ContainerConfiguration { get => (this._containerConfiguration = this._containerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.GitHubActionContainerConfiguration()); set => this._containerConfiguration = value; }

        /// <summary>The image name for the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string ContainerConfigurationImageName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).ImageName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).ImageName = value ?? null; }

        /// <summary>The password used to upload the image to the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string ContainerConfigurationPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).Password = value ?? null; }

        /// <summary>The server URL for the container registry where the build will be hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string ContainerConfigurationServerUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).ServerUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).ServerUrl = value ?? null; }

        /// <summary>The username used to upload the image to the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string ContainerConfigurationUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfigurationInternal)ContainerConfiguration).Username = value ?? null; }

        /// <summary>Backing field for <see cref="GenerateWorkflowFile" /> property.</summary>
        private bool? _generateWorkflowFile;

        /// <summary>
        /// Workflow option to determine whether the workflow file should be generated and written to the repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        public bool? GenerateWorkflowFile { get => this._generateWorkflowFile; set => this._generateWorkflowFile = value; }

        /// <summary>Backing field for <see cref="IsLinux" /> property.</summary>
        private bool? _isLinux;

        /// <summary>This will help determine the workflow configuration to select.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        public bool? IsLinux { get => this._isLinux; set => this._isLinux = value; }

        /// <summary>Internal Acessors for CodeConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfiguration Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionConfigurationInternal.CodeConfiguration { get => (this._codeConfiguration = this._codeConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.GitHubActionCodeConfiguration()); set { {_codeConfiguration = value;} } }

        /// <summary>Internal Acessors for ContainerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfiguration Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionConfigurationInternal.ContainerConfiguration { get => (this._containerConfiguration = this._containerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.GitHubActionContainerConfiguration()); set { {_containerConfiguration = value;} } }

        /// <summary>Creates an new <see cref="GitHubActionConfiguration" /> instance.</summary>
        public GitHubActionConfiguration()
        {

        }
    }
    /// The GitHub action configuration.
    public partial interface IGitHubActionConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Runtime stack is used to determine the workflow file content for code base apps.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime stack is used to determine the workflow file content for code base apps.",
        SerializedName = @"runtimeStack",
        PossibleTypes = new [] { typeof(string) })]
        string CodeConfigurationRuntimeStack { get; set; }
        /// <summary>
        /// Runtime version is used to determine what build version to set in the workflow file.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Runtime version is used to determine what build version to set in the workflow file.",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CodeConfigurationRuntimeVersion { get; set; }
        /// <summary>The image name for the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The image name for the build.",
        SerializedName = @"imageName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerConfigurationImageName { get; set; }
        /// <summary>The password used to upload the image to the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password used to upload the image to the container registry.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerConfigurationPassword { get; set; }
        /// <summary>The server URL for the container registry where the build will be hosted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The server URL for the container registry where the build will be hosted.",
        SerializedName = @"serverUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerConfigurationServerUrl { get; set; }
        /// <summary>The username used to upload the image to the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The username used to upload the image to the container registry.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerConfigurationUsername { get; set; }
        /// <summary>
        /// Workflow option to determine whether the workflow file should be generated and written to the repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Workflow option to determine whether the workflow file should be generated and written to the repository.",
        SerializedName = @"generateWorkflowFile",
        PossibleTypes = new [] { typeof(bool) })]
        bool? GenerateWorkflowFile { get; set; }
        /// <summary>This will help determine the workflow configuration to select.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This will help determine the workflow configuration to select.",
        SerializedName = @"isLinux",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsLinux { get; set; }

    }
    /// The GitHub action configuration.
    internal partial interface IGitHubActionConfigurationInternal

    {
        /// <summary>GitHub Action code configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionCodeConfiguration CodeConfiguration { get; set; }
        /// <summary>
        /// Runtime stack is used to determine the workflow file content for code base apps.
        /// </summary>
        string CodeConfigurationRuntimeStack { get; set; }
        /// <summary>
        /// Runtime version is used to determine what build version to set in the workflow file.
        /// </summary>
        string CodeConfigurationRuntimeVersion { get; set; }
        /// <summary>GitHub Action container configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IGitHubActionContainerConfiguration ContainerConfiguration { get; set; }
        /// <summary>The image name for the build.</summary>
        string ContainerConfigurationImageName { get; set; }
        /// <summary>The password used to upload the image to the container registry.</summary>
        string ContainerConfigurationPassword { get; set; }
        /// <summary>The server URL for the container registry where the build will be hosted.</summary>
        string ContainerConfigurationServerUrl { get; set; }
        /// <summary>The username used to upload the image to the container registry.</summary>
        string ContainerConfigurationUsername { get; set; }
        /// <summary>
        /// Workflow option to determine whether the workflow file should be generated and written to the repository.
        /// </summary>
        bool? GenerateWorkflowFile { get; set; }
        /// <summary>This will help determine the workflow configuration to select.</summary>
        bool? IsLinux { get; set; }

    }
}