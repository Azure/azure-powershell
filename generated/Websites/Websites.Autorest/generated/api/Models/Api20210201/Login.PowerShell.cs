// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.PowerShell;

    /// <summary>
    /// The configuration settings of the login flow of users using App Service Authentication/Authorization.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(LoginTypeConverter))]
    public partial class Login
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.Login"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILogin" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILogin DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Login(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.Login"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILogin" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILogin DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Login(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Login" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Login" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILogin FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.Login"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Login(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Route"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Route = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginRoutes) content.GetValueForProperty("Route",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Route, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.LoginRoutesTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStore = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ITokenStore) content.GetValueForProperty("TokenStore",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStore, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.TokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("CookieExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpiration = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ICookieExpiration) content.GetValueForProperty("CookieExpiration",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpiration, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.CookieExpirationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Nonce"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Nonce = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INonce) content.GetValueForProperty("Nonce",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Nonce, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.NonceTypeConverter.ConvertFrom);
            }
            if (content.Contains("PreserveUrlFragmentsForLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).PreserveUrlFragmentsForLogin = (bool?) content.GetValueForProperty("PreserveUrlFragmentsForLogin",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).PreserveUrlFragmentsForLogin, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AllowedExternalRedirectUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AllowedExternalRedirectUrl = (string[]) content.GetValueForProperty("AllowedExternalRedirectUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AllowedExternalRedirectUrl, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CookieExpirationConvention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationConvention = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.CookieExpirationConvention?) content.GetValueForProperty("CookieExpirationConvention",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationConvention, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.CookieExpirationConvention.CreateFrom);
            }
            if (content.Contains("RouteLogoutEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).RouteLogoutEndpoint = (string) content.GetValueForProperty("RouteLogoutEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).RouteLogoutEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("TokenStoreFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemTokenStore) content.GetValueForProperty("TokenStoreFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemTokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStoreAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IBlobStorageTokenStore) content.GetValueForProperty("TokenStoreAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.BlobStorageTokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStoreEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreEnabled = (bool?) content.GetValueForProperty("TokenStoreEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TokenStoreTokenRefreshExtensionHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreTokenRefreshExtensionHour = (double?) content.GetValueForProperty("TokenStoreTokenRefreshExtensionHour",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreTokenRefreshExtensionHour, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("CookieExpirationTimeToExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationTimeToExpiration = (string) content.GetValueForProperty("CookieExpirationTimeToExpiration",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationTimeToExpiration, global::System.Convert.ToString);
            }
            if (content.Contains("NonceValidateNonce"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceValidateNonce = (bool?) content.GetValueForProperty("NonceValidateNonce",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceValidateNonce, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NonceExpirationInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceExpirationInterval = (string) content.GetValueForProperty("NonceExpirationInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceExpirationInterval, global::System.Convert.ToString);
            }
            if (content.Contains("FileSystemDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).FileSystemDirectory = (string) content.GetValueForProperty("FileSystemDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).FileSystemDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobStorageSasUrlSettingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AzureBlobStorageSasUrlSettingName = (string) content.GetValueForProperty("AzureBlobStorageSasUrlSettingName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AzureBlobStorageSasUrlSettingName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.Login"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Login(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Route"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Route = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginRoutes) content.GetValueForProperty("Route",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Route, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.LoginRoutesTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStore = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ITokenStore) content.GetValueForProperty("TokenStore",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStore, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.TokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("CookieExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpiration = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ICookieExpiration) content.GetValueForProperty("CookieExpiration",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpiration, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.CookieExpirationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Nonce"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Nonce = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.INonce) content.GetValueForProperty("Nonce",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).Nonce, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.NonceTypeConverter.ConvertFrom);
            }
            if (content.Contains("PreserveUrlFragmentsForLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).PreserveUrlFragmentsForLogin = (bool?) content.GetValueForProperty("PreserveUrlFragmentsForLogin",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).PreserveUrlFragmentsForLogin, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AllowedExternalRedirectUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AllowedExternalRedirectUrl = (string[]) content.GetValueForProperty("AllowedExternalRedirectUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AllowedExternalRedirectUrl, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CookieExpirationConvention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationConvention = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.CookieExpirationConvention?) content.GetValueForProperty("CookieExpirationConvention",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationConvention, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.CookieExpirationConvention.CreateFrom);
            }
            if (content.Contains("RouteLogoutEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).RouteLogoutEndpoint = (string) content.GetValueForProperty("RouteLogoutEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).RouteLogoutEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("TokenStoreFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemTokenStore) content.GetValueForProperty("TokenStoreFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemTokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStoreAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IBlobStorageTokenStore) content.GetValueForProperty("TokenStoreAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.BlobStorageTokenStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("TokenStoreEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreEnabled = (bool?) content.GetValueForProperty("TokenStoreEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TokenStoreTokenRefreshExtensionHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreTokenRefreshExtensionHour = (double?) content.GetValueForProperty("TokenStoreTokenRefreshExtensionHour",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).TokenStoreTokenRefreshExtensionHour, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("CookieExpirationTimeToExpiration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationTimeToExpiration = (string) content.GetValueForProperty("CookieExpirationTimeToExpiration",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).CookieExpirationTimeToExpiration, global::System.Convert.ToString);
            }
            if (content.Contains("NonceValidateNonce"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceValidateNonce = (bool?) content.GetValueForProperty("NonceValidateNonce",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceValidateNonce, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("NonceExpirationInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceExpirationInterval = (string) content.GetValueForProperty("NonceExpirationInterval",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).NonceExpirationInterval, global::System.Convert.ToString);
            }
            if (content.Contains("FileSystemDirectory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).FileSystemDirectory = (string) content.GetValueForProperty("FileSystemDirectory",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).FileSystemDirectory, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobStorageSasUrlSettingName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AzureBlobStorageSasUrlSettingName = (string) content.GetValueForProperty("AzureBlobStorageSasUrlSettingName",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ILoginInternal)this).AzureBlobStorageSasUrlSettingName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The configuration settings of the login flow of users using App Service Authentication/Authorization.
    [System.ComponentModel.TypeConverter(typeof(LoginTypeConverter))]
    public partial interface ILogin

    {

    }
}