// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Extensions;

    /// <summary>Description of site key vault references.</summary>
    public partial class ApiKvReference :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReference,
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResource __proxyOnlyResource = new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.ProxyOnlyResource();

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string ActiveVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).ActiveVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).ActiveVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Detail = value ?? null; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; }

        /// <summary>Principal Id of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string IdentityTypePrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypePrincipalId; }

        /// <summary>Tenant of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string IdentityTypeTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeTenantId; }

        /// <summary>
        /// The list of user assigned identities associated with the resource. The user identity dictionary key references will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityUserAssignedIdentities IdentityTypeUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeUserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>Kind of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type = value; }

        /// <summary>Internal Acessors for IdentityTypePrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceInternal.IdentityTypePrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypePrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypePrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTypeTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceInternal.IdentityTypeTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeTenantId = value; }

        /// <summary>Internal Acessors for PropertiesIdentityType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceInternal.PropertiesIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceProperties Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiKvReferenceProperties()); set { {_property = value;} } }

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; }

        /// <summary>Type of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedServiceIdentityType? PropertiesIdentityTypeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).IdentityTypeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedServiceIdentityType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceProperties _property;

        /// <summary>ApiKVReference resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApiKvReferenceProperties()); set => this._property = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string Reference { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Reference; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Reference = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string SecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).SecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).SecretName = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string SecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).SecretVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).SecretVersion = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ConfigReferenceSource? Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Source = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ConfigReferenceSource)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ResolveStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ResolveStatus)""); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Inlined)]
        public string VaultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).VaultName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferencePropertiesInternal)Property).VaultName = value ?? null; }

        /// <summary>Creates an new <see cref="ApiKvReference" /> instance.</summary>
        public ApiKvReference()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyOnlyResource), __proxyOnlyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyOnlyResource), __proxyOnlyResource);
        }
    }
    /// Description of site key vault references.
    public partial interface IApiKvReference :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResource
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"activeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ActiveVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(string) })]
        string Detail { get; set; }
        /// <summary>Principal Id of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Principal Id of managed service identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTypePrincipalId { get;  }
        /// <summary>Tenant of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tenant of managed service identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTypeTenantId { get;  }
        /// <summary>
        /// The list of user assigned identities associated with the resource. The user identity dictionary key references will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityUserAssignedIdentities IdentityTypeUserAssignedIdentity { get; set; }
        /// <summary>Type of managed service identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedServiceIdentityType? PropertiesIdentityTypeType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"reference",
        PossibleTypes = new [] { typeof(string) })]
        string Reference { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"secretName",
        PossibleTypes = new [] { typeof(string) })]
        string SecretName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"secretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SecretVersion { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ConfigReferenceSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ConfigReferenceSource? Source { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ResolveStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ResolveStatus? Status { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"vaultName",
        PossibleTypes = new [] { typeof(string) })]
        string VaultName { get; set; }

    }
    /// Description of site key vault references.
    internal partial interface IApiKvReferenceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20201201.IProxyOnlyResourceInternal
    {
        string ActiveVersion { get; set; }

        string Detail { get; set; }
        /// <summary>Principal Id of managed service identity.</summary>
        string IdentityTypePrincipalId { get; set; }
        /// <summary>Tenant of managed service identity.</summary>
        string IdentityTypeTenantId { get; set; }
        /// <summary>
        /// The list of user assigned identities associated with the resource. The user identity dictionary key references will be
        /// ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityUserAssignedIdentities IdentityTypeUserAssignedIdentity { get; set; }
        /// <summary>Managed service identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IManagedServiceIdentityAutoGenerated PropertiesIdentityType { get; set; }
        /// <summary>Type of managed service identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ManagedServiceIdentityType? PropertiesIdentityTypeType { get; set; }
        /// <summary>ApiKVReference resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApiKvReferenceProperties Property { get; set; }

        string Reference { get; set; }

        string SecretName { get; set; }

        string SecretVersion { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ConfigReferenceSource? Source { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.ResolveStatus? Status { get; set; }

        string VaultName { get; set; }

    }
}