// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.PowerShell;

    /// <summary>SiteLogsConfig resource specific properties</summary>
    [System.ComponentModel.TypeConverter(typeof(SiteLogsConfigPropertiesTypeConverter))]
    public partial class SiteLogsConfigProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLogsConfigProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SiteLogsConfigProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLogsConfigProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SiteLogsConfigProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SiteLogsConfigProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SiteLogsConfigProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLogsConfigProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SiteLogsConfigProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ApplicationLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLog = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApplicationLogsConfig) content.GetValueForProperty("ApplicationLog",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLog, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLog = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHttpLogsConfig) content.GetValueForProperty("HttpLog",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLog, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.HttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FailedRequestsTracing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestsTracing = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IEnabledConfig) content.GetValueForProperty("FailedRequestsTracing",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestsTracing, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.EnabledConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DetailedErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IEnabledConfig) content.GetValueForProperty("DetailedErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.EnabledConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemApplicationLogsConfig) content.GetValueForProperty("ApplicationLogFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogAzureTableStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureTableStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureTableStorageApplicationLogsConfig) content.GetValueForProperty("ApplicationLogAzureTableStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureTableStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureTableStorageApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureBlobStorageApplicationLogsConfig) content.GetValueForProperty("ApplicationLogAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureBlobStorageApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLogFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemHttpLogsConfig) content.GetValueForProperty("HttpLogFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemHttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLogAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureBlobStorageHttpLogsConfig) content.GetValueForProperty("HttpLogAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureBlobStorageHttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FailedRequestTracingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestTracingEnabled = (bool?) content.GetValueForProperty("FailedRequestTracingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestTracingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DetailedErrorMessageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessageEnabled = (bool?) content.GetValueForProperty("DetailedErrorMessageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileSystemLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("FileSystemLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("AzureTableStorageLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("AzureTableStorageLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("AzureTableStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageSasUrl = (string) content.GetValueForProperty("AzureTableStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobStorageLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("AzureBlobStorageLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("ApplicationLogsAzureBlobStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageSasUrl = (string) content.GetValueForProperty("ApplicationLogsAzureBlobStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationLogsAzureBlobStorageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageRetentionInDay = (int?) content.GetValueForProperty("ApplicationLogsAzureBlobStorageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemRetentionInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInMb = (int?) content.GetValueForProperty("FileSystemRetentionInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInDay = (int?) content.GetValueForProperty("FileSystemRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemEnabled = (bool?) content.GetValueForProperty("FileSystemEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpLogsAzureBlobStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageSasUrl = (string) content.GetValueForProperty("HttpLogsAzureBlobStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HttpLogsAzureBlobStorageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageRetentionInDay = (int?) content.GetValueForProperty("HttpLogsAzureBlobStorageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AzureBlobStorageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageEnabled = (bool?) content.GetValueForProperty("AzureBlobStorageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.SiteLogsConfigProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SiteLogsConfigProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ApplicationLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLog = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IApplicationLogsConfig) content.GetValueForProperty("ApplicationLog",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLog, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLog"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLog = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IHttpLogsConfig) content.GetValueForProperty("HttpLog",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLog, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.HttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FailedRequestsTracing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestsTracing = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IEnabledConfig) content.GetValueForProperty("FailedRequestsTracing",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestsTracing, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.EnabledConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DetailedErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IEnabledConfig) content.GetValueForProperty("DetailedErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.EnabledConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemApplicationLogsConfig) content.GetValueForProperty("ApplicationLogFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogAzureTableStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureTableStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureTableStorageApplicationLogsConfig) content.GetValueForProperty("ApplicationLogAzureTableStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureTableStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureTableStorageApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ApplicationLogAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureBlobStorageApplicationLogsConfig) content.GetValueForProperty("ApplicationLogAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureBlobStorageApplicationLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLogFileSystem"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogFileSystem = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IFileSystemHttpLogsConfig) content.GetValueForProperty("HttpLogFileSystem",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogFileSystem, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.FileSystemHttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HttpLogAzureBlobStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogAzureBlobStorage = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IAzureBlobStorageHttpLogsConfig) content.GetValueForProperty("HttpLogAzureBlobStorage",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogAzureBlobStorage, Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.AzureBlobStorageHttpLogsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FailedRequestTracingEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestTracingEnabled = (bool?) content.GetValueForProperty("FailedRequestTracingEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FailedRequestTracingEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DetailedErrorMessageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessageEnabled = (bool?) content.GetValueForProperty("DetailedErrorMessageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).DetailedErrorMessageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileSystemLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("FileSystemLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("AzureTableStorageLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("AzureTableStorageLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("AzureTableStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageSasUrl = (string) content.GetValueForProperty("AzureTableStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureTableStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("AzureBlobStorageLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageLevel = (Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel?) content.GetValueForProperty("AzureBlobStorageLevel",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageLevel, Microsoft.Azure.PowerShell.Cmdlets.Websites.Support.LogLevel.CreateFrom);
            }
            if (content.Contains("ApplicationLogsAzureBlobStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageSasUrl = (string) content.GetValueForProperty("ApplicationLogsAzureBlobStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ApplicationLogsAzureBlobStorageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageRetentionInDay = (int?) content.GetValueForProperty("ApplicationLogsAzureBlobStorageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).ApplicationLogsAzureBlobStorageRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemRetentionInMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInMb = (int?) content.GetValueForProperty("FileSystemRetentionInMb",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInDay = (int?) content.GetValueForProperty("FileSystemRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FileSystemEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemEnabled = (bool?) content.GetValueForProperty("FileSystemEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).FileSystemEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HttpLogsAzureBlobStorageSasUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageSasUrl = (string) content.GetValueForProperty("HttpLogsAzureBlobStorageSasUrl",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageSasUrl, global::System.Convert.ToString);
            }
            if (content.Contains("HttpLogsAzureBlobStorageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageRetentionInDay = (int?) content.GetValueForProperty("HttpLogsAzureBlobStorageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).HttpLogsAzureBlobStorageRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AzureBlobStorageEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageEnabled = (bool?) content.GetValueForProperty("AzureBlobStorageEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.ISiteLogsConfigPropertiesInternal)this).AzureBlobStorageEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// SiteLogsConfig resource specific properties
    [System.ComponentModel.TypeConverter(typeof(SiteLogsConfigPropertiesTypeConverter))]
    public partial interface ISiteLogsConfigProperties

    {

    }
}