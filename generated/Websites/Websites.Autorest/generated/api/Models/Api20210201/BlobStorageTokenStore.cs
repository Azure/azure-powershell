// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Extensions;

    /// <summary>
    /// The configuration settings of the storage of the tokens if blob storage is used.
    /// </summary>
    public partial class BlobStorageTokenStore :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IBlobStorageTokenStore,
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Models.Api20210201.IBlobStorageTokenStoreInternal
    {

        /// <summary>Backing field for <see cref="SasUrlSettingName" /> property.</summary>
        private string _sasUrlSettingName;

        /// <summary>
        /// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Origin(Microsoft.Azure.PowerShell.Cmdlets.Websites.PropertyOrigin.Owned)]
        public string SasUrlSettingName { get => this._sasUrlSettingName; set => this._sasUrlSettingName = value; }

        /// <summary>Creates an new <see cref="BlobStorageTokenStore" /> instance.</summary>
        public BlobStorageTokenStore()
        {

        }
    }
    /// The configuration settings of the storage of the tokens if blob storage is used.
    public partial interface IBlobStorageTokenStore :
        Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Websites.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the app setting containing the SAS URL of the blob storage containing the tokens.",
        SerializedName = @"sasUrlSettingName",
        PossibleTypes = new [] { typeof(string) })]
        string SasUrlSettingName { get; set; }

    }
    /// The configuration settings of the storage of the tokens if blob storage is used.
    internal partial interface IBlobStorageTokenStoreInternal

    {
        /// <summary>
        /// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
        /// </summary>
        string SasUrlSettingName { get; set; }

    }
}