// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Extensions;

    /// <summary>Properties of event handler.</summary>
    public partial class EventHandler :
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IEventHandler,
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IEventHandlerInternal
    {

        /// <summary>Backing field for <see cref="Auth" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettings _auth;

        /// <summary>Upstream auth settings. If not set, no auth is used for upstream messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettings Auth { get => (this._auth = this._auth ?? new Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.UpstreamAuthSettings()); set => this._auth = value; }

        /// <summary>Upstream auth type enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Support.UpstreamAuthType? AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Support.UpstreamAuthType)""); }

        /// <summary>
        /// The Resource indicating the App ID URI of the target resource.
        /// It also appears in the aud (audience) claim of the issued token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Inlined)]
        public string ManagedIdentityResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).ManagedIdentityResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).ManagedIdentityResource = value ?? null; }

        /// <summary>Internal Acessors for Auth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettings Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IEventHandlerInternal.Auth { get => (this._auth = this._auth ?? new Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.UpstreamAuthSettings()); set { {_auth = value;} } }

        /// <summary>Internal Acessors for AuthManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IManagedIdentitySettings Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IEventHandlerInternal.AuthManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).ManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettingsInternal)Auth).ManagedIdentity = value; }

        /// <summary>Backing field for <see cref="SystemEvent" /> property.</summary>
        private string[] _systemEvent;

        /// <summary>
        /// Gets ot sets the list of system events. Valid values contain: 'connect', 'connected', 'disconnected'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Owned)]
        public string[] SystemEvent { get => this._systemEvent; set => this._systemEvent = value; }

        /// <summary>Backing field for <see cref="UrlTemplate" /> property.</summary>
        private string _urlTemplate;

        /// <summary>
        /// Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template,
        /// the value of the EventHandler URL is dynamically calculated when the client request comes in.
        /// For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Owned)]
        public string UrlTemplate { get => this._urlTemplate; set => this._urlTemplate = value; }

        /// <summary>Backing field for <see cref="UserEventPattern" /> property.</summary>
        private string _userEventPattern;

        /// <summary>
        /// Gets or sets the matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        /// 1. "*", it matches any event name
        /// 2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
        /// 3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Owned)]
        public string UserEventPattern { get => this._userEventPattern; set => this._userEventPattern = value; }

        /// <summary>Creates an new <see cref="EventHandler" /> instance.</summary>
        public EventHandler()
        {

        }
    }
    /// Properties of event handler.
    public partial interface IEventHandler :
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.IJsonSerializable
    {
        /// <summary>Upstream auth type enum.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Upstream auth type enum.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Support.UpstreamAuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Support.UpstreamAuthType? AuthType { get; set; }
        /// <summary>
        /// The Resource indicating the App ID URI of the target resource.
        /// It also appears in the aud (audience) claim of the issued token.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Resource indicating the App ID URI of the target resource.
        It also appears in the aud (audience) claim of the issued token.",
        SerializedName = @"resource",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedIdentityResource { get; set; }
        /// <summary>
        /// Gets ot sets the list of system events. Valid values contain: 'connect', 'connected', 'disconnected'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets ot sets the list of system events. Valid values contain: 'connect', 'connected', 'disconnected'.",
        SerializedName = @"systemEvents",
        PossibleTypes = new [] { typeof(string) })]
        string[] SystemEvent { get; set; }
        /// <summary>
        /// Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template,
        /// the value of the EventHandler URL is dynamically calculated when the client request comes in.
        /// For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template, the value of the EventHandler URL is dynamically calculated when the client request comes in.
        For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.",
        SerializedName = @"urlTemplate",
        PossibleTypes = new [] { typeof(string) })]
        string UrlTemplate { get; set; }
        /// <summary>
        /// Gets or sets the matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        /// 1. "*", it matches any event name
        /// 2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
        /// 3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets the matching pattern for event names.
        There are 3 kinds of patterns supported:
            1. ""*"", it matches any event name
            2. Combine multiple events with "","", for example ""event1,event2"", it matches event ""event1"" and ""event2""
            3. A single event name, for example, ""event1"", it matches ""event1""",
        SerializedName = @"userEventPattern",
        PossibleTypes = new [] { typeof(string) })]
        string UserEventPattern { get; set; }

    }
    /// Properties of event handler.
    internal partial interface IEventHandlerInternal

    {
        /// <summary>Upstream auth settings. If not set, no auth is used for upstream messages.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IUpstreamAuthSettings Auth { get; set; }
        /// <summary>Managed identity settings for upstream.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20220801Preview.IManagedIdentitySettings AuthManagedIdentity { get; set; }
        /// <summary>Upstream auth type enum.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Support.UpstreamAuthType? AuthType { get; set; }
        /// <summary>
        /// The Resource indicating the App ID URI of the target resource.
        /// It also appears in the aud (audience) claim of the issued token.
        /// </summary>
        string ManagedIdentityResource { get; set; }
        /// <summary>
        /// Gets ot sets the list of system events. Valid values contain: 'connect', 'connected', 'disconnected'.
        /// </summary>
        string[] SystemEvent { get; set; }
        /// <summary>
        /// Gets or sets the EventHandler URL template. You can use a predefined parameter {hub} and {event} inside the template,
        /// the value of the EventHandler URL is dynamically calculated when the client request comes in.
        /// For example, UrlTemplate can be `http://example.com/api/{hub}/{event}`. The host part can't contains parameters.
        /// </summary>
        string UrlTemplate { get; set; }
        /// <summary>
        /// Gets or sets the matching pattern for event names.
        /// There are 3 kinds of patterns supported:
        /// 1. "*", it matches any event name
        /// 2. Combine multiple events with ",", for example "event1,event2", it matches event "event1" and "event2"
        /// 3. A single event name, for example, "event1", it matches "event1"
        /// </summary>
        string UserEventPattern { get; set; }

    }
}