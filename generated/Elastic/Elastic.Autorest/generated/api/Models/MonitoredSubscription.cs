// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Extensions;

    /// <summary>
    /// The list of subscriptions and it's monitoring status by current Elastic monitor.
    /// </summary>
    public partial class MonitoredSubscription :
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoredSubscription,
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoredSubscriptionInternal
    {

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private string _error;

        /// <summary>The reason of not monitoring the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public string Error { get => this._error; set => this._error = value; }

        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IFilteringTag> LogRuleFilteringTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleFilteringTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleFilteringTag = value ?? null /* arrayOf */; }

        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public bool? LogRuleSendAadLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendAadLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendAadLog = value ?? default(bool); }

        /// <summary>
        /// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public bool? LogRuleSendActivityLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendActivityLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendActivityLog = value ?? default(bool); }

        /// <summary>Flag specifying if subscription logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public bool? LogRuleSendSubscriptionLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendSubscriptionLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendSubscriptionLog = value ?? default(bool); }

        /// <summary>Internal Acessors for TagRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesProperties Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoredSubscriptionInternal.TagRule { get => (this._tagRule = this._tagRule ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.MonitoringTagRulesProperties()); set { {_tagRule = value;} } }

        /// <summary>Internal Acessors for TagRuleLogRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ILogRules Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoredSubscriptionInternal.TagRuleLogRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).LogRule = value ?? null /* model class */; }

        /// <summary>Internal Acessors for TagRuleProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoredSubscriptionInternal.TagRuleProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState = value ?? null; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>The state of monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscriptionId to be monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="TagRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesProperties _tagRule;

        /// <summary>Definition of the properties for a TagRules resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesProperties TagRule { get => (this._tagRule = this._tagRule ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.MonitoringTagRulesProperties()); set => this._tagRule = value; }

        /// <summary>Provisioning state of the monitoring tag rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string TagRuleProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState; }

        /// <summary>Creates an new <see cref="MonitoredSubscription" /> instance.</summary>
        public MonitoredSubscription()
        {

        }
    }
    /// The list of subscriptions and it's monitoring status by current Elastic monitor.
    public partial interface IMonitoredSubscription :
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.IJsonSerializable
    {
        /// <summary>The reason of not monitoring the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The reason of not monitoring the subscription.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string Error { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
        SerializedName = @"filteringTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IFilteringTag) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IFilteringTag> LogRuleFilteringTag { get; set; }
        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Flag specifying if AAD logs should be sent for the Monitor resource.",
        SerializedName = @"sendAadLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendAadLog { get; set; }
        /// <summary>
        /// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.",
        SerializedName = @"sendActivityLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendActivityLog { get; set; }
        /// <summary>Flag specifying if subscription logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Flag specifying if subscription logs should be sent for the Monitor resource.",
        SerializedName = @"sendSubscriptionLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendSubscriptionLog { get; set; }
        /// <summary>The state of monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The state of monitoring.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Elastic.PSArgumentCompleterAttribute("InProgress", "Active", "Failed", "Deleting")]
        string Status { get; set; }
        /// <summary>The subscriptionId to be monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The subscriptionId to be monitored.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Provisioning state of the monitoring tag rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the monitoring tag rules.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Elastic.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string TagRuleProvisioningState { get;  }

    }
    /// The list of subscriptions and it's monitoring status by current Elastic monitor.
    internal partial interface IMonitoredSubscriptionInternal

    {
        /// <summary>The reason of not monitoring the subscription.</summary>
        string Error { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IFilteringTag> LogRuleFilteringTag { get; set; }
        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        bool? LogRuleSendAadLog { get; set; }
        /// <summary>
        /// Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
        /// </summary>
        bool? LogRuleSendActivityLog { get; set; }
        /// <summary>Flag specifying if subscription logs should be sent for the Monitor resource.</summary>
        bool? LogRuleSendSubscriptionLog { get; set; }
        /// <summary>The state of monitoring.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Elastic.PSArgumentCompleterAttribute("InProgress", "Active", "Failed", "Deleting")]
        string Status { get; set; }
        /// <summary>The subscriptionId to be monitored.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Definition of the properties for a TagRules resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitoringTagRulesProperties TagRule { get; set; }
        /// <summary>Rules for sending logs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ILogRules TagRuleLogRule { get; set; }
        /// <summary>Provisioning state of the monitoring tag rules.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Elastic.PSArgumentCompleterAttribute("Accepted", "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled", "Deleted", "NotSpecified")]
        string TagRuleProvisioningState { get; set; }

    }
}