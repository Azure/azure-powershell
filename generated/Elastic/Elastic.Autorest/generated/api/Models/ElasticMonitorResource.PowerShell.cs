// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.PowerShell;

    /// <summary>Monitor resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(ElasticMonitorResourceTypeConverter))]
    public partial class ElasticMonitorResource
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResource DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ElasticMonitorResource(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResource" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResource DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ElasticMonitorResource(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ElasticMonitorResource(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IResourceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ResourceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitorProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.MonitorPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IIdentityProperties) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IdentityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticProperty = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticProperties) content.GetValueForProperty("ElasticProperty",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticProperty, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfo = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IUserInfo) content.GetValueForProperty("UserInfo",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfo, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.UserInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetail = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IPlanDetails) content.GetValueForProperty("PlanDetail",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetail, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.PlanDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("MonitoringStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).MonitoringStatus = (string) content.GetValueForProperty("MonitoringStatus",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).MonitoringStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SubscriptionState = (string) content.GetValueForProperty("SubscriptionState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SubscriptionState, global::System.Convert.ToString);
            }
            if (content.Contains("SaaSAzureSubscriptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SaaSAzureSubscriptionStatus = (string) content.GetValueForProperty("SaaSAzureSubscriptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SaaSAzureSubscriptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SourceCampaignName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignName = (string) content.GetValueForProperty("SourceCampaignName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceCampaignId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignId = (string) content.GetValueForProperty("SourceCampaignId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignId, global::System.Convert.ToString);
            }
            if (content.Contains("LiftrResourceCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourceCategory = (string) content.GetValueForProperty("LiftrResourceCategory",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourceCategory, global::System.Convert.ToString);
            }
            if (content.Contains("LiftrResourcePreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourcePreference = (int?) content.GetValueForProperty("LiftrResourcePreference",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourcePreference, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("GenerateApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).GenerateApiKey = (bool?) content.GetValueForProperty("GenerateApiKey",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).GenerateApiKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UserInfoCompanyInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyInfo = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ICompanyInfo) content.GetValueForProperty("UserInfoCompanyInfo",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyInfo, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.CompanyInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserInfoFirstName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoFirstName = (string) content.GetValueForProperty("UserInfoFirstName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoFirstName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoLastName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoLastName = (string) content.GetValueForProperty("UserInfoLastName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoLastName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoCompanyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyName = (string) content.GetValueForProperty("UserInfoCompanyName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoEmailAddress = (string) content.GetValueForProperty("UserInfoEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailOfferId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailOfferId = (string) content.GetValueForProperty("PlanDetailOfferId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailOfferId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPublisherId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPublisherId = (string) content.GetValueForProperty("PlanDetailPublisherId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPublisherId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailTermId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailTermId = (string) content.GetValueForProperty("PlanDetailTermId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailTermId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanId = (string) content.GetValueForProperty("PlanDetailPlanId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPlanName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanName = (string) content.GetValueForProperty("PlanDetailPlanName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanName, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ElasticPropertyElasticCloudUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudUser = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticCloudUser) content.GetValueForProperty("ElasticPropertyElasticCloudUser",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudUser, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticCloudUserTypeConverter.ConvertFrom);
            }
            if (content.Contains("ElasticPropertyElasticCloudDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudDeployment = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticCloudDeployment) content.GetValueForProperty("ElasticPropertyElasticCloudDeployment",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudDeployment, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticCloudDeploymentTypeConverter.ConvertFrom);
            }
            if (content.Contains("ElasticCloudUserEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserEmailAddress = (string) content.GetValueForProperty("ElasticCloudUserEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserId = (string) content.GetValueForProperty("ElasticCloudUserId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentName = (string) content.GetValueForProperty("ElasticCloudDeploymentName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentName, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentElasticsearchRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchRegion = (string) content.GetValueForProperty("ElasticCloudDeploymentElasticsearchRegion",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchRegion, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoDomain = (string) content.GetValueForProperty("CompanyInfoDomain",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoDomain, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoBusiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoBusiness = (string) content.GetValueForProperty("CompanyInfoBusiness",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoBusiness, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoEmployeesNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoEmployeesNumber = (string) content.GetValueForProperty("CompanyInfoEmployeesNumber",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoEmployeesNumber, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoState = (string) content.GetValueForProperty("CompanyInfoState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoState, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoCountry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoCountry = (string) content.GetValueForProperty("CompanyInfoCountry",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoCountry, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudUserElasticCloudSsoDefaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserElasticCloudSsoDefaultUrl = (string) content.GetValueForProperty("ElasticCloudUserElasticCloudSsoDefaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserElasticCloudSsoDefaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentId = (string) content.GetValueForProperty("ElasticCloudDeploymentId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentAzureSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentAzureSubscriptionId = (string) content.GetValueForProperty("ElasticCloudDeploymentAzureSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentAzureSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentElasticsearchServiceUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchServiceUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentElasticsearchServiceUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchServiceUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentKibanaServiceUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaServiceUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentKibanaServiceUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaServiceUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentKibanaSsoUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaSsoUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentKibanaSsoUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaSsoUrl, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ElasticMonitorResource(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IResourceSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ResourceSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IMonitorProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.MonitorPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IIdentityProperties) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IdentityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticMonitorResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticProperty = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticProperties) content.GetValueForProperty("ElasticProperty",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticProperty, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfo = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IUserInfo) content.GetValueForProperty("UserInfo",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfo, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.UserInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetail = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IPlanDetails) content.GetValueForProperty("PlanDetail",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetail, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.PlanDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("MonitoringStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).MonitoringStatus = (string) content.GetValueForProperty("MonitoringStatus",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).MonitoringStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("SubscriptionState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SubscriptionState = (string) content.GetValueForProperty("SubscriptionState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SubscriptionState, global::System.Convert.ToString);
            }
            if (content.Contains("SaaSAzureSubscriptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SaaSAzureSubscriptionStatus = (string) content.GetValueForProperty("SaaSAzureSubscriptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SaaSAzureSubscriptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("SourceCampaignName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignName = (string) content.GetValueForProperty("SourceCampaignName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceCampaignId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignId = (string) content.GetValueForProperty("SourceCampaignId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SourceCampaignId, global::System.Convert.ToString);
            }
            if (content.Contains("LiftrResourceCategory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourceCategory = (string) content.GetValueForProperty("LiftrResourceCategory",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourceCategory, global::System.Convert.ToString);
            }
            if (content.Contains("LiftrResourcePreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourcePreference = (int?) content.GetValueForProperty("LiftrResourcePreference",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).LiftrResourcePreference, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("GenerateApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).GenerateApiKey = (bool?) content.GetValueForProperty("GenerateApiKey",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).GenerateApiKey, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UserInfoCompanyInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyInfo = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ICompanyInfo) content.GetValueForProperty("UserInfoCompanyInfo",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyInfo, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.CompanyInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("UserInfoFirstName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoFirstName = (string) content.GetValueForProperty("UserInfoFirstName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoFirstName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoLastName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoLastName = (string) content.GetValueForProperty("UserInfoLastName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoLastName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoCompanyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyName = (string) content.GetValueForProperty("UserInfoCompanyName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoCompanyName, global::System.Convert.ToString);
            }
            if (content.Contains("UserInfoEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoEmailAddress = (string) content.GetValueForProperty("UserInfoEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).UserInfoEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailOfferId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailOfferId = (string) content.GetValueForProperty("PlanDetailOfferId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailOfferId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPublisherId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPublisherId = (string) content.GetValueForProperty("PlanDetailPublisherId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPublisherId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailTermId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailTermId = (string) content.GetValueForProperty("PlanDetailTermId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailTermId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanId = (string) content.GetValueForProperty("PlanDetailPlanId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanId, global::System.Convert.ToString);
            }
            if (content.Contains("PlanDetailPlanName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanName = (string) content.GetValueForProperty("PlanDetailPlanName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).PlanDetailPlanName, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ElasticPropertyElasticCloudUser"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudUser = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticCloudUser) content.GetValueForProperty("ElasticPropertyElasticCloudUser",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudUser, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticCloudUserTypeConverter.ConvertFrom);
            }
            if (content.Contains("ElasticPropertyElasticCloudDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudDeployment = (Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticCloudDeployment) content.GetValueForProperty("ElasticPropertyElasticCloudDeployment",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticPropertyElasticCloudDeployment, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.ElasticCloudDeploymentTypeConverter.ConvertFrom);
            }
            if (content.Contains("ElasticCloudUserEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserEmailAddress = (string) content.GetValueForProperty("ElasticCloudUserEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudUserId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserId = (string) content.GetValueForProperty("ElasticCloudUserId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentName = (string) content.GetValueForProperty("ElasticCloudDeploymentName",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentName, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentElasticsearchRegion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchRegion = (string) content.GetValueForProperty("ElasticCloudDeploymentElasticsearchRegion",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchRegion, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoDomain = (string) content.GetValueForProperty("CompanyInfoDomain",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoDomain, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoBusiness"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoBusiness = (string) content.GetValueForProperty("CompanyInfoBusiness",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoBusiness, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoEmployeesNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoEmployeesNumber = (string) content.GetValueForProperty("CompanyInfoEmployeesNumber",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoEmployeesNumber, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoState = (string) content.GetValueForProperty("CompanyInfoState",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoState, global::System.Convert.ToString);
            }
            if (content.Contains("CompanyInfoCountry"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoCountry = (string) content.GetValueForProperty("CompanyInfoCountry",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).CompanyInfoCountry, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudUserElasticCloudSsoDefaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserElasticCloudSsoDefaultUrl = (string) content.GetValueForProperty("ElasticCloudUserElasticCloudSsoDefaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudUserElasticCloudSsoDefaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentId = (string) content.GetValueForProperty("ElasticCloudDeploymentId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentAzureSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentAzureSubscriptionId = (string) content.GetValueForProperty("ElasticCloudDeploymentAzureSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentAzureSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentElasticsearchServiceUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchServiceUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentElasticsearchServiceUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentElasticsearchServiceUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentKibanaServiceUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaServiceUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentKibanaServiceUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaServiceUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ElasticCloudDeploymentKibanaSsoUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaSsoUrl = (string) content.GetValueForProperty("ElasticCloudDeploymentKibanaSsoUrl",((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResourceInternal)this).ElasticCloudDeploymentKibanaSsoUrl, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ElasticMonitorResource" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ElasticMonitorResource" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.IElasticMonitorResource FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Monitor resource.
    [System.ComponentModel.TypeConverter(typeof(ElasticMonitorResourceTypeConverter))]
    public partial interface IElasticMonitorResource

    {

    }
}