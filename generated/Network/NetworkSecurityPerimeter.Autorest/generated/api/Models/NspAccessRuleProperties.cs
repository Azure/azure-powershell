// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Extensions;

    /// <summary>Properties of NSP access rule.</summary>
    public partial class NspAccessRuleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspAccessRuleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspAccessRulePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AddressPrefix" /> property.</summary>
        private System.Collections.Generic.List<string> _addressPrefix;

        /// <summary>Inbound address prefixes (IPv4/IPv6)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> AddressPrefix { get => this._addressPrefix; set => this._addressPrefix = value; }

        /// <summary>Backing field for <see cref="Direction" /> property.</summary>
        private string _direction;

        /// <summary>Direction that specifies whether the access rules is inbound/outbound.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string Direction { get => this._direction; set => this._direction = value; }

        /// <summary>Backing field for <see cref="EmailAddress" /> property.</summary>
        private System.Collections.Generic.List<string> _emailAddress;

        /// <summary>Outbound rules email address format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> EmailAddress { get => this._emailAddress; set => this._emailAddress = value; }

        /// <summary>Backing field for <see cref="FullyQualifiedDomainName" /> property.</summary>
        private System.Collections.Generic.List<string> _fullyQualifiedDomainName;

        /// <summary>Outbound rules fully qualified domain name format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> FullyQualifiedDomainName { get => this._fullyQualifiedDomainName; set => this._fullyQualifiedDomainName = value; }

        /// <summary>Internal Acessors for NetworkSecurityPerimeter</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule> Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspAccessRulePropertiesInternal.NetworkSecurityPerimeter { get => this._networkSecurityPerimeter; set { {_networkSecurityPerimeter = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspAccessRulePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NetworkSecurityPerimeter" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule> _networkSecurityPerimeter;

        /// <summary>Rule specified by the perimeter id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule> NetworkSecurityPerimeter { get => this._networkSecurityPerimeter; }

        /// <summary>Backing field for <see cref="PhoneNumber" /> property.</summary>
        private System.Collections.Generic.List<string> _phoneNumber;

        /// <summary>Outbound rules phone number format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> PhoneNumber { get => this._phoneNumber; set => this._phoneNumber = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the scope assignment resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ServiceTag" /> property.</summary>
        private System.Collections.Generic.List<string> _serviceTag;

        /// <summary>Inbound rules service tag names.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ServiceTag { get => this._serviceTag; set => this._serviceTag = value; }

        /// <summary>Backing field for <see cref="Subscription" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.ISubscriptionId> _subscription;

        /// <summary>List of subscription ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.ISubscriptionId> Subscription { get => this._subscription; set => this._subscription = value; }

        /// <summary>Creates an new <see cref="NspAccessRuleProperties" /> instance.</summary>
        public NspAccessRuleProperties()
        {

        }
    }
    /// Properties of NSP access rule.
    public partial interface INspAccessRuleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.IJsonSerializable
    {
        /// <summary>Inbound address prefixes (IPv4/IPv6)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Inbound address prefixes (IPv4/IPv6)",
        SerializedName = @"addressPrefixes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AddressPrefix { get; set; }
        /// <summary>Direction that specifies whether the access rules is inbound/outbound.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Direction that specifies whether the access rules is inbound/outbound.",
        SerializedName = @"direction",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Inbound", "Outbound")]
        string Direction { get; set; }
        /// <summary>Outbound rules email address format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Outbound rules email address format.",
        SerializedName = @"emailAddresses",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> EmailAddress { get; set; }
        /// <summary>Outbound rules fully qualified domain name format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Outbound rules fully qualified domain name format.",
        SerializedName = @"fullyQualifiedDomainNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FullyQualifiedDomainName { get; set; }
        /// <summary>Rule specified by the perimeter id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Rule specified by the perimeter id.",
        SerializedName = @"networkSecurityPerimeters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule> NetworkSecurityPerimeter { get;  }
        /// <summary>Outbound rules phone number format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Outbound rules phone number format.",
        SerializedName = @"phoneNumbers",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> PhoneNumber { get; set; }
        /// <summary>The provisioning state of the scope assignment resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the scope assignment resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed")]
        string ProvisioningState { get;  }
        /// <summary>Inbound rules service tag names.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Inbound rules service tag names.",
        SerializedName = @"serviceTags",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ServiceTag { get; set; }
        /// <summary>List of subscription ids</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of subscription ids",
        SerializedName = @"subscriptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.ISubscriptionId) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.ISubscriptionId> Subscription { get; set; }

    }
    /// Properties of NSP access rule.
    internal partial interface INspAccessRulePropertiesInternal

    {
        /// <summary>Inbound address prefixes (IPv4/IPv6)</summary>
        System.Collections.Generic.List<string> AddressPrefix { get; set; }
        /// <summary>Direction that specifies whether the access rules is inbound/outbound.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Inbound", "Outbound")]
        string Direction { get; set; }
        /// <summary>Outbound rules email address format.</summary>
        System.Collections.Generic.List<string> EmailAddress { get; set; }
        /// <summary>Outbound rules fully qualified domain name format.</summary>
        System.Collections.Generic.List<string> FullyQualifiedDomainName { get; set; }
        /// <summary>Rule specified by the perimeter id.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.IPerimeterBasedAccessRule> NetworkSecurityPerimeter { get; set; }
        /// <summary>Outbound rules phone number format.</summary>
        System.Collections.Generic.List<string> PhoneNumber { get; set; }
        /// <summary>The provisioning state of the scope assignment resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed")]
        string ProvisioningState { get; set; }
        /// <summary>Inbound rules service tag names.</summary>
        System.Collections.Generic.List<string> ServiceTag { get; set; }
        /// <summary>List of subscription ids</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.ISubscriptionId> Subscription { get; set; }

    }
}