// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Extensions;

    /// <summary>Response object of query if are there existing offers in the collections.</summary>
    public partial class AnyExistingOffersInTheCollectionsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IAnyExistingOffersInTheCollectionsResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Models.IAnyExistingOffersInTheCollectionsResponseInternal
    {

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private bool? _value;

        /// <summary>
        /// Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Origin(Microsoft.Azure.PowerShell.Cmdlets.Marketplace.PropertyOrigin.Owned)]
        public bool? Value { get => this._value; set => this._value = value; }

        /// <summary>
        /// Creates an new <see cref="AnyExistingOffersInTheCollectionsResponse" /> instance.
        /// </summary>
        public AnyExistingOffersInTheCollectionsResponse()
        {

        }
    }
    /// Response object of query if are there existing offers in the collections.
    public partial interface IAnyExistingOffersInTheCollectionsResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Marketplace.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Value { get; set; }

    }
    /// Response object of query if are there existing offers in the collections.
    internal partial interface IAnyExistingOffersInTheCollectionsResponseInternal

    {
        /// <summary>
        /// Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.
        /// </summary>
        bool? Value { get; set; }

    }
}