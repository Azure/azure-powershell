// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Extensions;

    /// <summary>Properties required to the Create Migration Configuration</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.DoNotFormat]
    public partial class MigrationConfigProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMigrationConfigProperties1,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMigrationConfigProperties1Internal
    {

        /// <summary>Internal Acessors for MigrationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMigrationConfigProperties1Internal.MigrationState { get => this._migrationState; set { {_migrationState = value;} } }

        /// <summary>Internal Acessors for PendingReplicationOperationsCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMigrationConfigProperties1Internal.PendingReplicationOperationsCount { get => this._pendingReplicationOperationsCount; set { {_pendingReplicationOperationsCount = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Models.IMigrationConfigProperties1Internal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="MigrationState" /> property.</summary>
        private string _migrationState;

        /// <summary>
        /// State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing,
        /// Active
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string MigrationState { get => this._migrationState; }

        /// <summary>Backing field for <see cref="PendingReplicationOperationsCount" /> property.</summary>
        private long? _pendingReplicationOperationsCount;

        /// <summary>Number of entities pending to be replicated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public long? PendingReplicationOperationsCount { get => this._pendingReplicationOperationsCount; }

        /// <summary>Backing field for <see cref="PostMigrationName" /> property.</summary>
        private string _postMigrationName;

        /// <summary>Name to access Standard Namespace after migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string PostMigrationName { get => this._postMigrationName; set => this._postMigrationName = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of Migration Configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="TargetNamespace" /> property.</summary>
        private string _targetNamespace;

        /// <summary>
        /// Existing premium Namespace ARM Id name which has no entities, will be used for migration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.PropertyOrigin.Owned)]
        public string TargetNamespace { get => this._targetNamespace; set => this._targetNamespace = value; }

        /// <summary>Creates an new <see cref="MigrationConfigProperties1" /> instance.</summary>
        public MigrationConfigProperties1()
        {

        }
    }
    /// Properties required to the Create Migration Configuration
    public partial interface IMigrationConfigProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.IJsonSerializable
    {
        /// <summary>
        /// State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing,
        /// Active
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active",
        SerializedName = @"migrationState",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationState { get;  }
        /// <summary>Number of entities pending to be replicated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Number of entities pending to be replicated.",
        SerializedName = @"pendingReplicationOperationsCount",
        PossibleTypes = new [] { typeof(long) })]
        long? PendingReplicationOperationsCount { get;  }
        /// <summary>Name to access Standard Namespace after migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name to access Standard Namespace after migration",
        SerializedName = @"postMigrationName",
        PossibleTypes = new [] { typeof(string) })]
        string PostMigrationName { get; set; }
        /// <summary>Provisioning state of Migration Configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of Migration Configuration ",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Existing premium Namespace ARM Id name which has no entities, will be used for migration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceBus.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Existing premium Namespace ARM Id name which has no entities, will be used for migration",
        SerializedName = @"targetNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string TargetNamespace { get; set; }

    }
    /// Properties required to the Create Migration Configuration
    internal partial interface IMigrationConfigProperties1Internal

    {
        /// <summary>
        /// State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing,
        /// Active
        /// </summary>
        string MigrationState { get; set; }
        /// <summary>Number of entities pending to be replicated.</summary>
        long? PendingReplicationOperationsCount { get; set; }
        /// <summary>Name to access Standard Namespace after migration</summary>
        string PostMigrationName { get; set; }
        /// <summary>Provisioning state of Migration Configuration</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Existing premium Namespace ARM Id name which has no entities, will be used for migration
        /// </summary>
        string TargetNamespace { get; set; }

    }
}