// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Extensions;

    /// <summary>Properties specific to Project</summary>
    public partial class ProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Attribute" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> _attribute;

        /// <summary>Additional attributes for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> Attribute { get => this._attribute; set => this._attribute = value; }

        /// <summary>Backing field for <see cref="Branch" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties _branch;

        /// <summary>The Branch properties of the project. This is optional</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties Branch { get => (this._branch = this._branch ?? new Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.BranchProperties()); set => this._branch = value; }

        /// <summary>Additional attributes for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> BranchAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Attribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Attribute = value ?? null /* arrayOf */; }

        /// <summary>Timestamp indicating when the entity was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).CreatedAt; }

        /// <summary>Neon Databases associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> BranchDatabase { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Database; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Database = value ?? null /* arrayOf */; }

        /// <summary>Database name associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).DatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).DatabaseName = value ?? null; }

        /// <summary>Endpoints associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> BranchEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Endpoint = value ?? null /* arrayOf */; }

        /// <summary>Unique identifier for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchEntityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).EntityId; }

        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchEntityName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).EntityName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).EntityName = value ?? null; }

        /// <summary>The ID of the parent branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchParentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ParentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ParentId = value ?? null; }

        /// <summary>The ID of the project this branch belongs to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchProjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ProjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ProjectId = value ?? null; }

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ProvisioningState; }

        /// <summary>Roles associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> BranchRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).Role = value ?? null /* arrayOf */; }

        /// <summary>Role name associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public string BranchRoleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).RoleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).RoleName = value ?? null; }

        /// <summary>Backing field for <see cref="CreatedAt" /> property.</summary>
        private string _createdAt;

        /// <summary>Timestamp indicating when the entity was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public string CreatedAt { get => this._createdAt; }

        /// <summary>Backing field for <see cref="Database" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> _database;

        /// <summary>Neon Databases associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> Database { get => this._database; set => this._database = value; }

        /// <summary>Backing field for <see cref="DefaultEndpointSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings _defaultEndpointSetting;

        /// <summary>Default endpoint settings for the project.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings DefaultEndpointSetting { get => (this._defaultEndpointSetting = this._defaultEndpointSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.DefaultEndpointSettings()); set => this._defaultEndpointSetting = value; }

        /// <summary>Maximum compute units for autoscaling.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public float? DefaultEndpointSettingAutoscalingLimitMaxCu { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettingsInternal)DefaultEndpointSetting).AutoscalingLimitMaxCu; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettingsInternal)DefaultEndpointSetting).AutoscalingLimitMaxCu = value ?? default(float); }

        /// <summary>Minimum compute units for autoscaling.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Inlined)]
        public float? DefaultEndpointSettingAutoscalingLimitMinCu { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettingsInternal)DefaultEndpointSetting).AutoscalingLimitMinCu; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettingsInternal)DefaultEndpointSetting).AutoscalingLimitMinCu = value ?? default(float); }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> _endpoint;

        /// <summary>Endpoints associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> Endpoint { get => this._endpoint; set => this._endpoint = value; }

        /// <summary>Backing field for <see cref="EntityId" /> property.</summary>
        private string _entityId;

        /// <summary>Unique identifier for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public string EntityId { get => this._entityId; }

        /// <summary>Backing field for <see cref="EntityName" /> property.</summary>
        private string _entityName;

        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public string EntityName { get => this._entityName; set => this._entityName = value; }

        /// <summary>Backing field for <see cref="HistoryRetention" /> property.</summary>
        private int? _historyRetention;

        /// <summary>The retention period for project history in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public int? HistoryRetention { get => this._historyRetention; set => this._historyRetention = value; }

        /// <summary>Internal Acessors for Branch</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.Branch { get => (this._branch = this._branch ?? new Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.BranchProperties()); set { {_branch = value;} } }

        /// <summary>Internal Acessors for BranchCreatedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.BranchCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).CreatedAt = value ?? null; }

        /// <summary>Internal Acessors for BranchEntityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.BranchEntityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).EntityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).EntityId = value ?? null; }

        /// <summary>Internal Acessors for BranchProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.BranchProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchPropertiesInternal)Branch).ProvisioningState = value ?? null; }

        /// <summary>Internal Acessors for CreatedAt</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.CreatedAt { get => this._createdAt; set { {_createdAt = value;} } }

        /// <summary>Internal Acessors for DefaultEndpointSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.DefaultEndpointSetting { get => (this._defaultEndpointSetting = this._defaultEndpointSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.DefaultEndpointSettings()); set { {_defaultEndpointSetting = value;} } }

        /// <summary>Internal Acessors for EntityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.EntityId { get => this._entityId; set { {_entityId = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PgVersion" /> property.</summary>
        private int? _pgVersion;

        /// <summary>Postgres version for the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public int? PgVersion { get => this._pgVersion; set => this._pgVersion = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RegionId" /> property.</summary>
        private string _regionId;

        /// <summary>Region where the project is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public string RegionId { get => this._regionId; set => this._regionId = value; }

        /// <summary>Backing field for <see cref="Role" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> _role;

        /// <summary>Roles associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> Role { get => this._role; set => this._role = value; }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private long? _storage;

        /// <summary>Data Storage bytes per hour for the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public long? Storage { get => this._storage; set => this._storage = value; }

        /// <summary>Creates an new <see cref="ProjectProperties" /> instance.</summary>
        public ProjectProperties()
        {

        }
    }
    /// Properties specific to Project
    public partial interface IProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.IJsonSerializable
    {
        /// <summary>Additional attributes for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Additional attributes for the entity",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> Attribute { get; set; }
        /// <summary>Additional attributes for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Additional attributes for the entity",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> BranchAttribute { get; set; }
        /// <summary>Timestamp indicating when the entity was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp indicating when the entity was created",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(string) })]
        string BranchCreatedAt { get;  }
        /// <summary>Neon Databases associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Neon Databases associated with the branch",
        SerializedName = @"databases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> BranchDatabase { get; set; }
        /// <summary>Database name associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Database name associated with the branch",
        SerializedName = @"databaseName",
        PossibleTypes = new [] { typeof(string) })]
        string BranchDatabaseName { get; set; }
        /// <summary>Endpoints associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Endpoints associated with the branch",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> BranchEndpoint { get; set; }
        /// <summary>Unique identifier for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Unique identifier for the entity",
        SerializedName = @"entityId",
        PossibleTypes = new [] { typeof(string) })]
        string BranchEntityId { get;  }
        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the resource",
        SerializedName = @"entityName",
        PossibleTypes = new [] { typeof(string) })]
        string BranchEntityName { get; set; }
        /// <summary>The ID of the parent branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the parent branch",
        SerializedName = @"parentId",
        PossibleTypes = new [] { typeof(string) })]
        string BranchParentId { get; set; }
        /// <summary>The ID of the project this branch belongs to</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ID of the project this branch belongs to",
        SerializedName = @"projectId",
        PossibleTypes = new [] { typeof(string) })]
        string BranchProjectId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string BranchProvisioningState { get;  }
        /// <summary>Roles associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Roles associated with the branch",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> BranchRole { get; set; }
        /// <summary>Role name associated with the branch</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Role name associated with the branch",
        SerializedName = @"roleName",
        PossibleTypes = new [] { typeof(string) })]
        string BranchRoleName { get; set; }
        /// <summary>Timestamp indicating when the entity was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Timestamp indicating when the entity was created",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedAt { get;  }
        /// <summary>Neon Databases associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Neon Databases associated with the project",
        SerializedName = @"databases",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> Database { get; set; }
        /// <summary>Maximum compute units for autoscaling.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Maximum compute units for autoscaling.",
        SerializedName = @"autoscalingLimitMaxCu",
        PossibleTypes = new [] { typeof(float) })]
        float? DefaultEndpointSettingAutoscalingLimitMaxCu { get; set; }
        /// <summary>Minimum compute units for autoscaling.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Minimum compute units for autoscaling.",
        SerializedName = @"autoscalingLimitMinCu",
        PossibleTypes = new [] { typeof(float) })]
        float? DefaultEndpointSettingAutoscalingLimitMinCu { get; set; }
        /// <summary>Endpoints associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Endpoints associated with the project",
        SerializedName = @"endpoints",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> Endpoint { get; set; }
        /// <summary>Unique identifier for the entity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Unique identifier for the entity",
        SerializedName = @"entityId",
        PossibleTypes = new [] { typeof(string) })]
        string EntityId { get;  }
        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the resource",
        SerializedName = @"entityName",
        PossibleTypes = new [] { typeof(string) })]
        string EntityName { get; set; }
        /// <summary>The retention period for project history in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The retention period for project history in seconds.",
        SerializedName = @"historyRetention",
        PossibleTypes = new [] { typeof(int) })]
        int? HistoryRetention { get; set; }
        /// <summary>Postgres version for the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Postgres version for the project",
        SerializedName = @"pgVersion",
        PossibleTypes = new [] { typeof(int) })]
        int? PgVersion { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get;  }
        /// <summary>Region where the project is created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Region where the project is created",
        SerializedName = @"regionId",
        PossibleTypes = new [] { typeof(string) })]
        string RegionId { get; set; }
        /// <summary>Roles associated with the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Roles associated with the project",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> Role { get; set; }
        /// <summary>Data Storage bytes per hour for the project</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Data Storage bytes per hour for the project",
        SerializedName = @"storage",
        PossibleTypes = new [] { typeof(long) })]
        long? Storage { get; set; }

    }
    /// Properties specific to Project
    internal partial interface IProjectPropertiesInternal

    {
        /// <summary>Additional attributes for the entity</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> Attribute { get; set; }
        /// <summary>The Branch properties of the project. This is optional</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties Branch { get; set; }
        /// <summary>Additional attributes for the entity</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes> BranchAttribute { get; set; }
        /// <summary>Timestamp indicating when the entity was created</summary>
        string BranchCreatedAt { get; set; }
        /// <summary>Neon Databases associated with the branch</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> BranchDatabase { get; set; }
        /// <summary>Database name associated with the branch</summary>
        string BranchDatabaseName { get; set; }
        /// <summary>Endpoints associated with the branch</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> BranchEndpoint { get; set; }
        /// <summary>Unique identifier for the entity</summary>
        string BranchEntityId { get; set; }
        /// <summary>Name of the resource</summary>
        string BranchEntityName { get; set; }
        /// <summary>The ID of the parent branch</summary>
        string BranchParentId { get; set; }
        /// <summary>The ID of the project this branch belongs to</summary>
        string BranchProjectId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string BranchProvisioningState { get; set; }
        /// <summary>Roles associated with the branch</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> BranchRole { get; set; }
        /// <summary>Role name associated with the branch</summary>
        string BranchRoleName { get; set; }
        /// <summary>Timestamp indicating when the entity was created</summary>
        string CreatedAt { get; set; }
        /// <summary>Neon Databases associated with the project</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties> Database { get; set; }
        /// <summary>Default endpoint settings for the project.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings DefaultEndpointSetting { get; set; }
        /// <summary>Maximum compute units for autoscaling.</summary>
        float? DefaultEndpointSettingAutoscalingLimitMaxCu { get; set; }
        /// <summary>Minimum compute units for autoscaling.</summary>
        float? DefaultEndpointSettingAutoscalingLimitMinCu { get; set; }
        /// <summary>Endpoints associated with the project</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties> Endpoint { get; set; }
        /// <summary>Unique identifier for the entity</summary>
        string EntityId { get; set; }
        /// <summary>Name of the resource</summary>
        string EntityName { get; set; }
        /// <summary>The retention period for project history in seconds.</summary>
        int? HistoryRetention { get; set; }
        /// <summary>Postgres version for the project</summary>
        int? PgVersion { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled")]
        string ProvisioningState { get; set; }
        /// <summary>Region where the project is created</summary>
        string RegionId { get; set; }
        /// <summary>Roles associated with the project</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties> Role { get; set; }
        /// <summary>Data Storage bytes per hour for the project</summary>
        long? Storage { get; set; }

    }
}