// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.PowerShell;

    /// <summary>Properties specific to Project</summary>
    [System.ComponentModel.TypeConverter(typeof(ProjectPropertiesTypeConverter))]
    public partial class ProjectProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.ProjectProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ProjectProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.ProjectProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ProjectProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ProjectProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ProjectProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.ProjectProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ProjectProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DefaultEndpointSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSetting = (Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings) content.GetValueForProperty("DefaultEndpointSetting",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSetting, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.DefaultEndpointSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Branch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Branch = (Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties) content.GetValueForProperty("Branch",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Branch, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.BranchPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EntityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityId = (string) content.GetValueForProperty("EntityId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityId, global::System.Convert.ToString);
            }
            if (content.Contains("EntityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityName = (string) content.GetValueForProperty("EntityName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityName, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).CreatedAt = (string) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).CreatedAt, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Attribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Attribute = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>) content.GetValueForProperty("Attribute",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Attribute, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.AttributesTypeConverter.ConvertFrom));
            }
            if (content.Contains("RegionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).RegionId = (string) content.GetValueForProperty("RegionId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).RegionId, global::System.Convert.ToString);
            }
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Storage = (long?) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Storage, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PgVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).PgVersion = (int?) content.GetValueForProperty("PgVersion",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).PgVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HistoryRetention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).HistoryRetention = (int?) content.GetValueForProperty("HistoryRetention",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).HistoryRetention, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Role = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Role, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonRolePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("Database"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Database = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>) content.GetValueForProperty("Database",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Database, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonDatabasePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Endpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Endpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.EndpointPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultEndpointSettingAutoscalingLimitMinCu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMinCu = (float?) content.GetValueForProperty("DefaultEndpointSettingAutoscalingLimitMinCu",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMinCu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("DefaultEndpointSettingAutoscalingLimitMaxCu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMaxCu = (float?) content.GetValueForProperty("DefaultEndpointSettingAutoscalingLimitMaxCu",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMaxCu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("BranchEntityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityId = (string) content.GetValueForProperty("BranchEntityId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchEntityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityName = (string) content.GetValueForProperty("BranchEntityName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchCreatedAt = (string) content.GetValueForProperty("BranchCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchCreatedAt, global::System.Convert.ToString);
            }
            if (content.Contains("BranchProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProvisioningState = (string) content.GetValueForProperty("BranchProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("BranchAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchAttribute = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>) content.GetValueForProperty("BranchAttribute",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchAttribute, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.AttributesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchProjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProjectId = (string) content.GetValueForProperty("BranchProjectId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProjectId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchParentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchParentId = (string) content.GetValueForProperty("BranchParentId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchParentId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchRoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRoleName = (string) content.GetValueForProperty("BranchRoleName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRoleName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchDatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabaseName = (string) content.GetValueForProperty("BranchDatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRole = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>) content.GetValueForProperty("BranchRole",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRole, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonRolePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabase = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>) content.GetValueForProperty("BranchDatabase",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabase, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonDatabasePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEndpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>) content.GetValueForProperty("BranchEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEndpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.EndpointPropertiesTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.ProjectProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ProjectProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DefaultEndpointSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSetting = (Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IDefaultEndpointSettings) content.GetValueForProperty("DefaultEndpointSetting",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSetting, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.DefaultEndpointSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Branch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Branch = (Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IBranchProperties) content.GetValueForProperty("Branch",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Branch, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.BranchPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EntityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityId = (string) content.GetValueForProperty("EntityId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityId, global::System.Convert.ToString);
            }
            if (content.Contains("EntityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityName = (string) content.GetValueForProperty("EntityName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).EntityName, global::System.Convert.ToString);
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).CreatedAt = (string) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).CreatedAt, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Attribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Attribute = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>) content.GetValueForProperty("Attribute",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Attribute, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.AttributesTypeConverter.ConvertFrom));
            }
            if (content.Contains("RegionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).RegionId = (string) content.GetValueForProperty("RegionId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).RegionId, global::System.Convert.ToString);
            }
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Storage = (long?) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Storage, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PgVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).PgVersion = (int?) content.GetValueForProperty("PgVersion",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).PgVersion, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("HistoryRetention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).HistoryRetention = (int?) content.GetValueForProperty("HistoryRetention",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).HistoryRetention, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Role"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Role = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>) content.GetValueForProperty("Role",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Role, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonRolePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("Database"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Database = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>) content.GetValueForProperty("Database",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Database, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonDatabasePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Endpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).Endpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.EndpointPropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("DefaultEndpointSettingAutoscalingLimitMinCu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMinCu = (float?) content.GetValueForProperty("DefaultEndpointSettingAutoscalingLimitMinCu",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMinCu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("DefaultEndpointSettingAutoscalingLimitMaxCu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMaxCu = (float?) content.GetValueForProperty("DefaultEndpointSettingAutoscalingLimitMaxCu",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).DefaultEndpointSettingAutoscalingLimitMaxCu, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("BranchEntityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityId = (string) content.GetValueForProperty("BranchEntityId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchEntityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityName = (string) content.GetValueForProperty("BranchEntityName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEntityName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchCreatedAt = (string) content.GetValueForProperty("BranchCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchCreatedAt, global::System.Convert.ToString);
            }
            if (content.Contains("BranchProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProvisioningState = (string) content.GetValueForProperty("BranchProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("BranchAttribute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchAttribute = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>) content.GetValueForProperty("BranchAttribute",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchAttribute, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IAttributes>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.AttributesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchProjectId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProjectId = (string) content.GetValueForProperty("BranchProjectId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchProjectId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchParentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchParentId = (string) content.GetValueForProperty("BranchParentId",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchParentId, global::System.Convert.ToString);
            }
            if (content.Contains("BranchRoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRoleName = (string) content.GetValueForProperty("BranchRoleName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRoleName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchDatabaseName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabaseName = (string) content.GetValueForProperty("BranchDatabaseName",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabaseName, global::System.Convert.ToString);
            }
            if (content.Contains("BranchRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRole = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>) content.GetValueForProperty("BranchRole",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchRole, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonRoleProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonRolePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchDatabase"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabase = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>) content.GetValueForProperty("BranchDatabase",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchDatabase, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.INeonDatabaseProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.NeonDatabasePropertiesTypeConverter.ConvertFrom));
            }
            if (content.Contains("BranchEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEndpoint = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>) content.GetValueForProperty("BranchEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IProjectPropertiesInternal)this).BranchEndpoint, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IEndpointProperties>(__y, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.EndpointPropertiesTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Properties specific to Project
    [System.ComponentModel.TypeConverter(typeof(ProjectPropertiesTypeConverter))]
    public partial interface IProjectProperties

    {

    }
}