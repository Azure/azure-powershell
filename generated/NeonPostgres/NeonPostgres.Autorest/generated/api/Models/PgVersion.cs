// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Extensions;

    /// <summary>PostgreSQL Version model</summary>
    public partial class PgVersion :
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IPgVersion,
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Models.IPgVersionInternal
    {

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private int? _version;

        /// <summary>The major PostgreSQL version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Origin(Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.PropertyOrigin.Owned)]
        public int? Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="PgVersion" /> instance.</summary>
        public PgVersion()
        {

        }
    }
    /// PostgreSQL Version model
    public partial interface IPgVersion :
        Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.IJsonSerializable
    {
        /// <summary>The major PostgreSQL version number</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NeonPostgres.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The major PostgreSQL version number",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(int) })]
        int? Version { get; set; }

    }
    /// PostgreSQL Version model
    internal partial interface IPgVersionInternal

    {
        /// <summary>The major PostgreSQL version number</summary>
        int? Version { get; set; }

    }
}