// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Support
{

    /// <summary>Rendering Type</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RenderingTypeTypeConverter))]
    public partial struct RenderingType :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NoGraph".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NoGraph'", "NoGraph", global::System.Management.Automation.CompletionResultType.ParameterValue, "NoGraph");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Table".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Table'", "Table", global::System.Management.Automation.CompletionResultType.ParameterValue, "Table");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TimeSeries".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TimeSeries'", "TimeSeries", global::System.Management.Automation.CompletionResultType.ParameterValue, "TimeSeries");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TimeSeriesPerInstance".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TimeSeriesPerInstance'", "TimeSeriesPerInstance", global::System.Management.Automation.CompletionResultType.ParameterValue, "TimeSeriesPerInstance");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PieChart".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PieChart'", "PieChart", global::System.Management.Automation.CompletionResultType.ParameterValue, "PieChart");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DataSummary".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DataSummary'", "DataSummary", global::System.Management.Automation.CompletionResultType.ParameterValue, "DataSummary");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Email".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Email'", "Email", global::System.Management.Automation.CompletionResultType.ParameterValue, "Email");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Insights".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Insights'", "Insights", global::System.Management.Automation.CompletionResultType.ParameterValue, "Insights");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DynamicInsight".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DynamicInsight'", "DynamicInsight", global::System.Management.Automation.CompletionResultType.ParameterValue, "DynamicInsight");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Markdown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Markdown'", "Markdown", global::System.Management.Automation.CompletionResultType.ParameterValue, "Markdown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Detector".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Detector'", "Detector", global::System.Management.Automation.CompletionResultType.ParameterValue, "Detector");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DropDown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DropDown'", "DropDown", global::System.Management.Automation.CompletionResultType.ParameterValue, "DropDown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Card".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Card'", "Card", global::System.Management.Automation.CompletionResultType.ParameterValue, "Card");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Solution".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Solution'", "Solution", global::System.Management.Automation.CompletionResultType.ParameterValue, "Solution");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Guage".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Guage'", "Guage", global::System.Management.Automation.CompletionResultType.ParameterValue, "Guage");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Form".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Form'", "Form", global::System.Management.Automation.CompletionResultType.ParameterValue, "Form");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ChangeSets".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ChangeSets'", "ChangeSets", global::System.Management.Automation.CompletionResultType.ParameterValue, "ChangeSets");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ChangeAnalysisOnboarding".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ChangeAnalysisOnboarding'", "ChangeAnalysisOnboarding", global::System.Management.Automation.CompletionResultType.ParameterValue, "ChangeAnalysisOnboarding");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ChangesView".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ChangesView'", "ChangesView", global::System.Management.Automation.CompletionResultType.ParameterValue, "ChangesView");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AppInsight".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AppInsight'", "AppInsight", global::System.Management.Automation.CompletionResultType.ParameterValue, "AppInsight");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DependencyGraph".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DependencyGraph'", "DependencyGraph", global::System.Management.Automation.CompletionResultType.ParameterValue, "DependencyGraph");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DownTime".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DownTime'", "DownTime", global::System.Management.Automation.CompletionResultType.ParameterValue, "DownTime");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SummaryCard".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SummaryCard'", "SummaryCard", global::System.Management.Automation.CompletionResultType.ParameterValue, "SummaryCard");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "SearchComponent".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'SearchComponent'", "SearchComponent", global::System.Management.Automation.CompletionResultType.ParameterValue, "SearchComponent");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AppInsightEnablement".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AppInsightEnablement'", "AppInsightEnablement", global::System.Management.Automation.CompletionResultType.ParameterValue, "AppInsightEnablement");
            }
        }
    }
}