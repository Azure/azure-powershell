// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>SiteContainer resource specific properties</summary>
    public partial class SiteContainerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteContainerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteContainerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AuthType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthType? _authType;

        /// <summary>Auth Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthType? AuthType { get => this._authType; set => this._authType = value; }

        /// <summary>Backing field for <see cref="CreatedTime" /> property.</summary>
        private global::System.DateTime? _createdTime;

        /// <summary>Created Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedTime { get => this._createdTime; }

        /// <summary>Backing field for <see cref="EnvironmentVariable" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IEnvironmentVariable[] _environmentVariable;

        /// <summary>List of environment variables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IEnvironmentVariable[] EnvironmentVariable { get => this._environmentVariable; set => this._environmentVariable = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private string _image;

        /// <summary>Image Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Image { get => this._image; set => this._image = value; }

        /// <summary>Backing field for <see cref="IsMain" /> property.</summary>
        private bool _isMain;

        /// <summary>
        /// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool IsMain { get => this._isMain; set => this._isMain = value; }

        /// <summary>Backing field for <see cref="LastModifiedTime" /> property.</summary>
        private global::System.DateTime? _lastModifiedTime;

        /// <summary>Last Modified Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public global::System.DateTime? LastModifiedTime { get => this._lastModifiedTime; }

        /// <summary>Internal Acessors for CreatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteContainerPropertiesInternal.CreatedTime { get => this._createdTime; set { {_createdTime = value;} } }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteContainerPropertiesInternal.LastModifiedTime { get => this._lastModifiedTime; set { {_lastModifiedTime = value;} } }

        /// <summary>Backing field for <see cref="PasswordSecret" /> property.</summary>
        private string _passwordSecret;

        /// <summary>Password Secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PasswordSecret { get => this._passwordSecret; set => this._passwordSecret = value; }

        /// <summary>Backing field for <see cref="StartUpCommand" /> property.</summary>
        private string _startUpCommand;

        /// <summary>StartUp Command</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string StartUpCommand { get => this._startUpCommand; set => this._startUpCommand = value; }

        /// <summary>Backing field for <see cref="TargetPort" /> property.</summary>
        private string _targetPort;

        /// <summary>Target Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string TargetPort { get => this._targetPort; set => this._targetPort = value; }

        /// <summary>Backing field for <see cref="UserManagedIdentityClientId" /> property.</summary>
        private string _userManagedIdentityClientId;

        /// <summary>UserManagedIdentity ClientId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string UserManagedIdentityClientId { get => this._userManagedIdentityClientId; set => this._userManagedIdentityClientId = value; }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>User Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Backing field for <see cref="VolumeMount" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVolumeMount[] _volumeMount;

        /// <summary>List of volume mounts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVolumeMount[] VolumeMount { get => this._volumeMount; set => this._volumeMount = value; }

        /// <summary>Creates an new <see cref="SiteContainerProperties" /> instance.</summary>
        public SiteContainerProperties()
        {

        }
    }
    /// SiteContainer resource specific properties
    public partial interface ISiteContainerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>Auth Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Auth Type",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthType? AuthType { get; set; }
        /// <summary>Created Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Created Time",
        SerializedName = @"createdTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTime { get;  }
        /// <summary>List of environment variables</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of environment variables",
        SerializedName = @"environmentVariables",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IEnvironmentVariable) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>Image Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Image Name",
        SerializedName = @"image",
        PossibleTypes = new [] { typeof(string) })]
        string Image { get; set; }
        /// <summary>
        /// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"<code>true</code> if the container is the main site container; <code>false</code> otherwise.",
        SerializedName = @"isMain",
        PossibleTypes = new [] { typeof(bool) })]
        bool IsMain { get; set; }
        /// <summary>Last Modified Time</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last Modified Time",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>Password Secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password Secret",
        SerializedName = @"passwordSecret",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordSecret { get; set; }
        /// <summary>StartUp Command</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"StartUp Command",
        SerializedName = @"startUpCommand",
        PossibleTypes = new [] { typeof(string) })]
        string StartUpCommand { get; set; }
        /// <summary>Target Port</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(string) })]
        string TargetPort { get; set; }
        /// <summary>UserManagedIdentity ClientId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UserManagedIdentity ClientId",
        SerializedName = @"userManagedIdentityClientId",
        PossibleTypes = new [] { typeof(string) })]
        string UserManagedIdentityClientId { get; set; }
        /// <summary>User Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User Name",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }
        /// <summary>List of volume mounts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of volume mounts",
        SerializedName = @"volumeMounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVolumeMount) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVolumeMount[] VolumeMount { get; set; }

    }
    /// SiteContainer resource specific properties
    internal partial interface ISiteContainerPropertiesInternal

    {
        /// <summary>Auth Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthType? AuthType { get; set; }
        /// <summary>Created Time</summary>
        global::System.DateTime? CreatedTime { get; set; }
        /// <summary>List of environment variables</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IEnvironmentVariable[] EnvironmentVariable { get; set; }
        /// <summary>Image Name</summary>
        string Image { get; set; }
        /// <summary>
        /// <code>true</code> if the container is the main site container; <code>false</code> otherwise.
        /// </summary>
        bool IsMain { get; set; }
        /// <summary>Last Modified Time</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>Password Secret</summary>
        string PasswordSecret { get; set; }
        /// <summary>StartUp Command</summary>
        string StartUpCommand { get; set; }
        /// <summary>Target Port</summary>
        string TargetPort { get; set; }
        /// <summary>UserManagedIdentity ClientId</summary>
        string UserManagedIdentityClientId { get; set; }
        /// <summary>User Name</summary>
        string UserName { get; set; }
        /// <summary>List of volume mounts</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVolumeMount[] VolumeMount { get; set; }

    }
}