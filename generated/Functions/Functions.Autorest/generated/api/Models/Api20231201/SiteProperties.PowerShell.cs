// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>Site resource specific properties</summary>
    [System.ComponentModel.TypeConverter(typeof(SitePropertiesTypeConverter))]
    public partial class SiteProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SiteProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SiteProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SiteProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SiteProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SiteProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DnsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteDnsConfig) content.GetValueForProperty("DnsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteDnsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionAppConfig) content.GetValueForProperty("FunctionAppConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionAppConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDaprConfig) content.GetValueForProperty("DaprConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DaprConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceConfig) content.GetValueForProperty("ResourceConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostingEnvironmentProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfile = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostingEnvironmentProfile) content.GetValueForProperty("HostingEnvironmentProfile",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfile, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.HostingEnvironmentProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloningInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfo = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICloningInfo) content.GetValueForProperty("CloningInfo",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfo, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CloningInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("SlotSwapStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatus = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISlotSwapStatus) content.GetValueForProperty("SlotSwapStatus",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatus, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SlotSwapStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("HostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostName = (string[]) content.GetValueForProperty("HostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RepositorySiteName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RepositorySiteName = (string) content.GetValueForProperty("RepositorySiteName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RepositorySiteName, global::System.Convert.ToString);
            }
            if (content.Contains("UsageState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).UsageState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UsageState?) content.GetValueForProperty("UsageState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).UsageState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UsageState.CreateFrom);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).EnabledHostName = (string[]) content.GetValueForProperty("EnabledHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).EnabledHostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SiteAvailabilityState?) content.GetValueForProperty("AvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SiteAvailabilityState.CreateFrom);
            }
            if (content.Contains("HostNameSslState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNameSslState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostNameSslState[]) content.GetValueForProperty("HostNameSslState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNameSslState, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostNameSslState>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.HostNameSslStateTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServerFarmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ServerFarmId = (string) content.GetValueForProperty("ServerFarmId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ServerFarmId, global::System.Convert.ToString);
            }
            if (content.Contains("Reserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Reserved = (bool?) content.GetValueForProperty("Reserved",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Reserved, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsXenon"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsXenon = (bool?) content.GetValueForProperty("IsXenon",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsXenon, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HyperV"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HyperV = (bool?) content.GetValueForProperty("HyperV",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HyperV, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LastModifiedTimeUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).LastModifiedTimeUtc = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTimeUtc",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).LastModifiedTimeUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VnetRouteAllEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetRouteAllEnabled = (bool?) content.GetValueForProperty("VnetRouteAllEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetRouteAllEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetImagePullEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetImagePullEnabled = (bool?) content.GetValueForProperty("VnetImagePullEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetImagePullEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetContentShareEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetContentShareEnabled = (bool?) content.GetValueForProperty("VnetContentShareEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetContentShareEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetBackupRestoreEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetBackupRestoreEnabled = (bool?) content.GetValueForProperty("VnetBackupRestoreEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetBackupRestoreEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WorkloadProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).WorkloadProfileName = (string) content.GetValueForProperty("WorkloadProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).WorkloadProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("TrafficManagerHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TrafficManagerHostName = (string[]) content.GetValueForProperty("TrafficManagerHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TrafficManagerHostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScmSiteAlsoStopped"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScmSiteAlsoStopped = (bool?) content.GetValueForProperty("ScmSiteAlsoStopped",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScmSiteAlsoStopped, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TargetSwapSlot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TargetSwapSlot = (string) content.GetValueForProperty("TargetSwapSlot",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TargetSwapSlot, global::System.Convert.ToString);
            }
            if (content.Contains("ClientAffinityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientAffinityEnabled = (bool?) content.GetValueForProperty("ClientAffinityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientAffinityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClientCertEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertEnabled = (bool?) content.GetValueForProperty("ClientCertEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClientCertMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ClientCertMode?) content.GetValueForProperty("ClientCertMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ClientCertMode.CreateFrom);
            }
            if (content.Contains("ClientCertExclusionPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertExclusionPath = (string) content.GetValueForProperty("ClientCertExclusionPath",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertExclusionPath, global::System.Convert.ToString);
            }
            if (content.Contains("HostNamesDisabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNamesDisabled = (bool?) content.GetValueForProperty("HostNamesDisabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNamesDisabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomDomainVerificationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CustomDomainVerificationId = (string) content.GetValueForProperty("CustomDomainVerificationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CustomDomainVerificationId, global::System.Convert.ToString);
            }
            if (content.Contains("OutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).OutboundIPAddress = (string) content.GetValueForProperty("OutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).OutboundIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PossibleOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PossibleOutboundIPAddress = (string) content.GetValueForProperty("PossibleOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PossibleOutboundIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ContainerSize = (int?) content.GetValueForProperty("ContainerSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ContainerSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DailyMemoryTimeQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DailyMemoryTimeQuota = (int?) content.GetValueForProperty("DailyMemoryTimeQuota",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DailyMemoryTimeQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SuspendedTill"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SuspendedTill = (global::System.DateTime?) content.GetValueForProperty("SuspendedTill",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SuspendedTill, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MaxNumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).MaxNumberOfWorker = (int?) content.GetValueForProperty("MaxNumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).MaxNumberOfWorker, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceGroup = (string) content.GetValueForProperty("ResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("IsDefaultContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsDefaultContainer = (bool?) content.GetValueForProperty("IsDefaultContainer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsDefaultContainer, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DefaultHostName = (string) content.GetValueForProperty("DefaultHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DefaultHostName, global::System.Convert.ToString);
            }
            if (content.Contains("HttpsOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpsOnly = (bool?) content.GetValueForProperty("HttpsOnly",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpsOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RedundancyMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RedundancyMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RedundancyMode?) content.GetValueForProperty("RedundancyMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RedundancyMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RedundancyMode.CreateFrom);
            }
            if (content.Contains("InProgressOperationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).InProgressOperationId = (string) content.GetValueForProperty("InProgressOperationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).InProgressOperationId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAccountRequired = (bool?) content.GetValueForProperty("StorageAccountRequired",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAccountRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VirtualNetworkSubnetId = (string) content.GetValueForProperty("VirtualNetworkSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VirtualNetworkSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedEnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ManagedEnvironmentId = (string) content.GetValueForProperty("ManagedEnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ManagedEnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("SiteConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SiteConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteConfig) content.GetValueForProperty("SiteConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SiteConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprConfigAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppId = (string) content.GetValueForProperty("DaprConfigAppId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppId, global::System.Convert.ToString);
            }
            if (content.Contains("DaprConfigAppPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppPort = (int?) content.GetValueForProperty("DaprConfigAppPort",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ResourceConfigCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigCpu = (double?) content.GetValueForProperty("ResourceConfigCpu",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigCpu, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ResourceConfigMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigMemory = (string) content.GetValueForProperty("ResourceConfigMemory",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigMemory, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileId = (string) content.GetValueForProperty("HostingEnvironmentProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileName = (string) content.GetValueForProperty("HostingEnvironmentProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileType = (string) content.GetValueForProperty("HostingEnvironmentProfileType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileType, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoCorrelationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCorrelationId = (string) content.GetValueForProperty("CloningInfoCorrelationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCorrelationId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoHostingEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoHostingEnvironment = (string) content.GetValueForProperty("CloningInfoHostingEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoHostingEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusTimestampUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusTimestampUtc = (global::System.DateTime?) content.GetValueForProperty("SlotSwapStatusTimestampUtc",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusTimestampUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DnsConfigurationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsServer = (string[]) content.GetValueForProperty("DnsConfigurationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsConfigurationDnsAltServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsAltServer = (string) content.GetValueForProperty("DnsConfigurationDnsAltServer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsAltServer, global::System.Convert.ToString);
            }
            if (content.Contains("DnsConfigurationDnsRetryAttemptTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptTimeout = (int?) content.GetValueForProperty("DnsConfigurationDnsRetryAttemptTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsRetryAttemptCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptCount = (int?) content.GetValueForProperty("DnsConfigurationDnsRetryAttemptCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsMaxCacheTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsMaxCacheTimeout = (int?) content.GetValueForProperty("DnsConfigurationDnsMaxCacheTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsMaxCacheTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsLegacySortOrder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsLegacySortOrder = (bool?) content.GetValueForProperty("DnsConfigurationDnsLegacySortOrder",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsLegacySortOrder, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FunctionAppConfigDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigDeployment = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeployment) content.GetValueForProperty("FunctionAppConfigDeployment",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigDeployment, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfigRuntime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigRuntime = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsRuntime) content.GetValueForProperty("FunctionAppConfigRuntime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigRuntime, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsRuntimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfigScaleAndConcurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigScaleAndConcurrency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrency) content.GetValueForProperty("FunctionAppConfigScaleAndConcurrency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigScaleAndConcurrency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeName = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RuntimeName?) content.GetValueForProperty("RuntimeName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeName, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RuntimeName.CreateFrom);
            }
            if (content.Contains("DaprConfigEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnabled = (bool?) content.GetValueForProperty("DaprConfigEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DaprConfigHttpReadBufferSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpReadBufferSize = (int?) content.GetValueForProperty("DaprConfigHttpReadBufferSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpReadBufferSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DaprConfigHttpMaxRequestSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpMaxRequestSize = (int?) content.GetValueForProperty("DaprConfigHttpMaxRequestSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpMaxRequestSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DaprConfigLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaprLogLevel?) content.GetValueForProperty("DaprConfigLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigLogLevel, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaprLogLevel.CreateFrom);
            }
            if (content.Contains("DaprConfigEnableApiLogging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnableApiLogging = (bool?) content.GetValueForProperty("DaprConfigEnableApiLogging",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnableApiLogging, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoOverwrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoOverwrite = (bool?) content.GetValueForProperty("CloningInfoOverwrite",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoOverwrite, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoCloneCustomHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneCustomHostName = (bool?) content.GetValueForProperty("CloningInfoCloneCustomHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneCustomHostName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoCloneSourceControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneSourceControl = (bool?) content.GetValueForProperty("CloningInfoCloneSourceControl",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneSourceControl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoSourceWebAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppId = (string) content.GetValueForProperty("CloningInfoSourceWebAppId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoSourceWebAppLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppLocation = (string) content.GetValueForProperty("CloningInfoSourceWebAppLocation",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppLocation, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoAppSettingsOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoAppSettingsOverride = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICloningInfoAppSettingsOverrides) content.GetValueForProperty("CloningInfoAppSettingsOverride",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoAppSettingsOverride, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CloningInfoAppSettingsOverridesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloningInfoConfigureLoadBalancing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoConfigureLoadBalancing = (bool?) content.GetValueForProperty("CloningInfoConfigureLoadBalancing",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoConfigureLoadBalancing, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoTrafficManagerProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileId = (string) content.GetValueForProperty("CloningInfoTrafficManagerProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoTrafficManagerProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileName = (string) content.GetValueForProperty("CloningInfoTrafficManagerProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusSourceSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusSourceSlotName = (string) content.GetValueForProperty("SlotSwapStatusSourceSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusSourceSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusDestinationSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusDestinationSlotName = (string) content.GetValueForProperty("SlotSwapStatusDestinationSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusDestinationSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("DeploymentStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DeploymentStorage = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorage) content.GetValueForProperty("DeploymentStorage",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DeploymentStorage, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeVersion = (string) content.GetValueForProperty("RuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleAndConcurrencyTrigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyTrigger = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrencyTriggers) content.GetValueForProperty("ScaleAndConcurrencyTrigger",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyTrigger, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTriggersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScaleAndConcurrencyAlwaysReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyAlwaysReady = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsAlwaysReadyConfig[]) content.GetValueForProperty("ScaleAndConcurrencyAlwaysReady",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyAlwaysReady, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsAlwaysReadyConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsAlwaysReadyConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScaleAndConcurrencyMaximumInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyMaximumInstanceCount = (float?) content.GetValueForProperty("ScaleAndConcurrencyMaximumInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyMaximumInstanceCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ScaleAndConcurrencyInstanceMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyInstanceMemoryMb = (float?) content.GetValueForProperty("ScaleAndConcurrencyInstanceMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyInstanceMemoryMb, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("StorageAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication) content.GetValueForProperty("StorageAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAuthentication, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageAuthenticationTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageType = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType?) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageType, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType.CreateFrom);
            }
            if (content.Contains("StorageValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageValue = (string) content.GetValueForProperty("StorageValue",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageValue, global::System.Convert.ToString);
            }
            if (content.Contains("AuthenticationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationType = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType?) content.GetValueForProperty("AuthenticationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationType, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType.CreateFrom);
            }
            if (content.Contains("TriggerHttp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TriggerHttp = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrencyTriggersHttp) content.GetValueForProperty("TriggerHttp",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TriggerHttp, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTriggersHttpTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthenticationUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AuthenticationUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AuthenticationStorageAccountConnectionStringName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationStorageAccountConnectionStringName = (string) content.GetValueForProperty("AuthenticationStorageAccountConnectionStringName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationStorageAccountConnectionStringName, global::System.Convert.ToString);
            }
            if (content.Contains("HttpPerInstanceConcurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpPerInstanceConcurrency = (float?) content.GetValueForProperty("HttpPerInstanceConcurrency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpPerInstanceConcurrency, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SiteProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DnsConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteDnsConfig) content.GetValueForProperty("DnsConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteDnsConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionAppConfig) content.GetValueForProperty("FunctionAppConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionAppConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDaprConfig) content.GetValueForProperty("DaprConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DaprConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("ResourceConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceConfig) content.GetValueForProperty("ResourceConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("HostingEnvironmentProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfile = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostingEnvironmentProfile) content.GetValueForProperty("HostingEnvironmentProfile",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfile, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.HostingEnvironmentProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloningInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfo = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICloningInfo) content.GetValueForProperty("CloningInfo",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfo, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CloningInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("SlotSwapStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatus = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISlotSwapStatus) content.GetValueForProperty("SlotSwapStatus",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatus, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SlotSwapStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).State = (string) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).State, global::System.Convert.ToString);
            }
            if (content.Contains("HostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostName = (string[]) content.GetValueForProperty("HostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("RepositorySiteName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RepositorySiteName = (string) content.GetValueForProperty("RepositorySiteName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RepositorySiteName, global::System.Convert.ToString);
            }
            if (content.Contains("UsageState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).UsageState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UsageState?) content.GetValueForProperty("UsageState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).UsageState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UsageState.CreateFrom);
            }
            if (content.Contains("Enabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Enabled = (bool?) content.GetValueForProperty("Enabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Enabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).EnabledHostName = (string[]) content.GetValueForProperty("EnabledHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).EnabledHostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SiteAvailabilityState?) content.GetValueForProperty("AvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SiteAvailabilityState.CreateFrom);
            }
            if (content.Contains("HostNameSslState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNameSslState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostNameSslState[]) content.GetValueForProperty("HostNameSslState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNameSslState, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IHostNameSslState>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.HostNameSslStateTypeConverter.ConvertFrom));
            }
            if (content.Contains("ServerFarmId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ServerFarmId = (string) content.GetValueForProperty("ServerFarmId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ServerFarmId, global::System.Convert.ToString);
            }
            if (content.Contains("Reserved"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Reserved = (bool?) content.GetValueForProperty("Reserved",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).Reserved, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsXenon"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsXenon = (bool?) content.GetValueForProperty("IsXenon",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsXenon, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("HyperV"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HyperV = (bool?) content.GetValueForProperty("HyperV",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HyperV, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LastModifiedTimeUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).LastModifiedTimeUtc = (global::System.DateTime?) content.GetValueForProperty("LastModifiedTimeUtc",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).LastModifiedTimeUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("VnetRouteAllEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetRouteAllEnabled = (bool?) content.GetValueForProperty("VnetRouteAllEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetRouteAllEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetImagePullEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetImagePullEnabled = (bool?) content.GetValueForProperty("VnetImagePullEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetImagePullEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetContentShareEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetContentShareEnabled = (bool?) content.GetValueForProperty("VnetContentShareEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetContentShareEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VnetBackupRestoreEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetBackupRestoreEnabled = (bool?) content.GetValueForProperty("VnetBackupRestoreEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VnetBackupRestoreEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WorkloadProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).WorkloadProfileName = (string) content.GetValueForProperty("WorkloadProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).WorkloadProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("TrafficManagerHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TrafficManagerHostName = (string[]) content.GetValueForProperty("TrafficManagerHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TrafficManagerHostName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScmSiteAlsoStopped"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScmSiteAlsoStopped = (bool?) content.GetValueForProperty("ScmSiteAlsoStopped",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScmSiteAlsoStopped, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TargetSwapSlot"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TargetSwapSlot = (string) content.GetValueForProperty("TargetSwapSlot",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TargetSwapSlot, global::System.Convert.ToString);
            }
            if (content.Contains("ClientAffinityEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientAffinityEnabled = (bool?) content.GetValueForProperty("ClientAffinityEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientAffinityEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClientCertEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertEnabled = (bool?) content.GetValueForProperty("ClientCertEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClientCertMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ClientCertMode?) content.GetValueForProperty("ClientCertMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ClientCertMode.CreateFrom);
            }
            if (content.Contains("ClientCertExclusionPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertExclusionPath = (string) content.GetValueForProperty("ClientCertExclusionPath",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ClientCertExclusionPath, global::System.Convert.ToString);
            }
            if (content.Contains("HostNamesDisabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNamesDisabled = (bool?) content.GetValueForProperty("HostNamesDisabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostNamesDisabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomDomainVerificationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CustomDomainVerificationId = (string) content.GetValueForProperty("CustomDomainVerificationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CustomDomainVerificationId, global::System.Convert.ToString);
            }
            if (content.Contains("OutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).OutboundIPAddress = (string) content.GetValueForProperty("OutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).OutboundIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("PossibleOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PossibleOutboundIPAddress = (string) content.GetValueForProperty("PossibleOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PossibleOutboundIPAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ContainerSize = (int?) content.GetValueForProperty("ContainerSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ContainerSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DailyMemoryTimeQuota"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DailyMemoryTimeQuota = (int?) content.GetValueForProperty("DailyMemoryTimeQuota",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DailyMemoryTimeQuota, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SuspendedTill"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SuspendedTill = (global::System.DateTime?) content.GetValueForProperty("SuspendedTill",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SuspendedTill, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MaxNumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).MaxNumberOfWorker = (int?) content.GetValueForProperty("MaxNumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).MaxNumberOfWorker, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceGroup = (string) content.GetValueForProperty("ResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("IsDefaultContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsDefaultContainer = (bool?) content.GetValueForProperty("IsDefaultContainer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).IsDefaultContainer, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DefaultHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DefaultHostName = (string) content.GetValueForProperty("DefaultHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DefaultHostName, global::System.Convert.ToString);
            }
            if (content.Contains("HttpsOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpsOnly = (bool?) content.GetValueForProperty("HttpsOnly",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpsOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RedundancyMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RedundancyMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RedundancyMode?) content.GetValueForProperty("RedundancyMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RedundancyMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RedundancyMode.CreateFrom);
            }
            if (content.Contains("InProgressOperationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).InProgressOperationId = (string) content.GetValueForProperty("InProgressOperationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).InProgressOperationId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountRequired"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAccountRequired = (bool?) content.GetValueForProperty("StorageAccountRequired",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAccountRequired, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkSubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VirtualNetworkSubnetId = (string) content.GetValueForProperty("VirtualNetworkSubnetId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).VirtualNetworkSubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedEnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ManagedEnvironmentId = (string) content.GetValueForProperty("ManagedEnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ManagedEnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("SiteConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SiteConfig = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteConfig) content.GetValueForProperty("SiteConfig",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SiteConfig, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SiteConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DaprConfigAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppId = (string) content.GetValueForProperty("DaprConfigAppId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppId, global::System.Convert.ToString);
            }
            if (content.Contains("DaprConfigAppPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppPort = (int?) content.GetValueForProperty("DaprConfigAppPort",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigAppPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ResourceConfigCpu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigCpu = (double?) content.GetValueForProperty("ResourceConfigCpu",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigCpu, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ResourceConfigMemory"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigMemory = (string) content.GetValueForProperty("ResourceConfigMemory",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ResourceConfigMemory, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileId = (string) content.GetValueForProperty("HostingEnvironmentProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileName = (string) content.GetValueForProperty("HostingEnvironmentProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("HostingEnvironmentProfileType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileType = (string) content.GetValueForProperty("HostingEnvironmentProfileType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HostingEnvironmentProfileType, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoCorrelationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCorrelationId = (string) content.GetValueForProperty("CloningInfoCorrelationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCorrelationId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoHostingEnvironment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoHostingEnvironment = (string) content.GetValueForProperty("CloningInfoHostingEnvironment",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoHostingEnvironment, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusTimestampUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusTimestampUtc = (global::System.DateTime?) content.GetValueForProperty("SlotSwapStatusTimestampUtc",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusTimestampUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DnsConfigurationDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsServer = (string[]) content.GetValueForProperty("DnsConfigurationDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DnsConfigurationDnsAltServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsAltServer = (string) content.GetValueForProperty("DnsConfigurationDnsAltServer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsAltServer, global::System.Convert.ToString);
            }
            if (content.Contains("DnsConfigurationDnsRetryAttemptTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptTimeout = (int?) content.GetValueForProperty("DnsConfigurationDnsRetryAttemptTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsRetryAttemptCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptCount = (int?) content.GetValueForProperty("DnsConfigurationDnsRetryAttemptCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsRetryAttemptCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsMaxCacheTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsMaxCacheTimeout = (int?) content.GetValueForProperty("DnsConfigurationDnsMaxCacheTimeout",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsMaxCacheTimeout, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsConfigurationDnsLegacySortOrder"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsLegacySortOrder = (bool?) content.GetValueForProperty("DnsConfigurationDnsLegacySortOrder",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DnsConfigurationDnsLegacySortOrder, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FunctionAppConfigDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigDeployment = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeployment) content.GetValueForProperty("FunctionAppConfigDeployment",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigDeployment, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfigRuntime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigRuntime = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsRuntime) content.GetValueForProperty("FunctionAppConfigRuntime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigRuntime, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsRuntimeTypeConverter.ConvertFrom);
            }
            if (content.Contains("FunctionAppConfigScaleAndConcurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigScaleAndConcurrency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrency) content.GetValueForProperty("FunctionAppConfigScaleAndConcurrency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).FunctionAppConfigScaleAndConcurrency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeName = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RuntimeName?) content.GetValueForProperty("RuntimeName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeName, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RuntimeName.CreateFrom);
            }
            if (content.Contains("DaprConfigEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnabled = (bool?) content.GetValueForProperty("DaprConfigEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DaprConfigHttpReadBufferSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpReadBufferSize = (int?) content.GetValueForProperty("DaprConfigHttpReadBufferSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpReadBufferSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DaprConfigHttpMaxRequestSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpMaxRequestSize = (int?) content.GetValueForProperty("DaprConfigHttpMaxRequestSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigHttpMaxRequestSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DaprConfigLogLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigLogLevel = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaprLogLevel?) content.GetValueForProperty("DaprConfigLogLevel",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigLogLevel, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaprLogLevel.CreateFrom);
            }
            if (content.Contains("DaprConfigEnableApiLogging"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnableApiLogging = (bool?) content.GetValueForProperty("DaprConfigEnableApiLogging",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DaprConfigEnableApiLogging, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoOverwrite"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoOverwrite = (bool?) content.GetValueForProperty("CloningInfoOverwrite",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoOverwrite, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoCloneCustomHostName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneCustomHostName = (bool?) content.GetValueForProperty("CloningInfoCloneCustomHostName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneCustomHostName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoCloneSourceControl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneSourceControl = (bool?) content.GetValueForProperty("CloningInfoCloneSourceControl",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoCloneSourceControl, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoSourceWebAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppId = (string) content.GetValueForProperty("CloningInfoSourceWebAppId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoSourceWebAppLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppLocation = (string) content.GetValueForProperty("CloningInfoSourceWebAppLocation",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoSourceWebAppLocation, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoAppSettingsOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoAppSettingsOverride = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICloningInfoAppSettingsOverrides) content.GetValueForProperty("CloningInfoAppSettingsOverride",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoAppSettingsOverride, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CloningInfoAppSettingsOverridesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CloningInfoConfigureLoadBalancing"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoConfigureLoadBalancing = (bool?) content.GetValueForProperty("CloningInfoConfigureLoadBalancing",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoConfigureLoadBalancing, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CloningInfoTrafficManagerProfileId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileId = (string) content.GetValueForProperty("CloningInfoTrafficManagerProfileId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileId, global::System.Convert.ToString);
            }
            if (content.Contains("CloningInfoTrafficManagerProfileName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileName = (string) content.GetValueForProperty("CloningInfoTrafficManagerProfileName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).CloningInfoTrafficManagerProfileName, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusSourceSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusSourceSlotName = (string) content.GetValueForProperty("SlotSwapStatusSourceSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusSourceSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("SlotSwapStatusDestinationSlotName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusDestinationSlotName = (string) content.GetValueForProperty("SlotSwapStatusDestinationSlotName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).SlotSwapStatusDestinationSlotName, global::System.Convert.ToString);
            }
            if (content.Contains("DeploymentStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DeploymentStorage = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorage) content.GetValueForProperty("DeploymentStorage",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).DeploymentStorage, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeVersion = (string) content.GetValueForProperty("RuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).RuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ScaleAndConcurrencyTrigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyTrigger = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrencyTriggers) content.GetValueForProperty("ScaleAndConcurrencyTrigger",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyTrigger, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTriggersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ScaleAndConcurrencyAlwaysReady"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyAlwaysReady = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsAlwaysReadyConfig[]) content.GetValueForProperty("ScaleAndConcurrencyAlwaysReady",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyAlwaysReady, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsAlwaysReadyConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsAlwaysReadyConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScaleAndConcurrencyMaximumInstanceCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyMaximumInstanceCount = (float?) content.GetValueForProperty("ScaleAndConcurrencyMaximumInstanceCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyMaximumInstanceCount, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("ScaleAndConcurrencyInstanceMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyInstanceMemoryMb = (float?) content.GetValueForProperty("ScaleAndConcurrencyInstanceMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).ScaleAndConcurrencyInstanceMemoryMb, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            if (content.Contains("StorageAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication) content.GetValueForProperty("StorageAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageAuthentication, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageAuthenticationTypeConverter.ConvertFrom);
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageType = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType?) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageType, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType.CreateFrom);
            }
            if (content.Contains("StorageValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageValue = (string) content.GetValueForProperty("StorageValue",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).StorageValue, global::System.Convert.ToString);
            }
            if (content.Contains("AuthenticationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationType = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType?) content.GetValueForProperty("AuthenticationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationType, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType.CreateFrom);
            }
            if (content.Contains("TriggerHttp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TriggerHttp = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsScaleAndConcurrencyTriggersHttp) content.GetValueForProperty("TriggerHttp",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).TriggerHttp, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsScaleAndConcurrencyTriggersHttpTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthenticationUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AuthenticationUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AuthenticationStorageAccountConnectionStringName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationStorageAccountConnectionStringName = (string) content.GetValueForProperty("AuthenticationStorageAccountConnectionStringName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).AuthenticationStorageAccountConnectionStringName, global::System.Convert.ToString);
            }
            if (content.Contains("HttpPerInstanceConcurrency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpPerInstanceConcurrency = (float?) content.GetValueForProperty("HttpPerInstanceConcurrency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISitePropertiesInternal)this).HttpPerInstanceConcurrency, (__y)=> (float) global::System.Convert.ChangeType(__y, typeof(float)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Site resource specific properties
    [System.ComponentModel.TypeConverter(typeof(SitePropertiesTypeConverter))]
    public partial interface ISiteProperties

    {

    }
}