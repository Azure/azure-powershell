// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>The workflow trigger.</summary>
    public partial class WorkflowTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTrigger,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.SubResource();

        /// <summary>Gets the changed time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? ChangedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ChangedTime; }

        /// <summary>Gets the created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).CreatedTime; }

        /// <summary>The resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResourceInternal)__subResource).Id; }

        /// <summary>Gets the last execution time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastExecutionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).LastExecutionTime; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResourceInternal)__subResource).Id = value; }

        /// <summary>Internal Acessors for ChangedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.ChangedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ChangedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ChangedTime = value; }

        /// <summary>Internal Acessors for CreatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.CreatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).CreatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).CreatedTime = value; }

        /// <summary>Internal Acessors for LastExecutionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.LastExecutionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).LastExecutionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).LastExecutionTime = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NextExecutionTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.NextExecutionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).NextExecutionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).NextExecutionTime = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Recurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Recurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Recurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Recurrence = value; }

        /// <summary>Internal Acessors for RecurrenceSchedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.RecurrenceSchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceSchedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceSchedule = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).State = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Workflow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.Workflow { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Workflow; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Workflow = value; }

        /// <summary>Internal Acessors for WorkflowName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.WorkflowName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowName = value; }

        /// <summary>Internal Acessors for WorkflowType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerInternal.WorkflowType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowType = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Gets the workflow trigger name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Gets the next execution time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextExecutionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).NextExecutionTime; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties _property;

        /// <summary>The workflow trigger properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties()); set => this._property = value; }

        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string RecurrenceEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceEndTime = value ?? null; }

        /// <summary>The frequency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency? RecurrenceFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency)""); }

        /// <summary>The interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public int? RecurrenceInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceInterval = value ?? default(int); }

        /// <summary>The start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string RecurrenceStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceStartTime = value ?? null; }

        /// <summary>The time zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string RecurrenceTimeZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceTimeZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).RecurrenceTimeZone = value ?? null; }

        /// <summary>The hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public int[] ScheduleHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleHour = value ?? null /* arrayOf */; }

        /// <summary>The minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public int[] ScheduleMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMinute = value ?? null /* arrayOf */; }

        /// <summary>The month days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public int[] ScheduleMonthDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMonthDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMonthDay = value ?? null /* arrayOf */; }

        /// <summary>The monthly occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[] ScheduleMonthlyOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMonthlyOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleMonthlyOccurrence = value ?? null /* arrayOf */; }

        /// <summary>The days of the week.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[] ScheduleWeekDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleWeekDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).ScheduleWeekDay = value ?? null /* arrayOf */; }

        /// <summary>Gets the state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).State; }

        /// <summary>Gets the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).Status; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Gets the workflow trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>The resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WorkflowId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowId = value ?? null; }

        /// <summary>Gets the resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WorkflowName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowName; }

        /// <summary>Gets the resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WorkflowType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)Property).WorkflowType; }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }

        /// <summary>Creates an new <see cref="WorkflowTrigger" /> instance.</summary>
        public WorkflowTrigger()
        {

        }
    }
    /// The workflow trigger.
    public partial interface IWorkflowTrigger :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResource
    {
        /// <summary>Gets the changed time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the changed time.",
        SerializedName = @"changedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ChangedTime { get;  }
        /// <summary>Gets the created time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the created time.",
        SerializedName = @"createdTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTime { get;  }
        /// <summary>Gets the last execution time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the last execution time.",
        SerializedName = @"lastExecutionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastExecutionTime { get;  }
        /// <summary>Gets the workflow trigger name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the workflow trigger name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Gets the next execution time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the next execution time.",
        SerializedName = @"nextExecutionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextExecutionTime { get;  }
        /// <summary>Gets the provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState? ProvisioningState { get;  }
        /// <summary>The end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceEndTime { get; set; }
        /// <summary>The frequency.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The frequency.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency? RecurrenceFrequency { get; set; }
        /// <summary>The interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? RecurrenceInterval { get; set; }
        /// <summary>The start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceStartTime { get; set; }
        /// <summary>The time zone.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time zone.",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string RecurrenceTimeZone { get; set; }
        /// <summary>The hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hours.",
        SerializedName = @"hours",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleHour { get; set; }
        /// <summary>The minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minutes.",
        SerializedName = @"minutes",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMinute { get; set; }
        /// <summary>The month days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The month days.",
        SerializedName = @"monthDays",
        PossibleTypes = new [] { typeof(int) })]
        int[] ScheduleMonthDay { get; set; }
        /// <summary>The monthly occurrences.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The monthly occurrences.",
        SerializedName = @"monthlyOccurrences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[] ScheduleMonthlyOccurrence { get; set; }
        /// <summary>The days of the week.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The days of the week.",
        SerializedName = @"weekDays",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[] ScheduleWeekDay { get; set; }
        /// <summary>Gets the state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState? State { get;  }
        /// <summary>Gets the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus? Status { get;  }
        /// <summary>Gets the workflow trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the workflow trigger type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>The resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowId { get; set; }
        /// <summary>Gets the resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowName { get;  }
        /// <summary>Gets the resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string WorkflowType { get;  }

    }
    /// The workflow trigger.
    internal partial interface IWorkflowTriggerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISubResourceInternal
    {
        /// <summary>Gets the changed time.</summary>
        global::System.DateTime? ChangedTime { get; set; }
        /// <summary>Gets the created time.</summary>
        global::System.DateTime? CreatedTime { get; set; }
        /// <summary>Gets the last execution time.</summary>
        global::System.DateTime? LastExecutionTime { get; set; }
        /// <summary>Gets the workflow trigger name.</summary>
        string Name { get; set; }
        /// <summary>Gets the next execution time.</summary>
        global::System.DateTime? NextExecutionTime { get; set; }
        /// <summary>The workflow trigger properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties Property { get; set; }
        /// <summary>Gets the provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState? ProvisioningState { get; set; }
        /// <summary>Gets the workflow trigger recurrence.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence Recurrence { get; set; }
        /// <summary>The end time.</summary>
        string RecurrenceEndTime { get; set; }
        /// <summary>The frequency.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency? RecurrenceFrequency { get; set; }
        /// <summary>The interval.</summary>
        int? RecurrenceInterval { get; set; }
        /// <summary>The recurrence schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule RecurrenceSchedule { get; set; }
        /// <summary>The start time.</summary>
        string RecurrenceStartTime { get; set; }
        /// <summary>The time zone.</summary>
        string RecurrenceTimeZone { get; set; }
        /// <summary>The hours.</summary>
        int[] ScheduleHour { get; set; }
        /// <summary>The minutes.</summary>
        int[] ScheduleMinute { get; set; }
        /// <summary>The month days.</summary>
        int[] ScheduleMonthDay { get; set; }
        /// <summary>The monthly occurrences.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[] ScheduleMonthlyOccurrence { get; set; }
        /// <summary>The days of the week.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[] ScheduleWeekDay { get; set; }
        /// <summary>Gets the state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState? State { get; set; }
        /// <summary>Gets the status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus? Status { get; set; }
        /// <summary>Gets the workflow trigger type.</summary>
        string Type { get; set; }
        /// <summary>Gets the reference to workflow.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceReference Workflow { get; set; }
        /// <summary>The resource id.</summary>
        string WorkflowId { get; set; }
        /// <summary>Gets the resource name.</summary>
        string WorkflowName { get; set; }
        /// <summary>Gets the resource type.</summary>
        string WorkflowType { get; set; }

    }
}