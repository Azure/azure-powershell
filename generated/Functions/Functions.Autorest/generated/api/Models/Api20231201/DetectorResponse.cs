// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Class representing Response from Detector</summary>
    public partial class DetectorResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource __proxyOnlyResource = new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ProxyOnlyResource();

        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).DataProvidersMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).DataProvidersMetadata = value ?? null /* arrayOf */; }

        /// <summary>Data Set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Dataset; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Dataset = value ?? null /* arrayOf */; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; }

        /// <summary>Kind of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind = value ?? null; }

        /// <summary>Analysis Types for which this detector should apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string[] MetadataAnalysisType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAnalysisType; }

        /// <summary>Author of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAuthor; }

        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataCategory; }

        /// <summary>Short description of the detector and its purpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataDescription; }

        /// <summary>Id of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataId; }

        /// <summary>Name of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataName; }

        /// <summary>Defines score of a detector to power ML based matching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public float? MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataScore; }

        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataSupportTopicList; }

        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataType; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Metadata = value; }

        /// <summary>Internal Acessors for MetadataAnalysisType</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataAnalysisType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAnalysisType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAnalysisType = value; }

        /// <summary>Internal Acessors for MetadataAuthor</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAuthor; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataAuthor = value; }

        /// <summary>Internal Acessors for MetadataCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataCategory = value; }

        /// <summary>Internal Acessors for MetadataDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataDescription = value; }

        /// <summary>Internal Acessors for MetadataId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataId = value; }

        /// <summary>Internal Acessors for MetadataName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataName = value; }

        /// <summary>Internal Acessors for MetadataScore</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataScore; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataScore = value; }

        /// <summary>Internal Acessors for MetadataSupportTopicList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataSupportTopicList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataSupportTopicList; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataSupportTopicList = value; }

        /// <summary>Internal Acessors for MetadataType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).MetadataType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DetectorResponseProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for SuggestedUtterance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseInternal.SuggestedUtterance { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtterance; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtterance = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type = value; }

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseProperties _property;

        /// <summary>DetectorResponse resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DetectorResponseProperties()); set => this._property = value; }

        /// <summary>Level of the most severe insight generated by the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).StatusId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).StatusId = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus)""); }

        /// <summary>Descriptive message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).StatusMessage = value ?? null; }

        /// <summary>Search Query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string SuggestedUtteranceQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtteranceQuery; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtteranceQuery = value ?? null; }

        /// <summary>Array of utterance results for search query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtteranceResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal)Property).SuggestedUtteranceResult = value ?? null /* arrayOf */; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; }

        /// <summary>Creates an new <see cref="DetectorResponse" /> instance.</summary>
        public DetectorResponse()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyOnlyResource), __proxyOnlyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyOnlyResource), __proxyOnlyResource);
        }
    }
    /// Class representing Response from Detector
    public partial interface IDetectorResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource
    {
        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional configuration for different data providers to be used by the UI",
        SerializedName = @"dataProvidersMetadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get; set; }
        /// <summary>Data Set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data Set",
        SerializedName = @"dataset",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get; set; }
        /// <summary>Analysis Types for which this detector should apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Analysis Types for which this detector should apply to.",
        SerializedName = @"analysisType",
        PossibleTypes = new [] { typeof(string) })]
        string[] MetadataAnalysisType { get;  }
        /// <summary>Author of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Author of the detector.",
        SerializedName = @"author",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataAuthor { get;  }
        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Problem category. This serves for organizing group for detectors.",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCategory { get;  }
        /// <summary>Short description of the detector and its purpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Short description of the detector and its purpose.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDescription { get;  }
        /// <summary>Id of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of detector",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataId { get;  }
        /// <summary>Name of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of detector",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataName { get;  }
        /// <summary>Defines score of a detector to power ML based matching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Defines score of a detector to power ML based matching.",
        SerializedName = @"score",
        PossibleTypes = new [] { typeof(float) })]
        float? MetadataScore { get;  }
        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Support Topics for which this detector is enabled.",
        SerializedName = @"supportTopicList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get;  }
        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether this detector is an Analysis Detector or not.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get;  }
        /// <summary>Level of the most severe insight generated by the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of the most severe insight generated by the detector.",
        SerializedName = @"statusId",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get; set; }
        /// <summary>Descriptive message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Descriptive message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get; set; }
        /// <summary>Search Query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Search Query.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string SuggestedUtteranceQuery { get; set; }
        /// <summary>Array of utterance results for search query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of utterance results for search query.",
        SerializedName = @"results",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get; set; }

    }
    /// Class representing Response from Detector
    internal partial interface IDetectorResponseInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal
    {
        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get; set; }
        /// <summary>Data Set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get; set; }
        /// <summary>metadata for the detector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo Metadata { get; set; }
        /// <summary>Analysis Types for which this detector should apply to.</summary>
        string[] MetadataAnalysisType { get; set; }
        /// <summary>Author of the detector.</summary>
        string MetadataAuthor { get; set; }
        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        string MetadataCategory { get; set; }
        /// <summary>Short description of the detector and its purpose.</summary>
        string MetadataDescription { get; set; }
        /// <summary>Id of detector</summary>
        string MetadataId { get; set; }
        /// <summary>Name of detector</summary>
        string MetadataName { get; set; }
        /// <summary>Defines score of a detector to power ML based matching.</summary>
        float? MetadataScore { get; set; }
        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get; set; }
        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get; set; }
        /// <summary>DetectorResponse resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseProperties Property { get; set; }
        /// <summary>Indicates status of the most severe insight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus Status { get; set; }
        /// <summary>Level of the most severe insight generated by the detector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get; set; }
        /// <summary>Descriptive message.</summary>
        string StatusMessage { get; set; }
        /// <summary>Suggested utterances where the detector can be applicable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults SuggestedUtterance { get; set; }
        /// <summary>Search Query.</summary>
        string SuggestedUtteranceQuery { get; set; }
        /// <summary>Array of utterance results for search query.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get; set; }

    }
}