// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>Web App stack runtimes.</summary>
    [System.ComponentModel.TypeConverter(typeof(WebAppRuntimesTypeConverter))]
    public partial class WebAppRuntimes
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new WebAppRuntimes(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new WebAppRuntimes(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="WebAppRuntimes" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="WebAppRuntimes" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal WebAppRuntimes(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("LinuxRuntimeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings) content.GetValueForProperty("LinuxRuntimeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsRuntimeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings) content.GetValueForProperty("WindowsRuntimeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings) content.GetValueForProperty("LinuxContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.LinuxJavaContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings) content.GetValueForProperty("WindowsContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WindowsJavaContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingAppInsightsSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingAppInsightsSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings) content.GetValueForProperty("LinuxRuntimeSettingAppInsightsSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingAppInsightsSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppInsightsWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingGitHubActionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingGitHubActionSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings) content.GetValueForProperty("LinuxRuntimeSettingGitHubActionSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingGitHubActionSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.GitHubActionWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRuntimeVersion = (string) content.GetValueForProperty("LinuxRuntimeSettingRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxRuntimeSettingRemoteDebuggingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRemoteDebuggingSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingRemoteDebuggingSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRemoteDebuggingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsPreview = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsDeprecated = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsHidden = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("LinuxRuntimeSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LinuxRuntimeSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsAutoUpdate = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsEarlyAccess = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingAppInsightsSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingAppInsightsSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings) content.GetValueForProperty("WindowRuntimeSettingAppInsightsSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingAppInsightsSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppInsightsWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowRuntimeSettingGitHubActionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingGitHubActionSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings) content.GetValueForProperty("WindowRuntimeSettingGitHubActionSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingGitHubActionSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.GitHubActionWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowRuntimeSettingRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRuntimeVersion = (string) content.GetValueForProperty("WindowRuntimeSettingRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowRuntimeSettingRemoteDebuggingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRemoteDebuggingSupported = (bool?) content.GetValueForProperty("WindowRuntimeSettingRemoteDebuggingSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRemoteDebuggingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsPreview = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsDeprecated = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsHidden = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("WindowRuntimeSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("WindowRuntimeSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsAutoUpdate = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsEarlyAccess = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingJava11Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava11Runtime = (string) content.GetValueForProperty("LinuxContainerSettingJava11Runtime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava11Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxContainerSettingJava8Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava8Runtime = (string) content.GetValueForProperty("LinuxContainerSettingJava8Runtime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava8Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxContainerSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsPreview = (bool?) content.GetValueForProperty("LinuxContainerSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsDeprecated = (bool?) content.GetValueForProperty("LinuxContainerSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsHidden = (bool?) content.GetValueForProperty("LinuxContainerSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("LinuxContainerSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LinuxContainerSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsAutoUpdate = (bool?) content.GetValueForProperty("LinuxContainerSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsEarlyAccess = (bool?) content.GetValueForProperty("LinuxContainerSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingJavaContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainer = (string) content.GetValueForProperty("WindowContainerSettingJavaContainer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainer, global::System.Convert.ToString);
            }
            if (content.Contains("WindowContainerSettingJavaContainerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainerVersion = (string) content.GetValueForProperty("WindowContainerSettingJavaContainerVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowContainerSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsPreview = (bool?) content.GetValueForProperty("WindowContainerSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsDeprecated = (bool?) content.GetValueForProperty("WindowContainerSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsHidden = (bool?) content.GetValueForProperty("WindowContainerSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("WindowContainerSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("WindowContainerSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsAutoUpdate = (bool?) content.GetValueForProperty("WindowContainerSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsEarlyAccess = (bool?) content.GetValueForProperty("WindowContainerSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsAppInsightsSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsAppInsightsSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsGitHubActionSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsIsSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsGitHubActionSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion = (string) content.GetValueForProperty("LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsRuntimeSettingsAppInsightsSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsSupported = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsAppInsightsSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsGitHubActionSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsIsSupported = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsGitHubActionSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion = (string) content.GetValueForProperty("WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimes"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal WebAppRuntimes(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("LinuxRuntimeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings) content.GetValueForProperty("LinuxRuntimeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsRuntimeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings) content.GetValueForProperty("WindowsRuntimeSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings) content.GetValueForProperty("LinuxContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.LinuxJavaContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowsContainerSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsContainerSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings) content.GetValueForProperty("WindowsContainerSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsContainerSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WindowsJavaContainerSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingAppInsightsSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingAppInsightsSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings) content.GetValueForProperty("LinuxRuntimeSettingAppInsightsSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingAppInsightsSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppInsightsWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingGitHubActionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingGitHubActionSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings) content.GetValueForProperty("LinuxRuntimeSettingGitHubActionSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingGitHubActionSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.GitHubActionWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LinuxRuntimeSettingRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRuntimeVersion = (string) content.GetValueForProperty("LinuxRuntimeSettingRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxRuntimeSettingRemoteDebuggingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRemoteDebuggingSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingRemoteDebuggingSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingRemoteDebuggingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsPreview = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsDeprecated = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsHidden = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("LinuxRuntimeSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LinuxRuntimeSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsAutoUpdate = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsEarlyAccess = (bool?) content.GetValueForProperty("LinuxRuntimeSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingAppInsightsSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingAppInsightsSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings) content.GetValueForProperty("WindowRuntimeSettingAppInsightsSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingAppInsightsSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppInsightsWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowRuntimeSettingGitHubActionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingGitHubActionSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings) content.GetValueForProperty("WindowRuntimeSettingGitHubActionSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingGitHubActionSetting, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.GitHubActionWebAppStackSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("WindowRuntimeSettingRuntimeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRuntimeVersion = (string) content.GetValueForProperty("WindowRuntimeSettingRuntimeVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRuntimeVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowRuntimeSettingRemoteDebuggingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRemoteDebuggingSupported = (bool?) content.GetValueForProperty("WindowRuntimeSettingRemoteDebuggingSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingRemoteDebuggingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsPreview = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsDeprecated = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsHidden = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("WindowRuntimeSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("WindowRuntimeSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsAutoUpdate = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowRuntimeSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsEarlyAccess = (bool?) content.GetValueForProperty("WindowRuntimeSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowRuntimeSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingJava11Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava11Runtime = (string) content.GetValueForProperty("LinuxContainerSettingJava11Runtime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava11Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxContainerSettingJava8Runtime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava8Runtime = (string) content.GetValueForProperty("LinuxContainerSettingJava8Runtime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingJava8Runtime, global::System.Convert.ToString);
            }
            if (content.Contains("LinuxContainerSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsPreview = (bool?) content.GetValueForProperty("LinuxContainerSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsDeprecated = (bool?) content.GetValueForProperty("LinuxContainerSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsHidden = (bool?) content.GetValueForProperty("LinuxContainerSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("LinuxContainerSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LinuxContainerSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsAutoUpdate = (bool?) content.GetValueForProperty("LinuxContainerSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxContainerSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsEarlyAccess = (bool?) content.GetValueForProperty("LinuxContainerSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxContainerSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingJavaContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainer = (string) content.GetValueForProperty("WindowContainerSettingJavaContainer",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainer, global::System.Convert.ToString);
            }
            if (content.Contains("WindowContainerSettingJavaContainerVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainerVersion = (string) content.GetValueForProperty("WindowContainerSettingJavaContainerVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingJavaContainerVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowContainerSettingIsPreview"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsPreview = (bool?) content.GetValueForProperty("WindowContainerSettingIsPreview",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsPreview, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsDeprecated"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsDeprecated = (bool?) content.GetValueForProperty("WindowContainerSettingIsDeprecated",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsDeprecated, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsHidden"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsHidden = (bool?) content.GetValueForProperty("WindowContainerSettingIsHidden",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsHidden, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingEndOfLifeDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingEndOfLifeDate = (global::System.DateTime?) content.GetValueForProperty("WindowContainerSettingEndOfLifeDate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingEndOfLifeDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("WindowContainerSettingIsAutoUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsAutoUpdate = (bool?) content.GetValueForProperty("WindowContainerSettingIsAutoUpdate",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsAutoUpdate, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowContainerSettingIsEarlyAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsEarlyAccess = (bool?) content.GetValueForProperty("WindowContainerSettingIsEarlyAccess",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowContainerSettingIsEarlyAccess, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsAppInsightsSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsAppInsightsSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsGitHubActionSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsIsSupported = (bool?) content.GetValueForProperty("LinuxRuntimeSettingsGitHubActionSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion = (string) content.GetValueForProperty("LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsRuntimeSettingsAppInsightsSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsSupported = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsAppInsightsSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsGitHubActionSettingsIsSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsIsSupported = (bool?) content.GetValueForProperty("WindowsRuntimeSettingsGitHubActionSettingsIsSupported",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsIsSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion = (string) content.GetValueForProperty("WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal)this).WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Web App stack runtimes.
    [System.ComponentModel.TypeConverter(typeof(WebAppRuntimesTypeConverter))]
    public partial interface IWebAppRuntimes

    {

    }
}