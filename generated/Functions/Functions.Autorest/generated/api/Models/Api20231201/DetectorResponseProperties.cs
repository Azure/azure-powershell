// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>DetectorResponse resource specific properties</summary>
    public partial class DetectorResponseProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponseProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DataProvidersMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] _dataProvidersMetadata;

        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get => this._dataProvidersMetadata; set => this._dataProvidersMetadata = value; }

        /// <summary>Backing field for <see cref="Dataset" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] _dataset;

        /// <summary>Data Set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get => this._dataset; set => this._dataset = value; }

        /// <summary>Backing field for <see cref="Metadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo _metadata;

        /// <summary>metadata for the detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DetectorInfo()); set => this._metadata = value; }

        /// <summary>Analysis Types for which this detector should apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string[] MetadataAnalysisType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).AnalysisType; }

        /// <summary>Author of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Author; }

        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Category; }

        /// <summary>Short description of the detector and its purpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Description; }

        /// <summary>Id of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Id; }

        /// <summary>Name of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Name; }

        /// <summary>Defines score of a detector to power ML based matching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public float? MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Score; }

        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).SupportTopicList; }

        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Type; }

        /// <summary>Internal Acessors for Metadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.Metadata { get => (this._metadata = this._metadata ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DetectorInfo()); set { {_metadata = value;} } }

        /// <summary>Internal Acessors for MetadataAnalysisType</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataAnalysisType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).AnalysisType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).AnalysisType = value; }

        /// <summary>Internal Acessors for MetadataAuthor</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataAuthor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Author; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Author = value; }

        /// <summary>Internal Acessors for MetadataCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Category = value; }

        /// <summary>Internal Acessors for MetadataDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Description = value; }

        /// <summary>Internal Acessors for MetadataId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Id = value; }

        /// <summary>Internal Acessors for MetadataName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Name = value; }

        /// <summary>Internal Acessors for MetadataScore</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Score; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Score = value; }

        /// <summary>Internal Acessors for MetadataSupportTopicList</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataSupportTopicList { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).SupportTopicList; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).SupportTopicList = value; }

        /// <summary>Internal Acessors for MetadataType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.MetadataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfoInternal)Metadata).Type = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.Status()); set { {_status = value;} } }

        /// <summary>Internal Acessors for SuggestedUtterance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorResponsePropertiesInternal.SuggestedUtterance { get => (this._suggestedUtterance = this._suggestedUtterance ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.QueryUtterancesResults()); set { {_suggestedUtterance = value;} } }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus _status;

        /// <summary>Indicates status of the most severe insight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.Status()); set => this._status = value; }

        /// <summary>Level of the most severe insight generated by the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatusInternal)Status).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatusInternal)Status).Id = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus)""); }

        /// <summary>Descriptive message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatusInternal)Status).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatusInternal)Status).Message = value ?? null; }

        /// <summary>Backing field for <see cref="SuggestedUtterance" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults _suggestedUtterance;

        /// <summary>Suggested utterances where the detector can be applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults SuggestedUtterance { get => (this._suggestedUtterance = this._suggestedUtterance ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.QueryUtterancesResults()); set => this._suggestedUtterance = value; }

        /// <summary>Search Query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string SuggestedUtteranceQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResultsInternal)SuggestedUtterance).Query; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResultsInternal)SuggestedUtterance).Query = value ?? null; }

        /// <summary>Array of utterance results for search query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResultsInternal)SuggestedUtterance).Result; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResultsInternal)SuggestedUtterance).Result = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="DetectorResponseProperties" /> instance.</summary>
        public DetectorResponseProperties()
        {

        }
    }
    /// DetectorResponse resource specific properties
    public partial interface IDetectorResponseProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional configuration for different data providers to be used by the UI",
        SerializedName = @"dataProvidersMetadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get; set; }
        /// <summary>Data Set</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data Set",
        SerializedName = @"dataset",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get; set; }
        /// <summary>Analysis Types for which this detector should apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Analysis Types for which this detector should apply to.",
        SerializedName = @"analysisType",
        PossibleTypes = new [] { typeof(string) })]
        string[] MetadataAnalysisType { get;  }
        /// <summary>Author of the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Author of the detector.",
        SerializedName = @"author",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataAuthor { get;  }
        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Problem category. This serves for organizing group for detectors.",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataCategory { get;  }
        /// <summary>Short description of the detector and its purpose.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Short description of the detector and its purpose.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataDescription { get;  }
        /// <summary>Id of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of detector",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataId { get;  }
        /// <summary>Name of detector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of detector",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MetadataName { get;  }
        /// <summary>Defines score of a detector to power ML based matching.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Defines score of a detector to power ML based matching.",
        SerializedName = @"score",
        PossibleTypes = new [] { typeof(float) })]
        float? MetadataScore { get;  }
        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of Support Topics for which this detector is enabled.",
        SerializedName = @"supportTopicList",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get;  }
        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether this detector is an Analysis Detector or not.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get;  }
        /// <summary>Level of the most severe insight generated by the detector.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of the most severe insight generated by the detector.",
        SerializedName = @"statusId",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get; set; }
        /// <summary>Descriptive message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Descriptive message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get; set; }
        /// <summary>Search Query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Search Query.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string SuggestedUtteranceQuery { get; set; }
        /// <summary>Array of utterance results for search query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of utterance results for search query.",
        SerializedName = @"results",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get; set; }

    }
    /// DetectorResponse resource specific properties
    internal partial interface IDetectorResponsePropertiesInternal

    {
        /// <summary>Additional configuration for different data providers to be used by the UI</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDataProviderMetadata[] DataProvidersMetadata { get; set; }
        /// <summary>Data Set</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDiagnosticData[] Dataset { get; set; }
        /// <summary>metadata for the detector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDetectorInfo Metadata { get; set; }
        /// <summary>Analysis Types for which this detector should apply to.</summary>
        string[] MetadataAnalysisType { get; set; }
        /// <summary>Author of the detector.</summary>
        string MetadataAuthor { get; set; }
        /// <summary>Problem category. This serves for organizing group for detectors.</summary>
        string MetadataCategory { get; set; }
        /// <summary>Short description of the detector and its purpose.</summary>
        string MetadataDescription { get; set; }
        /// <summary>Id of detector</summary>
        string MetadataId { get; set; }
        /// <summary>Name of detector</summary>
        string MetadataName { get; set; }
        /// <summary>Defines score of a detector to power ML based matching.</summary>
        float? MetadataScore { get; set; }
        /// <summary>List of Support Topics for which this detector is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISupportTopic[] MetadataSupportTopicList { get; set; }
        /// <summary>Whether this detector is an Analysis Detector or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DetectorType? MetadataType { get; set; }
        /// <summary>Indicates status of the most severe insight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStatus Status { get; set; }
        /// <summary>Level of the most severe insight generated by the detector.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.InsightStatus? StatusId { get; set; }
        /// <summary>Descriptive message.</summary>
        string StatusMessage { get; set; }
        /// <summary>Suggested utterances where the detector can be applicable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResults SuggestedUtterance { get; set; }
        /// <summary>Search Query.</summary>
        string SuggestedUtteranceQuery { get; set; }
        /// <summary>Array of utterance results for search query.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IQueryUtterancesResult[] SuggestedUtteranceResult { get; set; }

    }
}