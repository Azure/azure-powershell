// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>ASE region resource specific properties</summary>
    public partial class AseRegionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailableOS" /> property.</summary>
        private string[] _availableOS;

        /// <summary>Available OSs in region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string[] AvailableOS { get => this._availableOS; set => this._availableOS = value; }

        /// <summary>Backing field for <see cref="AvailableSku" /> property.</summary>
        private string[] _availableSku;

        /// <summary>Available Skus in region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string[] AvailableSku { get => this._availableSku; set => this._availableSku = value; }

        /// <summary>Backing field for <see cref="DedicatedHost" /> property.</summary>
        private bool? _dedicatedHost;

        /// <summary>Dedicated host enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? DedicatedHost { get => this._dedicatedHost; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display name for region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Internal Acessors for DedicatedHost</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionPropertiesInternal.DedicatedHost { get => this._dedicatedHost; set { {_dedicatedHost = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for Standard</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionPropertiesInternal.Standard { get => this._standard; set { {_standard = value;} } }

        /// <summary>Internal Acessors for ZoneRedundant</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseRegionPropertiesInternal.ZoneRedundant { get => this._zoneRedundant; set { {_zoneRedundant = value;} } }

        /// <summary>Backing field for <see cref="Standard" /> property.</summary>
        private bool? _standard;

        /// <summary>Is region standard.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? Standard { get => this._standard; }

        /// <summary>Backing field for <see cref="ZoneRedundant" /> property.</summary>
        private bool? _zoneRedundant;

        /// <summary>Zone redundant deployment enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? ZoneRedundant { get => this._zoneRedundant; }

        /// <summary>Creates an new <see cref="AseRegionProperties" /> instance.</summary>
        public AseRegionProperties()
        {

        }
    }
    /// ASE region resource specific properties
    public partial interface IAseRegionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>Available OSs in region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available OSs in region.",
        SerializedName = @"availableOS",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailableOS { get; set; }
        /// <summary>Available Skus in region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Available Skus in region.",
        SerializedName = @"availableSku",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailableSku { get; set; }
        /// <summary>Dedicated host enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Dedicated host enabled.",
        SerializedName = @"dedicatedHost",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DedicatedHost { get;  }
        /// <summary>Display name for region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display name for region.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>Is region standard.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Is region standard.",
        SerializedName = @"standard",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Standard { get;  }
        /// <summary>Zone redundant deployment enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Zone redundant deployment enabled.",
        SerializedName = @"zoneRedundant",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ZoneRedundant { get;  }

    }
    /// ASE region resource specific properties
    internal partial interface IAseRegionPropertiesInternal

    {
        /// <summary>Available OSs in region.</summary>
        string[] AvailableOS { get; set; }
        /// <summary>Available Skus in region.</summary>
        string[] AvailableSku { get; set; }
        /// <summary>Dedicated host enabled.</summary>
        bool? DedicatedHost { get; set; }
        /// <summary>Display name for region.</summary>
        string DisplayName { get; set; }
        /// <summary>Is region standard.</summary>
        bool? Standard { get; set; }
        /// <summary>Zone redundant deployment enabled.</summary>
        bool? ZoneRedundant { get; set; }

    }
}