// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>StaticSiteBasicAuthPropertiesARMResource resource specific properties</summary>
    public partial class StaticSiteBasicAuthPropertiesArmResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplicableEnvironmentsMode" /> property.</summary>
        private string _applicableEnvironmentsMode;

        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ApplicableEnvironmentsMode { get => this._applicableEnvironmentsMode; set => this._applicableEnvironmentsMode = value; }

        /// <summary>Backing field for <see cref="Environment" /> property.</summary>
        private string[] _environment;

        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string[] Environment { get => this._environment; set => this._environment = value; }

        /// <summary>Internal Acessors for SecretState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal.SecretState { get => this._secretState; set { {_secretState = value;} } }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>The password for basic auth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="SecretState" /> property.</summary>
        private string _secretState;

        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SecretState { get => this._secretState; }

        /// <summary>Backing field for <see cref="SecretUrl" /> property.</summary>
        private string _secretUrl;

        /// <summary>Url to the secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SecretUrl { get => this._secretUrl; set => this._secretUrl = value; }

        /// <summary>
        /// Creates an new <see cref="StaticSiteBasicAuthPropertiesArmResourceProperties" /> instance.
        /// </summary>
        public StaticSiteBasicAuthPropertiesArmResourceProperties()
        {

        }
    }
    /// StaticSiteBasicAuthPropertiesARMResource resource specific properties
    public partial interface IStaticSiteBasicAuthPropertiesArmResourceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"State indicating if basic auth is enabled and for what environments it is active.",
        SerializedName = @"applicableEnvironmentsMode",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableEnvironmentsMode { get; set; }
        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.",
        SerializedName = @"environments",
        PossibleTypes = new [] { typeof(string) })]
        string[] Environment { get; set; }
        /// <summary>The password for basic auth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for basic auth.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State indicating if basic auth has a secret and what type it is.",
        SerializedName = @"secretState",
        PossibleTypes = new [] { typeof(string) })]
        string SecretState { get;  }
        /// <summary>Url to the secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Url to the secret in Key Vault.",
        SerializedName = @"secretUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SecretUrl { get; set; }

    }
    /// StaticSiteBasicAuthPropertiesARMResource resource specific properties
    internal partial interface IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal

    {
        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        string ApplicableEnvironmentsMode { get; set; }
        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        string[] Environment { get; set; }
        /// <summary>The password for basic auth.</summary>
        string Password { get; set; }
        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        string SecretState { get; set; }
        /// <summary>Url to the secret in Key Vault.</summary>
        string SecretUrl { get; set; }

    }
}