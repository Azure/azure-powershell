// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>The workflow trigger recurrence.</summary>
    [System.ComponentModel.TypeConverter(typeof(WorkflowTriggerRecurrenceTypeConverter))]
    public partial class WorkflowTriggerRecurrence
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrence"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new WorkflowTriggerRecurrence(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrence"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new WorkflowTriggerRecurrence(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="WorkflowTriggerRecurrence" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="WorkflowTriggerRecurrence" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrence"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal WorkflowTriggerRecurrence(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Frequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Frequency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency?) content.GetValueForProperty("Frequency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Frequency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency.CreateFrom);
            }
            if (content.Contains("Interval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Interval = (int?) content.GetValueForProperty("Interval",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Interval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).StartTime = (string) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).StartTime, global::System.Convert.ToString);
            }
            if (content.Contains("EndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).EndTime = (string) content.GetValueForProperty("EndTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).EndTime, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMinute = (int[]) content.GetValueForProperty("ScheduleMinute",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMinute, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleHour = (int[]) content.GetValueForProperty("ScheduleHour",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleHour, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[]) content.GetValueForProperty("ScheduleWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek.CreateFrom));
            }
            if (content.Contains("ScheduleMonthDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthDay = (int[]) content.GetValueForProperty("ScheduleMonthDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthDay, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleMonthlyOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthlyOccurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[]) content.GetValueForProperty("ScheduleMonthlyOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthlyOccurrence, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleOccurrenceTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrence"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal WorkflowTriggerRecurrence(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Schedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Schedule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule) content.GetValueForProperty("Schedule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Schedule, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Frequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Frequency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency?) content.GetValueForProperty("Frequency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Frequency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency.CreateFrom);
            }
            if (content.Contains("Interval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Interval = (int?) content.GetValueForProperty("Interval",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).Interval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).StartTime = (string) content.GetValueForProperty("StartTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).StartTime, global::System.Convert.ToString);
            }
            if (content.Contains("EndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).EndTime = (string) content.GetValueForProperty("EndTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).EndTime, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMinute = (int[]) content.GetValueForProperty("ScheduleMinute",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMinute, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleHour = (int[]) content.GetValueForProperty("ScheduleHour",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleHour, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[]) content.GetValueForProperty("ScheduleWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek.CreateFrom));
            }
            if (content.Contains("ScheduleMonthDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthDay = (int[]) content.GetValueForProperty("ScheduleMonthDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthDay, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleMonthlyOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthlyOccurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[]) content.GetValueForProperty("ScheduleMonthlyOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrenceInternal)this).ScheduleMonthlyOccurrence, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleOccurrenceTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// The workflow trigger recurrence.
    [System.ComponentModel.TypeConverter(typeof(WorkflowTriggerRecurrenceTypeConverter))]
    public partial interface IWorkflowTriggerRecurrence

    {

    }
}