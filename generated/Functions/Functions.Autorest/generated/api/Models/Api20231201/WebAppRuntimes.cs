// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Web App stack runtimes.</summary>
    public partial class WebAppRuntimes :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimes,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal
    {

        /// <summary>Backing field for <see cref="LinuxContainerSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings _linuxContainerSetting;

        /// <summary>Linux-specific settings associated with the Java container minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings LinuxContainerSetting { get => (this._linuxContainerSetting = this._linuxContainerSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.LinuxJavaContainerSettings()); }

        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? LinuxContainerSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).EndOfLifeDate; }

        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxContainerSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsAutoUpdate; }

        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxContainerSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsDeprecated; }

        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxContainerSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsEarlyAccess; }

        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxContainerSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsHidden; }

        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxContainerSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsPreview; }

        /// <summary>Java 11 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string LinuxContainerSettingJava11Runtime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java11Runtime; }

        /// <summary>Java 8 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string LinuxContainerSettingJava8Runtime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java8Runtime; }

        /// <summary>Backing field for <see cref="LinuxRuntimeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings _linuxRuntimeSetting;

        /// <summary>Linux-specific settings associated with the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings LinuxRuntimeSetting { get => (this._linuxRuntimeSetting = this._linuxRuntimeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettings()); }

        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? LinuxRuntimeSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).EndOfLifeDate; }

        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsAutoUpdate; }

        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsDeprecated; }

        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsEarlyAccess; }

        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsHidden; }

        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsPreview; }

        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingRemoteDebuggingSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RemoteDebuggingSupported; }

        /// <summary>Web App stack minor version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string LinuxRuntimeSettingRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RuntimeVersion; }

        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsDefaultOff; }

        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingsAppInsightsSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsSupported; }

        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? LinuxRuntimeSettingsGitHubActionSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingIsSupported; }

        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingSupportedVersion; }

        /// <summary>Internal Acessors for LinuxContainerSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSetting { get => (this._linuxContainerSetting = this._linuxContainerSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.LinuxJavaContainerSettings()); set { {_linuxContainerSetting = value;} } }

        /// <summary>Internal Acessors for LinuxContainerSettingEndOfLifeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).EndOfLifeDate = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingIsAutoUpdate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsAutoUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsAutoUpdate = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingIsDeprecated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsDeprecated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsDeprecated = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingIsEarlyAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsEarlyAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsEarlyAccess = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingIsHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsHidden; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsHidden = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingIsPreview</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).IsPreview = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingJava11Runtime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingJava11Runtime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java11Runtime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java11Runtime = value; }

        /// <summary>Internal Acessors for LinuxContainerSettingJava8Runtime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxContainerSettingJava8Runtime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java8Runtime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal)LinuxContainerSetting).Java8Runtime = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSetting { get => (this._linuxRuntimeSetting = this._linuxRuntimeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettings()); set { {_linuxRuntimeSetting = value;} } }

        /// <summary>Internal Acessors for LinuxRuntimeSettingAppInsightsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingAppInsightsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightsSetting = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingEndOfLifeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).EndOfLifeDate = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingGitHubActionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingGitHubActionSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSetting = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingIsAutoUpdate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsAutoUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsAutoUpdate = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingIsDeprecated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsDeprecated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsDeprecated = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingIsEarlyAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsEarlyAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsEarlyAccess = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingIsHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsHidden; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsHidden = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingIsPreview</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).IsPreview = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingRemoteDebuggingSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingRemoteDebuggingSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RemoteDebuggingSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RemoteDebuggingSupported = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingRuntimeVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).RuntimeVersion = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsDefaultOff; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsDefaultOff = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingsAppInsightsSettingsIsSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingsAppInsightsSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).AppInsightSettingIsSupported = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingsGitHubActionSettingsIsSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingsGitHubActionSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingIsSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingIsSupported = value; }

        /// <summary>Internal Acessors for LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingSupportedVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)LinuxRuntimeSetting).GitHubActionSettingSupportedVersion = value; }

        /// <summary>Internal Acessors for WindowContainerSettingEndOfLifeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).EndOfLifeDate = value; }

        /// <summary>Internal Acessors for WindowContainerSettingIsAutoUpdate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsAutoUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsAutoUpdate = value; }

        /// <summary>Internal Acessors for WindowContainerSettingIsDeprecated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsDeprecated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsDeprecated = value; }

        /// <summary>Internal Acessors for WindowContainerSettingIsEarlyAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsEarlyAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsEarlyAccess = value; }

        /// <summary>Internal Acessors for WindowContainerSettingIsHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsHidden; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsHidden = value; }

        /// <summary>Internal Acessors for WindowContainerSettingIsPreview</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsPreview = value; }

        /// <summary>Internal Acessors for WindowContainerSettingJavaContainer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingJavaContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainer = value; }

        /// <summary>Internal Acessors for WindowContainerSettingJavaContainerVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowContainerSettingJavaContainerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainerVersion = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingAppInsightsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingAppInsightsSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightsSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightsSetting = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingEndOfLifeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).EndOfLifeDate = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingGitHubActionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingGitHubActionSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSetting = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingIsAutoUpdate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsAutoUpdate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsAutoUpdate = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingIsDeprecated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsDeprecated; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsDeprecated = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingIsEarlyAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsEarlyAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsEarlyAccess = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingIsHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsHidden; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsHidden = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingIsPreview</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsPreview = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingRemoteDebuggingSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingRemoteDebuggingSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RemoteDebuggingSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RemoteDebuggingSupported = value; }

        /// <summary>Internal Acessors for WindowRuntimeSettingRuntimeVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowRuntimeSettingRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RuntimeVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RuntimeVersion = value; }

        /// <summary>Internal Acessors for WindowsContainerSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsContainerSetting { get => (this._windowsContainerSetting = this._windowsContainerSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WindowsJavaContainerSettings()); set { {_windowsContainerSetting = value;} } }

        /// <summary>Internal Acessors for WindowsRuntimeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsRuntimeSetting { get => (this._windowsRuntimeSetting = this._windowsRuntimeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettings()); set { {_windowsRuntimeSetting = value;} } }

        /// <summary>Internal Acessors for WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsDefaultOff; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsDefaultOff = value; }

        /// <summary>Internal Acessors for WindowsRuntimeSettingsAppInsightsSettingsIsSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsRuntimeSettingsAppInsightsSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsSupported = value; }

        /// <summary>Internal Acessors for WindowsRuntimeSettingsGitHubActionSettingsIsSupported</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsRuntimeSettingsGitHubActionSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingIsSupported; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingIsSupported = value; }

        /// <summary>
        /// Internal Acessors for WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimesInternal.WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingSupportedVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingSupportedVersion = value; }

        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? WindowContainerSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).EndOfLifeDate; }

        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowContainerSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsAutoUpdate; }

        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowContainerSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsDeprecated; }

        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowContainerSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsEarlyAccess; }

        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowContainerSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsHidden; }

        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowContainerSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).IsPreview; }

        /// <summary>Java container (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WindowContainerSettingJavaContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainer; }

        /// <summary>Java container version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WindowContainerSettingJavaContainerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettingsInternal)WindowsContainerSetting).JavaContainerVersion; }

        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? WindowRuntimeSettingEndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).EndOfLifeDate; }

        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingIsAutoUpdate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsAutoUpdate; }

        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingIsDeprecated { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsDeprecated; }

        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingIsEarlyAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsEarlyAccess; }

        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingIsHidden { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsHidden; }

        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingIsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).IsPreview; }

        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowRuntimeSettingRemoteDebuggingSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RemoteDebuggingSupported; }

        /// <summary>Web App stack minor version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WindowRuntimeSettingRuntimeVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).RuntimeVersion; }

        /// <summary>Backing field for <see cref="WindowsContainerSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings _windowsContainerSetting;

        /// <summary>Windows-specific settings associated with the Java container minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings WindowsContainerSetting { get => (this._windowsContainerSetting = this._windowsContainerSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WindowsJavaContainerSettings()); }

        /// <summary>Backing field for <see cref="WindowsRuntimeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings _windowsRuntimeSetting;

        /// <summary>Windows-specific settings associated with the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings WindowsRuntimeSetting { get => (this._windowsRuntimeSetting = this._windowsRuntimeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WebAppRuntimeSettings()); }

        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsDefaultOff; }

        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowsRuntimeSettingsAppInsightsSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).AppInsightSettingIsSupported; }

        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? WindowsRuntimeSettingsGitHubActionSettingsIsSupported { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingIsSupported; }

        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettingsInternal)WindowsRuntimeSetting).GitHubActionSettingSupportedVersion; }

        /// <summary>Creates an new <see cref="WebAppRuntimes" /> instance.</summary>
        public WebAppRuntimes()
        {

        }
    }
    /// Web App stack runtimes.
    public partial interface IWebAppRuntimes :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End-of-life date for the minor version.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LinuxContainerSettingEndOfLifeDate { get;  }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
        SerializedName = @"isAutoUpdate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxContainerSettingIsAutoUpdate { get;  }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
        SerializedName = @"isDeprecated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxContainerSettingIsDeprecated { get;  }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
        SerializedName = @"isEarlyAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxContainerSettingIsEarlyAccess { get;  }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
        SerializedName = @"isHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxContainerSettingIsHidden { get;  }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxContainerSettingIsPreview { get;  }
        /// <summary>Java 11 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java 11 version (runtime only).",
        SerializedName = @"java11Runtime",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxContainerSettingJava11Runtime { get;  }
        /// <summary>Java 8 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java 8 version (runtime only).",
        SerializedName = @"java8Runtime",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxContainerSettingJava8Runtime { get;  }
        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End-of-life date for the minor version.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LinuxRuntimeSettingEndOfLifeDate { get;  }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
        SerializedName = @"isAutoUpdate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingIsAutoUpdate { get;  }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
        SerializedName = @"isDeprecated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingIsDeprecated { get;  }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
        SerializedName = @"isEarlyAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingIsEarlyAccess { get;  }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
        SerializedName = @"isHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingIsHidden { get;  }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingIsPreview { get;  }
        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"remoteDebuggingSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingRemoteDebuggingSupported { get;  }
        /// <summary>Web App stack minor version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Web App stack minor version (runtime only).",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxRuntimeSettingRuntimeVersion { get;  }
        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isDefaultOff",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff { get;  }
        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingsAppInsightsSettingsIsSupported { get;  }
        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LinuxRuntimeSettingsGitHubActionSettingsIsSupported { get;  }
        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minor version that is supported for GitHub Actions.",
        SerializedName = @"supportedVersion",
        PossibleTypes = new [] { typeof(string) })]
        string LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion { get;  }
        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End-of-life date for the minor version.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? WindowContainerSettingEndOfLifeDate { get;  }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
        SerializedName = @"isAutoUpdate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowContainerSettingIsAutoUpdate { get;  }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
        SerializedName = @"isDeprecated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowContainerSettingIsDeprecated { get;  }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
        SerializedName = @"isEarlyAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowContainerSettingIsEarlyAccess { get;  }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
        SerializedName = @"isHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowContainerSettingIsHidden { get;  }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowContainerSettingIsPreview { get;  }
        /// <summary>Java container (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java container (runtime only).",
        SerializedName = @"javaContainer",
        PossibleTypes = new [] { typeof(string) })]
        string WindowContainerSettingJavaContainer { get;  }
        /// <summary>Java container version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java container version (runtime only).",
        SerializedName = @"javaContainerVersion",
        PossibleTypes = new [] { typeof(string) })]
        string WindowContainerSettingJavaContainerVersion { get;  }
        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End-of-life date for the minor version.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? WindowRuntimeSettingEndOfLifeDate { get;  }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
        SerializedName = @"isAutoUpdate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingIsAutoUpdate { get;  }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
        SerializedName = @"isDeprecated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingIsDeprecated { get;  }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
        SerializedName = @"isEarlyAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingIsEarlyAccess { get;  }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
        SerializedName = @"isHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingIsHidden { get;  }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingIsPreview { get;  }
        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"remoteDebuggingSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowRuntimeSettingRemoteDebuggingSupported { get;  }
        /// <summary>Web App stack minor version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Web App stack minor version (runtime only).",
        SerializedName = @"runtimeVersion",
        PossibleTypes = new [] { typeof(string) })]
        string WindowRuntimeSettingRuntimeVersion { get;  }
        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isDefaultOff",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff { get;  }
        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowsRuntimeSettingsAppInsightsSettingsIsSupported { get;  }
        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.",
        SerializedName = @"isSupported",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WindowsRuntimeSettingsGitHubActionSettingsIsSupported { get;  }
        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minor version that is supported for GitHub Actions.",
        SerializedName = @"supportedVersion",
        PossibleTypes = new [] { typeof(string) })]
        string WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion { get;  }

    }
    /// Web App stack runtimes.
    internal partial interface IWebAppRuntimesInternal

    {
        /// <summary>Linux-specific settings associated with the Java container minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings LinuxContainerSetting { get; set; }
        /// <summary>End-of-life date for the minor version.</summary>
        global::System.DateTime? LinuxContainerSettingEndOfLifeDate { get; set; }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxContainerSettingIsAutoUpdate { get; set; }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        bool? LinuxContainerSettingIsDeprecated { get; set; }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxContainerSettingIsEarlyAccess { get; set; }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        bool? LinuxContainerSettingIsHidden { get; set; }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        bool? LinuxContainerSettingIsPreview { get; set; }
        /// <summary>Java 11 version (runtime only).</summary>
        string LinuxContainerSettingJava11Runtime { get; set; }
        /// <summary>Java 8 version (runtime only).</summary>
        string LinuxContainerSettingJava8Runtime { get; set; }
        /// <summary>Linux-specific settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings LinuxRuntimeSetting { get; set; }
        /// <summary>Application Insights settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings LinuxRuntimeSettingAppInsightsSetting { get; set; }
        /// <summary>End-of-life date for the minor version.</summary>
        global::System.DateTime? LinuxRuntimeSettingEndOfLifeDate { get; set; }
        /// <summary>GitHub Actions settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings LinuxRuntimeSettingGitHubActionSetting { get; set; }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingIsAutoUpdate { get; set; }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        bool? LinuxRuntimeSettingIsDeprecated { get; set; }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingIsEarlyAccess { get; set; }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        bool? LinuxRuntimeSettingIsHidden { get; set; }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        bool? LinuxRuntimeSettingIsPreview { get; set; }
        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingRemoteDebuggingSupported { get; set; }
        /// <summary>Web App stack minor version (runtime only).</summary>
        string LinuxRuntimeSettingRuntimeVersion { get; set; }
        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingsAppInsightsSettingsIsDefaultOff { get; set; }
        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingsAppInsightsSettingsIsSupported { get; set; }
        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? LinuxRuntimeSettingsGitHubActionSettingsIsSupported { get; set; }
        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        string LinuxRuntimeSettingsGitHubActionSettingsSupportedVersion { get; set; }
        /// <summary>End-of-life date for the minor version.</summary>
        global::System.DateTime? WindowContainerSettingEndOfLifeDate { get; set; }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowContainerSettingIsAutoUpdate { get; set; }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        bool? WindowContainerSettingIsDeprecated { get; set; }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowContainerSettingIsEarlyAccess { get; set; }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        bool? WindowContainerSettingIsHidden { get; set; }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        bool? WindowContainerSettingIsPreview { get; set; }
        /// <summary>Java container (runtime only).</summary>
        string WindowContainerSettingJavaContainer { get; set; }
        /// <summary>Java container version (runtime only).</summary>
        string WindowContainerSettingJavaContainerVersion { get; set; }
        /// <summary>Application Insights settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppInsightsWebAppStackSettings WindowRuntimeSettingAppInsightsSetting { get; set; }
        /// <summary>End-of-life date for the minor version.</summary>
        global::System.DateTime? WindowRuntimeSettingEndOfLifeDate { get; set; }
        /// <summary>GitHub Actions settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IGitHubActionWebAppStackSettings WindowRuntimeSettingGitHubActionSetting { get; set; }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowRuntimeSettingIsAutoUpdate { get; set; }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        bool? WindowRuntimeSettingIsDeprecated { get; set; }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowRuntimeSettingIsEarlyAccess { get; set; }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        bool? WindowRuntimeSettingIsHidden { get; set; }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        bool? WindowRuntimeSettingIsPreview { get; set; }
        /// <summary>
        /// <code>true</code> if remote debugging is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowRuntimeSettingRemoteDebuggingSupported { get; set; }
        /// <summary>Web App stack minor version (runtime only).</summary>
        string WindowRuntimeSettingRuntimeVersion { get; set; }
        /// <summary>Windows-specific settings associated with the Java container minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWindowsJavaContainerSettings WindowsContainerSetting { get; set; }
        /// <summary>Windows-specific settings associated with the minor version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWebAppRuntimeSettings WindowsRuntimeSetting { get; set; }
        /// <summary>
        /// <code>true</code> if Application Insights is disabled by default for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowsRuntimeSettingsAppInsightsSettingsIsDefaultOff { get; set; }
        /// <summary>
        /// <code>true</code> if remote Application Insights is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowsRuntimeSettingsAppInsightsSettingsIsSupported { get; set; }
        /// <summary>
        /// <code>true</code> if GitHub Actions is supported for the stack; otherwise, <code>false</code>.
        /// </summary>
        bool? WindowsRuntimeSettingsGitHubActionSettingsIsSupported { get; set; }
        /// <summary>The minor version that is supported for GitHub Actions.</summary>
        string WindowsRuntimeSettingsGitHubActionSettingsSupportedVersion { get; set; }

    }
}