// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Static site basic auth properties ARM resource.</summary>
    public partial class StaticSiteBasicAuthPropertiesArmResource :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResource,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource __proxyOnlyResource = new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ProxyOnlyResource();

        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ApplicableEnvironmentsMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).ApplicableEnvironmentsMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).ApplicableEnvironmentsMode = value ?? null; }

        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string[] Environment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).Environment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).Environment = value ?? null /* arrayOf */; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; }

        /// <summary>Kind of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.StaticSiteBasicAuthPropertiesArmResourceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SecretState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceInternal.SecretState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).SecretState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).SecretState = value; }

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; }

        /// <summary>The password for basic auth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string Password { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).Password = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceProperties _property;

        /// <summary>StaticSiteBasicAuthPropertiesARMResource resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.StaticSiteBasicAuthPropertiesArmResourceProperties()); set => this._property = value; }

        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string SecretState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).SecretState; }

        /// <summary>Url to the secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string SecretUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).SecretUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourcePropertiesInternal)Property).SecretUrl = value ?? null; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; }

        /// <summary>
        /// Creates an new <see cref="StaticSiteBasicAuthPropertiesArmResource" /> instance.
        /// </summary>
        public StaticSiteBasicAuthPropertiesArmResource()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyOnlyResource), __proxyOnlyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyOnlyResource), __proxyOnlyResource);
        }
    }
    /// Static site basic auth properties ARM resource.
    public partial interface IStaticSiteBasicAuthPropertiesArmResource :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource
    {
        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"State indicating if basic auth is enabled and for what environments it is active.",
        SerializedName = @"applicableEnvironmentsMode",
        PossibleTypes = new [] { typeof(string) })]
        string ApplicableEnvironmentsMode { get; set; }
        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.",
        SerializedName = @"environments",
        PossibleTypes = new [] { typeof(string) })]
        string[] Environment { get; set; }
        /// <summary>The password for basic auth.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password for basic auth.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State indicating if basic auth has a secret and what type it is.",
        SerializedName = @"secretState",
        PossibleTypes = new [] { typeof(string) })]
        string SecretState { get;  }
        /// <summary>Url to the secret in Key Vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Url to the secret in Key Vault.",
        SerializedName = @"secretUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SecretUrl { get; set; }

    }
    /// Static site basic auth properties ARM resource.
    internal partial interface IStaticSiteBasicAuthPropertiesArmResourceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal
    {
        /// <summary>
        /// State indicating if basic auth is enabled and for what environments it is active.
        /// </summary>
        string ApplicableEnvironmentsMode { get; set; }
        /// <summary>
        /// The list of enabled environments for Basic Auth if ApplicableEnvironmentsMode is set to SpecifiedEnvironments.
        /// </summary>
        string[] Environment { get; set; }
        /// <summary>The password for basic auth.</summary>
        string Password { get; set; }
        /// <summary>StaticSiteBasicAuthPropertiesARMResource resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteBasicAuthPropertiesArmResourceProperties Property { get; set; }
        /// <summary>State indicating if basic auth has a secret and what type it is.</summary>
        string SecretState { get; set; }
        /// <summary>Url to the secret in Key Vault.</summary>
        string SecretUrl { get; set; }

    }
}