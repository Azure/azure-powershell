// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Storage for deployed package used by the function app.</summary>
    public partial class FunctionsDeploymentStorage :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorage,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageInternal
    {

        /// <summary>Backing field for <see cref="Authentication" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication _authentication;

        /// <summary>Authentication method to access the storage account for deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication Authentication { get => (this._authentication = this._authentication ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageAuthentication()); set => this._authentication = value; }

        /// <summary>
        /// Use this property for StorageAccountConnectionString. Set the name of the app setting that has the storage account connection
        /// string. Do not set a value for this property when using other authentication type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string AuthenticationStorageAccountConnectionStringName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).StorageAccountConnectionStringName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).StorageAccountConnectionStringName = value ?? null; }

        /// <summary>
        /// Property to select authentication type to access the selected storage account. Available options: SystemAssignedIdentity,
        /// UserAssignedIdentity, StorageAccountConnectionString.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType? AuthenticationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType)""); }

        /// <summary>
        /// Use this property for UserAssignedIdentity. Set the resource ID of the identity. Do not set a value for this property
        /// when using other authentication type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string AuthenticationUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).UserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthenticationInternal)Authentication).UserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for Authentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageInternal.Authentication { get => (this._authentication = this._authentication ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.FunctionsDeploymentStorageAuthentication()); set { {_authentication = value;} } }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType? _type;

        /// <summary>Property to select Azure Storage type. Available options: blobContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType? Type { get => this._type; set => this._type = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>
        /// Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://<storageAccountName>.blob.core.windows.net/<containerName>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="FunctionsDeploymentStorage" /> instance.</summary>
        public FunctionsDeploymentStorage()
        {

        }
    }
    /// Storage for deployed package used by the function app.
    public partial interface IFunctionsDeploymentStorage :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Use this property for StorageAccountConnectionString. Set the name of the app setting that has the storage account connection
        /// string. Do not set a value for this property when using other authentication type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Use this property for StorageAccountConnectionString. Set the name of the app setting that has the storage account connection string. Do not set a value for this property when using other authentication type.",
        SerializedName = @"storageAccountConnectionStringName",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticationStorageAccountConnectionStringName { get; set; }
        /// <summary>
        /// Property to select authentication type to access the selected storage account. Available options: SystemAssignedIdentity,
        /// UserAssignedIdentity, StorageAccountConnectionString.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to select authentication type to access the selected storage account. Available options: SystemAssignedIdentity, UserAssignedIdentity, StorageAccountConnectionString.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType? AuthenticationType { get; set; }
        /// <summary>
        /// Use this property for UserAssignedIdentity. Set the resource ID of the identity. Do not set a value for this property
        /// when using other authentication type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Use this property for UserAssignedIdentity. Set the resource ID of the identity. Do not set a value for this property when using other authentication type.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthenticationUserAssignedIdentityResourceId { get; set; }
        /// <summary>Property to select Azure Storage type. Available options: blobContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to select Azure Storage type. Available options: blobContainer.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType? Type { get; set; }
        /// <summary>
        /// Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://<storageAccountName>.blob.core.windows.net/<containerName>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://<storageAccountName>.blob.core.windows.net/<containerName>.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// Storage for deployed package used by the function app.
    internal partial interface IFunctionsDeploymentStorageInternal

    {
        /// <summary>Authentication method to access the storage account for deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IFunctionsDeploymentStorageAuthentication Authentication { get; set; }
        /// <summary>
        /// Use this property for StorageAccountConnectionString. Set the name of the app setting that has the storage account connection
        /// string. Do not set a value for this property when using other authentication type.
        /// </summary>
        string AuthenticationStorageAccountConnectionStringName { get; set; }
        /// <summary>
        /// Property to select authentication type to access the selected storage account. Available options: SystemAssignedIdentity,
        /// UserAssignedIdentity, StorageAccountConnectionString.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AuthenticationType? AuthenticationType { get; set; }
        /// <summary>
        /// Use this property for UserAssignedIdentity. Set the resource ID of the identity. Do not set a value for this property
        /// when using other authentication type.
        /// </summary>
        string AuthenticationUserAssignedIdentityResourceId { get; set; }
        /// <summary>Property to select Azure Storage type. Available options: blobContainer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.FunctionsDeploymentStorageType? Type { get; set; }
        /// <summary>
        /// Property to set the URL for the selected Azure Storage type. Example: For blobContainer, the value could be https://<storageAccountName>.blob.core.windows.net/<containerName>.
        /// </summary>
        string Value { get; set; }

    }
}