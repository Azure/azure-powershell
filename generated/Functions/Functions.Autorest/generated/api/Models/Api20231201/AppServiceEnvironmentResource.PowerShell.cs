// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>App Service Environment ARM resource.</summary>
    [System.ComponentModel.TypeConverter(typeof(AppServiceEnvironmentResourceTypeConverter))]
    public partial class AppServiceEnvironmentResource
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AppServiceEnvironmentResource(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironment) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Kind = (string) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Kind, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("UpgradePreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradePreference = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradePreference?) content.GetValueForProperty("UpgradePreference",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradePreference, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradePreference.CreateFrom);
            }
            if (content.Contains("UpgradeAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradeAvailability = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradeAvailability?) content.GetValueForProperty("UpgradeAvailability",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradeAvailability, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradeAvailability.CreateFrom);
            }
            if (content.Contains("VirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVirtualNetworkProfile) content.GetValueForProperty("VirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetwork, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.VirtualNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomDnsSuffixConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICustomDnsSuffixConfiguration) content.GetValueForProperty("CustomDnsSuffixConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CustomDnsSuffixConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseV3NetworkingConfiguration) content.GetValueForProperty("NetworkingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AseV3NetworkingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.HostingEnvironmentStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.HostingEnvironmentStatus.CreateFrom);
            }
            if (content.Contains("InternalLoadBalancingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalLoadBalancingMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LoadBalancingMode?) content.GetValueForProperty("InternalLoadBalancingMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalLoadBalancingMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LoadBalancingMode.CreateFrom);
            }
            if (content.Contains("MultiSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiSize = (string) content.GetValueForProperty("MultiSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiSize, global::System.Convert.ToString);
            }
            if (content.Contains("MultiRoleCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiRoleCount = (int?) content.GetValueForProperty("MultiRoleCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiRoleCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IpsslAddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).IpsslAddressCount = (int?) content.GetValueForProperty("IpsslAddressCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).IpsslAddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsSuffix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DnsSuffix = (string) content.GetValueForProperty("DnsSuffix",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DnsSuffix, global::System.Convert.ToString);
            }
            if (content.Contains("MaximumNumberOfMachine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MaximumNumberOfMachine = (int?) content.GetValueForProperty("MaximumNumberOfMachine",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MaximumNumberOfMachine, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FrontEndScaleFactor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FrontEndScaleFactor = (int?) content.GetValueForProperty("FrontEndScaleFactor",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FrontEndScaleFactor, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Suspended"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Suspended = (bool?) content.GetValueForProperty("Suspended",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Suspended, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClusterSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ClusterSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.INameValuePair[]) content.GetValueForProperty("ClusterSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ClusterSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.INameValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.NameValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserWhitelistedIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UserWhitelistedIPRange = (string[]) content.GetValueForProperty("UserWhitelistedIPRange",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UserWhitelistedIPRange, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HasLinuxWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).HasLinuxWorker = (bool?) content.GetValueForProperty("HasLinuxWorker",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).HasLinuxWorker, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DedicatedHostCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DedicatedHostCount = (int?) content.GetValueForProperty("DedicatedHostCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DedicatedHostCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ZoneRedundant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ZoneRedundant = (bool?) content.GetValueForProperty("ZoneRedundant",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ZoneRedundant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomDnsSuffixConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICustomDnsSuffixConfigurationProperties) content.GetValueForProperty("CustomDnsSuffixConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CustomDnsSuffixConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkId = (string) content.GetValueForProperty("VirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkName = (string) content.GetValueForProperty("VirtualNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkType = (string) content.GetValueForProperty("VirtualNetworkType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkSubnet = (string) content.GetValueForProperty("VirtualNetworkSubnet",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationId = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationName = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationKind = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationKind, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationType = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningDetail = (string) content.GetValueForProperty("ProvisioningDetail",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningDetail, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationPropertiesDnsSuffix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesDnsSuffix = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationPropertiesDnsSuffix",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesDnsSuffix, global::System.Convert.ToString);
            }
            if (content.Contains("CertificateUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CertificateUrl = (string) content.GetValueForProperty("CertificateUrl",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CertificateUrl, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationId = (string) content.GetValueForProperty("NetworkingConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationName = (string) content.GetValueForProperty("NetworkingConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationKind = (string) content.GetValueForProperty("NetworkingConfigurationKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationKind, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationType = (string) content.GetValueForProperty("NetworkingConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseV3NetworkingConfigurationProperties) content.GetValueForProperty("NetworkingConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AseV3NetworkingConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomDnsSuffixConfigurationPropertiesProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.CustomDnsSuffixProvisioningState?) content.GetValueForProperty("CustomDnsSuffixConfigurationPropertiesProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.CustomDnsSuffixProvisioningState.CreateFrom);
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).WindowsOutboundIPAddress = (string[]) content.GetValueForProperty("WindowsOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).WindowsOutboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).LinuxOutboundIPAddress = (string[]) content.GetValueForProperty("LinuxOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).LinuxOutboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExternalInboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ExternalInboundIPAddress = (string[]) content.GetValueForProperty("ExternalInboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ExternalInboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("InternalInboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalInboundIPAddress = (string[]) content.GetValueForProperty("InternalInboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalInboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AllowNewPrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).AllowNewPrivateEndpointConnection = (bool?) content.GetValueForProperty("AllowNewPrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).AllowNewPrivateEndpointConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FtpEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FtpEnabled = (bool?) content.GetValueForProperty("FtpEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FtpEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RemoteDebugEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).RemoteDebugEnabled = (bool?) content.GetValueForProperty("RemoteDebugEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).RemoteDebugEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("InboundIPAddressOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InboundIPAddressOverride = (string) content.GetValueForProperty("InboundIPAddressOverride",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InboundIPAddressOverride, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AppServiceEnvironmentResource(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironment) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Kind = (string) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Kind, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("UpgradePreference"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradePreference = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradePreference?) content.GetValueForProperty("UpgradePreference",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradePreference, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradePreference.CreateFrom);
            }
            if (content.Contains("UpgradeAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradeAvailability = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradeAvailability?) content.GetValueForProperty("UpgradeAvailability",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UpgradeAvailability, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.UpgradeAvailability.CreateFrom);
            }
            if (content.Contains("VirtualNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetwork = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IVirtualNetworkProfile) content.GetValueForProperty("VirtualNetwork",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetwork, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.VirtualNetworkProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomDnsSuffixConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICustomDnsSuffixConfiguration) content.GetValueForProperty("CustomDnsSuffixConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CustomDnsSuffixConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkingConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseV3NetworkingConfiguration) content.GetValueForProperty("NetworkingConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AseV3NetworkingConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.HostingEnvironmentStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.HostingEnvironmentStatus.CreateFrom);
            }
            if (content.Contains("InternalLoadBalancingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalLoadBalancingMode = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LoadBalancingMode?) content.GetValueForProperty("InternalLoadBalancingMode",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalLoadBalancingMode, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LoadBalancingMode.CreateFrom);
            }
            if (content.Contains("MultiSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiSize = (string) content.GetValueForProperty("MultiSize",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiSize, global::System.Convert.ToString);
            }
            if (content.Contains("MultiRoleCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiRoleCount = (int?) content.GetValueForProperty("MultiRoleCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MultiRoleCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IpsslAddressCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).IpsslAddressCount = (int?) content.GetValueForProperty("IpsslAddressCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).IpsslAddressCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DnsSuffix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DnsSuffix = (string) content.GetValueForProperty("DnsSuffix",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DnsSuffix, global::System.Convert.ToString);
            }
            if (content.Contains("MaximumNumberOfMachine"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MaximumNumberOfMachine = (int?) content.GetValueForProperty("MaximumNumberOfMachine",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).MaximumNumberOfMachine, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FrontEndScaleFactor"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FrontEndScaleFactor = (int?) content.GetValueForProperty("FrontEndScaleFactor",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FrontEndScaleFactor, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Suspended"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Suspended = (bool?) content.GetValueForProperty("Suspended",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).Suspended, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ClusterSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ClusterSetting = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.INameValuePair[]) content.GetValueForProperty("ClusterSetting",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ClusterSetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.INameValuePair>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.NameValuePairTypeConverter.ConvertFrom));
            }
            if (content.Contains("UserWhitelistedIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UserWhitelistedIPRange = (string[]) content.GetValueForProperty("UserWhitelistedIPRange",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).UserWhitelistedIPRange, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("HasLinuxWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).HasLinuxWorker = (bool?) content.GetValueForProperty("HasLinuxWorker",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).HasLinuxWorker, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DedicatedHostCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DedicatedHostCount = (int?) content.GetValueForProperty("DedicatedHostCount",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).DedicatedHostCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ZoneRedundant"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ZoneRedundant = (bool?) content.GetValueForProperty("ZoneRedundant",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ZoneRedundant, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CustomDnsSuffixConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ICustomDnsSuffixConfigurationProperties) content.GetValueForProperty("CustomDnsSuffixConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.CustomDnsSuffixConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("VirtualNetworkId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkId = (string) content.GetValueForProperty("VirtualNetworkId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkId, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkName = (string) content.GetValueForProperty("VirtualNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkType = (string) content.GetValueForProperty("VirtualNetworkType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkType, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualNetworkSubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkSubnet = (string) content.GetValueForProperty("VirtualNetworkSubnet",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).VirtualNetworkSubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationId = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationId, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationName = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationKind = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationKind, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationType = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningDetail = (string) content.GetValueForProperty("ProvisioningDetail",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ProvisioningDetail, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDnsSuffixConfigurationPropertiesDnsSuffix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesDnsSuffix = (string) content.GetValueForProperty("CustomDnsSuffixConfigurationPropertiesDnsSuffix",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesDnsSuffix, global::System.Convert.ToString);
            }
            if (content.Contains("CertificateUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CertificateUrl = (string) content.GetValueForProperty("CertificateUrl",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CertificateUrl, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationId = (string) content.GetValueForProperty("NetworkingConfigurationId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationName = (string) content.GetValueForProperty("NetworkingConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationKind = (string) content.GetValueForProperty("NetworkingConfigurationKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationKind, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationType = (string) content.GetValueForProperty("NetworkingConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkingConfigurationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAseV3NetworkingConfigurationProperties) content.GetValueForProperty("NetworkingConfigurationProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).NetworkingConfigurationProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AseV3NetworkingConfigurationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomDnsSuffixConfigurationPropertiesProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.CustomDnsSuffixProvisioningState?) content.GetValueForProperty("CustomDnsSuffixConfigurationPropertiesProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).CustomDnsSuffixConfigurationPropertiesProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.CustomDnsSuffixProvisioningState.CreateFrom);
            }
            if (content.Contains("KeyVaultReferenceIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).KeyVaultReferenceIdentity = (string) content.GetValueForProperty("KeyVaultReferenceIdentity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).KeyVaultReferenceIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("WindowsOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).WindowsOutboundIPAddress = (string[]) content.GetValueForProperty("WindowsOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).WindowsOutboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LinuxOutboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).LinuxOutboundIPAddress = (string[]) content.GetValueForProperty("LinuxOutboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).LinuxOutboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ExternalInboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ExternalInboundIPAddress = (string[]) content.GetValueForProperty("ExternalInboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).ExternalInboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("InternalInboundIPAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalInboundIPAddress = (string[]) content.GetValueForProperty("InternalInboundIPAddress",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InternalInboundIPAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AllowNewPrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).AllowNewPrivateEndpointConnection = (bool?) content.GetValueForProperty("AllowNewPrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).AllowNewPrivateEndpointConnection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FtpEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FtpEnabled = (bool?) content.GetValueForProperty("FtpEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).FtpEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("RemoteDebugEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).RemoteDebugEnabled = (bool?) content.GetValueForProperty("RemoteDebugEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).RemoteDebugEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("InboundIPAddressOverride"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InboundIPAddressOverride = (string) content.GetValueForProperty("InboundIPAddressOverride",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResourceInternal)this).InboundIPAddressOverride, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResource"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResource DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AppServiceEnvironmentResource(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.AppServiceEnvironmentResource"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResource"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResource DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AppServiceEnvironmentResource(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AppServiceEnvironmentResource" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AppServiceEnvironmentResource" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IAppServiceEnvironmentResource FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// App Service Environment ARM resource.
    [System.ComponentModel.TypeConverter(typeof(AppServiceEnvironmentResourceTypeConverter))]
    public partial interface IAppServiceEnvironmentResource

    {

    }
}