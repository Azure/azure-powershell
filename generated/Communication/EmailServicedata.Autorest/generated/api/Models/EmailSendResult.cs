// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Extensions;

    /// <summary>Status of the long running operation</summary>
    public partial class EmailSendResult :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResult,
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal,
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.IHeaderSerializable
    {

        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorAdditionalInfo> AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).AdditionalInfo; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Code; }

        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail> Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Detail; }

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail _error;

        /// <summary>Error details when status is a non-success terminal state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.ErrorDetail()); set => this._error = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The unique id of the operation. Use a UUID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Message; }

        /// <summary>Internal Acessors for AdditionalInfo</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorAdditionalInfo> Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.AdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).AdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).AdditionalInfo = value; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Code = value; }

        /// <summary>Internal Acessors for Detail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail> Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Detail = value; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.Error { get => (this._error = this._error ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.ErrorDetail()); set { {_error = value;} } }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Message = value; }

        /// <summary>Internal Acessors for Target</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal.Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Target = value; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Status of operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetailInternal)Error).Target; }

        /// <summary>Creates an new <see cref="EmailSendResult" /> instance.</summary>
        public EmailSendResult()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("retry-after", out var __retryAfterHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailSendResultInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader0) is string __headerRetryAfterHeader0 ? int.TryParse( __headerRetryAfterHeader0, out int __headerRetryAfterHeader0Value ) ? __headerRetryAfterHeader0Value : default(int?) : default(int?);
            }
        }
    }
    /// Status of the long running operation
    public partial interface IEmailSendResult :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.IJsonSerializable
    {
        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error additional info.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorAdditionalInfo) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorAdditionalInfo> AdditionalInfo { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail> Detail { get;  }
        /// <summary>The unique id of the operation. Use a UUID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The unique id of the operation. Use a UUID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"retry-after",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>Status of operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Status of operation.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PSArgumentCompleterAttribute("NotStarted", "Running", "Succeeded", "Failed", "Canceled")]
        string Status { get; set; }
        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Target { get;  }

    }
    /// Status of the long running operation
    internal partial interface IEmailSendResultInternal

    {
        /// <summary>The error additional info.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorAdditionalInfo> AdditionalInfo { get; set; }
        /// <summary>The error code.</summary>
        string Code { get; set; }
        /// <summary>The error details.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail> Detail { get; set; }
        /// <summary>Error details when status is a non-success terminal state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IErrorDetail Error { get; set; }
        /// <summary>The unique id of the operation. Use a UUID.</summary>
        string Id { get; set; }
        /// <summary>The error message.</summary>
        string Message { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>Status of operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PSArgumentCompleterAttribute("NotStarted", "Running", "Succeeded", "Failed", "Canceled")]
        string Status { get; set; }
        /// <summary>The error target.</summary>
        string Target { get; set; }

    }
}