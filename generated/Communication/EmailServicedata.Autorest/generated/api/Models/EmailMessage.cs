// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Extensions;

    /// <summary>Message payload for sending an email</summary>
    public partial class EmailMessage :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessage,
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageInternal
    {

        /// <summary>Backing field for <see cref="Attachment" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment> _attachment;

        /// <summary>
        /// List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment> Attachment { get => this._attachment; set => this._attachment = value; }

        /// <summary>Backing field for <see cref="Content" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContent _content;

        /// <summary>Email content to be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContent Content { get => (this._content = this._content ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.EmailContent()); set => this._content = value; }

        /// <summary>Html version of the email message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string ContentHtml { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).Html; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).Html = value ?? null; }

        /// <summary>Plain text version of the email message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string ContentPlainText { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).PlainText; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).PlainText = value ?? null; }

        /// <summary>Subject of the email message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public string ContentSubject { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).Subject; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContentInternal)Content).Subject = value ; }

        /// <summary>Backing field for <see cref="Header" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageHeaders _header;

        /// <summary>Custom email headers to be passed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageHeaders Header { get => (this._header = this._header ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.EmailMessageHeaders()); set => this._header = value; }

        /// <summary>Internal Acessors for Content</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContent Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageInternal.Content { get => (this._content = this._content ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.EmailContent()); set { {_content = value;} } }

        /// <summary>Internal Acessors for Recipient</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipients Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageInternal.Recipient { get => (this._recipient = this._recipient ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.EmailRecipients()); set { {_recipient = value;} } }

        /// <summary>Backing field for <see cref="Recipient" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipients _recipient;

        /// <summary>Recipients for the email.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipients Recipient { get => (this._recipient = this._recipient ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.EmailRecipients()); set => this._recipient = value; }

        /// <summary>Email BCC recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientBcc { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).Bcc; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).Bcc = value ?? null /* arrayOf */; }

        /// <summary>Email CC recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientCc { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).Cc; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).Cc = value ?? null /* arrayOf */; }

        /// <summary>Email To recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).To; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipientsInternal)Recipient).To = value ; }

        /// <summary>Backing field for <see cref="ReplyTo" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> _replyTo;

        /// <summary>Email addresses where recipients' replies will be sent to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> ReplyTo { get => this._replyTo; set => this._replyTo = value; }

        /// <summary>Backing field for <see cref="SenderAddress" /> property.</summary>
        private string _senderAddress;

        /// <summary>Sender email address from a verified domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public string SenderAddress { get => this._senderAddress; set => this._senderAddress = value; }

        /// <summary>Backing field for <see cref="UserEngagementTrackingDisabled" /> property.</summary>
        private bool? _userEngagementTrackingDisabled;

        /// <summary>
        /// Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking
        /// setting was already enabled in the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.PropertyOrigin.Owned)]
        public bool? UserEngagementTrackingDisabled { get => this._userEngagementTrackingDisabled; set => this._userEngagementTrackingDisabled = value; }

        /// <summary>Creates an new <see cref="EmailMessage" /> instance.</summary>
        public EmailMessage()
        {

        }
    }
    /// Message payload for sending an email
    public partial interface IEmailMessage :
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.IJsonSerializable
    {
        /// <summary>
        /// List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB.",
        SerializedName = @"attachments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment> Attachment { get; set; }
        /// <summary>Html version of the email message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Html version of the email message.",
        SerializedName = @"html",
        PossibleTypes = new [] { typeof(string) })]
        string ContentHtml { get; set; }
        /// <summary>Plain text version of the email message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Plain text version of the email message.",
        SerializedName = @"plainText",
        PossibleTypes = new [] { typeof(string) })]
        string ContentPlainText { get; set; }
        /// <summary>Subject of the email message</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subject of the email message",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string ContentSubject { get; set; }
        /// <summary>Custom email headers to be passed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Custom email headers to be passed.",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageHeaders) })]
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageHeaders Header { get; set; }
        /// <summary>Email BCC recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email BCC recipients",
        SerializedName = @"bcc",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientBcc { get; set; }
        /// <summary>Email CC recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email CC recipients",
        SerializedName = @"cc",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientCc { get; set; }
        /// <summary>Email To recipients</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email To recipients",
        SerializedName = @"to",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientTo { get; set; }
        /// <summary>Email addresses where recipients' replies will be sent to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Email addresses where recipients' replies will be sent to.",
        SerializedName = @"replyTo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> ReplyTo { get; set; }
        /// <summary>Sender email address from a verified domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Sender email address from a verified domain.",
        SerializedName = @"senderAddress",
        PossibleTypes = new [] { typeof(string) })]
        string SenderAddress { get; set; }
        /// <summary>
        /// Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking
        /// setting was already enabled in the control plane.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane.",
        SerializedName = @"userEngagementTrackingDisabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UserEngagementTrackingDisabled { get; set; }

    }
    /// Message payload for sending an email
    internal partial interface IEmailMessageInternal

    {
        /// <summary>
        /// List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAttachment> Attachment { get; set; }
        /// <summary>Email content to be sent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailContent Content { get; set; }
        /// <summary>Html version of the email message.</summary>
        string ContentHtml { get; set; }
        /// <summary>Plain text version of the email message.</summary>
        string ContentPlainText { get; set; }
        /// <summary>Subject of the email message</summary>
        string ContentSubject { get; set; }
        /// <summary>Custom email headers to be passed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailMessageHeaders Header { get; set; }
        /// <summary>Recipients for the email.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailRecipients Recipient { get; set; }
        /// <summary>Email BCC recipients</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientBcc { get; set; }
        /// <summary>Email CC recipients</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientCc { get; set; }
        /// <summary>Email To recipients</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> RecipientTo { get; set; }
        /// <summary>Email addresses where recipients' replies will be sent to.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EmailServicedata.Models.IEmailAddress> ReplyTo { get; set; }
        /// <summary>Sender email address from a verified domain.</summary>
        string SenderAddress { get; set; }
        /// <summary>
        /// Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking
        /// setting was already enabled in the control plane.
        /// </summary>
        bool? UserEngagementTrackingDisabled { get; set; }

    }
}