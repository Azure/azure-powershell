// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Extensions;

    /// <summary>List of DnsRecord</summary>
    public partial class DomainPropertiesVerificationRecords :
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecords,
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal
    {

        /// <summary>Backing field for <see cref="Dkim" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord _dkim;

        /// <summary>A class that represents a VerificationStatus record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dkim { get => (this._dkim = this._dkim ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set => this._dkim = value; }

        /// <summary>Backing field for <see cref="Dkim2" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord _dkim2;

        /// <summary>A class that represents a VerificationStatus record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dkim2 { get => (this._dkim2 = this._dkim2 ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set => this._dkim2 = value; }

        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string Dkim2Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Name; }

        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public int? Dkim2Ttl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Ttl; }

        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string Dkim2Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Type; }

        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string Dkim2Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Value; }

        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DkimName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Name; }

        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public int? DkimTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Ttl; }

        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DkimType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Type; }

        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DkimValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Value; }

        /// <summary>Backing field for <see cref="Dmarc" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord _dmarc;

        /// <summary>A class that represents a VerificationStatus record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dmarc { get => (this._dmarc = this._dmarc ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set => this._dmarc = value; }

        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DmarcName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Name; }

        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public int? DmarcTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Ttl; }

        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DmarcType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Type; }

        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DmarcValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Value; }

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord _domain;

        /// <summary>A class that represents a VerificationStatus record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Domain { get => (this._domain = this._domain ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set => this._domain = value; }

        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Name; }

        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public int? DomainTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Ttl; }

        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DomainType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Type; }

        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string DomainValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Value; }

        /// <summary>Internal Acessors for Dkim</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim { get => (this._dkim = this._dkim ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set { {_dkim = value;} } }

        /// <summary>Internal Acessors for Dkim2</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim2 { get => (this._dkim2 = this._dkim2 ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set { {_dkim2 = value;} } }

        /// <summary>Internal Acessors for Dkim2Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim2Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Name = value; }

        /// <summary>Internal Acessors for Dkim2Ttl</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim2Ttl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Ttl = value; }

        /// <summary>Internal Acessors for Dkim2Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim2Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Type = value; }

        /// <summary>Internal Acessors for Dkim2Value</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dkim2Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim2).Value = value; }

        /// <summary>Internal Acessors for DkimName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DkimName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Name = value; }

        /// <summary>Internal Acessors for DkimTtl</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DkimTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Ttl = value; }

        /// <summary>Internal Acessors for DkimType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DkimType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Type = value; }

        /// <summary>Internal Acessors for DkimValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DkimValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dkim).Value = value; }

        /// <summary>Internal Acessors for Dmarc</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Dmarc { get => (this._dmarc = this._dmarc ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set { {_dmarc = value;} } }

        /// <summary>Internal Acessors for DmarcName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DmarcName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Name = value; }

        /// <summary>Internal Acessors for DmarcTtl</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DmarcTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Ttl = value; }

        /// <summary>Internal Acessors for DmarcType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DmarcType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Type = value; }

        /// <summary>Internal Acessors for DmarcValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DmarcValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Dmarc).Value = value; }

        /// <summary>Internal Acessors for Domain</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Domain { get => (this._domain = this._domain ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set { {_domain = value;} } }

        /// <summary>Internal Acessors for DomainName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Name = value; }

        /// <summary>Internal Acessors for DomainTtl</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DomainTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Ttl = value; }

        /// <summary>Internal Acessors for DomainType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DomainType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Type = value; }

        /// <summary>Internal Acessors for DomainValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.DomainValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Domain).Value = value; }

        /// <summary>Internal Acessors for Spf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.Spf { get => (this._spf = this._spf ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set { {_spf = value;} } }

        /// <summary>Internal Acessors for SpfName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.SpfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Name = value; }

        /// <summary>Internal Acessors for SpfTtl</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.SpfTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Ttl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Ttl = value; }

        /// <summary>Internal Acessors for SpfType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.SpfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Type = value; }

        /// <summary>Internal Acessors for SpfValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDomainPropertiesVerificationRecordsInternal.SpfValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Value = value; }

        /// <summary>Backing field for <see cref="Spf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord _spf;

        /// <summary>A class that represents a VerificationStatus record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Spf { get => (this._spf = this._spf ?? new Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.DnsRecord()); set => this._spf = value; }

        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string SpfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Name; }

        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public int? SpfTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Ttl; }

        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string SpfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Type; }

        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Origin(Microsoft.Azure.PowerShell.Cmdlets.EmailService.PropertyOrigin.Inlined)]
        public string SpfValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecordInternal)Spf).Value; }

        /// <summary>Creates an new <see cref="DomainPropertiesVerificationRecords" /> instance.</summary>
        public DomainPropertiesVerificationRecords()
        {

        }
    }
    /// List of DnsRecord
    public partial interface IDomainPropertiesVerificationRecords :
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.IJsonSerializable
    {
        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the DNS record.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Dkim2Name { get;  }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(int) })]
        int? Dkim2Ttl { get;  }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the DNS record. Example: TXT",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Dkim2Type { get;  }
        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Value of the DNS record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Dkim2Value { get;  }
        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the DNS record.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DkimName { get;  }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(int) })]
        int? DkimTtl { get;  }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the DNS record. Example: TXT",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string DkimType { get;  }
        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Value of the DNS record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string DkimValue { get;  }
        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the DNS record.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DmarcName { get;  }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(int) })]
        int? DmarcTtl { get;  }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the DNS record. Example: TXT",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string DmarcType { get;  }
        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Value of the DNS record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string DmarcValue { get;  }
        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the DNS record.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get;  }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(int) })]
        int? DomainTtl { get;  }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the DNS record. Example: TXT",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string DomainType { get;  }
        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Value of the DNS record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string DomainValue { get;  }
        /// <summary>Name of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Name of the DNS record.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SpfName { get;  }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
        SerializedName = @"ttl",
        PossibleTypes = new [] { typeof(int) })]
        int? SpfTtl { get;  }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Type of the DNS record. Example: TXT",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string SpfType { get;  }
        /// <summary>Value of the DNS record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EmailService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Value of the DNS record.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string SpfValue { get;  }

    }
    /// List of DnsRecord
    internal partial interface IDomainPropertiesVerificationRecordsInternal

    {
        /// <summary>A class that represents a VerificationStatus record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dkim { get; set; }
        /// <summary>A class that represents a VerificationStatus record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dkim2 { get; set; }
        /// <summary>Name of the DNS record.</summary>
        string Dkim2Name { get; set; }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        int? Dkim2Ttl { get; set; }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        string Dkim2Type { get; set; }
        /// <summary>Value of the DNS record.</summary>
        string Dkim2Value { get; set; }
        /// <summary>Name of the DNS record.</summary>
        string DkimName { get; set; }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        int? DkimTtl { get; set; }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        string DkimType { get; set; }
        /// <summary>Value of the DNS record.</summary>
        string DkimValue { get; set; }
        /// <summary>A class that represents a VerificationStatus record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Dmarc { get; set; }
        /// <summary>Name of the DNS record.</summary>
        string DmarcName { get; set; }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        int? DmarcTtl { get; set; }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        string DmarcType { get; set; }
        /// <summary>Value of the DNS record.</summary>
        string DmarcValue { get; set; }
        /// <summary>A class that represents a VerificationStatus record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Domain { get; set; }
        /// <summary>Name of the DNS record.</summary>
        string DomainName { get; set; }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        int? DomainTtl { get; set; }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        string DomainType { get; set; }
        /// <summary>Value of the DNS record.</summary>
        string DomainValue { get; set; }
        /// <summary>A class that represents a VerificationStatus record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EmailService.Models.IDnsRecord Spf { get; set; }
        /// <summary>Name of the DNS record.</summary>
        string SpfName { get; set; }
        /// <summary>
        /// Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
        /// </summary>
        int? SpfTtl { get; set; }
        /// <summary>Type of the DNS record. Example: TXT</summary>
        string SpfType { get; set; }
        /// <summary>Value of the DNS record.</summary>
        string SpfValue { get; set; }

    }
}