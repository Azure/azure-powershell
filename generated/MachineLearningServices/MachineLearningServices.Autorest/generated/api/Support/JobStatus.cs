// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support
{

    /// <summary>The status of a job.</summary>
    public partial struct JobStatus :
        System.IEquatable<JobStatus>
    {
        /// <summary>Cancellation has been requested for the job.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus CancelRequested = @"CancelRequested";

        /// <summary>Following cancellation request, the job is now successfully canceled.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Canceled = @"Canceled";

        /// <summary>
        /// Job completed successfully. This reflects that both the job itself and output collection states completed successfully
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Completed = @"Completed";

        /// <summary>Job failed.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Failed = @"Failed";

        /// <summary>Job is completed in the target. It is in output collection state now.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Finalizing = @"Finalizing";

        /// <summary>
        /// When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding
        /// state.
        /// NotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of
        /// the previous states.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus NotResponding = @"NotResponding";

        /// <summary>Run hasn't started yet.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus NotStarted = @"NotStarted";

        /// <summary>
        /// The job is paused by users. Some adjustment to labeling jobs can be made only in paused state.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Paused = @"Paused";

        /// <summary>The run environment is being prepared.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Preparing = @"Preparing";

        /// <summary>(Not used currently) It will be used if ES is creating the compute target.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Provisioning = @"Provisioning";

        /// <summary>
        /// The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required
        /// nodes to be ready.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Queued = @"Queued";

        /// <summary>The job started to run in the compute target.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Running = @"Running";

        /// <summary>Run has started. The user has a run ID.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Starting = @"Starting";

        /// <summary>Default job status if not mapped to all other statuses</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus Unknown = @"Unknown";

        /// <summary>the value for an instance of the <see cref="JobStatus" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to JobStatus</summary>
        /// <param name="value">the value to convert to an instance of <see cref="JobStatus" />.</param>
        internal static object CreateFrom(object value)
        {
            return new JobStatus(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type JobStatus</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type JobStatus (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is JobStatus && Equals((JobStatus)obj);
        }

        /// <summary>Returns hashCode for enum JobStatus</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="JobStatus"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private JobStatus(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for JobStatus</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to JobStatus</summary>
        /// <param name="value">the value to convert to an instance of <see cref="JobStatus" />.</param>

        public static implicit operator JobStatus(string value)
        {
            return new JobStatus(value);
        }

        /// <summary>Implicit operator to convert JobStatus to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="JobStatus" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum JobStatus</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e1, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum JobStatus</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e1, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobStatus e2)
        {
            return e2.Equals(e1);
        }
    }
}