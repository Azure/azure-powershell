// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Docker container configuration</summary>
    public partial class Docker :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IDocker,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IDockerInternal
    {

        /// <summary>Backing field for <see cref="Privileged" /> property.</summary>
        private bool? _privileged;

        /// <summary>Indicate whether container shall run in privileged or non-privileged mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? Privileged { get => this._privileged; set => this._privileged = value; }

        /// <summary>Creates an new <see cref="Docker" /> instance.</summary>
        public Docker()
        {

        }
    }
    /// Docker container configuration
    public partial interface IDocker :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IAssociativeArray<global::System.Object>
    {
        /// <summary>Indicate whether container shall run in privileged or non-privileged mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicate whether container shall run in privileged or non-privileged mode.",
        SerializedName = @"privileged",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Privileged { get; set; }

    }
    /// Docker container configuration
    internal partial interface IDockerInternal

    {
        /// <summary>Indicate whether container shall run in privileged or non-privileged mode.</summary>
        bool? Privileged { get; set; }

    }
}