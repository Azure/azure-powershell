// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class ImageClassificationBase :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageClassificationBase,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageClassificationBaseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVertical"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVertical __imageVertical = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageVertical();

        /// <summary>Number of intervals by which to delay the first evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? EarlyTerminationDelayEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationDelayEvaluation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationDelayEvaluation = value ?? default(int); }

        /// <summary>Interval (number of runs) between policy evaluations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? EarlyTerminationEvaluationInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationEvaluationInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationEvaluationInterval = value ?? default(int); }

        /// <summary>[Required] Name of policy configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EarlyTerminationPolicyType? EarlyTerminationPolicyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationPolicyType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).EarlyTerminationPolicyType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EarlyTerminationPolicyType)""); }

        /// <summary>[Required] Limit settings for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageLimitSettings LimitSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSetting = value ; }

        /// <summary>Maximum number of concurrent AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? LimitSettingMaxConcurrentTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingMaxConcurrentTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingMaxConcurrentTrial = value ?? default(int); }

        /// <summary>Maximum number of AutoML iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? LimitSettingMaxTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingMaxTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingMaxTrial = value ?? default(int); }

        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? LimitSettingTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).LimitSettingTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Internal Acessors for ModelSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassification Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageClassificationBaseInternal.ModelSetting { get => (this._modelSetting = this._modelSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelSettingsClassification()); set { {_modelSetting = value;} } }

        /// <summary>Internal Acessors for ModelSettingCheckpointModel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageClassificationBaseInternal.ModelSettingCheckpointModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModel = value; }

        /// <summary>Backing field for <see cref="ModelSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassification _modelSetting;

        /// <summary>Settings used for training the model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassification ModelSetting { get => (this._modelSetting = this._modelSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelSettingsClassification()); set => this._modelSetting = value; }

        /// <summary>Settings for advanced scenarios.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingAdvancedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).AdvancedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).AdvancedSetting = value ?? null; }

        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? ModelSettingAmsGradient { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).AmsGradient; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).AmsGradient = value ?? default(bool); }

        /// <summary>Settings for using Augmentations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingAugmentation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Augmentation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Augmentation = value ?? null; }

        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingBeta1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Beta1; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Beta1 = value ?? default(float); }

        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingBeta2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Beta2; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Beta2 = value ?? default(float); }

        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingCheckpointFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointFrequency = value ?? default(int); }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingCheckpointModelDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelDescription = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ModelSettingCheckpointModelJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelJobInputType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelJobInputType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ModelSettingCheckpointModelMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingCheckpointModelUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointModelUri = value ?? null; }

        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingCheckpointRunId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointRunId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).CheckpointRunId = value ?? null; }

        /// <summary>Whether to use distributed training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? ModelSettingDistributed { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Distributed; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Distributed = value ?? default(bool); }

        /// <summary>Enable early stopping logic during training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? ModelSettingEarlyStopping { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStopping; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStopping = value ?? default(bool); }

        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingEarlyStoppingDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStoppingDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStoppingDelay = value ?? default(int); }

        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingEarlyStoppingPatience { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStoppingPatience; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EarlyStoppingPatience = value ?? default(int); }

        /// <summary>Enable normalization when exporting ONNX model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? ModelSettingEnableOnnxNormalization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EnableOnnxNormalization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EnableOnnxNormalization = value ?? default(bool); }

        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingEvaluationFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EvaluationFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).EvaluationFrequency = value ?? default(int); }

        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingGradientAccumulationStep { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).GradientAccumulationStep; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).GradientAccumulationStep = value ?? default(int); }

        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingLayersToFreeze { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LayersToFreeze; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LayersToFreeze = value ?? default(int); }

        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingLearningRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LearningRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LearningRate = value ?? default(float); }

        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? ModelSettingLearningRateScheduler { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LearningRateScheduler; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).LearningRateScheduler = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler)""); }

        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string ModelSettingModelName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).ModelName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).ModelName = value ?? null; }

        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingMomentum { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Momentum; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Momentum = value ?? default(float); }

        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? ModelSettingNesterov { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Nesterov; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Nesterov = value ?? default(bool); }

        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingNumberOfEpoch { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).NumberOfEpoch; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).NumberOfEpoch = value ?? default(int); }

        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingNumberOfWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).NumberOfWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).NumberOfWorker = value ?? default(int); }

        /// <summary>Type of optimizer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? ModelSettingOptimizer { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Optimizer; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).Optimizer = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer)""); }

        /// <summary>Random seed to be used when using deterministic training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingRandomSeed { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).RandomSeed; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).RandomSeed = value ?? default(int); }

        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingStepLrGamma { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).StepLrGamma; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).StepLrGamma = value ?? default(float); }

        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingStepLrStepSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).StepLrStepSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).StepLrStepSize = value ?? default(int); }

        /// <summary>Training batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingTrainingBatchSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).TrainingBatchSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).TrainingBatchSize = value ?? default(int); }

        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingTrainingCropSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).TrainingCropSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).TrainingCropSize = value ?? default(int); }

        /// <summary>Validation batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingValidationBatchSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).ValidationBatchSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).ValidationBatchSize = value ?? default(int); }

        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingValidationCropSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).ValidationCropSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).ValidationCropSize = value ?? default(int); }

        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingValidationResizeSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).ValidationResizeSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).ValidationResizeSize = value ?? default(int); }

        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingWarmupCosineLrCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WarmupCosineLrCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WarmupCosineLrCycle = value ?? default(float); }

        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingWarmupCosineLrWarmupEpoch { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WarmupCosineLrWarmupEpoch; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WarmupCosineLrWarmupEpoch = value ?? default(int); }

        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public float? ModelSettingWeightDecay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WeightDecay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal)ModelSetting).WeightDecay = value ?? default(float); }

        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public int? ModelSettingWeightedLoss { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).WeightedLoss; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassificationInternal)ModelSetting).WeightedLoss = value ?? default(int); }

        /// <summary>Backing field for <see cref="SearchSpace" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification[] _searchSpace;

        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification[] SearchSpace { get => this._searchSpace; set => this._searchSpace = value; }

        /// <summary>Model sweeping and hyperparameter sweeping related settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageSweepSettings SweepSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSetting = value ?? null /* model class */; }

        /// <summary>Type of early termination policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IEarlyTerminationPolicy SweepSettingEarlyTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSettingEarlyTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSettingEarlyTermination = value ?? null /* model class */; }

        /// <summary>[Required] Type of the hyperparameter sampling algorithms.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SamplingAlgorithmType? SweepSettingSamplingAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSettingSamplingAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).SweepSettingSamplingAlgorithm = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.SamplingAlgorithmType)""); }

        /// <summary>Validation data inputs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput ValidationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationData = value ?? null /* model class */; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ValidationDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataDescription = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ValidationDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataJobInputType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataJobInputType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ValidationDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public double? ValidationDataSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataSize = value ?? default(double); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ValidationDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal)__imageVertical).ValidationDataUri = value ?? null; }

        /// <summary>Creates an new <see cref="ImageClassificationBase" /> instance.</summary>
        public ImageClassificationBase()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__imageVertical), __imageVertical);
            await eventListener.AssertObjectIsValid(nameof(__imageVertical), __imageVertical);
        }
    }
    public partial interface IImageClassificationBase :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVertical
    {
        /// <summary>Settings for advanced scenarios.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings for advanced scenarios.",
        SerializedName = @"advancedSettings",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingAdvancedSetting { get; set; }
        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
        SerializedName = @"amsGradient",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ModelSettingAmsGradient { get; set; }
        /// <summary>Settings for using Augmentations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings for using Augmentations.",
        SerializedName = @"augmentations",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingAugmentation { get; set; }
        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
        SerializedName = @"beta1",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingBeta1 { get; set; }
        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
        SerializedName = @"beta2",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingBeta2 { get; set; }
        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency to store model checkpoints. Must be a positive integer.",
        SerializedName = @"checkpointFrequency",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingCheckpointFrequency { get; set; }
        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description for the input.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingCheckpointModelDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies the type of job.",
        SerializedName = @"jobInputType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ModelSettingCheckpointModelJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Input Asset Delivery Mode.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ModelSettingCheckpointModelMode { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Input Asset URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingCheckpointModelUri { get; set; }
        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of a previous run that has a pretrained checkpoint for incremental training.",
        SerializedName = @"checkpointRunId",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingCheckpointRunId { get; set; }
        /// <summary>Whether to use distributed training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to use distributed training.",
        SerializedName = @"distributed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ModelSettingDistributed { get; set; }
        /// <summary>Enable early stopping logic during training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable early stopping logic during training.",
        SerializedName = @"earlyStopping",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ModelSettingEarlyStopping { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum number of epochs or validation evaluations to wait before primary metric improvement
        is tracked for early stopping. Must be a positive integer.",
        SerializedName = @"earlyStoppingDelay",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingEarlyStoppingDelay { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum number of epochs or validation evaluations with no primary metric improvement before
        the run is stopped. Must be a positive integer.",
        SerializedName = @"earlyStoppingPatience",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingEarlyStoppingPatience { get; set; }
        /// <summary>Enable normalization when exporting ONNX model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable normalization when exporting ONNX model.",
        SerializedName = @"enableOnnxNormalization",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ModelSettingEnableOnnxNormalization { get; set; }
        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
        SerializedName = @"evaluationFrequency",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingEvaluationFrequency { get; set; }
        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gradient accumulation means running a configured number of ""GradAccumulationStep"" steps without
        updating the model weights while accumulating the gradients of those steps, and then using
        the accumulated gradients to compute the weight updates. Must be a positive integer.",
        SerializedName = @"gradientAccumulationStep",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingGradientAccumulationStep { get; set; }
        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of layers to freeze for the model. Must be a positive integer.
        For instance, passing 2 as value for 'seresnext' means
        freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
        SerializedName = @"layersToFreeze",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingLayersToFreeze { get; set; }
        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Initial learning rate. Must be a float in the range [0, 1].",
        SerializedName = @"learningRate",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingLearningRate { get; set; }
        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
        SerializedName = @"learningRateScheduler",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? ModelSettingLearningRateScheduler { get; set; }
        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the model to use for training.
        For more information on the available models please visit the official documentation:
        https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
        SerializedName = @"modelName",
        PossibleTypes = new [] { typeof(string) })]
        string ModelSettingModelName { get; set; }
        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
        SerializedName = @"momentum",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingMomentum { get; set; }
        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable nesterov when optimizer is 'sgd'.",
        SerializedName = @"nesterov",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ModelSettingNesterov { get; set; }
        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of training epochs. Must be a positive integer.",
        SerializedName = @"numberOfEpochs",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingNumberOfEpoch { get; set; }
        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of data loader workers. Must be a non-negative integer.",
        SerializedName = @"numberOfWorkers",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingNumberOfWorker { get; set; }
        /// <summary>Type of optimizer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of optimizer.",
        SerializedName = @"optimizer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? ModelSettingOptimizer { get; set; }
        /// <summary>Random seed to be used when using deterministic training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Random seed to be used when using deterministic training.",
        SerializedName = @"randomSeed",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingRandomSeed { get; set; }
        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
        SerializedName = @"stepLRGamma",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingStepLrGamma { get; set; }
        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
        SerializedName = @"stepLRStepSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingStepLrStepSize { get; set; }
        /// <summary>Training batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Training batch size. Must be a positive integer.",
        SerializedName = @"trainingBatchSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingTrainingBatchSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
        SerializedName = @"trainingCropSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingTrainingCropSize { get; set; }
        /// <summary>Validation batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Validation batch size. Must be a positive integer.",
        SerializedName = @"validationBatchSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingValidationBatchSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
        SerializedName = @"validationCropSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingValidationCropSize { get; set; }
        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
        SerializedName = @"validationResizeSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingValidationResizeSize { get; set; }
        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
        SerializedName = @"warmupCosineLRCycles",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingWarmupCosineLrCycle { get; set; }
        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
        SerializedName = @"warmupCosineLRWarmupEpochs",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingWarmupCosineLrWarmupEpoch { get; set; }
        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
        SerializedName = @"weightDecay",
        PossibleTypes = new [] { typeof(float) })]
        float? ModelSettingWeightDecay { get; set; }
        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weighted loss. The accepted values are 0 for no weighted loss.
        1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
        SerializedName = @"weightedLoss",
        PossibleTypes = new [] { typeof(int) })]
        int? ModelSettingWeightedLoss { get; set; }
        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Search space for sampling different combinations of models and their hyperparameters.",
        SerializedName = @"searchSpace",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification[] SearchSpace { get; set; }

    }
    internal partial interface IImageClassificationBaseInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageVerticalInternal
    {
        /// <summary>Settings used for training the model.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsClassification ModelSetting { get; set; }
        /// <summary>Settings for advanced scenarios.</summary>
        string ModelSettingAdvancedSetting { get; set; }
        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        bool? ModelSettingAmsGradient { get; set; }
        /// <summary>Settings for using Augmentations.</summary>
        string ModelSettingAugmentation { get; set; }
        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        float? ModelSettingBeta1 { get; set; }
        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        float? ModelSettingBeta2 { get; set; }
        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        int? ModelSettingCheckpointFrequency { get; set; }
        /// <summary>The pretrained checkpoint model for incremental training.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput ModelSettingCheckpointModel { get; set; }
        /// <summary>Description for the input.</summary>
        string ModelSettingCheckpointModelDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ModelSettingCheckpointModelJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ModelSettingCheckpointModelMode { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        string ModelSettingCheckpointModelUri { get; set; }
        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        string ModelSettingCheckpointRunId { get; set; }
        /// <summary>Whether to use distributed training.</summary>
        bool? ModelSettingDistributed { get; set; }
        /// <summary>Enable early stopping logic during training.</summary>
        bool? ModelSettingEarlyStopping { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        int? ModelSettingEarlyStoppingDelay { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        int? ModelSettingEarlyStoppingPatience { get; set; }
        /// <summary>Enable normalization when exporting ONNX model.</summary>
        bool? ModelSettingEnableOnnxNormalization { get; set; }
        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        int? ModelSettingEvaluationFrequency { get; set; }
        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        int? ModelSettingGradientAccumulationStep { get; set; }
        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        int? ModelSettingLayersToFreeze { get; set; }
        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        float? ModelSettingLearningRate { get; set; }
        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? ModelSettingLearningRateScheduler { get; set; }
        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        string ModelSettingModelName { get; set; }
        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        float? ModelSettingMomentum { get; set; }
        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        bool? ModelSettingNesterov { get; set; }
        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        int? ModelSettingNumberOfEpoch { get; set; }
        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        int? ModelSettingNumberOfWorker { get; set; }
        /// <summary>Type of optimizer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? ModelSettingOptimizer { get; set; }
        /// <summary>Random seed to be used when using deterministic training.</summary>
        int? ModelSettingRandomSeed { get; set; }
        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        float? ModelSettingStepLrGamma { get; set; }
        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        int? ModelSettingStepLrStepSize { get; set; }
        /// <summary>Training batch size. Must be a positive integer.</summary>
        int? ModelSettingTrainingBatchSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        int? ModelSettingTrainingCropSize { get; set; }
        /// <summary>Validation batch size. Must be a positive integer.</summary>
        int? ModelSettingValidationBatchSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        int? ModelSettingValidationCropSize { get; set; }
        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        int? ModelSettingValidationResizeSize { get; set; }
        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        float? ModelSettingWarmupCosineLrCycle { get; set; }
        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        int? ModelSettingWarmupCosineLrWarmupEpoch { get; set; }
        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        float? ModelSettingWeightDecay { get; set; }
        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        int? ModelSettingWeightedLoss { get; set; }
        /// <summary>
        /// Search space for sampling different combinations of models and their hyperparameters.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification[] SearchSpace { get; set; }

    }
}