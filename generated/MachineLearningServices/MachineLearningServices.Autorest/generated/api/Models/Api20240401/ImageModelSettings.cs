// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>
    /// Settings used for training the model.
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    /// </summary>
    public partial class ImageModelSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettings,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal
    {

        /// <summary>Backing field for <see cref="AdvancedSetting" /> property.</summary>
        private string _advancedSetting;

        /// <summary>Settings for advanced scenarios.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string AdvancedSetting { get => this._advancedSetting; set => this._advancedSetting = value; }

        /// <summary>Backing field for <see cref="AmsGradient" /> property.</summary>
        private bool? _amsGradient;

        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? AmsGradient { get => this._amsGradient; set => this._amsGradient = value; }

        /// <summary>Backing field for <see cref="Augmentation" /> property.</summary>
        private string _augmentation;

        /// <summary>Settings for using Augmentations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string Augmentation { get => this._augmentation; set => this._augmentation = value; }

        /// <summary>Backing field for <see cref="Beta1" /> property.</summary>
        private float? _beta1;

        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? Beta1 { get => this._beta1; set => this._beta1 = value; }

        /// <summary>Backing field for <see cref="Beta2" /> property.</summary>
        private float? _beta2;

        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? Beta2 { get => this._beta2; set => this._beta2 = value; }

        /// <summary>Backing field for <see cref="CheckpointFrequency" /> property.</summary>
        private int? _checkpointFrequency;

        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? CheckpointFrequency { get => this._checkpointFrequency; set => this._checkpointFrequency = value; }

        /// <summary>Backing field for <see cref="CheckpointModel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput _checkpointModel;

        /// <summary>The pretrained checkpoint model for incremental training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput CheckpointModel { get => (this._checkpointModel = this._checkpointModel ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlFlowModelJobInput()); set => this._checkpointModel = value; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CheckpointModelDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)CheckpointModel).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)CheckpointModel).Description = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? CheckpointModelJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)CheckpointModel).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IJobInputInternal)CheckpointModel).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? CheckpointModelMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)CheckpointModel).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)CheckpointModel).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CheckpointModelUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)CheckpointModel).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAssetJobInputInternal)CheckpointModel).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="CheckpointRunId" /> property.</summary>
        private string _checkpointRunId;

        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string CheckpointRunId { get => this._checkpointRunId; set => this._checkpointRunId = value; }

        /// <summary>Backing field for <see cref="Distributed" /> property.</summary>
        private bool? _distributed;

        /// <summary>Whether to use distributed training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? Distributed { get => this._distributed; set => this._distributed = value; }

        /// <summary>Backing field for <see cref="EarlyStopping" /> property.</summary>
        private bool? _earlyStopping;

        /// <summary>Enable early stopping logic during training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EarlyStopping { get => this._earlyStopping; set => this._earlyStopping = value; }

        /// <summary>Backing field for <see cref="EarlyStoppingDelay" /> property.</summary>
        private int? _earlyStoppingDelay;

        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? EarlyStoppingDelay { get => this._earlyStoppingDelay; set => this._earlyStoppingDelay = value; }

        /// <summary>Backing field for <see cref="EarlyStoppingPatience" /> property.</summary>
        private int? _earlyStoppingPatience;

        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? EarlyStoppingPatience { get => this._earlyStoppingPatience; set => this._earlyStoppingPatience = value; }

        /// <summary>Backing field for <see cref="EnableOnnxNormalization" /> property.</summary>
        private bool? _enableOnnxNormalization;

        /// <summary>Enable normalization when exporting ONNX model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? EnableOnnxNormalization { get => this._enableOnnxNormalization; set => this._enableOnnxNormalization = value; }

        /// <summary>Backing field for <see cref="EvaluationFrequency" /> property.</summary>
        private int? _evaluationFrequency;

        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? EvaluationFrequency { get => this._evaluationFrequency; set => this._evaluationFrequency = value; }

        /// <summary>Backing field for <see cref="GradientAccumulationStep" /> property.</summary>
        private int? _gradientAccumulationStep;

        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? GradientAccumulationStep { get => this._gradientAccumulationStep; set => this._gradientAccumulationStep = value; }

        /// <summary>Backing field for <see cref="LayersToFreeze" /> property.</summary>
        private int? _layersToFreeze;

        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? LayersToFreeze { get => this._layersToFreeze; set => this._layersToFreeze = value; }

        /// <summary>Backing field for <see cref="LearningRate" /> property.</summary>
        private float? _learningRate;

        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? LearningRate { get => this._learningRate; set => this._learningRate = value; }

        /// <summary>Backing field for <see cref="LearningRateScheduler" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? _learningRateScheduler;

        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? LearningRateScheduler { get => this._learningRateScheduler; set => this._learningRateScheduler = value; }

        /// <summary>Internal Acessors for CheckpointModel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelSettingsInternal.CheckpointModel { get => (this._checkpointModel = this._checkpointModel ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlFlowModelJobInput()); set { {_checkpointModel = value;} } }

        /// <summary>Backing field for <see cref="ModelName" /> property.</summary>
        private string _modelName;

        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ModelName { get => this._modelName; set => this._modelName = value; }

        /// <summary>Backing field for <see cref="Momentum" /> property.</summary>
        private float? _momentum;

        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? Momentum { get => this._momentum; set => this._momentum = value; }

        /// <summary>Backing field for <see cref="Nesterov" /> property.</summary>
        private bool? _nesterov;

        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public bool? Nesterov { get => this._nesterov; set => this._nesterov = value; }

        /// <summary>Backing field for <see cref="NumberOfEpoch" /> property.</summary>
        private int? _numberOfEpoch;

        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? NumberOfEpoch { get => this._numberOfEpoch; set => this._numberOfEpoch = value; }

        /// <summary>Backing field for <see cref="NumberOfWorker" /> property.</summary>
        private int? _numberOfWorker;

        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? NumberOfWorker { get => this._numberOfWorker; set => this._numberOfWorker = value; }

        /// <summary>Backing field for <see cref="Optimizer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? _optimizer;

        /// <summary>Type of optimizer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? Optimizer { get => this._optimizer; set => this._optimizer = value; }

        /// <summary>Backing field for <see cref="RandomSeed" /> property.</summary>
        private int? _randomSeed;

        /// <summary>Random seed to be used when using deterministic training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? RandomSeed { get => this._randomSeed; set => this._randomSeed = value; }

        /// <summary>Backing field for <see cref="StepLrGamma" /> property.</summary>
        private float? _stepLrGamma;

        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? StepLrGamma { get => this._stepLrGamma; set => this._stepLrGamma = value; }

        /// <summary>Backing field for <see cref="StepLrStepSize" /> property.</summary>
        private int? _stepLrStepSize;

        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? StepLrStepSize { get => this._stepLrStepSize; set => this._stepLrStepSize = value; }

        /// <summary>Backing field for <see cref="TrainingBatchSize" /> property.</summary>
        private int? _trainingBatchSize;

        /// <summary>Training batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? TrainingBatchSize { get => this._trainingBatchSize; set => this._trainingBatchSize = value; }

        /// <summary>Backing field for <see cref="ValidationBatchSize" /> property.</summary>
        private int? _validationBatchSize;

        /// <summary>Validation batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? ValidationBatchSize { get => this._validationBatchSize; set => this._validationBatchSize = value; }

        /// <summary>Backing field for <see cref="WarmupCosineLrCycle" /> property.</summary>
        private float? _warmupCosineLrCycle;

        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? WarmupCosineLrCycle { get => this._warmupCosineLrCycle; set => this._warmupCosineLrCycle = value; }

        /// <summary>Backing field for <see cref="WarmupCosineLrWarmupEpoch" /> property.</summary>
        private int? _warmupCosineLrWarmupEpoch;

        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? WarmupCosineLrWarmupEpoch { get => this._warmupCosineLrWarmupEpoch; set => this._warmupCosineLrWarmupEpoch = value; }

        /// <summary>Backing field for <see cref="WeightDecay" /> property.</summary>
        private float? _weightDecay;

        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public float? WeightDecay { get => this._weightDecay; set => this._weightDecay = value; }

        /// <summary>Creates an new <see cref="ImageModelSettings" /> instance.</summary>
        public ImageModelSettings()
        {

        }
    }
    /// Settings used for training the model.
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    public partial interface IImageModelSettings :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Settings for advanced scenarios.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings for advanced scenarios.",
        SerializedName = @"advancedSettings",
        PossibleTypes = new [] { typeof(string) })]
        string AdvancedSetting { get; set; }
        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
        SerializedName = @"amsGradient",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AmsGradient { get; set; }
        /// <summary>Settings for using Augmentations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings for using Augmentations.",
        SerializedName = @"augmentations",
        PossibleTypes = new [] { typeof(string) })]
        string Augmentation { get; set; }
        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
        SerializedName = @"beta1",
        PossibleTypes = new [] { typeof(float) })]
        float? Beta1 { get; set; }
        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
        SerializedName = @"beta2",
        PossibleTypes = new [] { typeof(float) })]
        float? Beta2 { get; set; }
        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency to store model checkpoints. Must be a positive integer.",
        SerializedName = @"checkpointFrequency",
        PossibleTypes = new [] { typeof(int) })]
        int? CheckpointFrequency { get; set; }
        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description for the input.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string CheckpointModelDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Specifies the type of job.",
        SerializedName = @"jobInputType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? CheckpointModelJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Input Asset Delivery Mode.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? CheckpointModelMode { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"[Required] Input Asset URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string CheckpointModelUri { get; set; }
        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of a previous run that has a pretrained checkpoint for incremental training.",
        SerializedName = @"checkpointRunId",
        PossibleTypes = new [] { typeof(string) })]
        string CheckpointRunId { get; set; }
        /// <summary>Whether to use distributed training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to use distributed training.",
        SerializedName = @"distributed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Distributed { get; set; }
        /// <summary>Enable early stopping logic during training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable early stopping logic during training.",
        SerializedName = @"earlyStopping",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EarlyStopping { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum number of epochs or validation evaluations to wait before primary metric improvement
        is tracked for early stopping. Must be a positive integer.",
        SerializedName = @"earlyStoppingDelay",
        PossibleTypes = new [] { typeof(int) })]
        int? EarlyStoppingDelay { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum number of epochs or validation evaluations with no primary metric improvement before
        the run is stopped. Must be a positive integer.",
        SerializedName = @"earlyStoppingPatience",
        PossibleTypes = new [] { typeof(int) })]
        int? EarlyStoppingPatience { get; set; }
        /// <summary>Enable normalization when exporting ONNX model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable normalization when exporting ONNX model.",
        SerializedName = @"enableOnnxNormalization",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableOnnxNormalization { get; set; }
        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
        SerializedName = @"evaluationFrequency",
        PossibleTypes = new [] { typeof(int) })]
        int? EvaluationFrequency { get; set; }
        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gradient accumulation means running a configured number of ""GradAccumulationStep"" steps without
        updating the model weights while accumulating the gradients of those steps, and then using
        the accumulated gradients to compute the weight updates. Must be a positive integer.",
        SerializedName = @"gradientAccumulationStep",
        PossibleTypes = new [] { typeof(int) })]
        int? GradientAccumulationStep { get; set; }
        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of layers to freeze for the model. Must be a positive integer.
        For instance, passing 2 as value for 'seresnext' means
        freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
        SerializedName = @"layersToFreeze",
        PossibleTypes = new [] { typeof(int) })]
        int? LayersToFreeze { get; set; }
        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Initial learning rate. Must be a float in the range [0, 1].",
        SerializedName = @"learningRate",
        PossibleTypes = new [] { typeof(float) })]
        float? LearningRate { get; set; }
        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
        SerializedName = @"learningRateScheduler",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? LearningRateScheduler { get; set; }
        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the model to use for training.
        For more information on the available models please visit the official documentation:
        https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
        SerializedName = @"modelName",
        PossibleTypes = new [] { typeof(string) })]
        string ModelName { get; set; }
        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
        SerializedName = @"momentum",
        PossibleTypes = new [] { typeof(float) })]
        float? Momentum { get; set; }
        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable nesterov when optimizer is 'sgd'.",
        SerializedName = @"nesterov",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Nesterov { get; set; }
        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of training epochs. Must be a positive integer.",
        SerializedName = @"numberOfEpochs",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfEpoch { get; set; }
        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of data loader workers. Must be a non-negative integer.",
        SerializedName = @"numberOfWorkers",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfWorker { get; set; }
        /// <summary>Type of optimizer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of optimizer.",
        SerializedName = @"optimizer",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? Optimizer { get; set; }
        /// <summary>Random seed to be used when using deterministic training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Random seed to be used when using deterministic training.",
        SerializedName = @"randomSeed",
        PossibleTypes = new [] { typeof(int) })]
        int? RandomSeed { get; set; }
        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
        SerializedName = @"stepLRGamma",
        PossibleTypes = new [] { typeof(float) })]
        float? StepLrGamma { get; set; }
        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
        SerializedName = @"stepLRStepSize",
        PossibleTypes = new [] { typeof(int) })]
        int? StepLrStepSize { get; set; }
        /// <summary>Training batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Training batch size. Must be a positive integer.",
        SerializedName = @"trainingBatchSize",
        PossibleTypes = new [] { typeof(int) })]
        int? TrainingBatchSize { get; set; }
        /// <summary>Validation batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Validation batch size. Must be a positive integer.",
        SerializedName = @"validationBatchSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ValidationBatchSize { get; set; }
        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
        SerializedName = @"warmupCosineLRCycles",
        PossibleTypes = new [] { typeof(float) })]
        float? WarmupCosineLrCycle { get; set; }
        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
        SerializedName = @"warmupCosineLRWarmupEpochs",
        PossibleTypes = new [] { typeof(int) })]
        int? WarmupCosineLrWarmupEpoch { get; set; }
        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
        SerializedName = @"weightDecay",
        PossibleTypes = new [] { typeof(float) })]
        float? WeightDecay { get; set; }

    }
    /// Settings used for training the model.
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    internal partial interface IImageModelSettingsInternal

    {
        /// <summary>Settings for advanced scenarios.</summary>
        string AdvancedSetting { get; set; }
        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        bool? AmsGradient { get; set; }
        /// <summary>Settings for using Augmentations.</summary>
        string Augmentation { get; set; }
        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        float? Beta1 { get; set; }
        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        float? Beta2 { get; set; }
        /// <summary>Frequency to store model checkpoints. Must be a positive integer.</summary>
        int? CheckpointFrequency { get; set; }
        /// <summary>The pretrained checkpoint model for incremental training.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlFlowModelJobInput CheckpointModel { get; set; }
        /// <summary>Description for the input.</summary>
        string CheckpointModelDescription { get; set; }
        /// <summary>[Required] Specifies the type of job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? CheckpointModelJobInputType { get; set; }
        /// <summary>Input Asset Delivery Mode.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? CheckpointModelMode { get; set; }
        /// <summary>[Required] Input Asset URI.</summary>
        string CheckpointModelUri { get; set; }
        /// <summary>
        /// The id of a previous run that has a pretrained checkpoint for incremental training.
        /// </summary>
        string CheckpointRunId { get; set; }
        /// <summary>Whether to use distributed training.</summary>
        bool? Distributed { get; set; }
        /// <summary>Enable early stopping logic during training.</summary>
        bool? EarlyStopping { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        int? EarlyStoppingDelay { get; set; }
        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        int? EarlyStoppingPatience { get; set; }
        /// <summary>Enable normalization when exporting ONNX model.</summary>
        bool? EnableOnnxNormalization { get; set; }
        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        int? EvaluationFrequency { get; set; }
        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        int? GradientAccumulationStep { get; set; }
        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        int? LayersToFreeze { get; set; }
        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        float? LearningRate { get; set; }
        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LearningRateScheduler? LearningRateScheduler { get; set; }
        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        string ModelName { get; set; }
        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        float? Momentum { get; set; }
        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        bool? Nesterov { get; set; }
        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        int? NumberOfEpoch { get; set; }
        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        int? NumberOfWorker { get; set; }
        /// <summary>Type of optimizer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StochasticOptimizer? Optimizer { get; set; }
        /// <summary>Random seed to be used when using deterministic training.</summary>
        int? RandomSeed { get; set; }
        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        float? StepLrGamma { get; set; }
        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        int? StepLrStepSize { get; set; }
        /// <summary>Training batch size. Must be a positive integer.</summary>
        int? TrainingBatchSize { get; set; }
        /// <summary>Validation batch size. Must be a positive integer.</summary>
        int? ValidationBatchSize { get; set; }
        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        float? WarmupCosineLrCycle { get; set; }
        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        int? WarmupCosineLrWarmupEpoch { get; set; }
        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        float? WeightDecay { get; set; }

    }
}