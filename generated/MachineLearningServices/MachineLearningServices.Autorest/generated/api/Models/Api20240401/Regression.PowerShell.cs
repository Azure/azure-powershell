// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.PowerShell;

    /// <summary>Regression task in AutoML Table vertical.</summary>
    [System.ComponentModel.TypeConverter(typeof(RegressionTypeConverter))]
    public partial class Regression
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Regression"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Regression(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Regression"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Regression(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Regression" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Regression" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Regression"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Regression(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TrainingSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings) content.GetValueForProperty("TrainingSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.RegressionTrainingSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrimaryMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).PrimaryMetric = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics?) content.GetValueForProperty("PrimaryMetric",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).PrimaryMetric, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingDatasetLanguage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingDatasetLanguage = (string) content.GetValueForProperty("FeaturizationSettingDatasetLanguage",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingDatasetLanguage, global::System.Convert.ToString);
            }
            if (content.Contains("NCrossValidationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidationMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode) content.GetValueForProperty("NCrossValidationMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidationMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingBlockedTransformer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingBlockedTransformer = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[]) content.GetValueForProperty("FeaturizationSettingBlockedTransformer",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingBlockedTransformer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers.CreateFrom));
            }
            if (content.Contains("FeaturizationSettingColumnNameAndType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingColumnNameAndType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes) content.GetValueForProperty("FeaturizationSettingColumnNameAndType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingColumnNameAndType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsColumnNameAndTypesTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeaturizationSettingEnableDnnFeaturization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingEnableDnnFeaturization = (bool?) content.GetValueForProperty("FeaturizationSettingEnableDnnFeaturization",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingEnableDnnFeaturization, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FeaturizationSettingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode?) content.GetValueForProperty("FeaturizationSettingMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingTransformerParam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingTransformerParam = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams) content.GetValueForProperty("FeaturizationSettingTransformerParam",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingTransformerParam, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsTransformerParamsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LimitSettingEnableEarlyTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingEnableEarlyTermination = (bool?) content.GetValueForProperty("LimitSettingEnableEarlyTermination",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingEnableEarlyTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LimitSettingExitScore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingExitScore = (double?) content.GetValueForProperty("LimitSettingExitScore",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingExitScore, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LimitSettingMaxConcurrentTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxConcurrentTrial = (int?) content.GetValueForProperty("LimitSettingMaxConcurrentTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxConcurrentTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingMaxCoresPerTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxCoresPerTrial = (int?) content.GetValueForProperty("LimitSettingMaxCoresPerTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxCoresPerTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingMaxTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxTrial = (int?) content.GetValueForProperty("LimitSettingMaxTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTimeout = (global::System.TimeSpan?) content.GetValueForProperty("LimitSettingTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("LimitSettingTrialTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTrialTimeout = (global::System.TimeSpan?) content.GetValueForProperty("LimitSettingTrialTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTrialTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TestDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("TestDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("TestDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataUri = (string) content.GetValueForProperty("TestDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("TestDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataDescription = (string) content.GetValueForProperty("TestDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TestDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("TestDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("ValidationDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("ValidationDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("ValidationDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataUri = (string) content.GetValueForProperty("ValidationDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataDescription = (string) content.GetValueForProperty("ValidationDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("ValidationDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("FeaturizationSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings) content.GetValueForProperty("FeaturizationSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LimitSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings) content.GetValueForProperty("LimitSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalLimitSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NCrossValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidation = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations) content.GetValueForProperty("NCrossValidation",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidation, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.NCrossValidationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TestData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("TestData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("ValidationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("ValidationData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("CvSplitColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).CvSplitColumnName = (string[]) content.GetValueForProperty("CvSplitColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).CvSplitColumnName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TestDataSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataSize = (double?) content.GetValueForProperty("TestDataSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ValidationDataSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataSize = (double?) content.GetValueForProperty("ValidationDataSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("WeightColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).WeightColumnName = (string) content.GetValueForProperty("WeightColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).WeightColumnName, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("TrainingDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("TrainingDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataUri = (string) content.GetValueForProperty("TrainingDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataDescription = (string) content.GetValueForProperty("TrainingDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("TrainingDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("TrainingData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("TrainingData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogVerbosity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).LogVerbosity = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity?) content.GetValueForProperty("LogVerbosity",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).LogVerbosity, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity.CreateFrom);
            }
            if (content.Contains("TargetColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TargetColumnName = (string) content.GetValueForProperty("TargetColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TargetColumnName, global::System.Convert.ToString);
            }
            if (content.Contains("TaskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TaskType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TaskType) content.GetValueForProperty("TaskType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TaskType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TaskType.CreateFrom);
            }
            if (content.Contains("TrainingSettingStackEnsembleSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings) content.GetValueForProperty("TrainingSettingStackEnsembleSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.StackEnsembleSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrainingSettingEnableDnnTraining"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableDnnTraining = (bool?) content.GetValueForProperty("TrainingSettingEnableDnnTraining",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableDnnTraining, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableModelExplainability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableModelExplainability = (bool?) content.GetValueForProperty("TrainingSettingEnableModelExplainability",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableModelExplainability, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableOnnxCompatibleModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableOnnxCompatibleModel = (bool?) content.GetValueForProperty("TrainingSettingEnableOnnxCompatibleModel",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableOnnxCompatibleModel, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableStackEnsemble"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableStackEnsemble = (bool?) content.GetValueForProperty("TrainingSettingEnableStackEnsemble",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableStackEnsemble, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableVoteEnsemble"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableVoteEnsemble = (bool?) content.GetValueForProperty("TrainingSettingEnableVoteEnsemble",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableVoteEnsemble, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnsembleModelDownloadTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnsembleModelDownloadTimeout = (global::System.TimeSpan?) content.GetValueForProperty("TrainingSettingEnsembleModelDownloadTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnsembleModelDownloadTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TrainingSettingAllowedTrainingAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingAllowedTrainingAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[]) content.GetValueForProperty("TrainingSettingAllowedTrainingAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingAllowedTrainingAlgorithm, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels.CreateFrom));
            }
            if (content.Contains("TrainingSettingBlockedTrainingAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingBlockedTrainingAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[]) content.GetValueForProperty("TrainingSettingBlockedTrainingAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingBlockedTrainingAlgorithm, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels.CreateFrom));
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage = (double?) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType?) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.Regression"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Regression(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TrainingSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings) content.GetValueForProperty("TrainingSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.RegressionTrainingSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PrimaryMetric"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).PrimaryMetric = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics?) content.GetValueForProperty("PrimaryMetric",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).PrimaryMetric, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingDatasetLanguage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingDatasetLanguage = (string) content.GetValueForProperty("FeaturizationSettingDatasetLanguage",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingDatasetLanguage, global::System.Convert.ToString);
            }
            if (content.Contains("NCrossValidationMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidationMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode) content.GetValueForProperty("NCrossValidationMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidationMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingBlockedTransformer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingBlockedTransformer = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[]) content.GetValueForProperty("FeaturizationSettingBlockedTransformer",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingBlockedTransformer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers.CreateFrom));
            }
            if (content.Contains("FeaturizationSettingColumnNameAndType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingColumnNameAndType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes) content.GetValueForProperty("FeaturizationSettingColumnNameAndType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingColumnNameAndType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsColumnNameAndTypesTypeConverter.ConvertFrom);
            }
            if (content.Contains("FeaturizationSettingEnableDnnFeaturization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingEnableDnnFeaturization = (bool?) content.GetValueForProperty("FeaturizationSettingEnableDnnFeaturization",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingEnableDnnFeaturization, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FeaturizationSettingMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode?) content.GetValueForProperty("FeaturizationSettingMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode.CreateFrom);
            }
            if (content.Contains("FeaturizationSettingTransformerParam"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingTransformerParam = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams) content.GetValueForProperty("FeaturizationSettingTransformerParam",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSettingTransformerParam, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsTransformerParamsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LimitSettingEnableEarlyTermination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingEnableEarlyTermination = (bool?) content.GetValueForProperty("LimitSettingEnableEarlyTermination",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingEnableEarlyTermination, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LimitSettingExitScore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingExitScore = (double?) content.GetValueForProperty("LimitSettingExitScore",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingExitScore, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("LimitSettingMaxConcurrentTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxConcurrentTrial = (int?) content.GetValueForProperty("LimitSettingMaxConcurrentTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxConcurrentTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingMaxCoresPerTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxCoresPerTrial = (int?) content.GetValueForProperty("LimitSettingMaxCoresPerTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxCoresPerTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingMaxTrial"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxTrial = (int?) content.GetValueForProperty("LimitSettingMaxTrial",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingMaxTrial, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LimitSettingTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTimeout = (global::System.TimeSpan?) content.GetValueForProperty("LimitSettingTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("LimitSettingTrialTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTrialTimeout = (global::System.TimeSpan?) content.GetValueForProperty("LimitSettingTrialTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSettingTrialTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TestDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("TestDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("TestDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataUri = (string) content.GetValueForProperty("TestDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("TestDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataDescription = (string) content.GetValueForProperty("TestDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TestDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("TestDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("ValidationDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("ValidationDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("ValidationDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataUri = (string) content.GetValueForProperty("ValidationDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataDescription = (string) content.GetValueForProperty("ValidationDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("ValidationDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("FeaturizationSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings) content.GetValueForProperty("FeaturizationSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).FeaturizationSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalFeaturizationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("LimitSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings) content.GetValueForProperty("LimitSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).LimitSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVerticalLimitSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NCrossValidation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidation = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations) content.GetValueForProperty("NCrossValidation",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).NCrossValidation, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.NCrossValidationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TestData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("TestData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("ValidationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("ValidationData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("CvSplitColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).CvSplitColumnName = (string[]) content.GetValueForProperty("CvSplitColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).CvSplitColumnName, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TestDataSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataSize = (double?) content.GetValueForProperty("TestDataSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).TestDataSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("ValidationDataSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataSize = (double?) content.GetValueForProperty("ValidationDataSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).ValidationDataSize, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("WeightColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).WeightColumnName = (string) content.GetValueForProperty("WeightColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)this).WeightColumnName, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataMode = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode?) content.GetValueForProperty("TrainingDataMode",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataMode, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode.CreateFrom);
            }
            if (content.Contains("TrainingDataUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataUri = (string) content.GetValueForProperty("TrainingDataUri",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataUri, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataDescription = (string) content.GetValueForProperty("TrainingDataDescription",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataDescription, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingDataJobInputType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataJobInputType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType) content.GetValueForProperty("TrainingDataJobInputType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingDataJobInputType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType.CreateFrom);
            }
            if (content.Contains("TrainingData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingData = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput) content.GetValueForProperty("TrainingData",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TrainingData, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.MlTableJobInputTypeConverter.ConvertFrom);
            }
            if (content.Contains("LogVerbosity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).LogVerbosity = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity?) content.GetValueForProperty("LogVerbosity",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).LogVerbosity, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity.CreateFrom);
            }
            if (content.Contains("TargetColumnName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TargetColumnName = (string) content.GetValueForProperty("TargetColumnName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TargetColumnName, global::System.Convert.ToString);
            }
            if (content.Contains("TaskType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TaskType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TaskType) content.GetValueForProperty("TaskType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)this).TaskType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TaskType.CreateFrom);
            }
            if (content.Contains("TrainingSettingStackEnsembleSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSetting = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings) content.GetValueForProperty("TrainingSettingStackEnsembleSetting",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSetting, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.StackEnsembleSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrainingSettingEnableDnnTraining"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableDnnTraining = (bool?) content.GetValueForProperty("TrainingSettingEnableDnnTraining",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableDnnTraining, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableModelExplainability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableModelExplainability = (bool?) content.GetValueForProperty("TrainingSettingEnableModelExplainability",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableModelExplainability, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableOnnxCompatibleModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableOnnxCompatibleModel = (bool?) content.GetValueForProperty("TrainingSettingEnableOnnxCompatibleModel",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableOnnxCompatibleModel, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableStackEnsemble"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableStackEnsemble = (bool?) content.GetValueForProperty("TrainingSettingEnableStackEnsemble",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableStackEnsemble, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnableVoteEnsemble"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableVoteEnsemble = (bool?) content.GetValueForProperty("TrainingSettingEnableVoteEnsemble",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnableVoteEnsemble, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TrainingSettingEnsembleModelDownloadTimeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnsembleModelDownloadTimeout = (global::System.TimeSpan?) content.GetValueForProperty("TrainingSettingEnsembleModelDownloadTimeout",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingEnsembleModelDownloadTimeout, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TrainingSettingAllowedTrainingAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingAllowedTrainingAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[]) content.GetValueForProperty("TrainingSettingAllowedTrainingAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingAllowedTrainingAlgorithm, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels.CreateFrom));
            }
            if (content.Contains("TrainingSettingBlockedTrainingAlgorithm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingBlockedTrainingAlgorithm = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[]) content.GetValueForProperty("TrainingSettingBlockedTrainingAlgorithm",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingBlockedTrainingAlgorithm, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels>(__y, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels.CreateFrom));
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage = (double?) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage, (__y)=> (double) global::System.Convert.ChangeType(__y, typeof(double)));
            }
            if (content.Contains("TrainingSettingStackEnsembleSettingStackMetaLearnerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerType = (Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType?) content.GetValueForProperty("TrainingSettingStackEnsembleSettingStackMetaLearnerType",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal)this).TrainingSettingStackEnsembleSettingStackMetaLearnerType, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Regression task in AutoML Table vertical.
    [System.ComponentModel.TypeConverter(typeof(RegressionTypeConverter))]
    public partial interface IRegression

    {

    }
}