// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.PowerShell;

    /// <summary>
    /// Distribution expressions to sweep over values of model settings.
    /// <example>
    /// Some examples are:
    /// ```
    /// ModelName = "choice('seresnext', 'resnest50')";
    /// LearningRate = "uniform(0.001, 0.01)";
    /// LayersToFreeze = "choice(0, 2)";
    /// ```</example>
    /// For more details on how to compose distribution expressions please check the documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ImageModelDistributionSettingsClassificationTypeConverter))]
    public partial class ImageModelDistributionSettingsClassification
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelDistributionSettingsClassification"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ImageModelDistributionSettingsClassification(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelDistributionSettingsClassification"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ImageModelDistributionSettingsClassification(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ImageModelDistributionSettingsClassification" />, deserializing the content from
        /// a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="ImageModelDistributionSettingsClassification" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelDistributionSettingsClassification"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ImageModelDistributionSettingsClassification(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TrainingCropSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).TrainingCropSize = (string) content.GetValueForProperty("TrainingCropSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).TrainingCropSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationCropSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationCropSize = (string) content.GetValueForProperty("ValidationCropSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationCropSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationResizeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationResizeSize = (string) content.GetValueForProperty("ValidationResizeSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationResizeSize, global::System.Convert.ToString);
            }
            if (content.Contains("WeightedLoss"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).WeightedLoss = (string) content.GetValueForProperty("WeightedLoss",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).WeightedLoss, global::System.Convert.ToString);
            }
            if (content.Contains("AmsGradient"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).AmsGradient = (string) content.GetValueForProperty("AmsGradient",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).AmsGradient, global::System.Convert.ToString);
            }
            if (content.Contains("Augmentation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Augmentation = (string) content.GetValueForProperty("Augmentation",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Augmentation, global::System.Convert.ToString);
            }
            if (content.Contains("Beta1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta1 = (string) content.GetValueForProperty("Beta1",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta1, global::System.Convert.ToString);
            }
            if (content.Contains("Beta2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta2 = (string) content.GetValueForProperty("Beta2",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta2, global::System.Convert.ToString);
            }
            if (content.Contains("Distributed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Distributed = (string) content.GetValueForProperty("Distributed",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Distributed, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStopping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStopping = (string) content.GetValueForProperty("EarlyStopping",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStopping, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStoppingDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingDelay = (string) content.GetValueForProperty("EarlyStoppingDelay",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingDelay, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStoppingPatience"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingPatience = (string) content.GetValueForProperty("EarlyStoppingPatience",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingPatience, global::System.Convert.ToString);
            }
            if (content.Contains("EnableOnnxNormalization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EnableOnnxNormalization = (string) content.GetValueForProperty("EnableOnnxNormalization",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EnableOnnxNormalization, global::System.Convert.ToString);
            }
            if (content.Contains("EvaluationFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EvaluationFrequency = (string) content.GetValueForProperty("EvaluationFrequency",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EvaluationFrequency, global::System.Convert.ToString);
            }
            if (content.Contains("GradientAccumulationStep"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).GradientAccumulationStep = (string) content.GetValueForProperty("GradientAccumulationStep",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).GradientAccumulationStep, global::System.Convert.ToString);
            }
            if (content.Contains("LayersToFreeze"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LayersToFreeze = (string) content.GetValueForProperty("LayersToFreeze",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LayersToFreeze, global::System.Convert.ToString);
            }
            if (content.Contains("LearningRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRate = (string) content.GetValueForProperty("LearningRate",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRate, global::System.Convert.ToString);
            }
            if (content.Contains("LearningRateScheduler"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRateScheduler = (string) content.GetValueForProperty("LearningRateScheduler",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRateScheduler, global::System.Convert.ToString);
            }
            if (content.Contains("ModelName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ModelName = (string) content.GetValueForProperty("ModelName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ModelName, global::System.Convert.ToString);
            }
            if (content.Contains("Momentum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Momentum = (string) content.GetValueForProperty("Momentum",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Momentum, global::System.Convert.ToString);
            }
            if (content.Contains("Nesterov"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Nesterov = (string) content.GetValueForProperty("Nesterov",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Nesterov, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfEpoch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfEpoch = (string) content.GetValueForProperty("NumberOfEpoch",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfEpoch, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfWorker = (string) content.GetValueForProperty("NumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfWorker, global::System.Convert.ToString);
            }
            if (content.Contains("Optimizer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Optimizer = (string) content.GetValueForProperty("Optimizer",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Optimizer, global::System.Convert.ToString);
            }
            if (content.Contains("RandomSeed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).RandomSeed = (string) content.GetValueForProperty("RandomSeed",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).RandomSeed, global::System.Convert.ToString);
            }
            if (content.Contains("StepLrGamma"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrGamma = (string) content.GetValueForProperty("StepLrGamma",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrGamma, global::System.Convert.ToString);
            }
            if (content.Contains("StepLrStepSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrStepSize = (string) content.GetValueForProperty("StepLrStepSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrStepSize, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingBatchSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).TrainingBatchSize = (string) content.GetValueForProperty("TrainingBatchSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).TrainingBatchSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationBatchSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ValidationBatchSize = (string) content.GetValueForProperty("ValidationBatchSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ValidationBatchSize, global::System.Convert.ToString);
            }
            if (content.Contains("WarmupCosineLrCycle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrCycle = (string) content.GetValueForProperty("WarmupCosineLrCycle",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrCycle, global::System.Convert.ToString);
            }
            if (content.Contains("WarmupCosineLrWarmupEpoch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrWarmupEpoch = (string) content.GetValueForProperty("WarmupCosineLrWarmupEpoch",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrWarmupEpoch, global::System.Convert.ToString);
            }
            if (content.Contains("WeightDecay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WeightDecay = (string) content.GetValueForProperty("WeightDecay",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WeightDecay, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelDistributionSettingsClassification"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ImageModelDistributionSettingsClassification(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("TrainingCropSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).TrainingCropSize = (string) content.GetValueForProperty("TrainingCropSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).TrainingCropSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationCropSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationCropSize = (string) content.GetValueForProperty("ValidationCropSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationCropSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationResizeSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationResizeSize = (string) content.GetValueForProperty("ValidationResizeSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).ValidationResizeSize, global::System.Convert.ToString);
            }
            if (content.Contains("WeightedLoss"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).WeightedLoss = (string) content.GetValueForProperty("WeightedLoss",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal)this).WeightedLoss, global::System.Convert.ToString);
            }
            if (content.Contains("AmsGradient"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).AmsGradient = (string) content.GetValueForProperty("AmsGradient",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).AmsGradient, global::System.Convert.ToString);
            }
            if (content.Contains("Augmentation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Augmentation = (string) content.GetValueForProperty("Augmentation",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Augmentation, global::System.Convert.ToString);
            }
            if (content.Contains("Beta1"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta1 = (string) content.GetValueForProperty("Beta1",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta1, global::System.Convert.ToString);
            }
            if (content.Contains("Beta2"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta2 = (string) content.GetValueForProperty("Beta2",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Beta2, global::System.Convert.ToString);
            }
            if (content.Contains("Distributed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Distributed = (string) content.GetValueForProperty("Distributed",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Distributed, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStopping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStopping = (string) content.GetValueForProperty("EarlyStopping",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStopping, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStoppingDelay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingDelay = (string) content.GetValueForProperty("EarlyStoppingDelay",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingDelay, global::System.Convert.ToString);
            }
            if (content.Contains("EarlyStoppingPatience"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingPatience = (string) content.GetValueForProperty("EarlyStoppingPatience",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EarlyStoppingPatience, global::System.Convert.ToString);
            }
            if (content.Contains("EnableOnnxNormalization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EnableOnnxNormalization = (string) content.GetValueForProperty("EnableOnnxNormalization",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EnableOnnxNormalization, global::System.Convert.ToString);
            }
            if (content.Contains("EvaluationFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EvaluationFrequency = (string) content.GetValueForProperty("EvaluationFrequency",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).EvaluationFrequency, global::System.Convert.ToString);
            }
            if (content.Contains("GradientAccumulationStep"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).GradientAccumulationStep = (string) content.GetValueForProperty("GradientAccumulationStep",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).GradientAccumulationStep, global::System.Convert.ToString);
            }
            if (content.Contains("LayersToFreeze"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LayersToFreeze = (string) content.GetValueForProperty("LayersToFreeze",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LayersToFreeze, global::System.Convert.ToString);
            }
            if (content.Contains("LearningRate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRate = (string) content.GetValueForProperty("LearningRate",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRate, global::System.Convert.ToString);
            }
            if (content.Contains("LearningRateScheduler"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRateScheduler = (string) content.GetValueForProperty("LearningRateScheduler",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).LearningRateScheduler, global::System.Convert.ToString);
            }
            if (content.Contains("ModelName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ModelName = (string) content.GetValueForProperty("ModelName",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ModelName, global::System.Convert.ToString);
            }
            if (content.Contains("Momentum"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Momentum = (string) content.GetValueForProperty("Momentum",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Momentum, global::System.Convert.ToString);
            }
            if (content.Contains("Nesterov"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Nesterov = (string) content.GetValueForProperty("Nesterov",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Nesterov, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfEpoch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfEpoch = (string) content.GetValueForProperty("NumberOfEpoch",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfEpoch, global::System.Convert.ToString);
            }
            if (content.Contains("NumberOfWorker"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfWorker = (string) content.GetValueForProperty("NumberOfWorker",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).NumberOfWorker, global::System.Convert.ToString);
            }
            if (content.Contains("Optimizer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Optimizer = (string) content.GetValueForProperty("Optimizer",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).Optimizer, global::System.Convert.ToString);
            }
            if (content.Contains("RandomSeed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).RandomSeed = (string) content.GetValueForProperty("RandomSeed",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).RandomSeed, global::System.Convert.ToString);
            }
            if (content.Contains("StepLrGamma"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrGamma = (string) content.GetValueForProperty("StepLrGamma",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrGamma, global::System.Convert.ToString);
            }
            if (content.Contains("StepLrStepSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrStepSize = (string) content.GetValueForProperty("StepLrStepSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).StepLrStepSize, global::System.Convert.ToString);
            }
            if (content.Contains("TrainingBatchSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).TrainingBatchSize = (string) content.GetValueForProperty("TrainingBatchSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).TrainingBatchSize, global::System.Convert.ToString);
            }
            if (content.Contains("ValidationBatchSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ValidationBatchSize = (string) content.GetValueForProperty("ValidationBatchSize",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).ValidationBatchSize, global::System.Convert.ToString);
            }
            if (content.Contains("WarmupCosineLrCycle"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrCycle = (string) content.GetValueForProperty("WarmupCosineLrCycle",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrCycle, global::System.Convert.ToString);
            }
            if (content.Contains("WarmupCosineLrWarmupEpoch"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrWarmupEpoch = (string) content.GetValueForProperty("WarmupCosineLrWarmupEpoch",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WarmupCosineLrWarmupEpoch, global::System.Convert.ToString);
            }
            if (content.Contains("WeightDecay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WeightDecay = (string) content.GetValueForProperty("WeightDecay",((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)this).WeightDecay, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Distribution expressions to sweep over values of model settings.
    /// <example>
    /// Some examples are:
    /// ```
    /// ModelName = "choice('seresnext', 'resnest50')";
    /// LearningRate = "uniform(0.001, 0.01)";
    /// LayersToFreeze = "choice(0, 2)";
    /// ```</example>
    /// For more details on how to compose distribution expressions please check the documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    [System.ComponentModel.TypeConverter(typeof(ImageModelDistributionSettingsClassificationTypeConverter))]
    public partial interface IImageModelDistributionSettingsClassification

    {

    }
}