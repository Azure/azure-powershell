// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Regression task in AutoML Table vertical.</summary>
    public partial class Regression :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegression,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVertical"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVertical __autoMlVertical = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.AutoMlVertical();

        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVertical"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVertical __tableVertical = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.TableVertical();

        /// <summary>Columns to use for CVSplit data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string[] CvSplitColumnName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).CvSplitColumnName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).CvSplitColumnName = value ?? null /* arrayOf */; }

        /// <summary>Featurization inputs needed for AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettings FeaturizationSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSetting = value ?? null /* model class */; }

        /// <summary>These transformers shall not be used in featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.BlockedTransformers[] FeaturizationSettingBlockedTransformer { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingBlockedTransformer; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingBlockedTransformer = value ?? null /* arrayOf */; }

        /// <summary>Dictionary of column name and its type (int, float, string, datetime etc).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsColumnNameAndTypes FeaturizationSettingColumnNameAndType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingColumnNameAndType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingColumnNameAndType = value ?? null /* model class */; }

        /// <summary>Dataset language, useful for the text data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string FeaturizationSettingDatasetLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingDatasetLanguage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingDatasetLanguage = value ?? null; }

        /// <summary>Determines whether to use Dnn based featurizers for data featurization.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? FeaturizationSettingEnableDnnFeaturization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingEnableDnnFeaturization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingEnableDnnFeaturization = value ?? default(bool); }

        /// <summary>
        /// Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the
        /// data in featurization phase.
        /// If 'Off' is selected then no featurization is done.
        /// If 'Custom' is selected then user can specify additional inputs to customize how featurization is done.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode? FeaturizationSettingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.FeaturizationMode)""); }

        /// <summary>
        /// User can specify additional transformers to be used along with the columns to which it would be applied and parameters
        /// for the transformer constructor.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalFeaturizationSettingsTransformerParams FeaturizationSettingTransformerParam { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingTransformerParam; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).FeaturizationSettingTransformerParam = value ?? null /* model class */; }

        /// <summary>Execution constraints for AutoMLJob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalLimitSettings LimitSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSetting = value ?? null /* model class */; }

        /// <summary>
        /// Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement
        /// in last 20 iterations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? LimitSettingEnableEarlyTermination { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingEnableEarlyTermination; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingEnableEarlyTermination = value ?? default(bool); }

        /// <summary>Exit score for the AutoML job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public double? LimitSettingExitScore { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingExitScore; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingExitScore = value ?? default(double); }

        /// <summary>Maximum Concurrent iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? LimitSettingMaxConcurrentTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxConcurrentTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxConcurrentTrial = value ?? default(int); }

        /// <summary>Max cores per iteration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? LimitSettingMaxCoresPerTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxCoresPerTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxCoresPerTrial = value ?? default(int); }

        /// <summary>Number of iterations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? LimitSettingMaxTrial { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxTrial; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingMaxTrial = value ?? default(int); }

        /// <summary>AutoML job timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? LimitSettingTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Iteration timeout.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public global::System.TimeSpan? LimitSettingTrialTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingTrialTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).LimitSettingTrialTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Log verbosity for the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity? LogVerbosity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).LogVerbosity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).LogVerbosity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.LogVerbosity)""); }

        /// <summary>Internal Acessors for TrainingSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal.TrainingSetting { get => (this._trainingSetting = this._trainingSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.RegressionTrainingSettings()); set { {_trainingSetting = value;} } }

        /// <summary>Internal Acessors for TrainingSettingStackEnsembleSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionInternal.TrainingSettingStackEnsembleSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSetting = value; }

        /// <summary>
        /// Number of cross validation folds to be applied on training dataset
        /// when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.INCrossValidations NCrossValidation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).NCrossValidation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).NCrossValidation = value ?? null /* model class */; }

        /// <summary>[Required] Mode for determining N-Cross validations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode? NCrossValidationMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).NCrossValidationMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).NCrossValidationMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.NCrossValidationsMode)""); }

        /// <summary>Backing field for <see cref="PrimaryMetric" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics? _primaryMetric;

        /// <summary>Primary metric for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics? PrimaryMetric { get => this._primaryMetric; set => this._primaryMetric = value; }

        /// <summary>
        /// Target column name: This is prediction values column.
        /// Also known as label column name in context of classification tasks.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TargetColumnName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TargetColumnName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TargetColumnName = value ?? null; }

        /// <summary>[Required] Task type for AutoMLJob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.TaskType TaskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TaskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TaskType = value ; }

        /// <summary>Test data input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput TestData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestData = value ?? null /* model class */; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TestDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataDescription = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? TestDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataJobInputType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataJobInputType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? TestDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>
        /// The fraction of test dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public double? TestDataSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataSize = value ?? default(double); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TestDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).TestDataUri = value ?? null; }

        /// <summary>[Required] Training data input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput TrainingData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingData = value ; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TrainingDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataDescription = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType TrainingDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataJobInputType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataJobInputType = value ; }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? TrainingDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TrainingDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal)__autoMlVertical).TrainingDataUri = value ; }

        /// <summary>Backing field for <see cref="TrainingSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings _trainingSetting;

        /// <summary>Inputs for training phase for an AutoML Job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings TrainingSetting { get => (this._trainingSetting = this._trainingSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.RegressionTrainingSettings()); set => this._trainingSetting = value; }

        /// <summary>Allowed models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingAllowedTrainingAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettingsInternal)TrainingSetting).AllowedTrainingAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettingsInternal)TrainingSetting).AllowedTrainingAlgorithm = value ?? null /* arrayOf */; }

        /// <summary>Blocked models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingBlockedTrainingAlgorithm { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettingsInternal)TrainingSetting).BlockedTrainingAlgorithm; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettingsInternal)TrainingSetting).BlockedTrainingAlgorithm = value ?? null /* arrayOf */; }

        /// <summary>Enable recommendation of DNN models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? TrainingSettingEnableDnnTraining { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableDnnTraining; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableDnnTraining = value ?? default(bool); }

        /// <summary>Flag to turn on explainability on best model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? TrainingSettingEnableModelExplainability { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableModelExplainability; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableModelExplainability = value ?? default(bool); }

        /// <summary>Flag for enabling onnx compatible models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? TrainingSettingEnableOnnxCompatibleModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableOnnxCompatibleModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableOnnxCompatibleModel = value ?? default(bool); }

        /// <summary>Enable stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? TrainingSettingEnableStackEnsemble { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableStackEnsemble; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableStackEnsemble = value ?? default(bool); }

        /// <summary>Enable voting ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public bool? TrainingSettingEnableVoteEnsemble { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableVoteEnsemble; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnableVoteEnsemble = value ?? default(bool); }

        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? TrainingSettingEnsembleModelDownloadTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnsembleModelDownloadTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).EnsembleModelDownloadTimeout = value ?? default(global::System.TimeSpan); }

        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerKWarg; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerKWarg = value ?? null /* model class */; }

        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public double? TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerTrainPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerTrainPercentage = value ?? default(double); }

        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? TrainingSettingStackEnsembleSettingStackMetaLearnerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITrainingSettingsInternal)TrainingSetting).StackEnsembleSettingStackMetaLearnerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType)""); }

        /// <summary>Validation data inputs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IMlTableJobInput ValidationData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationData = value ?? null /* model class */; }

        /// <summary>Description for the input.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ValidationDataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataDescription = value ?? null; }

        /// <summary>[Required] Specifies the type of job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType? ValidationDataJobInputType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataJobInputType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataJobInputType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.JobInputType)""); }

        /// <summary>Input Asset Delivery Mode.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode? ValidationDataMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.InputDeliveryMode)""); }

        /// <summary>
        /// The fraction of training dataset that needs to be set aside for validation purpose.
        /// Values between (0.0 , 1.0)
        /// Applied when validation dataset is not provided.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public double? ValidationDataSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataSize = value ?? default(double); }

        /// <summary>[Required] Input Asset URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ValidationDataUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).ValidationDataUri = value ?? null; }

        /// <summary>
        /// The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to
        /// be weighted up or down.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string WeightColumnName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).WeightColumnName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal)__tableVertical).WeightColumnName = value ?? null; }

        /// <summary>Creates an new <see cref="Regression" /> instance.</summary>
        public Regression()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__tableVertical), __tableVertical);
            await eventListener.AssertObjectIsValid(nameof(__tableVertical), __tableVertical);
            await eventListener.AssertNotNull(nameof(__autoMlVertical), __autoMlVertical);
            await eventListener.AssertObjectIsValid(nameof(__autoMlVertical), __autoMlVertical);
        }
    }
    /// Regression task in AutoML Table vertical.
    public partial interface IRegression :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVertical,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVertical
    {
        /// <summary>Primary metric for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary metric for regression task.",
        SerializedName = @"primaryMetric",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics? PrimaryMetric { get; set; }
        /// <summary>Allowed models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed models for regression task.",
        SerializedName = @"allowedTrainingAlgorithms",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingAllowedTrainingAlgorithm { get; set; }
        /// <summary>Blocked models for regression task.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blocked models for regression task.",
        SerializedName = @"blockedTrainingAlgorithms",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingBlockedTrainingAlgorithm { get; set; }
        /// <summary>Enable recommendation of DNN models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable recommendation of DNN models.",
        SerializedName = @"enableDnnTraining",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TrainingSettingEnableDnnTraining { get; set; }
        /// <summary>Flag to turn on explainability on best model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to turn on explainability on best model.",
        SerializedName = @"enableModelExplainability",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TrainingSettingEnableModelExplainability { get; set; }
        /// <summary>Flag for enabling onnx compatible models.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag for enabling onnx compatible models.",
        SerializedName = @"enableOnnxCompatibleModels",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TrainingSettingEnableOnnxCompatibleModel { get; set; }
        /// <summary>Enable stack ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable stack ensemble run.",
        SerializedName = @"enableStackEnsemble",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TrainingSettingEnableStackEnsemble { get; set; }
        /// <summary>Enable voting ensemble run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable voting ensemble run.",
        SerializedName = @"enableVoteEnsemble",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TrainingSettingEnableVoteEnsemble { get; set; }
        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        Configure this parameter with a higher value than 300 secs, if more time is needed.",
        SerializedName = @"ensembleModelDownloadTimeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TrainingSettingEnsembleModelDownloadTimeout { get; set; }
        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional parameters to pass to the initializer of the meta-learner.",
        SerializedName = @"stackMetaLearnerKWargs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg { get; set; }
        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.",
        SerializedName = @"stackMetaLearnerTrainPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage { get; set; }
        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The meta-learner is a model trained on the output of the individual heterogeneous models.",
        SerializedName = @"stackMetaLearnerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? TrainingSettingStackEnsembleSettingStackMetaLearnerType { get; set; }

    }
    /// Regression task in AutoML Table vertical.
    internal partial interface IRegressionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ITableVerticalInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IAutoMlVerticalInternal
    {
        /// <summary>Primary metric for regression task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionPrimaryMetrics? PrimaryMetric { get; set; }
        /// <summary>Inputs for training phase for an AutoML Job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IRegressionTrainingSettings TrainingSetting { get; set; }
        /// <summary>Allowed models for regression task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingAllowedTrainingAlgorithm { get; set; }
        /// <summary>Blocked models for regression task.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.RegressionModels[] TrainingSettingBlockedTrainingAlgorithm { get; set; }
        /// <summary>Enable recommendation of DNN models.</summary>
        bool? TrainingSettingEnableDnnTraining { get; set; }
        /// <summary>Flag to turn on explainability on best model.</summary>
        bool? TrainingSettingEnableModelExplainability { get; set; }
        /// <summary>Flag for enabling onnx compatible models.</summary>
        bool? TrainingSettingEnableOnnxCompatibleModel { get; set; }
        /// <summary>Enable stack ensemble run.</summary>
        bool? TrainingSettingEnableStackEnsemble { get; set; }
        /// <summary>Enable voting ensemble run.</summary>
        bool? TrainingSettingEnableVoteEnsemble { get; set; }
        /// <summary>
        /// During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.
        /// Configure this parameter with a higher value than 300 secs, if more time is needed.
        /// </summary>
        global::System.TimeSpan? TrainingSettingEnsembleModelDownloadTimeout { get; set; }
        /// <summary>Stack ensemble settings for stack ensemble run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IStackEnsembleSettings TrainingSettingStackEnsembleSetting { get; set; }
        /// <summary>Optional parameters to pass to the initializer of the meta-learner.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.IAny TrainingSettingStackEnsembleSettingStackMetaLearnerKWarg { get; set; }
        /// <summary>
        /// Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for
        /// training the meta-learner. Default value is 0.2.
        /// </summary>
        double? TrainingSettingStackEnsembleSettingStackMetaLearnerTrainPercentage { get; set; }
        /// <summary>
        /// The meta-learner is a model trained on the output of the individual heterogeneous models.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.StackMetaLearnerType? TrainingSettingStackEnsembleSettingStackMetaLearnerType { get; set; }

    }
}