// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>
    /// Distribution expressions to sweep over values of model settings.
    /// <example>
    /// Some examples are:
    /// ```
    /// ModelName = "choice('seresnext', 'resnest50')";
    /// LearningRate = "uniform(0.001, 0.01)";
    /// LayersToFreeze = "choice(0, 2)";
    /// ```</example>
    /// For more details on how to compose distribution expressions please check the documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    /// </summary>
    public partial class ImageModelDistributionSettingsClassification :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassification,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsClassificationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettings"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettings __imageModelDistributionSettings = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.ImageModelDistributionSettings();

        /// <summary>Enable AMSGrad when optimizer is 'adam' or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string AmsGradient { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).AmsGradient; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).AmsGradient = value ?? null; }

        /// <summary>Settings for using Augmentations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Augmentation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Augmentation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Augmentation = value ?? null; }

        /// <summary>
        /// Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Beta1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Beta1; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Beta1 = value ?? null; }

        /// <summary>
        /// Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Beta2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Beta2; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Beta2 = value ?? null; }

        /// <summary>Whether to use distributer training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Distributed { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Distributed; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Distributed = value ?? null; }

        /// <summary>Enable early stopping logic during training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string EarlyStopping { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStopping; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStopping = value ?? null; }

        /// <summary>
        /// Minimum number of epochs or validation evaluations to wait before primary metric improvement
        /// is tracked for early stopping. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string EarlyStoppingDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStoppingDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStoppingDelay = value ?? null; }

        /// <summary>
        /// Minimum number of epochs or validation evaluations with no primary metric improvement before
        /// the run is stopped. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string EarlyStoppingPatience { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStoppingPatience; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EarlyStoppingPatience = value ?? null; }

        /// <summary>Enable normalization when exporting ONNX model.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string EnableOnnxNormalization { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EnableOnnxNormalization; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EnableOnnxNormalization = value ?? null; }

        /// <summary>
        /// Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string EvaluationFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EvaluationFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).EvaluationFrequency = value ?? null; }

        /// <summary>
        /// Gradient accumulation means running a configured number of "GradAccumulationStep" steps without
        /// updating the model weights while accumulating the gradients of those steps, and then using
        /// the accumulated gradients to compute the weight updates. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string GradientAccumulationStep { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).GradientAccumulationStep; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).GradientAccumulationStep = value ?? null; }

        /// <summary>
        /// Number of layers to freeze for the model. Must be a positive integer.
        /// For instance, passing 2 as value for 'seresnext' means
        /// freezing layer0 and layer1. For a full list of models supported and details on layer freeze, please
        /// see: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string LayersToFreeze { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LayersToFreeze; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LayersToFreeze = value ?? null; }

        /// <summary>Initial learning rate. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string LearningRate { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LearningRate; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LearningRate = value ?? null; }

        /// <summary>Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string LearningRateScheduler { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LearningRateScheduler; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).LearningRateScheduler = value ?? null; }

        /// <summary>
        /// Name of the model to use for training.
        /// For more information on the available models please visit the official documentation:
        /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ModelName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).ModelName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).ModelName = value ?? null; }

        /// <summary>Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Momentum { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Momentum; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Momentum = value ?? null; }

        /// <summary>Enable nesterov when optimizer is 'sgd'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Nesterov { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Nesterov; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Nesterov = value ?? null; }

        /// <summary>Number of training epochs. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string NumberOfEpoch { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).NumberOfEpoch; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).NumberOfEpoch = value ?? null; }

        /// <summary>Number of data loader workers. Must be a non-negative integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string NumberOfWorker { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).NumberOfWorker; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).NumberOfWorker = value ?? null; }

        /// <summary>Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Optimizer { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Optimizer; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).Optimizer = value ?? null; }

        /// <summary>Random seed to be used when using deterministic training.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string RandomSeed { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).RandomSeed; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).RandomSeed = value ?? null; }

        /// <summary>
        /// Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string StepLrGamma { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).StepLrGamma; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).StepLrGamma = value ?? null; }

        /// <summary>
        /// Value of step size when learning rate scheduler is 'step'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string StepLrStepSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).StepLrStepSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).StepLrStepSize = value ?? null; }

        /// <summary>Training batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string TrainingBatchSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).TrainingBatchSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).TrainingBatchSize = value ?? null; }

        /// <summary>Backing field for <see cref="TrainingCropSize" /> property.</summary>
        private string _trainingCropSize;

        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string TrainingCropSize { get => this._trainingCropSize; set => this._trainingCropSize = value; }

        /// <summary>Validation batch size. Must be a positive integer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string ValidationBatchSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).ValidationBatchSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).ValidationBatchSize = value ?? null; }

        /// <summary>Backing field for <see cref="ValidationCropSize" /> property.</summary>
        private string _validationCropSize;

        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ValidationCropSize { get => this._validationCropSize; set => this._validationCropSize = value; }

        /// <summary>Backing field for <see cref="ValidationResizeSize" /> property.</summary>
        private string _validationResizeSize;

        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string ValidationResizeSize { get => this._validationResizeSize; set => this._validationResizeSize = value; }

        /// <summary>
        /// Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string WarmupCosineLrCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WarmupCosineLrCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WarmupCosineLrCycle = value ?? null; }

        /// <summary>
        /// Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string WarmupCosineLrWarmupEpoch { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WarmupCosineLrWarmupEpoch; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WarmupCosineLrWarmupEpoch = value ?? null; }

        /// <summary>
        /// Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string WeightDecay { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WeightDecay; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal)__imageModelDistributionSettings).WeightDecay = value ?? null; }

        /// <summary>Backing field for <see cref="WeightedLoss" /> property.</summary>
        private string _weightedLoss;

        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string WeightedLoss { get => this._weightedLoss; set => this._weightedLoss = value; }

        /// <summary>
        /// Creates an new <see cref="ImageModelDistributionSettingsClassification" /> instance.
        /// </summary>
        public ImageModelDistributionSettingsClassification()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__imageModelDistributionSettings), __imageModelDistributionSettings);
            await eventListener.AssertObjectIsValid(nameof(__imageModelDistributionSettings), __imageModelDistributionSettings);
        }
    }
    /// Distribution expressions to sweep over values of model settings.
    /// <example>
    /// Some examples are:
    /// ```
    /// ModelName = "choice('seresnext', 'resnest50')";
    /// LearningRate = "uniform(0.001, 0.01)";
    /// LayersToFreeze = "choice(0, 2)";
    /// ```</example>
    /// For more details on how to compose distribution expressions please check the documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    public partial interface IImageModelDistributionSettingsClassification :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettings
    {
        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
        SerializedName = @"trainingCropSize",
        PossibleTypes = new [] { typeof(string) })]
        string TrainingCropSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
        SerializedName = @"validationCropSize",
        PossibleTypes = new [] { typeof(string) })]
        string ValidationCropSize { get; set; }
        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
        SerializedName = @"validationResizeSize",
        PossibleTypes = new [] { typeof(string) })]
        string ValidationResizeSize { get; set; }
        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weighted loss. The accepted values are 0 for no weighted loss.
        1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
        SerializedName = @"weightedLoss",
        PossibleTypes = new [] { typeof(string) })]
        string WeightedLoss { get; set; }

    }
    /// Distribution expressions to sweep over values of model settings.
    /// <example>
    /// Some examples are:
    /// ```
    /// ModelName = "choice('seresnext', 'resnest50')";
    /// LearningRate = "uniform(0.001, 0.01)";
    /// LayersToFreeze = "choice(0, 2)";
    /// ```</example>
    /// For more details on how to compose distribution expressions please check the documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters
    /// For more information on the available settings please visit the official documentation:
    /// https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.
    internal partial interface IImageModelDistributionSettingsClassificationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IImageModelDistributionSettingsInternal
    {
        /// <summary>
        /// Image crop size that is input to the neural network for the training dataset. Must be a positive integer.
        /// </summary>
        string TrainingCropSize { get; set; }
        /// <summary>
        /// Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.
        /// </summary>
        string ValidationCropSize { get; set; }
        /// <summary>
        /// Image size to which to resize before cropping for validation dataset. Must be a positive integer.
        /// </summary>
        string ValidationResizeSize { get; set; }
        /// <summary>
        /// Weighted loss. The accepted values are 0 for no weighted loss.
        /// 1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.
        /// </summary>
        string WeightedLoss { get; set; }

    }
}