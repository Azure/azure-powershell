// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>Stops compute instance after user defined period of inactivity.</summary>
    public partial class IdleShutdownSetting :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IIdleShutdownSetting,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IIdleShutdownSettingInternal
    {

        /// <summary>Backing field for <see cref="IdleTimeBeforeShutdown" /> property.</summary>
        private string _idleTimeBeforeShutdown;

        /// <summary>Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public string IdleTimeBeforeShutdown { get => this._idleTimeBeforeShutdown; set => this._idleTimeBeforeShutdown = value; }

        /// <summary>Creates an new <see cref="IdleShutdownSetting" /> instance.</summary>
        public IdleShutdownSetting()
        {

        }
    }
    /// Stops compute instance after user defined period of inactivity.
    public partial interface IIdleShutdownSetting :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable
    {
        /// <summary>Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.",
        SerializedName = @"idleTimeBeforeShutdown",
        PossibleTypes = new [] { typeof(string) })]
        string IdleTimeBeforeShutdown { get; set; }

    }
    /// Stops compute instance after user defined period of inactivity.
    internal partial interface IIdleShutdownSettingInternal

    {
        /// <summary>Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.</summary>
        string IdleTimeBeforeShutdown { get; set; }

    }
}