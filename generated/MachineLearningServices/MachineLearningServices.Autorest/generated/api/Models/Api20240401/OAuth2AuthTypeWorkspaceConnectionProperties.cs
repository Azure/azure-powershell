// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    public partial class OAuth2AuthTypeWorkspaceConnectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IOAuth2AuthTypeWorkspaceConnectionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IOAuth2AuthTypeWorkspaceConnectionPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2 __workspaceConnectionPropertiesV2 = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.WorkspaceConnectionPropertiesV2();

        /// <summary>Authentication type of the connection target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ConnectionAuthType AuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).AuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).AuthType = value ; }

        /// <summary>Category of the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ConnectionCategory? Category { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Category = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ConnectionCategory)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string CreatedByWorkspaceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).CreatedByWorkspaceArmId; }

        /// <summary>Backing field for <see cref="Credentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2 _credentials;

        /// <summary>
        /// ClientId and ClientSecret are required. Other properties are optional
        /// depending on each OAuth2 provider's implementation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2 Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.WorkspaceConnectionOAuth2()); set => this._credentials = value; }

        /// <summary>Required by Concur connection category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsAuthUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).AuthUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).AuthUrl = value ?? null; }

        /// <summary>Client id in the format of UUID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).ClientId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).ClientSecret = value ?? null; }

        /// <summary>Required by GoogleAdWords connection category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsDeveloperToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).DeveloperToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).DeveloperToken = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).Password = value ?? null; }

        /// <summary>
        /// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        /// where user needs to get RefreshToken offline
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsRefreshToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).RefreshToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).RefreshToken = value ?? null; }

        /// <summary>Required by QuickBooks and Xero connection categories</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).TenantId = value ?? null; }

        /// <summary>
        /// Concur, ServiceNow auth server AccessToken grant type is 'Password'
        /// which requires UsernamePassword
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inlined)]
        public string CredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2Internal)Credentials).Username = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public global::System.DateTime? ExpiryTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).ExpiryTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).ExpiryTime = value ?? default(global::System.DateTime); }

        /// <summary>Group based on connection category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ConnectionGroup? Group { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Group; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public bool? IsSharedToAll { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).IsSharedToAll; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).IsSharedToAll = value ?? default(bool); }

        /// <summary>Store user metadata for this connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Metadata Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Metadata = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Credentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2 Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IOAuth2AuthTypeWorkspaceConnectionPropertiesInternal.Credentials { get => (this._credentials = this._credentials ?? new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.WorkspaceConnectionOAuth2()); set { {_credentials = value;} } }

        /// <summary>Internal Acessors for CreatedByWorkspaceArmId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal.CreatedByWorkspaceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).CreatedByWorkspaceArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).CreatedByWorkspaceArmId = value; }

        /// <summary>Internal Acessors for Group</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ConnectionGroup? Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal.Group { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Group; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Group = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string[] SharedUserList { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).SharedUserList; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).SharedUserList = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Target = value ?? null; }

        /// <summary>Value details of the workspace connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public string Value { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).Value = value ?? null; }

        /// <summary>format for the workspace connection value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ValueFormat? ValueFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).ValueFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal)__workspaceConnectionPropertiesV2).ValueFormat = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.ValueFormat)""); }

        /// <summary>
        /// Creates an new <see cref="OAuth2AuthTypeWorkspaceConnectionProperties" /> instance.
        /// </summary>
        public OAuth2AuthTypeWorkspaceConnectionProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__workspaceConnectionPropertiesV2), __workspaceConnectionPropertiesV2);
            await eventListener.AssertObjectIsValid(nameof(__workspaceConnectionPropertiesV2), __workspaceConnectionPropertiesV2);
        }
    }
    public partial interface IOAuth2AuthTypeWorkspaceConnectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2
    {
        /// <summary>Required by Concur connection category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required by Concur connection category",
        SerializedName = @"authUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsAuthUrl { get; set; }
        /// <summary>Client id in the format of UUID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client id in the format of UUID",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsClientId { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsClientSecret { get; set; }
        /// <summary>Required by GoogleAdWords connection category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required by GoogleAdWords connection category",
        SerializedName = @"developerToken",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsDeveloperToken { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsPassword { get; set; }
        /// <summary>
        /// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        /// where user needs to get RefreshToken offline
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        where user needs to get RefreshToken offline",
        SerializedName = @"refreshToken",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsRefreshToken { get; set; }
        /// <summary>Required by QuickBooks and Xero connection categories</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Required by QuickBooks and Xero connection categories",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsTenantId { get; set; }
        /// <summary>
        /// Concur, ServiceNow auth server AccessToken grant type is 'Password'
        /// which requires UsernamePassword
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Concur, ServiceNow auth server AccessToken grant type is 'Password'
        which requires UsernamePassword",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialsUsername { get; set; }

    }
    internal partial interface IOAuth2AuthTypeWorkspaceConnectionPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionPropertiesV2Internal
    {
        /// <summary>
        /// ClientId and ClientSecret are required. Other properties are optional
        /// depending on each OAuth2 provider's implementation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20240401.IWorkspaceConnectionOAuth2 Credentials { get; set; }
        /// <summary>Required by Concur connection category</summary>
        string CredentialsAuthUrl { get; set; }
        /// <summary>Client id in the format of UUID</summary>
        string CredentialsClientId { get; set; }

        string CredentialsClientSecret { get; set; }
        /// <summary>Required by GoogleAdWords connection category</summary>
        string CredentialsDeveloperToken { get; set; }

        string CredentialsPassword { get; set; }
        /// <summary>
        /// Required by GoogleBigQuery, GoogleAdWords, Hubspot, QuickBooks, Square, Xero, Zoho
        /// where user needs to get RefreshToken offline
        /// </summary>
        string CredentialsRefreshToken { get; set; }
        /// <summary>Required by QuickBooks and Xero connection categories</summary>
        string CredentialsTenantId { get; set; }
        /// <summary>
        /// Concur, ServiceNow auth server AccessToken grant type is 'Password'
        /// which requires UsernamePassword
        /// </summary>
        string CredentialsUsername { get; set; }

    }
}