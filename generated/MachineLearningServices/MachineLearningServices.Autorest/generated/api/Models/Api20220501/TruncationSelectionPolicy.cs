// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Extensions;

    /// <summary>
    /// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
    /// </summary>
    public partial class TruncationSelectionPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ITruncationSelectionPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.ITruncationSelectionPolicyInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicy"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicy __earlyTerminationPolicy = new Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.EarlyTerminationPolicy();

        /// <summary>Number of intervals by which to delay the first evaluation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? DelayEvaluation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).DelayEvaluation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).DelayEvaluation = value ?? default(int); }

        /// <summary>Interval (number of runs) between policy evaluations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public int? EvaluationInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).EvaluationInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).EvaluationInterval = value ?? default(int); }

        /// <summary>[Required] Name of policy configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Support.EarlyTerminationPolicyType PolicyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).PolicyType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal)__earlyTerminationPolicy).PolicyType = value ; }

        /// <summary>Backing field for <see cref="TruncationPercentage" /> property.</summary>
        private int? _truncationPercentage;

        /// <summary>The percentage of runs to cancel at each evaluation interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.PropertyOrigin.Owned)]
        public int? TruncationPercentage { get => this._truncationPercentage; set => this._truncationPercentage = value; }

        /// <summary>Creates an new <see cref="TruncationSelectionPolicy" /> instance.</summary>
        public TruncationSelectionPolicy()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__earlyTerminationPolicy), __earlyTerminationPolicy);
            await eventListener.AssertObjectIsValid(nameof(__earlyTerminationPolicy), __earlyTerminationPolicy);
        }
    }
    /// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
    public partial interface ITruncationSelectionPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicy
    {
        /// <summary>The percentage of runs to cancel at each evaluation interval.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage of runs to cancel at each evaluation interval.",
        SerializedName = @"truncationPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? TruncationPercentage { get; set; }

    }
    /// Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.
    internal partial interface ITruncationSelectionPolicyInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MachineLearningServices.Models.Api20220501.IEarlyTerminationPolicyInternal
    {
        /// <summary>The percentage of runs to cancel at each evaluation interval.</summary>
        int? TruncationPercentage { get; set; }

    }
}