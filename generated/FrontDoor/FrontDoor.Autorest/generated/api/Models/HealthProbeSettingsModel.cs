// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Load balancing settings for a backend pool</summary>
    public partial class HealthProbeSettingsModel :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModel,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.SubResource();

        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string EnabledState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).EnabledState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).EnabledState = value ?? null; }

        /// <summary>
        /// Configures which HTTP method to use to probe the backends defined under backendPools.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string HealthProbeMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).HealthProbeMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).HealthProbeMethod = value ?? null; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)__subResource).Id = value ?? null; }

        /// <summary>The number of seconds between health probes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public int? IntervalInSeconds { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).IntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).IntervalInSecond = value ?? default(int); }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModelInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.HealthProbeSettingsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ResourceState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModelInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsPropertiesInternal)Property).ResourceState = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsModelInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The path to use for the health probe. Default is /</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string Path { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).Path = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsProperties _property;

        /// <summary>Properties of the health probe settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.HealthProbeSettingsProperties()); set => this._property = value; }

        /// <summary>Protocol scheme to use for this probe</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string Protocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).Protocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsUpdateParametersInternal)Property).Protocol = value ?? null; }

        /// <summary>Resource status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsPropertiesInternal)Property).ResourceState; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="HealthProbeSettingsModel" /> instance.</summary>
        public HealthProbeSettingsModel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// Load balancing settings for a backend pool
    public partial interface IHealthProbeSettingsModel :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource
    {
        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.",
        SerializedName = @"enabledState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>
        /// Configures which HTTP method to use to probe the backends defined under backendPools.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Configures which HTTP method to use to probe the backends defined under backendPools.",
        SerializedName = @"healthProbeMethod",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("GET", "HEAD")]
        string HealthProbeMethod { get; set; }
        /// <summary>The number of seconds between health probes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of seconds between health probes.",
        SerializedName = @"intervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? IntervalInSeconds { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The path to use for the health probe. Default is /</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The path to use for the health probe. Default is /",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>Protocol scheme to use for this probe</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Protocol scheme to use for this probe",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Http", "Https")]
        string Protocol { get; set; }
        /// <summary>Resource status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource status.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get;  }
        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Load balancing settings for a backend pool
    internal partial interface IHealthProbeSettingsModelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal
    {
        /// <summary>
        /// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled
        /// if there is a single enabled backend in single enabled backend pool.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>
        /// Configures which HTTP method to use to probe the backends defined under backendPools.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("GET", "HEAD")]
        string HealthProbeMethod { get; set; }
        /// <summary>The number of seconds between health probes.</summary>
        int? IntervalInSeconds { get; set; }
        /// <summary>Resource name.</summary>
        string Name { get; set; }
        /// <summary>The path to use for the health probe. Default is /</summary>
        string Path { get; set; }
        /// <summary>Properties of the health probe settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IHealthProbeSettingsProperties Property { get; set; }
        /// <summary>Protocol scheme to use for this probe</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Http", "Https")]
        string Protocol { get; set; }
        /// <summary>Resource status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get; set; }
        /// <summary>Resource type.</summary>
        string Type { get; set; }

    }
}