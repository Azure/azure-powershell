// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Backend address of a frontDoor load balancer.</summary>
    public partial class Backend :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackend,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendInternal
    {

        /// <summary>Backing field for <see cref="Address" /> property.</summary>
        private string _address;

        /// <summary>Location of the backend (IP address or FQDN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Address { get => this._address; set => this._address = value; }

        /// <summary>Backing field for <see cref="BackendHostHeader" /> property.</summary>
        private string _backendHostHeader;

        /// <summary>
        /// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string BackendHostHeader { get => this._backendHostHeader; set => this._backendHostHeader = value; }

        /// <summary>Backing field for <see cref="EnabledState" /> property.</summary>
        private string _enabledState;

        /// <summary>
        /// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string EnabledState { get => this._enabledState; set => this._enabledState = value; }

        /// <summary>Backing field for <see cref="HttpPort" /> property.</summary>
        private int? _httpPort;

        /// <summary>The HTTP TCP port number. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? HttpPort { get => this._httpPort; set => this._httpPort = value; }

        /// <summary>Backing field for <see cref="HttpsPort" /> property.</summary>
        private int? _httpsPort;

        /// <summary>The HTTPS TCP port number. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? HttpsPort { get => this._httpsPort; set => this._httpsPort = value; }

        /// <summary>Internal Acessors for PrivateEndpointStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IBackendInternal.PrivateEndpointStatus { get => this._privateEndpointStatus; set { {_privateEndpointStatus = value;} } }

        /// <summary>Backing field for <see cref="Priority" /> property.</summary>
        private int? _priority;

        /// <summary>
        /// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend
        /// is healthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? Priority { get => this._priority; set => this._priority = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointStatus" /> property.</summary>
        private string _privateEndpointStatus;

        /// <summary>The Approval status for the connection to the Private Link</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string PrivateEndpointStatus { get => this._privateEndpointStatus; }

        /// <summary>Backing field for <see cref="PrivateLinkAlias" /> property.</summary>
        private string _privateLinkAlias;

        /// <summary>
        /// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string PrivateLinkAlias { get => this._privateLinkAlias; set => this._privateLinkAlias = value; }

        /// <summary>Backing field for <see cref="PrivateLinkApprovalMessage" /> property.</summary>
        private string _privateLinkApprovalMessage;

        /// <summary>
        /// A custom message to be included in the approval request to connect to the Private Link
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string PrivateLinkApprovalMessage { get => this._privateLinkApprovalMessage; set => this._privateLinkApprovalMessage = value; }

        /// <summary>Backing field for <see cref="PrivateLinkLocation" /> property.</summary>
        private string _privateLinkLocation;

        /// <summary>
        /// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string PrivateLinkLocation { get => this._privateLinkLocation; set => this._privateLinkLocation = value; }

        /// <summary>Backing field for <see cref="PrivateLinkResourceId" /> property.</summary>
        private string _privateLinkResourceId;

        /// <summary>
        /// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string PrivateLinkResourceId { get => this._privateLinkResourceId; set => this._privateLinkResourceId = value; }

        /// <summary>Backing field for <see cref="Weight" /> property.</summary>
        private int? _weight;

        /// <summary>Weight of this endpoint for load balancing purposes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? Weight { get => this._weight; set => this._weight = value; }

        /// <summary>Creates an new <see cref="Backend" /> instance.</summary>
        public Backend()
        {

        }
    }
    /// Backend address of a frontDoor load balancer.
    public partial interface IBackend :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable
    {
        /// <summary>Location of the backend (IP address or FQDN)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Location of the backend (IP address or FQDN)",
        SerializedName = @"address",
        PossibleTypes = new [] { typeof(string) })]
        string Address { get; set; }
        /// <summary>
        /// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
        SerializedName = @"backendHostHeader",
        PossibleTypes = new [] { typeof(string) })]
        string BackendHostHeader { get; set; }
        /// <summary>
        /// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
        SerializedName = @"enabledState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>The HTTP TCP port number. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The HTTP TCP port number. Must be between 1 and 65535.",
        SerializedName = @"httpPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpPort { get; set; }
        /// <summary>The HTTPS TCP port number. Must be between 1 and 65535.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The HTTPS TCP port number. Must be between 1 and 65535.",
        SerializedName = @"httpsPort",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpsPort { get; set; }
        /// <summary>
        /// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend
        /// is healthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
        SerializedName = @"priority",
        PossibleTypes = new [] { typeof(int) })]
        int? Priority { get; set; }
        /// <summary>The Approval status for the connection to the Private Link</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The Approval status for the connection to the Private Link",
        SerializedName = @"privateEndpointStatus",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Pending", "Approved", "Rejected", "Disconnected", "Timeout")]
        string PrivateEndpointStatus { get;  }
        /// <summary>
        /// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'",
        SerializedName = @"privateLinkAlias",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkAlias { get; set; }
        /// <summary>
        /// A custom message to be included in the approval request to connect to the Private Link
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A custom message to be included in the approval request to connect to the Private Link",
        SerializedName = @"privateLinkApprovalMessage",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkApprovalMessage { get; set; }
        /// <summary>
        /// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated",
        SerializedName = @"privateLinkLocation",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkLocation { get; set; }
        /// <summary>
        /// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'",
        SerializedName = @"privateLinkResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkResourceId { get; set; }
        /// <summary>Weight of this endpoint for load balancing purposes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Weight of this endpoint for load balancing purposes.",
        SerializedName = @"weight",
        PossibleTypes = new [] { typeof(int) })]
        int? Weight { get; set; }

    }
    /// Backend address of a frontDoor load balancer.
    internal partial interface IBackendInternal

    {
        /// <summary>Location of the backend (IP address or FQDN)</summary>
        string Address { get; set; }
        /// <summary>
        /// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
        /// </summary>
        string BackendHostHeader { get; set; }
        /// <summary>
        /// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        string EnabledState { get; set; }
        /// <summary>The HTTP TCP port number. Must be between 1 and 65535.</summary>
        int? HttpPort { get; set; }
        /// <summary>The HTTPS TCP port number. Must be between 1 and 65535.</summary>
        int? HttpsPort { get; set; }
        /// <summary>
        /// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend
        /// is healthy.
        /// </summary>
        int? Priority { get; set; }
        /// <summary>The Approval status for the connection to the Private Link</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Pending", "Approved", "Rejected", "Disconnected", "Timeout")]
        string PrivateEndpointStatus { get; set; }
        /// <summary>
        /// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        string PrivateLinkAlias { get; set; }
        /// <summary>
        /// A custom message to be included in the approval request to connect to the Private Link
        /// </summary>
        string PrivateLinkApprovalMessage { get; set; }
        /// <summary>
        /// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
        /// </summary>
        string PrivateLinkLocation { get; set; }
        /// <summary>
        /// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
        /// </summary>
        string PrivateLinkResourceId { get; set; }
        /// <summary>Weight of this endpoint for load balancing purposes.</summary>
        int? Weight { get; set; }

    }
}