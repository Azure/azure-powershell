// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Defines top-level WebApplicationFirewallPolicy configuration settings.</summary>
    public partial class PolicySettings :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettings,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsInternal
    {

        /// <summary>Backing field for <see cref="CaptchaExpirationInMinutes" /> property.</summary>
        private int? _captchaExpirationInMinutes;

        /// <summary>
        /// Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value
        /// must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? CaptchaExpirationInMinutes { get => this._captchaExpirationInMinutes; set => this._captchaExpirationInMinutes = value; }

        /// <summary>Backing field for <see cref="CustomBlockResponseBody" /> property.</summary>
        private string _customBlockResponseBody;

        /// <summary>
        /// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string CustomBlockResponseBody { get => this._customBlockResponseBody; set => this._customBlockResponseBody = value; }

        /// <summary>Backing field for <see cref="CustomBlockResponseStatusCode" /> property.</summary>
        private int? _customBlockResponseStatusCode;

        /// <summary>If the action type is block, customer can override the response status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? CustomBlockResponseStatusCode { get => this._customBlockResponseStatusCode; set => this._customBlockResponseStatusCode = value; }

        /// <summary>Backing field for <see cref="EnabledState" /> property.</summary>
        private string _enabledState;

        /// <summary>
        /// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string EnabledState { get => this._enabledState; set => this._enabledState = value; }

        /// <summary>
        /// Backing field for <see cref="JavascriptChallengeExpirationInMinutes" /> property.
        /// </summary>
        private int? _javascriptChallengeExpirationInMinutes;

        /// <summary>
        /// Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor.
        /// Value must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public int? JavascriptChallengeExpirationInMinutes { get => this._javascriptChallengeExpirationInMinutes; set => this._javascriptChallengeExpirationInMinutes = value; }

        /// <summary>Backing field for <see cref="LogScrubbingSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing _logScrubbingSetting;

        /// <summary>Defines rules that scrub sensitive fields in the Web Application Firewall logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing LogScrubbingSetting { get => (this._logScrubbingSetting = this._logScrubbingSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.PolicySettingsLogScrubbing()); set => this._logScrubbingSetting = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private string _mode;

        /// <summary>Describes if it is in detection mode or prevention mode at policy level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Backing field for <see cref="RedirectUrl" /> property.</summary>
        private string _redirectUrl;

        /// <summary>If action type is redirect, this field represents redirect URL for the client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string RedirectUrl { get => this._redirectUrl; set => this._redirectUrl = value; }

        /// <summary>Backing field for <see cref="RequestBodyCheck" /> property.</summary>
        private string _requestBodyCheck;

        /// <summary>Describes if policy managed rules will inspect the request body content.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string RequestBodyCheck { get => this._requestBodyCheck; set => this._requestBodyCheck = value; }

        /// <summary>Creates an new <see cref="PolicySettings" /> instance.</summary>
        public PolicySettings()
        {

        }
    }
    /// Defines top-level WebApplicationFirewallPolicy configuration settings.
    public partial interface IPolicySettings :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value
        /// must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.",
        SerializedName = @"captchaExpirationInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? CaptchaExpirationInMinutes { get; set; }
        /// <summary>
        /// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
        SerializedName = @"customBlockResponseBody",
        PossibleTypes = new [] { typeof(string) })]
        string CustomBlockResponseBody { get; set; }
        /// <summary>If the action type is block, customer can override the response status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If the action type is block, customer can override the response status code.",
        SerializedName = @"customBlockResponseStatusCode",
        PossibleTypes = new [] { typeof(int) })]
        int? CustomBlockResponseStatusCode { get; set; }
        /// <summary>
        /// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
        SerializedName = @"enabledState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string EnabledState { get; set; }
        /// <summary>
        /// Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor.
        /// Value must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.",
        SerializedName = @"javascriptChallengeExpirationInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? JavascriptChallengeExpirationInMinutes { get; set; }
        /// <summary>Defines rules that scrub sensitive fields in the Web Application Firewall logs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Defines rules that scrub sensitive fields in the Web Application Firewall logs.",
        SerializedName = @"logScrubbing",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing) })]
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing LogScrubbingSetting { get; set; }
        /// <summary>Describes if it is in detection mode or prevention mode at policy level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes if it is in detection mode or prevention mode at policy level.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Prevention", "Detection")]
        string Mode { get; set; }
        /// <summary>If action type is redirect, this field represents redirect URL for the client.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If action type is redirect, this field represents redirect URL for the client.",
        SerializedName = @"redirectUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RedirectUrl { get; set; }
        /// <summary>Describes if policy managed rules will inspect the request body content.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Describes if policy managed rules will inspect the request body content.",
        SerializedName = @"requestBodyCheck",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string RequestBodyCheck { get; set; }

    }
    /// Defines top-level WebApplicationFirewallPolicy configuration settings.
    internal partial interface IPolicySettingsInternal

    {
        /// <summary>
        /// Defines the Captcha cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value
        /// must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        int? CaptchaExpirationInMinutes { get; set; }
        /// <summary>
        /// If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
        /// </summary>
        string CustomBlockResponseBody { get; set; }
        /// <summary>If the action type is block, customer can override the response status code.</summary>
        int? CustomBlockResponseStatusCode { get; set; }
        /// <summary>
        /// Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string EnabledState { get; set; }
        /// <summary>
        /// Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor.
        /// Value must be an integer between 5 and 1440 with the default value being 30.
        /// </summary>
        int? JavascriptChallengeExpirationInMinutes { get; set; }
        /// <summary>Defines rules that scrub sensitive fields in the Web Application Firewall logs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IPolicySettingsLogScrubbing LogScrubbingSetting { get; set; }
        /// <summary>Describes if it is in detection mode or prevention mode at policy level.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Prevention", "Detection")]
        string Mode { get; set; }
        /// <summary>If action type is redirect, this field represents redirect URL for the client.</summary>
        string RedirectUrl { get; set; }
        /// <summary>Describes if policy managed rules will inspect the request body content.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Disabled", "Enabled")]
        string RequestBodyCheck { get; set; }

    }
}