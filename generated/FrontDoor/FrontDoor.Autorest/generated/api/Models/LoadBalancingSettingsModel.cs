// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Load balancing settings for a backend pool</summary>
    public partial class LoadBalancingSettingsModel :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModel,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource __subResource = new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.SubResource();

        /// <summary>
        /// The additional latency in milliseconds for probes to fall into the lowest latency bucket
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public int? AdditionalLatencyInMilliseconds { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).AdditionalLatencyMillisecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).AdditionalLatencyMillisecond = value ?? default(int); }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)__subResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal)__subResource).Id = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsProperties Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModelInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.LoadBalancingSettingsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ResourceState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModelInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsPropertiesInternal)Property).ResourceState = value ?? null; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsModelInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsProperties _property;

        /// <summary>Properties of the load balancing settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.LoadBalancingSettingsProperties()); set => this._property = value; }

        /// <summary>Resource status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsPropertiesInternal)Property).ResourceState; }

        /// <summary>The number of samples to consider for load balancing decisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public int? SampleSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).SampleSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).SampleSize = value ?? default(int); }

        /// <summary>The number of samples within the sample period that must succeed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public int? SuccessfulSamplesRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).SuccessfulSamplesRequired; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsUpdateParametersInternal)Property).SuccessfulSamplesRequired = value ?? default(int); }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="LoadBalancingSettingsModel" /> instance.</summary>
        public LoadBalancingSettingsModel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__subResource), __subResource);
            await eventListener.AssertObjectIsValid(nameof(__subResource), __subResource);
        }
    }
    /// Load balancing settings for a backend pool
    public partial interface ILoadBalancingSettingsModel :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResource
    {
        /// <summary>
        /// The additional latency in milliseconds for probes to fall into the lowest latency bucket
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The additional latency in milliseconds for probes to fall into the lowest latency bucket",
        SerializedName = @"additionalLatencyMilliseconds",
        PossibleTypes = new [] { typeof(int) })]
        int? AdditionalLatencyInMilliseconds { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Resource status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource status.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get;  }
        /// <summary>The number of samples to consider for load balancing decisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of samples to consider for load balancing decisions",
        SerializedName = @"sampleSize",
        PossibleTypes = new [] { typeof(int) })]
        int? SampleSize { get; set; }
        /// <summary>The number of samples within the sample period that must succeed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The number of samples within the sample period that must succeed",
        SerializedName = @"successfulSamplesRequired",
        PossibleTypes = new [] { typeof(int) })]
        int? SuccessfulSamplesRequired { get; set; }
        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Load balancing settings for a backend pool
    internal partial interface ILoadBalancingSettingsModelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ISubResourceInternal
    {
        /// <summary>
        /// The additional latency in milliseconds for probes to fall into the lowest latency bucket
        /// </summary>
        int? AdditionalLatencyInMilliseconds { get; set; }
        /// <summary>Resource name.</summary>
        string Name { get; set; }
        /// <summary>Properties of the load balancing settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.ILoadBalancingSettingsProperties Property { get; set; }
        /// <summary>Resource status.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PSArgumentCompleterAttribute("Creating", "Enabling", "Enabled", "Disabling", "Disabled", "Deleting", "Migrating", "Migrated")]
        string ResourceState { get; set; }
        /// <summary>The number of samples to consider for load balancing decisions</summary>
        int? SampleSize { get; set; }
        /// <summary>The number of samples within the sample period that must succeed</summary>
        int? SuccessfulSamplesRequired { get; set; }
        /// <summary>Resource type.</summary>
        string Type { get; set; }

    }
}