// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Extensions;

    /// <summary>Parameters required for bring-your-own-certification via Key Vault</summary>
    public partial class KeyVaultCertificateSourceParameters :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParameters,
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersInternal
    {

        /// <summary>Internal Acessors for Vault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVault Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersInternal.Vault { get => (this._vault = this._vault ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.KeyVaultCertificateSourceParametersVault()); set { {_vault = value;} } }

        /// <summary>Backing field for <see cref="SecretName" /> property.</summary>
        private string _secretName;

        /// <summary>The name of the Key Vault secret representing the full certificate PFX</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string SecretName { get => this._secretName; set => this._secretName = value; }

        /// <summary>Backing field for <see cref="SecretVersion" /> property.</summary>
        private string _secretVersion;

        /// <summary>The version of the Key Vault secret representing the full certificate PFX</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        public string SecretVersion { get => this._secretVersion; set => this._secretVersion = value; }

        /// <summary>Backing field for <see cref="Vault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVault _vault;

        /// <summary>The Key Vault containing the SSL certificate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVault Vault { get => (this._vault = this._vault ?? new Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.KeyVaultCertificateSourceParametersVault()); set => this._vault = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Origin(Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.PropertyOrigin.Inlined)]
        public string VaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVaultInternal)Vault).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVaultInternal)Vault).Id = value ?? null; }

        /// <summary>Creates an new <see cref="KeyVaultCertificateSourceParameters" /> instance.</summary>
        public KeyVaultCertificateSourceParameters()
        {

        }
    }
    /// Parameters required for bring-your-own-certification via Key Vault
    public partial interface IKeyVaultCertificateSourceParameters :
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.IJsonSerializable
    {
        /// <summary>The name of the Key Vault secret representing the full certificate PFX</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the Key Vault secret representing the full certificate PFX",
        SerializedName = @"secretName",
        PossibleTypes = new [] { typeof(string) })]
        string SecretName { get; set; }
        /// <summary>The version of the Key Vault secret representing the full certificate PFX</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version of the Key Vault secret representing the full certificate PFX",
        SerializedName = @"secretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SecretVersion { get; set; }
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string VaultId { get; set; }

    }
    /// Parameters required for bring-your-own-certification via Key Vault
    internal partial interface IKeyVaultCertificateSourceParametersInternal

    {
        /// <summary>The name of the Key Vault secret representing the full certificate PFX</summary>
        string SecretName { get; set; }
        /// <summary>The version of the Key Vault secret representing the full certificate PFX</summary>
        string SecretVersion { get; set; }
        /// <summary>The Key Vault containing the SSL certificate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.FrontDoor.Models.IKeyVaultCertificateSourceParametersVault Vault { get; set; }
        /// <summary>Resource ID.</summary>
        string VaultId { get; set; }

    }
}