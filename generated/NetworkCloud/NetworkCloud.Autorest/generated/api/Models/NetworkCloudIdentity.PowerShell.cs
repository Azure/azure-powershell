// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(NetworkCloudIdentityTypeConverter))]
    public partial class NetworkCloudIdentity
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.NetworkCloudIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new NetworkCloudIdentity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.NetworkCloudIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new NetworkCloudIdentity(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="NetworkCloudIdentity" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="NetworkCloudIdentity" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentity FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.NetworkCloudIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal NetworkCloudIdentity(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("BareMetalMachineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineName = (string) content.GetValueForProperty("BareMetalMachineName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineName, global::System.Convert.ToString);
            }
            if (content.Contains("CloudServicesNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).CloudServicesNetworkName = (string) content.GetValueForProperty("CloudServicesNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).CloudServicesNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterManagerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterManagerName = (string) content.GetValueForProperty("ClusterManagerName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterManagerName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("KubernetesClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).KubernetesClusterName = (string) content.GetValueForProperty("KubernetesClusterName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).KubernetesClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("L2NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L2NetworkName = (string) content.GetValueForProperty("L2NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L2NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("L3NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L3NetworkName = (string) content.GetValueForProperty("L3NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L3NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("RackSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackSkuName = (string) content.GetValueForProperty("RackSkuName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("RackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackName = (string) content.GetValueForProperty("RackName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageApplianceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).StorageApplianceName = (string) content.GetValueForProperty("StorageApplianceName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).StorageApplianceName, global::System.Convert.ToString);
            }
            if (content.Contains("TrunkedNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).TrunkedNetworkName = (string) content.GetValueForProperty("TrunkedNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).TrunkedNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VirtualMachineName = (string) content.GetValueForProperty("VirtualMachineName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VirtualMachineName, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VolumeName = (string) content.GetValueForProperty("VolumeName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VolumeName, global::System.Convert.ToString);
            }
            if (content.Contains("BareMetalMachineKeySetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineKeySetName = (string) content.GetValueForProperty("BareMetalMachineKeySetName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineKeySetName, global::System.Convert.ToString);
            }
            if (content.Contains("BmcKeySetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BmcKeySetName = (string) content.GetValueForProperty("BmcKeySetName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BmcKeySetName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricsConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).MetricsConfigurationName = (string) content.GetValueForProperty("MetricsConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).MetricsConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("AgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).AgentPoolName = (string) content.GetValueForProperty("AgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).AgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ConsoleName = (string) content.GetValueForProperty("ConsoleName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ConsoleName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.NetworkCloudIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal NetworkCloudIdentity(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("BareMetalMachineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineName = (string) content.GetValueForProperty("BareMetalMachineName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineName, global::System.Convert.ToString);
            }
            if (content.Contains("CloudServicesNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).CloudServicesNetworkName = (string) content.GetValueForProperty("CloudServicesNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).CloudServicesNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterManagerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterManagerName = (string) content.GetValueForProperty("ClusterManagerName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterManagerName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("KubernetesClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).KubernetesClusterName = (string) content.GetValueForProperty("KubernetesClusterName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).KubernetesClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("L2NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L2NetworkName = (string) content.GetValueForProperty("L2NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L2NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("L3NetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L3NetworkName = (string) content.GetValueForProperty("L3NetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).L3NetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("RackSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackSkuName = (string) content.GetValueForProperty("RackSkuName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("RackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackName = (string) content.GetValueForProperty("RackName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).RackName, global::System.Convert.ToString);
            }
            if (content.Contains("StorageApplianceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).StorageApplianceName = (string) content.GetValueForProperty("StorageApplianceName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).StorageApplianceName, global::System.Convert.ToString);
            }
            if (content.Contains("TrunkedNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).TrunkedNetworkName = (string) content.GetValueForProperty("TrunkedNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).TrunkedNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("VirtualMachineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VirtualMachineName = (string) content.GetValueForProperty("VirtualMachineName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VirtualMachineName, global::System.Convert.ToString);
            }
            if (content.Contains("VolumeName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VolumeName = (string) content.GetValueForProperty("VolumeName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).VolumeName, global::System.Convert.ToString);
            }
            if (content.Contains("BareMetalMachineKeySetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineKeySetName = (string) content.GetValueForProperty("BareMetalMachineKeySetName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BareMetalMachineKeySetName, global::System.Convert.ToString);
            }
            if (content.Contains("BmcKeySetName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BmcKeySetName = (string) content.GetValueForProperty("BmcKeySetName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).BmcKeySetName, global::System.Convert.ToString);
            }
            if (content.Contains("MetricsConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).MetricsConfigurationName = (string) content.GetValueForProperty("MetricsConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).MetricsConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("AgentPoolName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).AgentPoolName = (string) content.GetValueForProperty("AgentPoolName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).AgentPoolName, global::System.Convert.ToString);
            }
            if (content.Contains("ConsoleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ConsoleName = (string) content.GetValueForProperty("ConsoleName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).ConsoleName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.INetworkCloudIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(NetworkCloudIdentityTypeConverter))]
    public partial interface INetworkCloudIdentity

    {

    }
}