// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Extensions;

    /// <summary>SecretRotationStatus represents the status of a secret rotation.</summary>
    public partial class SecretRotationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatus,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal
    {

        /// <summary>Backing field for <see cref="ExpirePeriodDay" /> property.</summary>
        private long? _expirePeriodDay;

        /// <summary>The maximum number of days the secret may be used before it must be changed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long? ExpirePeriodDay { get => this._expirePeriodDay; }

        /// <summary>Backing field for <see cref="LastRotationTime" /> property.</summary>
        private global::System.DateTime? _lastRotationTime;

        /// <summary>The date and time when the secret was last changed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public global::System.DateTime? LastRotationTime { get => this._lastRotationTime; }

        /// <summary>Internal Acessors for ExpirePeriodDay</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.ExpirePeriodDay { get => this._expirePeriodDay; set { {_expirePeriodDay = value;} } }

        /// <summary>Internal Acessors for LastRotationTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.LastRotationTime { get => this._lastRotationTime; set { {_lastRotationTime = value;} } }

        /// <summary>Internal Acessors for RotationPeriodDay</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.RotationPeriodDay { get => this._rotationPeriodDay; set { {_rotationPeriodDay = value;} } }

        /// <summary>Internal Acessors for SecretArchiveReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReference Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.SecretArchiveReference { get => (this._secretArchiveReference = this._secretArchiveReference ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.SecretArchiveReference()); set { {_secretArchiveReference = value;} } }

        /// <summary>Internal Acessors for SecretArchiveReferenceKeyVaultId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.SecretArchiveReferenceKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).KeyVaultId = value; }

        /// <summary>Internal Acessors for SecretArchiveReferenceSecretName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.SecretArchiveReferenceSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretName = value; }

        /// <summary>Internal Acessors for SecretArchiveReferenceSecretVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.SecretArchiveReferenceSecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretVersion = value; }

        /// <summary>Internal Acessors for SecretType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretRotationStatusInternal.SecretType { get => this._secretType; set { {_secretType = value;} } }

        /// <summary>Backing field for <see cref="RotationPeriodDay" /> property.</summary>
        private long? _rotationPeriodDay;

        /// <summary>The number of days a secret exists before rotations will be attempted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public long? RotationPeriodDay { get => this._rotationPeriodDay; }

        /// <summary>Backing field for <see cref="SecretArchiveReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReference _secretArchiveReference;

        /// <summary>The reference to the secret in a key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReference SecretArchiveReference { get => (this._secretArchiveReference = this._secretArchiveReference ?? new Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.SecretArchiveReference()); }

        /// <summary>The resource ID of the key vault containing the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string SecretArchiveReferenceKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).KeyVaultId; }

        /// <summary>The name of the secret in the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string SecretArchiveReferenceSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretName; }

        /// <summary>The version of the secret in the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Inlined)]
        public string SecretArchiveReferenceSecretVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReferenceInternal)SecretArchiveReference).SecretVersion; }

        /// <summary>Backing field for <see cref="SecretType" /> property.</summary>
        private string _secretType;

        /// <summary>The type name used to identify the purpose of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.PropertyOrigin.Owned)]
        public string SecretType { get => this._secretType; }

        /// <summary>Creates an new <see cref="SecretRotationStatus" /> instance.</summary>
        public SecretRotationStatus()
        {

        }
    }
    /// SecretRotationStatus represents the status of a secret rotation.
    public partial interface ISecretRotationStatus :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.IJsonSerializable
    {
        /// <summary>The maximum number of days the secret may be used before it must be changed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The maximum number of days the secret may be used before it must be changed.",
        SerializedName = @"expirePeriodDays",
        PossibleTypes = new [] { typeof(long) })]
        long? ExpirePeriodDay { get;  }
        /// <summary>The date and time when the secret was last changed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time when the secret was last changed.",
        SerializedName = @"lastRotationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastRotationTime { get;  }
        /// <summary>The number of days a secret exists before rotations will be attempted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of days a secret exists before rotations will be attempted.",
        SerializedName = @"rotationPeriodDays",
        PossibleTypes = new [] { typeof(long) })]
        long? RotationPeriodDay { get;  }
        /// <summary>The resource ID of the key vault containing the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource ID of the key vault containing the secret.",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string SecretArchiveReferenceKeyVaultId { get;  }
        /// <summary>The name of the secret in the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the secret in the key vault.",
        SerializedName = @"secretName",
        PossibleTypes = new [] { typeof(string) })]
        string SecretArchiveReferenceSecretName { get;  }
        /// <summary>The version of the secret in the key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of the secret in the key vault.",
        SerializedName = @"secretVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SecretArchiveReferenceSecretVersion { get;  }
        /// <summary>The type name used to identify the purpose of the secret.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type name used to identify the purpose of the secret.",
        SerializedName = @"secretType",
        PossibleTypes = new [] { typeof(string) })]
        string SecretType { get;  }

    }
    /// SecretRotationStatus represents the status of a secret rotation.
    internal partial interface ISecretRotationStatusInternal

    {
        /// <summary>The maximum number of days the secret may be used before it must be changed.</summary>
        long? ExpirePeriodDay { get; set; }
        /// <summary>The date and time when the secret was last changed.</summary>
        global::System.DateTime? LastRotationTime { get; set; }
        /// <summary>The number of days a secret exists before rotations will be attempted.</summary>
        long? RotationPeriodDay { get; set; }
        /// <summary>The reference to the secret in a key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20240701.ISecretArchiveReference SecretArchiveReference { get; set; }
        /// <summary>The resource ID of the key vault containing the secret.</summary>
        string SecretArchiveReferenceKeyVaultId { get; set; }
        /// <summary>The name of the secret in the key vault.</summary>
        string SecretArchiveReferenceSecretName { get; set; }
        /// <summary>The version of the secret in the key vault.</summary>
        string SecretArchiveReferenceSecretVersion { get; set; }
        /// <summary>The type name used to identify the purpose of the secret.</summary>
        string SecretType { get; set; }

    }
}