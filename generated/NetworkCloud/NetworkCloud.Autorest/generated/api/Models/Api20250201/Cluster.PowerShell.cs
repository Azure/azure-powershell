// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201
{
    using Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.PowerShell;

    /// <summary>Cluster represents the on-premises Network Cloud cluster.</summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterTypeConverter))]
    public partial class Cluster
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Cluster(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("Capacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Capacity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterCapacity) content.GetValueForProperty("Capacity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Capacity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType.CreateFrom);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsOutputSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IAnalyticsOutputSettings) content.GetValueForProperty("AnalyticsOutputSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.AnalyticsOutputSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("ClusterExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IServicePrincipalInformation) content.GetValueForProperty("ServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommandOutputSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICommandOutputSettings) content.GetValueForProperty("CommandOutputSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.CommandOutputSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("HybridAksExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAksExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("HybridAksExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAksExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeProtectionConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRuntimeProtectionConfiguration) content.GetValueForProperty("RuntimeProtectionConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RuntimeProtectionConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchive = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterSecretArchive) content.GetValueForProperty("SecretArchive",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchive, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterSecretArchiveTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretArchiveSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ISecretArchiveSettings) content.GetValueForProperty("SecretArchiveSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.SecretArchiveSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpdateStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategy = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterUpdateStrategy) content.GetValueForProperty("UpdateStrategy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategy, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterUpdateStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("VulnerabilityScanningSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IVulnerabilityScanningSettings) content.GetValueForProperty("VulnerabilityScanningSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.VulnerabilityScanningSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AvailableUpgradeVersion = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterAvailableUpgradeVersion[]) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterAvailableUpgradeVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterAvailableUpgradeVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus?) content.GetValueForProperty("ConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagerConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus?) content.GetValueForProperty("ManagerConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus.CreateFrom);
            }
            if (content.Contains("ManagerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerId = (string) content.GetValueForProperty("ManagerId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerId, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ManualActionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManualActionCount = (long?) content.GetValueForProperty("ManualActionCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManualActionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NetworkFabricId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).NetworkFabricId = (string) content.GetValueForProperty("NetworkFabricId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).NetworkFabricId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportExpiryDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SupportExpiryDate = (string) content.GetValueForProperty("SupportExpiryDate",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SupportExpiryDate, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).WorkloadResourceId = (string[]) content.GetValueForProperty("WorkloadResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).WorkloadResourceId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CommandOutputSettingContainerUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingContainerUrl = (string) content.GetValueForProperty("CommandOutputSettingContainerUrl",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingContainerUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveSettingVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingVaultUri = (string) content.GetValueForProperty("SecretArchiveSettingVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("VulnerabilityScanningSettingContainerScan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSettingContainerScan = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.VulnerabilityScanningSettingsContainerScan?) content.GetValueForProperty("VulnerabilityScanningSettingContainerScan",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSettingContainerScan, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.VulnerabilityScanningSettingsContainerScan.CreateFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AnalyticOutputSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("AnalyticOutputSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticOutputSettingAnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticOutputSettingAnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityAvailableApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableApplianceStorageGb = (long?) content.GetValueForProperty("CapacityAvailableApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableCoreCount = (long?) content.GetValueForProperty("CapacityAvailableCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableHostStorageGb = (long?) content.GetValueForProperty("CapacityAvailableHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableMemoryGb = (long?) content.GetValueForProperty("CapacityAvailableMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalApplianceStorageGb = (long?) content.GetValueForProperty("CapacityTotalApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalCoreCount = (long?) content.GetValueForProperty("CapacityTotalCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalHostStorageGb = (long?) content.GetValueForProperty("CapacityTotalHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalMemoryGb = (long?) content.GetValueForProperty("CapacityTotalMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationName = (string) content.GetValueForProperty("ClusterExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationType = (string) content.GetValueForProperty("ClusterExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalApplicationId = (string) content.GetValueForProperty("ServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalId = (string) content.GetValueForProperty("ServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalTenantId = (string) content.GetValueForProperty("ServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("CommandOutputSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("CommandOutputSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HybridAkExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationName = (string) content.GetValueForProperty("HybridAkExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("HybridAkExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationType = (string) content.GetValueForProperty("HybridAkExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimeProtectionConfigurationEnforcementLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfigurationEnforcementLevel = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RuntimeProtectionEnforcementLevel?) content.GetValueForProperty("RuntimeProtectionConfigurationEnforcementLevel",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfigurationEnforcementLevel, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RuntimeProtectionEnforcementLevel.CreateFrom);
            }
            if (content.Contains("SecretArchiveKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveKeyVaultId = (string) content.GetValueForProperty("SecretArchiveKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveUseKeyVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveUseKeyVault = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterSecretArchiveEnabled?) content.GetValueForProperty("SecretArchiveUseKeyVault",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveUseKeyVault, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterSecretArchiveEnabled.CreateFrom);
            }
            if (content.Contains("SecretArchiveSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("SecretArchiveSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpdateStrategyMaxUnavailable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyMaxUnavailable = (long?) content.GetValueForProperty("UpdateStrategyMaxUnavailable",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyMaxUnavailable, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UpdateStrategyType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterUpdateStrategyType) content.GetValueForProperty("UpdateStrategyType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterUpdateStrategyType.CreateFrom);
            }
            if (content.Contains("UpdateStrategyThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("UpdateStrategyThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("UpdateStrategyThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdValue = (long) content.GetValueForProperty("UpdateStrategyThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UpdateStrategyWaitTimeMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyWaitTimeMinute = (long?) content.GetValueForProperty("UpdateStrategyWaitTimeMinute",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyWaitTimeMinute, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AnalyticsOutputSettingsAssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("AnalyticsOutputSettingsAssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("AssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("AssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveSettingsAssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("SecretArchiveSettingsAssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Cluster(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IManagedServiceIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ManagedServiceIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.TrackedResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.ITrackedResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("Capacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Capacity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterCapacity) content.GetValueForProperty("Capacity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Capacity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterCapacityTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType) content.GetValueForProperty("ClusterType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterType.CreateFrom);
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentityType) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.IUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api50.UserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsOutputSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IAnalyticsOutputSettings) content.GetValueForProperty("AnalyticsOutputSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.AnalyticsOutputSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("ClusterExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IServicePrincipalInformation) content.GetValueForProperty("ServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CommandOutputSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICommandOutputSettings) content.GetValueForProperty("CommandOutputSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.CommandOutputSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("HybridAksExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAksExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IExtendedLocation) content.GetValueForProperty("HybridAksExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAksExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManagedResourceGroupConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IManagedResourceGroupConfiguration) content.GetValueForProperty("ManagedResourceGroupConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ManagedResourceGroupConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("RuntimeProtectionConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRuntimeProtectionConfiguration) content.GetValueForProperty("RuntimeProtectionConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfiguration, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RuntimeProtectionConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchive = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterSecretArchive) content.GetValueForProperty("SecretArchive",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchive, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterSecretArchiveTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretArchiveSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ISecretArchiveSettings) content.GetValueForProperty("SecretArchiveSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.SecretArchiveSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpdateStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategy = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterUpdateStrategy) content.GetValueForProperty("UpdateStrategy",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategy, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterUpdateStrategyTypeConverter.ConvertFrom);
            }
            if (content.Contains("VulnerabilityScanningSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSetting = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IVulnerabilityScanningSettings) content.GetValueForProperty("VulnerabilityScanningSetting",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSetting, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.VulnerabilityScanningSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("AvailableUpgradeVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AvailableUpgradeVersion = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterAvailableUpgradeVersion[]) content.GetValueForProperty("AvailableUpgradeVersion",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AvailableUpgradeVersion, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterAvailableUpgradeVersion>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ClusterAvailableUpgradeVersionTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus?) content.GetValueForProperty("ConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterConnectionStatus.CreateFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagerConnectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerConnectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus?) content.GetValueForProperty("ManagerConnectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerConnectionStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterManagerConnectionStatus.CreateFrom);
            }
            if (content.Contains("ManagerId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerId = (string) content.GetValueForProperty("ManagerId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagerId, global::System.Convert.ToString);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Version = (string) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).Version, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("DetailedStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatus = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus?) content.GetValueForProperty("DetailedStatus",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatus, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterDetailedStatus.CreateFrom);
            }
            if (content.Contains("DetailedStatusMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatusMessage = (string) content.GetValueForProperty("DetailedStatusMessage",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).DetailedStatusMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ManualActionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManualActionCount = (long?) content.GetValueForProperty("ManualActionCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManualActionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("NetworkFabricId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).NetworkFabricId = (string) content.GetValueForProperty("NetworkFabricId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).NetworkFabricId, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("SupportExpiryDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SupportExpiryDate = (string) content.GetValueForProperty("SupportExpiryDate",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SupportExpiryDate, global::System.Convert.ToString);
            }
            if (content.Contains("WorkloadResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).WorkloadResourceId = (string[]) content.GetValueForProperty("WorkloadResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).WorkloadResourceId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CommandOutputSettingContainerUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingContainerUrl = (string) content.GetValueForProperty("CommandOutputSettingContainerUrl",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingContainerUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationLocation = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ManagedResourceGroupConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationName = (string) content.GetValueForProperty("ManagedResourceGroupConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ManagedResourceGroupConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveSettingVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingVaultUri = (string) content.GetValueForProperty("SecretArchiveSettingVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("VulnerabilityScanningSettingContainerScan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSettingContainerScan = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.VulnerabilityScanningSettingsContainerScan?) content.GetValueForProperty("VulnerabilityScanningSettingContainerScan",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).VulnerabilityScanningSettingContainerScan, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.VulnerabilityScanningSettingsContainerScan.CreateFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AnalyticOutputSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("AnalyticOutputSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("AnalyticOutputSettingAnalyticsWorkspaceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAnalyticsWorkspaceId = (string) content.GetValueForProperty("AnalyticOutputSettingAnalyticsWorkspaceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticOutputSettingAnalyticsWorkspaceId, global::System.Convert.ToString);
            }
            if (content.Contains("CapacityAvailableApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableApplianceStorageGb = (long?) content.GetValueForProperty("CapacityAvailableApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableCoreCount = (long?) content.GetValueForProperty("CapacityAvailableCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableHostStorageGb = (long?) content.GetValueForProperty("CapacityAvailableHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityAvailableMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableMemoryGb = (long?) content.GetValueForProperty("CapacityAvailableMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityAvailableMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalApplianceStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalApplianceStorageGb = (long?) content.GetValueForProperty("CapacityTotalApplianceStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalApplianceStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalCoreCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalCoreCount = (long?) content.GetValueForProperty("CapacityTotalCoreCount",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalCoreCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalHostStorageGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalHostStorageGb = (long?) content.GetValueForProperty("CapacityTotalHostStorageGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalHostStorageGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("CapacityTotalMemoryGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalMemoryGb = (long?) content.GetValueForProperty("CapacityTotalMemoryGb",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CapacityTotalMemoryGb, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("ClusterExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationName = (string) content.GetValueForProperty("ClusterExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationType = (string) content.GetValueForProperty("ClusterExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ClusterExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalApplicationId = (string) content.GetValueForProperty("ServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalId = (string) content.GetValueForProperty("ServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalTenantId = (string) content.GetValueForProperty("ServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("CommandOutputSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("CommandOutputSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).CommandOutputSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("HybridAkExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationName = (string) content.GetValueForProperty("HybridAkExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("HybridAkExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationType = (string) content.GetValueForProperty("HybridAkExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).HybridAkExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("RuntimeProtectionConfigurationEnforcementLevel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfigurationEnforcementLevel = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RuntimeProtectionEnforcementLevel?) content.GetValueForProperty("RuntimeProtectionConfigurationEnforcementLevel",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).RuntimeProtectionConfigurationEnforcementLevel, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.RuntimeProtectionEnforcementLevel.CreateFrom);
            }
            if (content.Contains("SecretArchiveKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveKeyVaultId = (string) content.GetValueForProperty("SecretArchiveKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveUseKeyVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveUseKeyVault = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterSecretArchiveEnabled?) content.GetValueForProperty("SecretArchiveUseKeyVault",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveUseKeyVault, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterSecretArchiveEnabled.CreateFrom);
            }
            if (content.Contains("SecretArchiveSettingAssociatedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingAssociatedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IIdentitySelector) content.GetValueForProperty("SecretArchiveSettingAssociatedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingAssociatedIdentity, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IdentitySelectorTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpdateStrategyMaxUnavailable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyMaxUnavailable = (long?) content.GetValueForProperty("UpdateStrategyMaxUnavailable",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyMaxUnavailable, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UpdateStrategyType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterUpdateStrategyType) content.GetValueForProperty("UpdateStrategyType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ClusterUpdateStrategyType.CreateFrom);
            }
            if (content.Contains("UpdateStrategyThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("UpdateStrategyThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("UpdateStrategyThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdValue = (long) content.GetValueForProperty("UpdateStrategyThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("UpdateStrategyWaitTimeMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyWaitTimeMinute = (long?) content.GetValueForProperty("UpdateStrategyWaitTimeMinute",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).UpdateStrategyWaitTimeMinute, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("AnalyticsOutputSettingsAssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("AnalyticsOutputSettingsAssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AnalyticsOutputSettingsAssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("AssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("AssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("AssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("AssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).AssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretArchiveSettingsAssociatedIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType?) content.GetValueForProperty("SecretArchiveSettingsAssociatedIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ManagedServiceIdentitySelectorType.CreateFrom);
            }
            if (content.Contains("SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.IClusterInternal)this).SecretArchiveSettingsAssociatedIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICluster DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Cluster(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.Cluster"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICluster" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICluster DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Cluster(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Cluster" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Cluster" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20250201.ICluster FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Cluster represents the on-premises Network Cloud cluster.
    [System.ComponentModel.TypeConverter(typeof(ClusterTypeConverter))]
    public partial interface ICluster

    {

    }
}