// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701
{
    using Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.PowerShell;

    /// <summary>
    /// ClusterPatchParameters represents the body of the request to patch the cluster properties.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(ClusterPatchParametersTypeConverter))]
    public partial class ClusterPatchParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ClusterPatchParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation) content.GetValueForProperty("ClusterServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalApplicationId = (string) content.GetValueForProperty("ClusterServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ClusterServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ClusterServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalId = (string) content.GetValueForProperty("ClusterServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalTenantId = (string) content.GetValueForProperty("ClusterServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ClusterPatchParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AggregatorOrSingleRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition) content.GetValueForProperty("AggregatorOrSingleRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinition, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterServicePrincipal"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipal = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IServicePrincipalInformation) content.GetValueForProperty("ClusterServicePrincipal",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipal, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ServicePrincipalInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ComputeDeploymentThreshold"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThreshold = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IValidationThreshold) content.GetValueForProperty("ComputeDeploymentThreshold",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThreshold, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ValidationThresholdTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClusterLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterLocation = (string) content.GetValueForProperty("ClusterLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterLocation, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeRackDefinition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeRackDefinition = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition[]) content.GetValueForProperty("ComputeRackDefinition",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeRackDefinition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IRackDefinition>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.RackDefinitionTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionBareMetalMachineConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IBareMetalMachineConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.BareMetalMachineConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionNetworkRackId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionNetworkRackId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionNetworkRackId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackLocation = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackLocation",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackLocation, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSerialNumber"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSerialNumber",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSerialNumber, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionRackSkuId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSkuId = (string) content.GetValueForProperty("AggregatorOrSingleRackDefinitionRackSkuId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionRackSkuId, global::System.Convert.ToString);
            }
            if (content.Contains("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData[]) content.GetValueForProperty("AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).AggregatorOrSingleRackDefinitionStorageApplianceConfigurationData, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IStorageApplianceConfigurationData>(__y, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.StorageApplianceConfigurationDataTypeConverter.ConvertFrom));
            }
            if (content.Contains("ClusterServicePrincipalApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalApplicationId = (string) content.GetValueForProperty("ClusterServicePrincipalApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalPassword = (System.Security.SecureString) content.GetValueForProperty("ClusterServicePrincipalPassword",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("ClusterServicePrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalId = (string) content.GetValueForProperty("ClusterServicePrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterServicePrincipalTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalTenantId = (string) content.GetValueForProperty("ClusterServicePrincipalTenantId",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ClusterServicePrincipalTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("ComputeDeploymentThresholdGrouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdGrouping = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping) content.GetValueForProperty("ComputeDeploymentThresholdGrouping",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdGrouping, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdGrouping.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdType = (Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType) content.GetValueForProperty("ComputeDeploymentThresholdType",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdType, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Support.ValidationThresholdType.CreateFrom);
            }
            if (content.Contains("ComputeDeploymentThresholdValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdValue = (long) content.GetValueForProperty("ComputeDeploymentThresholdValue",((Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParametersInternal)this).ComputeDeploymentThresholdValue, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ClusterPatchParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.ClusterPatchParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ClusterPatchParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ClusterPatchParameters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ClusterPatchParameters" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Models.Api20230701.IClusterPatchParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.NetworkCloud.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// ClusterPatchParameters represents the body of the request to patch the cluster properties.
    [System.ComponentModel.TypeConverter(typeof(ClusterPatchParametersTypeConverter))]
    public partial interface IClusterPatchParameters

    {

    }
}