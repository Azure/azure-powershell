// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Runtime.PowerShell;

    /// <summary>Properties of the vault</summary>
    [System.ComponentModel.TypeConverter(typeof(VaultPatchPropertiesTypeConverter))]
    public partial class VaultPatchProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VaultPatchProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VaultPatchProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VaultPatchProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VaultPatchProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VaultPatchProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="VaultPatchProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VaultPatchProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VaultPatchProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAcls"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAcls = (Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.INetworkRuleSet) content.GetValueForProperty("NetworkAcls",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAcls, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.NetworkRuleSetTypeConverter.ConvertFrom);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("AccessPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).AccessPolicy = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IAccessPolicyEntry>) content.GetValueForProperty("AccessPolicy",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).AccessPolicy, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IAccessPolicyEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.AccessPolicyEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnabledForDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDeployment = (bool?) content.GetValueForProperty("EnabledForDeployment",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDeployment, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledForDiskEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDiskEncryption = (bool?) content.GetValueForProperty("EnabledForDiskEncryption",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDiskEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledForTemplateDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForTemplateDeployment = (bool?) content.GetValueForProperty("EnabledForTemplateDeployment",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForTemplateDeployment, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableSoftDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableSoftDelete = (bool?) content.GetValueForProperty("EnableSoftDelete",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableSoftDelete, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableRbacAuthorization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableRbacAuthorization = (bool?) content.GetValueForProperty("EnableRbacAuthorization",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableRbacAuthorization, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SoftDeleteRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SoftDeleteRetentionInDay = (int?) content.GetValueForProperty("SoftDeleteRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SoftDeleteRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreateMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).CreateMode = (string) content.GetValueForProperty("CreateMode",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).CreateMode, global::System.Convert.ToString);
            }
            if (content.Contains("EnablePurgeProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnablePurgeProtection = (bool?) content.GetValueForProperty("EnablePurgeProtection",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnablePurgeProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsBypass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsBypass = (string) content.GetValueForProperty("NetworkAclsBypass",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsBypass, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsDefaultAction = (string) content.GetValueForProperty("NetworkAclsDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsDefaultAction, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsIPRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IIPRule>) content.GetValueForProperty("NetworkAclsIPRule",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsIPRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkAclsVirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsVirtualNetworkRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVirtualNetworkRule>) content.GetValueForProperty("NetworkAclsVirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsVirtualNetworkRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVirtualNetworkRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VirtualNetworkRuleTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VaultPatchProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VaultPatchProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkAcls"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAcls = (Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.INetworkRuleSet) content.GetValueForProperty("NetworkAcls",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAcls, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.NetworkRuleSetTypeConverter.ConvertFrom);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("AccessPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).AccessPolicy = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IAccessPolicyEntry>) content.GetValueForProperty("AccessPolicy",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).AccessPolicy, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IAccessPolicyEntry>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.AccessPolicyEntryTypeConverter.ConvertFrom));
            }
            if (content.Contains("EnabledForDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDeployment = (bool?) content.GetValueForProperty("EnabledForDeployment",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDeployment, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledForDiskEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDiskEncryption = (bool?) content.GetValueForProperty("EnabledForDiskEncryption",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForDiskEncryption, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnabledForTemplateDeployment"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForTemplateDeployment = (bool?) content.GetValueForProperty("EnabledForTemplateDeployment",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnabledForTemplateDeployment, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableSoftDelete"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableSoftDelete = (bool?) content.GetValueForProperty("EnableSoftDelete",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableSoftDelete, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EnableRbacAuthorization"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableRbacAuthorization = (bool?) content.GetValueForProperty("EnableRbacAuthorization",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnableRbacAuthorization, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SoftDeleteRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SoftDeleteRetentionInDay = (int?) content.GetValueForProperty("SoftDeleteRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SoftDeleteRetentionInDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreateMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).CreateMode = (string) content.GetValueForProperty("CreateMode",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).CreateMode, global::System.Convert.ToString);
            }
            if (content.Contains("EnablePurgeProtection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnablePurgeProtection = (bool?) content.GetValueForProperty("EnablePurgeProtection",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).EnablePurgeProtection, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).PublicNetworkAccess = (string) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).PublicNetworkAccess, global::System.Convert.ToString);
            }
            if (content.Contains("SkuFamily"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuFamily = (string) content.GetValueForProperty("SkuFamily",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuFamily, global::System.Convert.ToString);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsBypass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsBypass = (string) content.GetValueForProperty("NetworkAclsBypass",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsBypass, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsDefaultAction = (string) content.GetValueForProperty("NetworkAclsDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsDefaultAction, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkAclsIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsIPRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IIPRule>) content.GetValueForProperty("NetworkAclsIPRule",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsIPRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkAclsVirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsVirtualNetworkRule = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVirtualNetworkRule>) content.GetValueForProperty("NetworkAclsVirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVaultPatchPropertiesInternal)this).NetworkAclsVirtualNetworkRule, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.IVirtualNetworkRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.KeyVault.Models.VirtualNetworkRuleTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// Properties of the vault
    [System.ComponentModel.TypeConverter(typeof(VaultPatchPropertiesTypeConverter))]
    public partial interface IVaultPatchProperties

    {

    }
}