// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Extensions;

    /// <summary>Information of Access Rule in Network Profile</summary>
    [Microsoft.Azure.PowerShell.Cmdlets.EventHub.DoNotFormat]
    public partial class NspAccessRule :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRule,
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleInternal
    {

        /// <summary>Address prefixes in the CIDR format for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> AddressPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).AddressPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).AddressPrefix = value ?? null /* arrayOf */; }

        /// <summary>Direction of Access Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Inlined)]
        public string Direction { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).Direction; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).Direction = value ?? null; }

        /// <summary>FQDN for outbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).FullyQualifiedDomainName; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Fully qualified identifier of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for FullyQualifiedDomainName</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleInternal.FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).FullyQualifiedDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).FullyQualifiedDomainName = value; }

        /// <summary>Internal Acessors for NetworkSecurityPerimeter</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INetworkSecurityPerimeter> Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleInternal.NetworkSecurityPerimeter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).NetworkSecurityPerimeter; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).NetworkSecurityPerimeter = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleProperties Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.NspAccessRuleProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>NetworkSecurityPerimeters for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INetworkSecurityPerimeter> NetworkSecurityPerimeter { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).NetworkSecurityPerimeter; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleProperties _property;

        /// <summary>Properties of Access Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.NspAccessRuleProperties()); }

        /// <summary>Subscriptions for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesSubscriptionsItem> Subscription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).Subscription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesInternal)Property).Subscription = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Type of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Origin(Microsoft.Azure.PowerShell.Cmdlets.EventHub.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="NspAccessRule" /> instance.</summary>
        public NspAccessRule()
        {

        }
    }
    /// Information of Access Rule in Network Profile
    public partial interface INspAccessRule :
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.IJsonSerializable
    {
        /// <summary>Address prefixes in the CIDR format for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Address prefixes in the CIDR format for inbound rules",
        SerializedName = @"addressPrefixes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> AddressPrefix { get;  }
        /// <summary>Direction of Access Rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Direction of Access Rule",
        SerializedName = @"direction",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventHub.PSArgumentCompleterAttribute("Inbound", "Outbound")]
        string Direction { get;  }
        /// <summary>FQDN for outbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"FQDN for outbound rules",
        SerializedName = @"fullyQualifiedDomainNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> FullyQualifiedDomainName { get;  }
        /// <summary>Fully qualified identifier of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Fully qualified identifier of the resource",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the resource",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>NetworkSecurityPerimeters for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"NetworkSecurityPerimeters for inbound rules",
        SerializedName = @"networkSecurityPerimeters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INetworkSecurityPerimeter) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INetworkSecurityPerimeter> NetworkSecurityPerimeter { get;  }
        /// <summary>Subscriptions for inbound rules</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Subscriptions for inbound rules",
        SerializedName = @"subscriptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesSubscriptionsItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesSubscriptionsItem> Subscription { get;  }
        /// <summary>Type of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the resource",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Information of Access Rule in Network Profile
    internal partial interface INspAccessRuleInternal

    {
        /// <summary>Address prefixes in the CIDR format for inbound rules</summary>
        System.Collections.Generic.List<string> AddressPrefix { get; set; }
        /// <summary>Direction of Access Rule</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.EventHub.PSArgumentCompleterAttribute("Inbound", "Outbound")]
        string Direction { get; set; }
        /// <summary>FQDN for outbound rules</summary>
        System.Collections.Generic.List<string> FullyQualifiedDomainName { get; set; }
        /// <summary>Fully qualified identifier of the resource</summary>
        string Id { get; set; }
        /// <summary>Name of the resource</summary>
        string Name { get; set; }
        /// <summary>NetworkSecurityPerimeters for inbound rules</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INetworkSecurityPerimeter> NetworkSecurityPerimeter { get; set; }
        /// <summary>Properties of Access Rule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRuleProperties Property { get; set; }
        /// <summary>Subscriptions for inbound rules</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.INspAccessRulePropertiesSubscriptionsItem> Subscription { get; set; }
        /// <summary>Type of the resource</summary>
        string Type { get; set; }

    }
}