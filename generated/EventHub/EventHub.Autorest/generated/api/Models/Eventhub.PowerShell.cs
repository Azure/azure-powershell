// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.PowerShell;

    /// <summary>Single item in List or Get Event Hub operation</summary>
    [System.ComponentModel.TypeConverter(typeof(EventhubTypeConverter))]
    public partial class Eventhub
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Eventhub"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhub" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhub DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Eventhub(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Eventhub"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhub" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhub DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Eventhub(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Eventhub"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Eventhub(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.EventhubPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("CaptureDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescription = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ICaptureDescription) content.GetValueForProperty("CaptureDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescription, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.CaptureDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RetentionDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionDescription = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IRetentionDescription) content.GetValueForProperty("RetentionDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionDescription, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.RetentionDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PartitionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionId = (System.Collections.Generic.List<string>) content.GetValueForProperty("PartitionId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UpdatedAt = (global::System.DateTime?) content.GetValueForProperty("UpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MessageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).MessageRetentionInDay = (long?) content.GetValueForProperty("MessageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).MessageRetentionInDay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PartitionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionCount = (long?) content.GetValueForProperty("PartitionCount",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("CaptureDescriptionDestination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescriptionDestination = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IDestination) content.GetValueForProperty("CaptureDescriptionDestination",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescriptionDestination, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.DestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CaptureEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureEnabled = (bool?) content.GetValueForProperty("CaptureEnabled",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Encoding"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Encoding = (string) content.GetValueForProperty("Encoding",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Encoding, global::System.Convert.ToString);
            }
            if (content.Contains("IntervalInSeconds"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IntervalInSeconds = (int?) content.GetValueForProperty("IntervalInSeconds",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IntervalInSeconds, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SizeLimitInBytes"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SizeLimitInBytes = (int?) content.GetValueForProperty("SizeLimitInBytes",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SizeLimitInBytes, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SkipEmptyArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SkipEmptyArchive = (bool?) content.GetValueForProperty("SkipEmptyArchive",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SkipEmptyArchive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DestinationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationProperty = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IDestinationProperties) content.GetValueForProperty("DestinationProperty",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationProperty, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.DestinationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationName = (string) content.GetValueForProperty("DestinationName",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationName, global::System.Convert.ToString);
            }
            if (content.Contains("CleanupPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CleanupPolicy = (string) content.GetValueForProperty("CleanupPolicy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CleanupPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("RetentionTimeInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionTimeInHour = (long?) content.GetValueForProperty("RetentionTimeInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionTimeInHour, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TombstoneRetentionTimeInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).TombstoneRetentionTimeInHour = (int?) content.GetValueForProperty("TombstoneRetentionTimeInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).TombstoneRetentionTimeInHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DestinationIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationIdentity = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ICaptureIdentity) content.GetValueForProperty("DestinationIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationIdentity, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.CaptureIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("BlobContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).BlobContainer = (string) content.GetValueForProperty("BlobContainer",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).BlobContainer, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("UserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UserAssignedIdentityId = (string) content.GetValueForProperty("UserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).StorageAccountResourceId = (string) content.GetValueForProperty("StorageAccountResourceId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).StorageAccountResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveNameFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).ArchiveNameFormat = (string) content.GetValueForProperty("ArchiveNameFormat",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).ArchiveNameFormat, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeSubscriptionId = (string) content.GetValueForProperty("DataLakeSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeAccountName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeAccountName = (string) content.GetValueForProperty("DataLakeAccountName",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeAccountName, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeFolderPath = (string) content.GetValueForProperty("DataLakeFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeFolderPath, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.Eventhub"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Eventhub(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.EventhubPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IProxyResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("CaptureDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescription = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ICaptureDescription) content.GetValueForProperty("CaptureDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescription, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.CaptureDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("RetentionDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionDescription = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IRetentionDescription) content.GetValueForProperty("RetentionDescription",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionDescription, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.RetentionDescriptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("PartitionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionId = (System.Collections.Generic.List<string>) content.GetValueForProperty("PartitionId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionId, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("CreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CreatedAt = (global::System.DateTime?) content.GetValueForProperty("CreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpdatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UpdatedAt = (global::System.DateTime?) content.GetValueForProperty("UpdatedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UpdatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("MessageRetentionInDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).MessageRetentionInDay = (long?) content.GetValueForProperty("MessageRetentionInDay",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).MessageRetentionInDay, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("PartitionCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionCount = (long?) content.GetValueForProperty("PartitionCount",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).PartitionCount, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Status = (string) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Status, global::System.Convert.ToString);
            }
            if (content.Contains("CaptureDescriptionDestination"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescriptionDestination = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IDestination) content.GetValueForProperty("CaptureDescriptionDestination",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureDescriptionDestination, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.DestinationTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("CaptureEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureEnabled = (bool?) content.GetValueForProperty("CaptureEnabled",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CaptureEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("Encoding"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Encoding = (string) content.GetValueForProperty("Encoding",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).Encoding, global::System.Convert.ToString);
            }
            if (content.Contains("IntervalInSeconds"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IntervalInSeconds = (int?) content.GetValueForProperty("IntervalInSeconds",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IntervalInSeconds, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SizeLimitInBytes"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SizeLimitInBytes = (int?) content.GetValueForProperty("SizeLimitInBytes",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SizeLimitInBytes, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SkipEmptyArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SkipEmptyArchive = (bool?) content.GetValueForProperty("SkipEmptyArchive",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).SkipEmptyArchive, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DestinationProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationProperty = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IDestinationProperties) content.GetValueForProperty("DestinationProperty",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationProperty, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.DestinationPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("DestinationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationName = (string) content.GetValueForProperty("DestinationName",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationName, global::System.Convert.ToString);
            }
            if (content.Contains("CleanupPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CleanupPolicy = (string) content.GetValueForProperty("CleanupPolicy",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).CleanupPolicy, global::System.Convert.ToString);
            }
            if (content.Contains("RetentionTimeInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionTimeInHour = (long?) content.GetValueForProperty("RetentionTimeInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).RetentionTimeInHour, (__y)=> (long) global::System.Convert.ChangeType(__y, typeof(long)));
            }
            if (content.Contains("TombstoneRetentionTimeInHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).TombstoneRetentionTimeInHour = (int?) content.GetValueForProperty("TombstoneRetentionTimeInHour",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).TombstoneRetentionTimeInHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("DestinationIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationIdentity = (Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.ICaptureIdentity) content.GetValueForProperty("DestinationIdentity",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DestinationIdentity, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.CaptureIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("BlobContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).BlobContainer = (string) content.GetValueForProperty("BlobContainer",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).BlobContainer, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("UserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UserAssignedIdentityId = (string) content.GetValueForProperty("UserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).UserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("StorageAccountResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).StorageAccountResourceId = (string) content.GetValueForProperty("StorageAccountResourceId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).StorageAccountResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveNameFormat"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).ArchiveNameFormat = (string) content.GetValueForProperty("ArchiveNameFormat",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).ArchiveNameFormat, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeSubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeSubscriptionId = (string) content.GetValueForProperty("DataLakeSubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeSubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeAccountName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeAccountName = (string) content.GetValueForProperty("DataLakeAccountName",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeAccountName, global::System.Convert.ToString);
            }
            if (content.Contains("DataLakeFolderPath"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeFolderPath = (string) content.GetValueForProperty("DataLakeFolderPath",((Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhubInternal)this).DataLakeFolderPath, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Eventhub" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Eventhub" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EventHub.Models.IEventhub FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EventHub.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Single item in List or Get Event Hub operation
    [System.ComponentModel.TypeConverter(typeof(EventhubTypeConverter))]
    public partial interface IEventhub

    {

    }
}