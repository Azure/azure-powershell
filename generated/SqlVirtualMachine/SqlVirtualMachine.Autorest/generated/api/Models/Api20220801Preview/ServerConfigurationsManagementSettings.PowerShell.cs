// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.PowerShell;

    /// <summary>Set the connectivity, storage and workload settings.</summary>
    [System.ComponentModel.TypeConverter(typeof(ServerConfigurationsManagementSettingsTypeConverter))]
    public partial class ServerConfigurationsManagementSettings
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ServerConfigurationsManagementSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettings DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ServerConfigurationsManagementSettings(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ServerConfigurationsManagementSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettings"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettings DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ServerConfigurationsManagementSettings(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ServerConfigurationsManagementSettings" />, deserializing the content from a json
        /// string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="ServerConfigurationsManagementSettings" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettings FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ServerConfigurationsManagementSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ServerConfigurationsManagementSettings(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SqlConnectivityUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlConnectivityUpdateSettings) content.GetValueForProperty("SqlConnectivityUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlConnectivityUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlWorkloadTypeUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlWorkloadTypeUpdateSettings) content.GetValueForProperty("SqlWorkloadTypeUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlWorkloadTypeUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlStorageUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlStorageUpdateSettings) content.GetValueForProperty("SqlStorageUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlStorageUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdditionalFeaturesServerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeaturesServerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAdditionalFeaturesServerConfigurations) content.GetValueForProperty("AdditionalFeaturesServerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeaturesServerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.AdditionalFeaturesServerConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlInstanceSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlInstanceSettings) content.GetValueForProperty("SqlInstanceSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlInstanceSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureAdAuthenticationSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAadAuthenticationSettings) content.GetValueForProperty("AzureAdAuthenticationSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.AadAuthenticationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlConnectivityUpdateSettingConnectivityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingConnectivityType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType?) content.GetValueForProperty("SqlConnectivityUpdateSettingConnectivityType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingConnectivityType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType.CreateFrom);
            }
            if (content.Contains("SqlConnectivityUpdateSettingPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingPort = (int?) content.GetValueForProperty("SqlConnectivityUpdateSettingPort",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlStorageUpdateSettingDiskCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskCount = (int?) content.GetValueForProperty("SqlStorageUpdateSettingDiskCount",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingCollation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingCollation = (string) content.GetValueForProperty("SqlInstanceSettingCollation",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingCollation, global::System.Convert.ToString);
            }
            if (content.Contains("SqlInstanceSettingMaxDop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxDop = (int?) content.GetValueForProperty("SqlInstanceSettingMaxDop",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxDop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlConnectivityUpdateSettingSqlAuthUpdateUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdateUserName = (string) content.GetValueForProperty("SqlConnectivityUpdateSettingSqlAuthUpdateUserName",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdateUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SqlConnectivityUpdateSettingSqlAuthUpdatePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdatePassword = (System.Security.SecureString) content.GetValueForProperty("SqlConnectivityUpdateSettingSqlAuthUpdatePassword",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdatePassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("SqlWorkloadTypeUpdateSettingSqlWorkloadType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSettingSqlWorkloadType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType?) content.GetValueForProperty("SqlWorkloadTypeUpdateSettingSqlWorkloadType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSettingSqlWorkloadType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType.CreateFrom);
            }
            if (content.Contains("SqlStorageUpdateSettingStartingDeviceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingStartingDeviceId = (int?) content.GetValueForProperty("SqlStorageUpdateSettingStartingDeviceId",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingStartingDeviceId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlStorageUpdateSettingDiskConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskConfigurationType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType?) content.GetValueForProperty("SqlStorageUpdateSettingDiskConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskConfigurationType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType.CreateFrom);
            }
            if (content.Contains("AdditionalFeatureServerConfigurationIsRServicesEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeatureServerConfigurationIsRServicesEnabled = (bool?) content.GetValueForProperty("AdditionalFeatureServerConfigurationIsRServicesEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeatureServerConfigurationIsRServicesEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingMinServerMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMinServerMemoryMb = (int?) content.GetValueForProperty("SqlInstanceSettingMinServerMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMinServerMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingMaxServerMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxServerMemoryMb = (int?) content.GetValueForProperty("SqlInstanceSettingMaxServerMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxServerMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingIsLpimEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsLpimEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsLpimEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsLpimEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingIsIfiEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsIfiEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsIfiEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsIfiEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AzureAdAuthenticationSettingClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSettingClientId = (string) content.GetValueForProperty("AzureAdAuthenticationSettingClientId",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSettingClientId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ServerConfigurationsManagementSettings"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ServerConfigurationsManagementSettings(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SqlConnectivityUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlConnectivityUpdateSettings) content.GetValueForProperty("SqlConnectivityUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlConnectivityUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlWorkloadTypeUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlWorkloadTypeUpdateSettings) content.GetValueForProperty("SqlWorkloadTypeUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlWorkloadTypeUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlStorageUpdateSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlStorageUpdateSettings) content.GetValueForProperty("SqlStorageUpdateSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlStorageUpdateSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdditionalFeaturesServerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeaturesServerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAdditionalFeaturesServerConfigurations) content.GetValueForProperty("AdditionalFeaturesServerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeaturesServerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.AdditionalFeaturesServerConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlInstanceSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.ISqlInstanceSettings) content.GetValueForProperty("SqlInstanceSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.SqlInstanceSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureAdAuthenticationSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSetting = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAadAuthenticationSettings) content.GetValueForProperty("AzureAdAuthenticationSetting",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSetting, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.AadAuthenticationSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SqlConnectivityUpdateSettingConnectivityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingConnectivityType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType?) content.GetValueForProperty("SqlConnectivityUpdateSettingConnectivityType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingConnectivityType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.ConnectivityType.CreateFrom);
            }
            if (content.Contains("SqlConnectivityUpdateSettingPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingPort = (int?) content.GetValueForProperty("SqlConnectivityUpdateSettingPort",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlStorageUpdateSettingDiskCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskCount = (int?) content.GetValueForProperty("SqlStorageUpdateSettingDiskCount",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingCollation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingCollation = (string) content.GetValueForProperty("SqlInstanceSettingCollation",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingCollation, global::System.Convert.ToString);
            }
            if (content.Contains("SqlInstanceSettingMaxDop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxDop = (int?) content.GetValueForProperty("SqlInstanceSettingMaxDop",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxDop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlConnectivityUpdateSettingSqlAuthUpdateUserName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdateUserName = (string) content.GetValueForProperty("SqlConnectivityUpdateSettingSqlAuthUpdateUserName",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdateUserName, global::System.Convert.ToString);
            }
            if (content.Contains("SqlConnectivityUpdateSettingSqlAuthUpdatePassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdatePassword = (System.Security.SecureString) content.GetValueForProperty("SqlConnectivityUpdateSettingSqlAuthUpdatePassword",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlConnectivityUpdateSettingSqlAuthUpdatePassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("SqlWorkloadTypeUpdateSettingSqlWorkloadType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSettingSqlWorkloadType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType?) content.GetValueForProperty("SqlWorkloadTypeUpdateSettingSqlWorkloadType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlWorkloadTypeUpdateSettingSqlWorkloadType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.SqlWorkloadType.CreateFrom);
            }
            if (content.Contains("SqlStorageUpdateSettingStartingDeviceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingStartingDeviceId = (int?) content.GetValueForProperty("SqlStorageUpdateSettingStartingDeviceId",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingStartingDeviceId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlStorageUpdateSettingDiskConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskConfigurationType = (Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType?) content.GetValueForProperty("SqlStorageUpdateSettingDiskConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlStorageUpdateSettingDiskConfigurationType, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.DiskConfigurationType.CreateFrom);
            }
            if (content.Contains("AdditionalFeatureServerConfigurationIsRServicesEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeatureServerConfigurationIsRServicesEnabled = (bool?) content.GetValueForProperty("AdditionalFeatureServerConfigurationIsRServicesEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AdditionalFeatureServerConfigurationIsRServicesEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsOptimizeForAdHocWorkloadsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingMinServerMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMinServerMemoryMb = (int?) content.GetValueForProperty("SqlInstanceSettingMinServerMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMinServerMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingMaxServerMemoryMb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxServerMemoryMb = (int?) content.GetValueForProperty("SqlInstanceSettingMaxServerMemoryMb",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingMaxServerMemoryMb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SqlInstanceSettingIsLpimEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsLpimEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsLpimEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsLpimEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SqlInstanceSettingIsIfiEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsIfiEnabled = (bool?) content.GetValueForProperty("SqlInstanceSettingIsIfiEnabled",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).SqlInstanceSettingIsIfiEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("AzureAdAuthenticationSettingClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSettingClientId = (string) content.GetValueForProperty("AzureAdAuthenticationSettingClientId",((Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IServerConfigurationsManagementSettingsInternal)this).AzureAdAuthenticationSettingClientId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// Set the connectivity, storage and workload settings.
    [System.ComponentModel.TypeConverter(typeof(ServerConfigurationsManagementSettingsTypeConverter))]
    public partial interface IServerConfigurationsManagementSettings

    {

    }
}