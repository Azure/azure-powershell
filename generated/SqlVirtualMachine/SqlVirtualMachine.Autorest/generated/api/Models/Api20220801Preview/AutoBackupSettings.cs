// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Extensions;

    /// <summary>Configure backups for databases in your SQL virtual machine.</summary>
    public partial class AutoBackupSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAutoBackupSettings,
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Models.Api20220801Preview.IAutoBackupSettingsInternal
    {

        /// <summary>Backing field for <see cref="BackupScheduleType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.BackupScheduleType? _backupScheduleType;

        /// <summary>Backup schedule type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.BackupScheduleType? BackupScheduleType { get => this._backupScheduleType; set => this._backupScheduleType = value; }

        /// <summary>Backing field for <see cref="BackupSystemDb" /> property.</summary>
        private bool? _backupSystemDb;

        /// <summary>Include or exclude system databases from auto backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public bool? BackupSystemDb { get => this._backupSystemDb; set => this._backupSystemDb = value; }

        /// <summary>Backing field for <see cref="DaysOfWeek" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.AutoBackupDaysOfWeek[] _daysOfWeek;

        /// <summary>Days of the week for the backups when FullBackupFrequency is set to Weekly.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.AutoBackupDaysOfWeek[] DaysOfWeek { get => this._daysOfWeek; set => this._daysOfWeek = value; }

        /// <summary>Backing field for <see cref="Enable" /> property.</summary>
        private bool? _enable;

        /// <summary>Enable or disable autobackup on SQL virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public bool? Enable { get => this._enable; set => this._enable = value; }

        /// <summary>Backing field for <see cref="EnableEncryption" /> property.</summary>
        private bool? _enableEncryption;

        /// <summary>Enable or disable encryption for backup on SQL virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public bool? EnableEncryption { get => this._enableEncryption; set => this._enableEncryption = value; }

        /// <summary>Backing field for <see cref="FullBackupFrequency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.FullBackupFrequencyType? _fullBackupFrequency;

        /// <summary>
        /// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.FullBackupFrequencyType? FullBackupFrequency { get => this._fullBackupFrequency; set => this._fullBackupFrequency = value; }

        /// <summary>Backing field for <see cref="FullBackupStartTime" /> property.</summary>
        private int? _fullBackupStartTime;

        /// <summary>Start time of a given day during which full backups can take place. 0-23 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public int? FullBackupStartTime { get => this._fullBackupStartTime; set => this._fullBackupStartTime = value; }

        /// <summary>Backing field for <see cref="FullBackupWindowHour" /> property.</summary>
        private int? _fullBackupWindowHour;

        /// <summary>
        /// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public int? FullBackupWindowHour { get => this._fullBackupWindowHour; set => this._fullBackupWindowHour = value; }

        /// <summary>Backing field for <see cref="LogBackupFrequency" /> property.</summary>
        private int? _logBackupFrequency;

        /// <summary>Frequency of log backups. 5-60 minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public int? LogBackupFrequency { get => this._logBackupFrequency; set => this._logBackupFrequency = value; }

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private System.Security.SecureString _password;

        /// <summary>Password for encryption on backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public System.Security.SecureString Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="RetentionPeriod" /> property.</summary>
        private int? _retentionPeriod;

        /// <summary>Retention period of backup: 1-90 days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public int? RetentionPeriod { get => this._retentionPeriod; set => this._retentionPeriod = value; }

        /// <summary>Backing field for <see cref="StorageAccessKey" /> property.</summary>
        private string _storageAccessKey;

        /// <summary>Storage account key where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string StorageAccessKey { get => this._storageAccessKey; set => this._storageAccessKey = value; }

        /// <summary>Backing field for <see cref="StorageAccountUrl" /> property.</summary>
        private string _storageAccountUrl;

        /// <summary>Storage account url where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string StorageAccountUrl { get => this._storageAccountUrl; set => this._storageAccountUrl = value; }

        /// <summary>Backing field for <see cref="StorageContainerName" /> property.</summary>
        private string _storageContainerName;

        /// <summary>Storage container name where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Origin(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.PropertyOrigin.Owned)]
        public string StorageContainerName { get => this._storageContainerName; set => this._storageContainerName = value; }

        /// <summary>Creates an new <see cref="AutoBackupSettings" /> instance.</summary>
        public AutoBackupSettings()
        {

        }
    }
    /// Configure backups for databases in your SQL virtual machine.
    public partial interface IAutoBackupSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.IJsonSerializable
    {
        /// <summary>Backup schedule type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup schedule type.",
        SerializedName = @"backupScheduleType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.BackupScheduleType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.BackupScheduleType? BackupScheduleType { get; set; }
        /// <summary>Include or exclude system databases from auto backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Include or exclude system databases from auto backup.",
        SerializedName = @"backupSystemDbs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? BackupSystemDb { get; set; }
        /// <summary>Days of the week for the backups when FullBackupFrequency is set to Weekly.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Days of the week for the backups when FullBackupFrequency is set to Weekly.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.AutoBackupDaysOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.AutoBackupDaysOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Enable or disable autobackup on SQL virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable autobackup on SQL virtual machine.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enable { get; set; }
        /// <summary>Enable or disable encryption for backup on SQL virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable or disable encryption for backup on SQL virtual machine.",
        SerializedName = @"enableEncryption",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableEncryption { get; set; }
        /// <summary>
        /// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency of full backups. In both cases, full backups begin during the next scheduled time window.",
        SerializedName = @"fullBackupFrequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.FullBackupFrequencyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.FullBackupFrequencyType? FullBackupFrequency { get; set; }
        /// <summary>Start time of a given day during which full backups can take place. 0-23 hours.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start time of a given day during which full backups can take place. 0-23 hours.",
        SerializedName = @"fullBackupStartTime",
        PossibleTypes = new [] { typeof(int) })]
        int? FullBackupStartTime { get; set; }
        /// <summary>
        /// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Duration of the time window of a given day during which full backups can take place. 1-23 hours.",
        SerializedName = @"fullBackupWindowHours",
        PossibleTypes = new [] { typeof(int) })]
        int? FullBackupWindowHour { get; set; }
        /// <summary>Frequency of log backups. 5-60 minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency of log backups. 5-60 minutes.",
        SerializedName = @"logBackupFrequency",
        PossibleTypes = new [] { typeof(int) })]
        int? LogBackupFrequency { get; set; }
        /// <summary>Password for encryption on backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for encryption on backup.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString Password { get; set; }
        /// <summary>Retention period of backup: 1-90 days.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Retention period of backup: 1-90 days.",
        SerializedName = @"retentionPeriod",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPeriod { get; set; }
        /// <summary>Storage account key where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account key where backup will be taken to.",
        SerializedName = @"storageAccessKey",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccessKey { get; set; }
        /// <summary>Storage account url where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage account url where backup will be taken to.",
        SerializedName = @"storageAccountUrl",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountUrl { get; set; }
        /// <summary>Storage container name where backup will be taken to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage container name where backup will be taken to.",
        SerializedName = @"storageContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string StorageContainerName { get; set; }

    }
    /// Configure backups for databases in your SQL virtual machine.
    internal partial interface IAutoBackupSettingsInternal

    {
        /// <summary>Backup schedule type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.BackupScheduleType? BackupScheduleType { get; set; }
        /// <summary>Include or exclude system databases from auto backup.</summary>
        bool? BackupSystemDb { get; set; }
        /// <summary>Days of the week for the backups when FullBackupFrequency is set to Weekly.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.AutoBackupDaysOfWeek[] DaysOfWeek { get; set; }
        /// <summary>Enable or disable autobackup on SQL virtual machine.</summary>
        bool? Enable { get; set; }
        /// <summary>Enable or disable encryption for backup on SQL virtual machine.</summary>
        bool? EnableEncryption { get; set; }
        /// <summary>
        /// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SqlVirtualMachine.Support.FullBackupFrequencyType? FullBackupFrequency { get; set; }
        /// <summary>Start time of a given day during which full backups can take place. 0-23 hours.</summary>
        int? FullBackupStartTime { get; set; }
        /// <summary>
        /// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
        /// </summary>
        int? FullBackupWindowHour { get; set; }
        /// <summary>Frequency of log backups. 5-60 minutes.</summary>
        int? LogBackupFrequency { get; set; }
        /// <summary>Password for encryption on backup.</summary>
        System.Security.SecureString Password { get; set; }
        /// <summary>Retention period of backup: 1-90 days.</summary>
        int? RetentionPeriod { get; set; }
        /// <summary>Storage account key where backup will be taken to.</summary>
        string StorageAccessKey { get; set; }
        /// <summary>Storage account url where backup will be taken to.</summary>
        string StorageAccountUrl { get; set; }
        /// <summary>Storage container name where backup will be taken to.</summary>
        string StorageContainerName { get; set; }

    }
}