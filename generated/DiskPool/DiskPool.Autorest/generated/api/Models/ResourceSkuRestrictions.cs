// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Extensions;

    /// <summary>Describes scaling information of a SKU.</summary>
    public partial class ResourceSkuRestrictions :
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions,
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal
    {

        /// <summary>Internal Acessors for ReasonCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.ReasonCode { get => this._reasonCode; set { {_reasonCode = value;} } }

        /// <summary>Internal Acessors for RestrictionInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfo Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.RestrictionInfo { get => (this._restrictionInfo = this._restrictionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.ResourceSkuRestrictionInfo()); set { {_restrictionInfo = value;} } }

        /// <summary>Internal Acessors for RestrictionInfoLocation</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.RestrictionInfoLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Location = value; }

        /// <summary>Internal Acessors for RestrictionInfoZone</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.RestrictionInfoZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Zone; set => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Zone = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Value</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionsInternal.Value { get => this._value; set { {_value = value;} } }

        /// <summary>Backing field for <see cref="ReasonCode" /> property.</summary>
        private string _reasonCode;

        /// <summary>The reason for restriction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string ReasonCode { get => this._reasonCode; }

        /// <summary>Backing field for <see cref="RestrictionInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfo _restrictionInfo;

        /// <summary>The information about the restriction where the SKU cannot be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfo RestrictionInfo { get => (this._restrictionInfo = this._restrictionInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.ResourceSkuRestrictionInfo()); }

        /// <summary>Locations where the SKU is restricted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> RestrictionInfoLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Location; }

        /// <summary>List of availability zones where the SKU is restricted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> RestrictionInfoZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfoInternal)RestrictionInfo).Zone; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of restrictions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private System.Collections.Generic.List<string> _value;

        /// <summary>
        /// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU
        /// is restricted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Value { get => this._value; }

        /// <summary>Creates an new <see cref="ResourceSkuRestrictions" /> instance.</summary>
        public ResourceSkuRestrictions()
        {

        }
    }
    /// Describes scaling information of a SKU.
    public partial interface IResourceSkuRestrictions :
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.IJsonSerializable
    {
        /// <summary>The reason for restriction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The reason for restriction.",
        SerializedName = @"reasonCode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PSArgumentCompleterAttribute("QuotaId", "NotAvailableForSubscription")]
        string ReasonCode { get;  }
        /// <summary>Locations where the SKU is restricted</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Locations where the SKU is restricted",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RestrictionInfoLocation { get;  }
        /// <summary>List of availability zones where the SKU is restricted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of availability zones where the SKU is restricted.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RestrictionInfoZone { get;  }
        /// <summary>The type of restrictions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The type of restrictions.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PSArgumentCompleterAttribute("Location", "Zone")]
        string Type { get;  }
        /// <summary>
        /// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU
        /// is restricted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
        SerializedName = @"values",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Value { get;  }

    }
    /// Describes scaling information of a SKU.
    internal partial interface IResourceSkuRestrictionsInternal

    {
        /// <summary>The reason for restriction.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PSArgumentCompleterAttribute("QuotaId", "NotAvailableForSubscription")]
        string ReasonCode { get; set; }
        /// <summary>The information about the restriction where the SKU cannot be used.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictionInfo RestrictionInfo { get; set; }
        /// <summary>Locations where the SKU is restricted</summary>
        System.Collections.Generic.List<string> RestrictionInfoLocation { get; set; }
        /// <summary>List of availability zones where the SKU is restricted.</summary>
        System.Collections.Generic.List<string> RestrictionInfoZone { get; set; }
        /// <summary>The type of restrictions.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PSArgumentCompleterAttribute("Location", "Zone")]
        string Type { get; set; }
        /// <summary>
        /// The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU
        /// is restricted.
        /// </summary>
        System.Collections.Generic.List<string> Value { get; set; }

    }
}