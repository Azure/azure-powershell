// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Extensions;

    /// <summary>Resource SKU Details</summary>
    public partial class ResourceSkuInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal
    {

        /// <summary>Backing field for <see cref="ApiVersion" /> property.</summary>
        private string _apiVersion;

        /// <summary>StoragePool RP API version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string ApiVersion { get => this._apiVersion; }

        /// <summary>Backing field for <see cref="Capability" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability> _capability;

        /// <summary>List of additional capabilities for StoragePool resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability> Capability { get => this._capability; }

        /// <summary>Backing field for <see cref="LocationInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfo _locationInfo;

        /// <summary>Zones and zone capabilities in those locations where the SKU is available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfo LocationInfo { get => (this._locationInfo = this._locationInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.ResourceSkuLocationInfo()); }

        /// <summary>Location of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Inlined)]
        public string LocationInfoLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Location; }

        /// <summary>List of availability zones where the SKU is supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> LocationInfoZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Zone; }

        /// <summary>Details of capabilities available to a SKU in specific zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuZoneDetails> LocationInfoZoneDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).ZoneDetail; }

        /// <summary>Internal Acessors for ApiVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.ApiVersion { get => this._apiVersion; set { {_apiVersion = value;} } }

        /// <summary>Internal Acessors for Capability</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.Capability { get => this._capability; set { {_capability = value;} } }

        /// <summary>Internal Acessors for LocationInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfo Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.LocationInfo { get => (this._locationInfo = this._locationInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.ResourceSkuLocationInfo()); set { {_locationInfo = value;} } }

        /// <summary>Internal Acessors for LocationInfoLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.LocationInfoLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Location = value; }

        /// <summary>Internal Acessors for LocationInfoZone</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.LocationInfoZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Zone; set => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).Zone = value; }

        /// <summary>Internal Acessors for LocationInfoZoneDetail</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuZoneDetails> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.LocationInfoZoneDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).ZoneDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfoInternal)LocationInfo).ZoneDetail = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for ResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.ResourceType { get => this._resourceType; set { {_resourceType = value;} } }

        /// <summary>Internal Acessors for Restriction</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions> Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.Restriction { get => this._restriction; set { {_restriction = value;} } }

        /// <summary>Internal Acessors for Tier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuInfoInternal.Tier { get => this._tier; set { {_tier = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>StoragePool resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; }

        /// <summary>Backing field for <see cref="Restriction" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions> _restriction;

        /// <summary>
        /// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions> Restriction { get => this._restriction; }

        /// <summary>Backing field for <see cref="Tier" /> property.</summary>
        private string _tier;

        /// <summary>Sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Origin(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.PropertyOrigin.Owned)]
        public string Tier { get => this._tier; }

        /// <summary>Creates an new <see cref="ResourceSkuInfo" /> instance.</summary>
        public ResourceSkuInfo()
        {

        }
    }
    /// Resource SKU Details
    public partial interface IResourceSkuInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.IJsonSerializable
    {
        /// <summary>StoragePool RP API version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"StoragePool RP API version",
        SerializedName = @"apiVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ApiVersion { get;  }
        /// <summary>List of additional capabilities for StoragePool resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of additional capabilities for StoragePool resource.",
        SerializedName = @"capabilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability> Capability { get;  }
        /// <summary>Location of the SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Location of the SKU",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string LocationInfoLocation { get;  }
        /// <summary>List of availability zones where the SKU is supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"List of availability zones where the SKU is supported.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LocationInfoZone { get;  }
        /// <summary>Details of capabilities available to a SKU in specific zones.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Details of capabilities available to a SKU in specific zones.",
        SerializedName = @"zoneDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuZoneDetails) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuZoneDetails> LocationInfoZoneDetail { get;  }
        /// <summary>Sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Sku name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>StoragePool resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"StoragePool resource type",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get;  }
        /// <summary>
        /// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
        SerializedName = @"restrictions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions> Restriction { get;  }
        /// <summary>Sku tier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Sku tier",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string Tier { get;  }

    }
    /// Resource SKU Details
    internal partial interface IResourceSkuInfoInternal

    {
        /// <summary>StoragePool RP API version</summary>
        string ApiVersion { get; set; }
        /// <summary>List of additional capabilities for StoragePool resource.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuCapability> Capability { get; set; }
        /// <summary>Zones and zone capabilities in those locations where the SKU is available.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuLocationInfo LocationInfo { get; set; }
        /// <summary>Location of the SKU</summary>
        string LocationInfoLocation { get; set; }
        /// <summary>List of availability zones where the SKU is supported.</summary>
        System.Collections.Generic.List<string> LocationInfoZone { get; set; }
        /// <summary>Details of capabilities available to a SKU in specific zones.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuZoneDetails> LocationInfoZoneDetail { get; set; }
        /// <summary>Sku name</summary>
        string Name { get; set; }
        /// <summary>StoragePool resource type</summary>
        string ResourceType { get; set; }
        /// <summary>
        /// The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.DiskPool.Models.IResourceSkuRestrictions> Restriction { get; set; }
        /// <summary>Sku tier</summary>
        string Tier { get; set; }

    }
}