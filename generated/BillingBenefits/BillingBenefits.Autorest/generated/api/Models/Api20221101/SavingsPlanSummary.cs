// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Extensions;

    /// <summary>Savings plans list summary</summary>
    public partial class SavingsPlanSummary :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummary,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal
    {

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Value</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCount Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.Value { get => (this._value = this._value ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.SavingsPlanSummaryCount()); set { {_value = value;} } }

        /// <summary>Internal Acessors for ValueCancelledCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueCancelledCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).CancelledCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).CancelledCount = value; }

        /// <summary>Internal Acessors for ValueExpiredCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueExpiredCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiredCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiredCount = value; }

        /// <summary>Internal Acessors for ValueExpiringCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueExpiringCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiringCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiringCount = value; }

        /// <summary>Internal Acessors for ValueFailedCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).FailedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).FailedCount = value; }

        /// <summary>Internal Acessors for ValueNoBenefitCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueNoBenefitCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).NoBenefitCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).NoBenefitCount = value; }

        /// <summary>Internal Acessors for ValuePendingCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValuePendingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).PendingCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).PendingCount = value; }

        /// <summary>Internal Acessors for ValueProcessingCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueProcessingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ProcessingCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ProcessingCount = value; }

        /// <summary>Internal Acessors for ValueSucceededCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).SucceededCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).SucceededCount = value; }

        /// <summary>Internal Acessors for ValueWarningCount</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryInternal.ValueWarningCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).WarningCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).WarningCount = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>This property has value 'summary'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCount _value;

        /// <summary>The roll up count summary of savings plans in each state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCount Value { get => (this._value = this._value ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.SavingsPlanSummaryCount()); set => this._value = value; }

        /// <summary>The number of savings plans in Cancelled state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueCancelledCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).CancelledCount; }

        /// <summary>The number of savings plans in Expired state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueExpiredCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiredCount; }

        /// <summary>The number of savings plans in Expiring state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueExpiringCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ExpiringCount; }

        /// <summary>The number of savings plans in Failed state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).FailedCount; }

        /// <summary>The number of savings plans in No Benefit state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueNoBenefitCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).NoBenefitCount; }

        /// <summary>The number of savings plans in Pending state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValuePendingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).PendingCount; }

        /// <summary>The number of savings plans in Processing state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueProcessingCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).ProcessingCount; }

        /// <summary>The number of savings plans in Succeeded state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).SucceededCount; }

        /// <summary>The number of savings plans in Warning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public float? ValueWarningCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCountInternal)Value).WarningCount; }

        /// <summary>Creates an new <see cref="SavingsPlanSummary" /> instance.</summary>
        public SavingsPlanSummary()
        {

        }
    }
    /// Savings plans list summary
    public partial interface ISavingsPlanSummary :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.IJsonSerializable
    {
        /// <summary>This property has value 'summary'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This property has value 'summary'",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The number of savings plans in Cancelled state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Cancelled state",
        SerializedName = @"cancelledCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueCancelledCount { get;  }
        /// <summary>The number of savings plans in Expired state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Expired state",
        SerializedName = @"expiredCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueExpiredCount { get;  }
        /// <summary>The number of savings plans in Expiring state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Expiring state",
        SerializedName = @"expiringCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueExpiringCount { get;  }
        /// <summary>The number of savings plans in Failed state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Failed state",
        SerializedName = @"failedCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueFailedCount { get;  }
        /// <summary>The number of savings plans in No Benefit state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in No Benefit state",
        SerializedName = @"noBenefitCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueNoBenefitCount { get;  }
        /// <summary>The number of savings plans in Pending state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Pending state",
        SerializedName = @"pendingCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValuePendingCount { get;  }
        /// <summary>The number of savings plans in Processing state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Processing state",
        SerializedName = @"processingCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueProcessingCount { get;  }
        /// <summary>The number of savings plans in Succeeded state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Succeeded state",
        SerializedName = @"succeededCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueSucceededCount { get;  }
        /// <summary>The number of savings plans in Warning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of savings plans in Warning state",
        SerializedName = @"warningCount",
        PossibleTypes = new [] { typeof(float) })]
        float? ValueWarningCount { get;  }

    }
    /// Savings plans list summary
    internal partial interface ISavingsPlanSummaryInternal

    {
        /// <summary>This property has value 'summary'</summary>
        string Name { get; set; }
        /// <summary>The roll up count summary of savings plans in each state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Api20221101.ISavingsPlanSummaryCount Value { get; set; }
        /// <summary>The number of savings plans in Cancelled state</summary>
        float? ValueCancelledCount { get; set; }
        /// <summary>The number of savings plans in Expired state</summary>
        float? ValueExpiredCount { get; set; }
        /// <summary>The number of savings plans in Expiring state</summary>
        float? ValueExpiringCount { get; set; }
        /// <summary>The number of savings plans in Failed state</summary>
        float? ValueFailedCount { get; set; }
        /// <summary>The number of savings plans in No Benefit state</summary>
        float? ValueNoBenefitCount { get; set; }
        /// <summary>The number of savings plans in Pending state</summary>
        float? ValuePendingCount { get; set; }
        /// <summary>The number of savings plans in Processing state</summary>
        float? ValueProcessingCount { get; set; }
        /// <summary>The number of savings plans in Succeeded state</summary>
        float? ValueSucceededCount { get; set; }
        /// <summary>The number of savings plans in Warning state</summary>
        float? ValueWarningCount { get; set; }

    }
}