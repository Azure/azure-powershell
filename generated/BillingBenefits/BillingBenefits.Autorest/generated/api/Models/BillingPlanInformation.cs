// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Extensions;

    /// <summary>Information describing the type of billing plan for this savings plan.</summary>
    public partial class BillingPlanInformation :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IBillingPlanInformation,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IBillingPlanInformationInternal
    {

        /// <summary>Internal Acessors for PricingCurrencyTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPrice Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IBillingPlanInformationInternal.PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Price()); set { {_pricingCurrencyTotal = value;} } }

        /// <summary>Backing field for <see cref="NextPaymentDueDate" /> property.</summary>
        private global::System.DateTime? _nextPaymentDueDate;

        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        public global::System.DateTime? NextPaymentDueDate { get => this._nextPaymentDueDate; set => this._nextPaymentDueDate = value; }

        /// <summary>Backing field for <see cref="PricingCurrencyTotal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPrice _pricingCurrencyTotal;

        /// <summary>Amount of money to be paid for the Order. Tax is not included.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPrice PricingCurrencyTotal { get => (this._pricingCurrencyTotal = this._pricingCurrencyTotal ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.Price()); set => this._pricingCurrencyTotal = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public double? PricingCurrencyTotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPriceInternal)PricingCurrencyTotal).Amount; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPriceInternal)PricingCurrencyTotal).Amount = value ?? default(double); }

        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Inlined)]
        public string PricingCurrencyTotalCurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPriceInternal)PricingCurrencyTotal).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPriceInternal)PricingCurrencyTotal).CurrencyCode = value ?? null; }

        /// <summary>Backing field for <see cref="StartDate" /> property.</summary>
        private global::System.DateTime? _startDate;

        /// <summary>Date when the billing plan has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDate { get => this._startDate; set => this._startDate = value; }

        /// <summary>Backing field for <see cref="Transaction" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPaymentDetail> _transaction;

        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPaymentDetail> Transaction { get => this._transaction; set => this._transaction = value; }

        /// <summary>Creates an new <see cref="BillingPlanInformation" /> instance.</summary>
        public BillingPlanInformation()
        {

        }
    }
    /// Information describing the type of billing plan for this savings plan.
    public partial interface IBillingPlanInformation :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.IJsonSerializable
    {
        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
        SerializedName = @"nextPaymentDueDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextPaymentDueDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"amount",
        PossibleTypes = new [] { typeof(double) })]
        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The ISO 4217 3-letter currency code for the currency used by this purchase record.",
        SerializedName = @"currencyCode",
        PossibleTypes = new [] { typeof(string) })]
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Date when the billing plan has started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Date when the billing plan has started.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDate { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"transactions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPaymentDetail) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPaymentDetail> Transaction { get; set; }

    }
    /// Information describing the type of billing plan for this savings plan.
    internal partial interface IBillingPlanInformationInternal

    {
        /// <summary>
        /// For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        /// </summary>
        global::System.DateTime? NextPaymentDueDate { get; set; }
        /// <summary>Amount of money to be paid for the Order. Tax is not included.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPrice PricingCurrencyTotal { get; set; }

        double? PricingCurrencyTotalAmount { get; set; }
        /// <summary>
        /// The ISO 4217 3-letter currency code for the currency used by this purchase record.
        /// </summary>
        string PricingCurrencyTotalCurrencyCode { get; set; }
        /// <summary>Date when the billing plan has started.</summary>
        global::System.DateTime? StartDate { get; set; }

        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.BillingBenefits.Models.IPaymentDetail> Transaction { get; set; }

    }
}