// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support
{

    /// <summary>An ability the user has to perform an action on the project as an admin.</summary>
    public partial struct ProjectAbilityAsAdmin :
        System.IEquatable<ProjectAbilityAsAdmin>
    {
        /// <summary>User can delete dev boxes.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin DeleteDevBoxes = @"DeleteDevBoxes";

        /// <summary>User can delete environments.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin DeleteEnvironments = @"DeleteEnvironments";

        /// <summary>User can delay and skip actions on environments.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin ManageEnvironmentActions = @"ManageEnvironmentActions";

        /// <summary>User can read dev boxes.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin ReadDevBoxes = @"ReadDevBoxes";

        /// <summary>User can read actions on environments.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin ReadEnvironmentActions = @"ReadEnvironmentActions";

        /// <summary>User can read outputs on environments.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin ReadEnvironmentOutputs = @"ReadEnvironmentOutputs";

        /// <summary>User can read environments.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin ReadEnvironments = @"ReadEnvironments";

        /// <summary>User can start dev boxes.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin StartDevBoxes = @"StartDevBoxes";

        /// <summary>User can stop dev boxes.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin StopDevBoxes = @"StopDevBoxes";

        /// <summary>User can create dev boxes.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin WriteDevBoxes = @"WriteDevBoxes";

        /// <summary>User can create new environments or replace and update existing ones.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin WriteEnvironments = @"WriteEnvironments";

        /// <summary>the value for an instance of the <see cref="ProjectAbilityAsAdmin" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to ProjectAbilityAsAdmin</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ProjectAbilityAsAdmin" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ProjectAbilityAsAdmin(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ProjectAbilityAsAdmin</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ProjectAbilityAsAdmin (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ProjectAbilityAsAdmin && Equals((ProjectAbilityAsAdmin)obj);
        }

        /// <summary>Returns hashCode for enum ProjectAbilityAsAdmin</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="ProjectAbilityAsAdmin"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ProjectAbilityAsAdmin(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for ProjectAbilityAsAdmin</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ProjectAbilityAsAdmin</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ProjectAbilityAsAdmin" />.</param>

        public static implicit operator ProjectAbilityAsAdmin(string value)
        {
            return new ProjectAbilityAsAdmin(value);
        }

        /// <summary>Implicit operator to convert ProjectAbilityAsAdmin to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ProjectAbilityAsAdmin" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ProjectAbilityAsAdmin</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e1, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ProjectAbilityAsAdmin</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e1, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.ProjectAbilityAsAdmin e2)
        {
            return e2.Equals(e1);
        }
    }
}