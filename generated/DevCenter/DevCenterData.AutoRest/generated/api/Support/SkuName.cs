// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support
{

    /// <summary>Indicates the Dev Box compute.</summary>
    public partial struct SkuName :
        System.IEquatable<SkuName>
    {
        /// <summary>AMD, 16 vCPU, 64 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA16C64Gb1024SsdV2 = @"general_a_16c64gb1024ssd_v2";

        /// <summary>AMD, 16 vCPU, 64 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA16C64Gb2048SsdV2 = @"general_a_16c64gb2048ssd_v2";

        /// <summary>AMD, 16 vCPU, 64 GB RAM, 256 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA16C64Gb256SsdV2 = @"general_a_16c64gb256ssd_v2";

        /// <summary>AMD, 16 vCPU, 64 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA16C64Gb512SsdV2 = @"general_a_16c64gb512ssd_v2";

        /// <summary>AMD, 32 vCPU, 128 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA32C128Gb1024SsdV2 = @"general_a_32c128gb1024ssd_v2";

        /// <summary>AMD, 32 vCPU, 128 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA32C128Gb2048SsdV2 = @"general_a_32c128gb2048ssd_v2";

        /// <summary>AMD, 32 vCPU, 128 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA32C128Gb512SsdV2 = @"general_a_32c128gb512ssd_v2";

        /// <summary>AMD, 8 vCPU, 32 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA8C32Gb1024SsdV2 = @"general_a_8c32gb1024ssd_v2";

        /// <summary>AMD, 8 vCPU, 32 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA8C32Gb2048SsdV2 = @"general_a_8c32gb2048ssd_v2";

        /// <summary>AMD, 8 vCPU, 32 GB RAM, 256 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA8C32Gb256SsdV2 = @"general_a_8c32gb256ssd_v2";

        /// <summary>AMD, 8 vCPU, 32 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralA8C32Gb512SsdV2 = @"general_a_8c32gb512ssd_v2";

        /// <summary>Intel, 16 vCPU, 64 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI16C64Gb1024SsdV2 = @"general_i_16c64gb1024ssd_v2";

        /// <summary>Intel, 16 vCPU, 64 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI16C64Gb2048SsdV2 = @"general_i_16c64gb2048ssd_v2";

        /// <summary>Intel, 16 vCPU, 64 GB RAM, 256 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI16C64Gb256SsdV2 = @"general_i_16c64gb256ssd_v2";

        /// <summary>Intel, 16 vCPU, 64 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI16C64Gb512SsdV2 = @"general_i_16c64gb512ssd_v2";

        /// <summary>Intel, 32 vCPU, 128 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI32C128Gb1024SsdV2 = @"general_i_32c128gb1024ssd_v2";

        /// <summary>Intel, 32 vCPU, 128 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI32C128Gb2048SsdV2 = @"general_i_32c128gb2048ssd_v2";

        /// <summary>Intel, 32 vCPU, 128 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI32C128Gb512SsdV2 = @"general_i_32c128gb512ssd_v2";

        /// <summary>Intel, 8 vCPU, 32 GB RAM, 1024 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI8C32Gb1024SsdV2 = @"general_i_8c32gb1024ssd_v2";

        /// <summary>Intel, 8 vCPU, 32 GB RAM, 2048 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI8C32Gb2048SsdV2 = @"general_i_8c32gb2048ssd_v2";

        /// <summary>Intel, 8 vCPU, 32 GB RAM, 256 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI8C32Gb256SsdV2 = @"general_i_8c32gb256ssd_v2";

        /// <summary>Intel, 8 vCPU, 32 GB RAM, 512 GB Storage.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName GeneralI8C32Gb512SsdV2 = @"general_i_8c32gb512ssd_v2";

        /// <summary>the value for an instance of the <see cref="SkuName" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to SkuName</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SkuName" />.</param>
        internal static object CreateFrom(object value)
        {
            return new SkuName(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type SkuName</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type SkuName (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is SkuName && Equals((SkuName)obj);
        }

        /// <summary>Returns hashCode for enum SkuName</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="SkuName"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private SkuName(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for SkuName</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to SkuName</summary>
        /// <param name="value">the value to convert to an instance of <see cref="SkuName" />.</param>

        public static implicit operator SkuName(string value)
        {
            return new SkuName(value);
        }

        /// <summary>Implicit operator to convert SkuName to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="SkuName" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum SkuName</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e1, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum SkuName</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e1, Microsoft.Azure.PowerShell.Cmdlets.DevCenterdata.Support.SkuName e2)
        {
            return e2.Equals(e1);
        }
    }
}