// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.PowerShell;

    /// <summary>Properties of the devcenter.</summary>
    [System.ComponentModel.TypeConverter(typeof(DevCenterPropertiesTypeConverter))]
    public partial class DevCenterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DevCenterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DevCenterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DevCenterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("DevCenterUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).DevCenterUri = (string) content.GetValueForProperty("DevCenterUri",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).DevCenterUri, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionCustomerManagedKeyEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).EncryptionCustomerManagedKeyEncryption = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.ICustomerManagedKeyEncryption) content.GetValueForProperty("EncryptionCustomerManagedKeyEncryption",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).EncryptionCustomerManagedKeyEncryption, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.CustomerManagedKeyEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProjectCatalogSettingCatalogItemSyncEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSettingCatalogItemSyncEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemSyncEnableStatus?) content.GetValueForProperty("ProjectCatalogSettingCatalogItemSyncEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSettingCatalogItemSyncEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemSyncEnableStatus.CreateFrom);
            }
            if (content.Contains("NetworkSettingMicrosoftHostedNetworkEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSettingMicrosoftHostedNetworkEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.MicrosoftHostedNetworkEnableStatus?) content.GetValueForProperty("NetworkSettingMicrosoftHostedNetworkEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSettingMicrosoftHostedNetworkEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.MicrosoftHostedNetworkEnableStatus.CreateFrom);
            }
            if (content.Contains("DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.InstallAzureMonitorAgentEnableStatus?) content.GetValueForProperty("DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.InstallAzureMonitorAgentEnableStatus.CreateFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyIdentity = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.ICustomerManagedKeyEncryptionKeyIdentity) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyIdentity",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyIdentity, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.CustomerManagedKeyEncryptionKeyIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyUrl = (string) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.IdentityType?) content.GetValueForProperty("KeyEncryptionKeyIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityType, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityDelegatedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityDelegatedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId, global::System.Convert.ToString);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProjectCatalogSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProjectCatalogSettings) content.GetValueForProperty("ProjectCatalogSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProjectCatalogSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterNetworkSettings) content.GetValueForProperty("NetworkSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterNetworkSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DevBoxProvisioningSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevBoxProvisioningSettings) content.GetValueForProperty("DevBoxProvisioningSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevBoxProvisioningSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).PlanId = (string) content.GetValueForProperty("PlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).PlanId, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DevCenterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.ProvisioningState.CreateFrom);
            }
            if (content.Contains("DevCenterUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).DevCenterUri = (string) content.GetValueForProperty("DevCenterUri",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterPropertiesInternal)this).DevCenterUri, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionCustomerManagedKeyEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).EncryptionCustomerManagedKeyEncryption = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.ICustomerManagedKeyEncryption) content.GetValueForProperty("EncryptionCustomerManagedKeyEncryption",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).EncryptionCustomerManagedKeyEncryption, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.CustomerManagedKeyEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProjectCatalogSettingCatalogItemSyncEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSettingCatalogItemSyncEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemSyncEnableStatus?) content.GetValueForProperty("ProjectCatalogSettingCatalogItemSyncEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSettingCatalogItemSyncEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.CatalogItemSyncEnableStatus.CreateFrom);
            }
            if (content.Contains("NetworkSettingMicrosoftHostedNetworkEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSettingMicrosoftHostedNetworkEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.MicrosoftHostedNetworkEnableStatus?) content.GetValueForProperty("NetworkSettingMicrosoftHostedNetworkEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSettingMicrosoftHostedNetworkEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.MicrosoftHostedNetworkEnableStatus.CreateFrom);
            }
            if (content.Contains("DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.InstallAzureMonitorAgentEnableStatus?) content.GetValueForProperty("DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSettingInstallAzureMonitorAgentEnableStatus, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.InstallAzureMonitorAgentEnableStatus.CreateFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyIdentity = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.ICustomerManagedKeyEncryptionKeyIdentity) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyIdentity",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyIdentity, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api40.CustomerManagedKeyEncryptionKeyIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomerManagedKeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyUrl = (string) content.GetValueForProperty("CustomerManagedKeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).CustomerManagedKeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityType = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.IdentityType?) content.GetValueForProperty("KeyEncryptionKeyIdentityType",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityType, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Support.IdentityType.CreateFrom);
            }
            if (content.Contains("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityUserAssignedIdentityResourceId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityUserAssignedIdentityResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("KeyEncryptionKeyIdentityDelegatedIdentityClientId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId = (string) content.GetValueForProperty("KeyEncryptionKeyIdentityDelegatedIdentityClientId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).KeyEncryptionKeyIdentityDelegatedIdentityClientId, global::System.Convert.ToString);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProjectCatalogSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProjectCatalogSettings) content.GetValueForProperty("ProjectCatalogSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).ProjectCatalogSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterProjectCatalogSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterNetworkSettings) content.GetValueForProperty("NetworkSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).NetworkSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevCenterNetworkSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("DevBoxProvisioningSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSetting = (Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevBoxProvisioningSettings) content.GetValueForProperty("DevBoxProvisioningSetting",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DevBoxProvisioningSetting, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.DevBoxProvisioningSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("PlanId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).PlanId = (string) content.GetValueForProperty("PlanId",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).PlanId, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterUpdatePropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DevCenterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DevCenterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20240501Preview.IDevCenterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Properties of the devcenter.
    [System.ComponentModel.TypeConverter(typeof(DevCenterPropertiesTypeConverter))]
    public partial interface IDevCenterProperties

    {

    }
}