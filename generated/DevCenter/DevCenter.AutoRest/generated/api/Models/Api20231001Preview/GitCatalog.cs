// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Extensions;

    /// <summary>Properties for a Git repository catalog.</summary>
    public partial class GitCatalog :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IGitCatalog,
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Models.Api20231001Preview.IGitCatalogInternal
    {

        /// <summary>Backing field for <see cref="Branch" /> property.</summary>
        private string _branch;

        /// <summary>Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string Branch { get => this._branch; set => this._branch = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>The folder where the catalog items can be found inside the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="SecretIdentifier" /> property.</summary>
        private string _secretIdentifier;

        /// <summary>
        /// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string SecretIdentifier { get => this._secretIdentifier; set => this._secretIdentifier = value; }

        /// <summary>Backing field for <see cref="Uri" /> property.</summary>
        private string _uri;

        /// <summary>Git URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.DevCenter.PropertyOrigin.Owned)]
        public string Uri { get => this._uri; set => this._uri = value; }

        /// <summary>Creates an new <see cref="GitCatalog" /> instance.</summary>
        public GitCatalog()
        {

        }
    }
    /// Properties for a Git repository catalog.
    public partial interface IGitCatalog :
        Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.IJsonSerializable
    {
        /// <summary>Git branch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git branch.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string Branch { get; set; }
        /// <summary>The folder where the catalog items can be found inside the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The folder where the catalog items can be found inside the repository.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>
        /// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A reference to the Key Vault secret containing a security token to authenticate to a Git repository.",
        SerializedName = @"secretIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string SecretIdentifier { get; set; }
        /// <summary>Git URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DevCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git URI.",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string Uri { get; set; }

    }
    /// Properties for a Git repository catalog.
    internal partial interface IGitCatalogInternal

    {
        /// <summary>Git branch.</summary>
        string Branch { get; set; }
        /// <summary>The folder where the catalog items can be found inside the repository.</summary>
        string Path { get; set; }
        /// <summary>
        /// A reference to the Key Vault secret containing a security token to authenticate to a Git repository.
        /// </summary>
        string SecretIdentifier { get; set; }
        /// <summary>Git URI.</summary>
        string Uri { get; set; }

    }
}