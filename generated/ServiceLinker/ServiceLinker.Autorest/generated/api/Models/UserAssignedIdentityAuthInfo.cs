// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Extensions;

    /// <summary>The authentication info when authType is userAssignedIdentity</summary>
    public partial class UserAssignedIdentityAuthInfo :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IUserAssignedIdentityAuthInfo,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IUserAssignedIdentityAuthInfoInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBase" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBase __authInfoBase = new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.AuthInfoBase();

        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfo"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfo __databaseAadAuthInfo = new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.DatabaseAadAuthInfo();

        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inherited)]
        public string AuthType { get => "userAssignedIdentity"; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBaseInternal)__authInfoBase).AuthType = "userAssignedIdentity"; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>Client Id for userAssignedIdentity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="DeleteOrUpdateBehavior" /> property.</summary>
        private string _deleteOrUpdateBehavior;

        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string DeleteOrUpdateBehavior { get => this._deleteOrUpdateBehavior; set => this._deleteOrUpdateBehavior = value; }

        /// <summary>Backing field for <see cref="Role" /> property.</summary>
        private System.Collections.Generic.List<string> _role;

        /// <summary>Optional, this value specifies the Azure role to be assigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Role { get => this._role; set => this._role = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription id for userAssignedIdentity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Username created in the database which is mapped to a user in AAD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inherited)]
        public string UserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfoInternal)__databaseAadAuthInfo).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfoInternal)__databaseAadAuthInfo).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="UserAssignedIdentityAuthInfo" /> instance.</summary>
        public UserAssignedIdentityAuthInfo()
        {
            this.__authInfoBase.AuthType = "userAssignedIdentity";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__authInfoBase), __authInfoBase);
            await eventListener.AssertObjectIsValid(nameof(__authInfoBase), __authInfoBase);
            await eventListener.AssertNotNull(nameof(__databaseAadAuthInfo), __databaseAadAuthInfo);
            await eventListener.AssertObjectIsValid(nameof(__databaseAadAuthInfo), __databaseAadAuthInfo);
        }
    }
    /// The authentication info when authType is userAssignedIdentity
    public partial interface IUserAssignedIdentityAuthInfo :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBase,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfo
    {
        /// <summary>Client Id for userAssignedIdentity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Client Id for userAssignedIdentity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to clean up previous operation when Linker is updating or deleting",
        SerializedName = @"deleteOrUpdateBehavior",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PSArgumentCompleterAttribute("Default", "ForcedCleanup")]
        string DeleteOrUpdateBehavior { get; set; }
        /// <summary>Optional, this value specifies the Azure role to be assigned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional, this value specifies the Azure role to be assigned",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Role { get; set; }
        /// <summary>Subscription id for userAssignedIdentity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Subscription id for userAssignedIdentity.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }

    }
    /// The authentication info when authType is userAssignedIdentity
    internal partial interface IUserAssignedIdentityAuthInfoInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBaseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDatabaseAadAuthInfoInternal
    {
        /// <summary>Client Id for userAssignedIdentity.</summary>
        string ClientId { get; set; }
        /// <summary>
        /// Indicates whether to clean up previous operation when Linker is updating or deleting
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PSArgumentCompleterAttribute("Default", "ForcedCleanup")]
        string DeleteOrUpdateBehavior { get; set; }
        /// <summary>Optional, this value specifies the Azure role to be assigned</summary>
        System.Collections.Generic.List<string> Role { get; set; }
        /// <summary>Subscription id for userAssignedIdentity.</summary>
        string SubscriptionId { get; set; }

    }
}