// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.PowerShell;

    /// <summary>The dryrun parameters for creation or update a linker</summary>
    [System.ComponentModel.TypeConverter(typeof(CreateOrUpdateDryrunParametersTypeConverter))]
    public partial class CreateOrUpdateDryrunParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal CreateOrUpdateDryrunParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ActionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDryrunParametersInternal)this).ActionName = (string) content.GetValueForProperty("ActionName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDryrunParametersInternal)this).ActionName, global::System.Convert.ToString);
            }
            if (content.Contains("VNetSolutionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionType = (string) content.GetValueForProperty("VNetSolutionType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionType, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionFirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionFirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IFirewallRules) content.GetValueForProperty("PublicNetworkSolutionFirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionFirewallRule, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.FirewallRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoCustomizedKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoCustomizedKey = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfoCustomizedKeys) content.GetValueForProperty("ConfigurationInfoCustomizedKey",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoCustomizedKey, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoCustomizedKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAdditionalConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfoAdditionalConfigurations) content.GetValueForProperty("ConfigurationInfoAdditionalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAdditionalConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoAdditionalConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionDeleteOrUpdateBehavior = (string) content.GetValueForProperty("VNetSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultId = (string) content.GetValueForProperty("SecretStoreKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultSecretName = (string) content.GetValueForProperty("SecretStoreKeyVaultSecretName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior = (string) content.GetValueForProperty("PublicNetworkSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionAction = (string) content.GetValueForProperty("PublicNetworkSolutionAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionAction, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleIPRange = (System.Collections.Generic.List<string>) content.GetValueForProperty("FirewallRuleIPRange",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleIPRange, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConfigurationInfoDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoDeleteOrUpdateBehavior = (string) content.GetValueForProperty("ConfigurationInfoDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationInfoAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAction = (string) content.GetValueForProperty("ConfigurationInfoAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAction, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleAzureService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleAzureService = (string) content.GetValueForProperty("FirewallRuleAzureService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleAzureService, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleCallerClientIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleCallerClientIP = (string) content.GetValueForProperty("FirewallRuleCallerClientIP",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleCallerClientIP, global::System.Convert.ToString);
            }
            if (content.Contains("VNetSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IVNetSolution) content.GetValueForProperty("VNetSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.VNetSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ISecretStore) content.GetValueForProperty("SecretStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.SecretStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IPublicNetworkSolution) content.GetValueForProperty("PublicNetworkSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.PublicNetworkSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfo) content.GetValueForProperty("ConfigurationInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).TargetService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ITargetServiceBase) content.GetValueForProperty("TargetService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).TargetService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.TargetServiceBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).AuthInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBase) content.GetValueForProperty("AuthInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).AuthInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.AuthInfoBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClientType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ClientType = (string) content.GetValueForProperty("ClientType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ClientType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).Scope, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal CreateOrUpdateDryrunParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ActionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDryrunParametersInternal)this).ActionName = (string) content.GetValueForProperty("ActionName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IDryrunParametersInternal)this).ActionName, global::System.Convert.ToString);
            }
            if (content.Contains("VNetSolutionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionType = (string) content.GetValueForProperty("VNetSolutionType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionType, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionFirewallRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionFirewallRule = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IFirewallRules) content.GetValueForProperty("PublicNetworkSolutionFirewallRule",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionFirewallRule, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.FirewallRulesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoCustomizedKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoCustomizedKey = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfoCustomizedKeys) content.GetValueForProperty("ConfigurationInfoCustomizedKey",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoCustomizedKey, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoCustomizedKeysTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfoAdditionalConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAdditionalConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfoAdditionalConfigurations) content.GetValueForProperty("ConfigurationInfoAdditionalConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAdditionalConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoAdditionalConfigurationsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VNetSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionDeleteOrUpdateBehavior = (string) content.GetValueForProperty("VNetSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolutionDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultId = (string) content.GetValueForProperty("SecretStoreKeyVaultId",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("SecretStoreKeyVaultSecretName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultSecretName = (string) content.GetValueForProperty("SecretStoreKeyVaultSecretName",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStoreKeyVaultSecretName, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior = (string) content.GetValueForProperty("PublicNetworkSolutionDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkSolutionAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionAction = (string) content.GetValueForProperty("PublicNetworkSolutionAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolutionAction, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleIPRange"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleIPRange = (System.Collections.Generic.List<string>) content.GetValueForProperty("FirewallRuleIPRange",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleIPRange, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ConfigurationInfoDeleteOrUpdateBehavior"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoDeleteOrUpdateBehavior = (string) content.GetValueForProperty("ConfigurationInfoDeleteOrUpdateBehavior",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoDeleteOrUpdateBehavior, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationInfoAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAction = (string) content.GetValueForProperty("ConfigurationInfoAction",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfoAction, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleAzureService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleAzureService = (string) content.GetValueForProperty("FirewallRuleAzureService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleAzureService, global::System.Convert.ToString);
            }
            if (content.Contains("FirewallRuleCallerClientIP"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleCallerClientIP = (string) content.GetValueForProperty("FirewallRuleCallerClientIP",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).FirewallRuleCallerClientIP, global::System.Convert.ToString);
            }
            if (content.Contains("VNetSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IVNetSolution) content.GetValueForProperty("VNetSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).VNetSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.VNetSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecretStore"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStore = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ISecretStore) content.GetValueForProperty("SecretStore",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).SecretStore, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.SecretStoreTypeConverter.ConvertFrom);
            }
            if (content.Contains("PublicNetworkSolution"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolution = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IPublicNetworkSolution) content.GetValueForProperty("PublicNetworkSolution",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).PublicNetworkSolution, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.PublicNetworkSolutionTypeConverter.ConvertFrom);
            }
            if (content.Contains("ConfigurationInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IConfigurationInfo) content.GetValueForProperty("ConfigurationInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ConfigurationInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ConfigurationInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).TargetService = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ITargetServiceBase) content.GetValueForProperty("TargetService",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).TargetService, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.TargetServiceBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).AuthInfo = (Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.IAuthInfoBase) content.GetValueForProperty("AuthInfo",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).AuthInfo, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.AuthInfoBaseTypeConverter.ConvertFrom);
            }
            if (content.Contains("ClientType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ClientType = (string) content.GetValueForProperty("ClientType",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ClientType, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).Scope = (string) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ILinkerPropertiesInternal)this).Scope, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ICreateOrUpdateDryrunParameters" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ICreateOrUpdateDryrunParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new CreateOrUpdateDryrunParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.CreateOrUpdateDryrunParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ICreateOrUpdateDryrunParameters" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ICreateOrUpdateDryrunParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new CreateOrUpdateDryrunParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="CreateOrUpdateDryrunParameters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="CreateOrUpdateDryrunParameters" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.ICreateOrUpdateDryrunParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The dryrun parameters for creation or update a linker
    [System.ComponentModel.TypeConverter(typeof(CreateOrUpdateDryrunParametersTypeConverter))]
    public partial interface ICreateOrUpdateDryrunParameters

    {

    }
}