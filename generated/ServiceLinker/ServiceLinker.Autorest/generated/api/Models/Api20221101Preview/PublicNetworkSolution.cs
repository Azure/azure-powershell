// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Extensions;

    /// <summary>Indicates public network solution, include firewall rules</summary>
    public partial class PublicNetworkSolution :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IPublicNetworkSolution,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IPublicNetworkSolutionInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType? _action;

        /// <summary>
        /// Optional. Indicates public network solution. If enable, enable public network access of target service with best try.
        /// Default is enable. If optOut, opt out public network access configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType? Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="DeleteOrUpdateBehavior" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior? _deleteOrUpdateBehavior;

        /// <summary>
        /// Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior? DeleteOrUpdateBehavior { get => this._deleteOrUpdateBehavior; set => this._deleteOrUpdateBehavior = value; }

        /// <summary>Backing field for <see cref="FirewallRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRules _firewallRule;

        /// <summary>
        /// Describe firewall rules of target service to make sure source application could connect to the target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRules FirewallRule { get => (this._firewallRule = this._firewallRule ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.FirewallRules()); set => this._firewallRule = value; }

        /// <summary>Allow Azure services to access the target service if true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleAzureService { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).AzureService; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).AzureService = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType)""); }

        /// <summary>
        /// Allow caller client IP to access the target service if true. the property is used when connecting local application to
        /// target service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleCallerClientIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).CallerClientIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).CallerClientIP = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType)""); }

        /// <summary>
        /// This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client
        /// IPs for a given database account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inlined)]
        public string[] FirewallRuleIPRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).IPRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRulesInternal)FirewallRule).IPRange = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for FirewallRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRules Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IPublicNetworkSolutionInternal.FirewallRule { get => (this._firewallRule = this._firewallRule ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.FirewallRules()); set { {_firewallRule = value;} } }

        /// <summary>Creates an new <see cref="PublicNetworkSolution" /> instance.</summary>
        public PublicNetworkSolution()
        {

        }
    }
    /// Indicates public network solution, include firewall rules
    public partial interface IPublicNetworkSolution :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional. Indicates public network solution. If enable, enable public network access of target service with best try.
        /// Default is enable. If optOut, opt out public network access configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType? Action { get; set; }
        /// <summary>
        /// Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
        SerializedName = @"deleteOrUpdateBehavior",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior? DeleteOrUpdateBehavior { get; set; }
        /// <summary>Allow Azure services to access the target service if true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow Azure services to access the target service if true.",
        SerializedName = @"azureServices",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleAzureService { get; set; }
        /// <summary>
        /// Allow caller client IP to access the target service if true. the property is used when connecting local application to
        /// target service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
        SerializedName = @"callerClientIP",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleCallerClientIP { get; set; }
        /// <summary>
        /// This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client
        /// IPs for a given database account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account.",
        SerializedName = @"ipRanges",
        PossibleTypes = new [] { typeof(string) })]
        string[] FirewallRuleIPRange { get; set; }

    }
    /// Indicates public network solution, include firewall rules
    internal partial interface IPublicNetworkSolutionInternal

    {
        /// <summary>
        /// Optional. Indicates public network solution. If enable, enable public network access of target service with best try.
        /// Default is enable. If optOut, opt out public network access configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ActionType? Action { get; set; }
        /// <summary>
        /// Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.DeleteOrUpdateBehavior? DeleteOrUpdateBehavior { get; set; }
        /// <summary>
        /// Describe firewall rules of target service to make sure source application could connect to the target.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20221101Preview.IFirewallRules FirewallRule { get; set; }
        /// <summary>Allow Azure services to access the target service if true.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleAzureService { get; set; }
        /// <summary>
        /// Allow caller client IP to access the target service if true. the property is used when connecting local application to
        /// target service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.AllowType? FirewallRuleCallerClientIP { get; set; }
        /// <summary>
        /// This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client
        /// IPs for a given database account.
        /// </summary>
        string[] FirewallRuleIPRange { get; set; }

    }
}