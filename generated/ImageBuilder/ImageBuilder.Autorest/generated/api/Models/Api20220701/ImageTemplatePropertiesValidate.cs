// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Extensions;

    /// <summary>
    /// Configuration options and list of validations to be performed on the resulting image.
    /// </summary>
    public partial class ImageTemplatePropertiesValidate :
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplatePropertiesValidate,
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplatePropertiesValidateInternal
    {

        /// <summary>Backing field for <see cref="ContinueDistributeOnFailure" /> property.</summary>
        private bool? _continueDistributeOnFailure;

        /// <summary>
        /// If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior.
        /// If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with
        /// caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image
        /// run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        public bool? ContinueDistributeOnFailure { get => this._continueDistributeOnFailure; set => this._continueDistributeOnFailure = value; }

        /// <summary>Backing field for <see cref="InVMValidation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplateInVMValidator[] _inVMValidation;

        /// <summary>List of validations to be performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplateInVMValidator[] InVMValidation { get => this._inVMValidation; set => this._inVMValidation = value; }

        /// <summary>Backing field for <see cref="SourceValidationOnly" /> property.</summary>
        private bool? _sourceValidationOnly;

        /// <summary>
        /// If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build
        /// will be run to generate and then validate a customized image.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Origin(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.PropertyOrigin.Owned)]
        public bool? SourceValidationOnly { get => this._sourceValidationOnly; set => this._sourceValidationOnly = value; }

        /// <summary>Creates an new <see cref="ImageTemplatePropertiesValidate" /> instance.</summary>
        public ImageTemplatePropertiesValidate()
        {

        }
    }
    /// Configuration options and list of validations to be performed on the resulting image.
    public partial interface IImageTemplatePropertiesValidate :
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.IJsonSerializable
    {
        /// <summary>
        /// If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior.
        /// If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with
        /// caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image
        /// run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior. If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.]",
        SerializedName = @"continueDistributeOnFailure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContinueDistributeOnFailure { get; set; }
        /// <summary>List of validations to be performed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of validations to be performed.",
        SerializedName = @"inVMValidations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplateInVMValidator) })]
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplateInVMValidator[] InVMValidation { get; set; }
        /// <summary>
        /// If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build
        /// will be run to generate and then validate a customized image.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build will be run to generate and then validate a customized image.",
        SerializedName = @"sourceValidationOnly",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceValidationOnly { get; set; }

    }
    /// Configuration options and list of validations to be performed on the resulting image.
    internal partial interface IImageTemplatePropertiesValidateInternal

    {
        /// <summary>
        /// If validation fails and this field is set to false, output image(s) will not be distributed. This is the default behavior.
        /// If validation fails and this field is set to true, output image(s) will still be distributed. Please use this option with
        /// caution as it may result in bad images being distributed for use. In either case (true or false), the end to end image
        /// run will be reported as having failed in case of a validation failure. [Note: This field has no effect if validation succeeds.]
        /// </summary>
        bool? ContinueDistributeOnFailure { get; set; }
        /// <summary>List of validations to be performed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ImageBuilder.Models.Api20220701.IImageTemplateInVMValidator[] InVMValidation { get; set; }
        /// <summary>
        /// If this field is set to true, the image specified in the 'source' section will directly be validated. No separate build
        /// will be run to generate and then validate a customized image.
        /// </summary>
        bool? SourceValidationOnly { get; set; }

    }
}