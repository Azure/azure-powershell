// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Extensions;

    /// <summary>A site for the Direct Line channel</summary>
    public partial class DirectLineSite :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IDirectLineSite,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IDirectLineSiteInternal,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite __site = new Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Site();

        /// <summary>DirectLine application id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string AppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).AppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).AppId = value ?? null; }

        /// <summary>Entity Tag</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).ETag = value ?? null; }

        /// <summary>Site Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Id; }

        /// <summary>Whether this site is enabled for block user upload.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsBlockUserUploadEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsBlockUserUploadEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsBlockUserUploadEnabled = value ?? default(bool); }

        /// <summary>Whether this site is disabled detailed logging for</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsDetailedLoggingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsDetailedLoggingEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsDetailedLoggingEnabled = value ?? default(bool); }

        /// <summary>Whether this site is enabled for DirectLine channel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool IsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsEnabled = value ; }

        /// <summary>Whether this site is EndpointParameters enabled for channel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsEndpointParametersEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsEndpointParametersEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsEndpointParametersEnabled = value ?? default(bool); }

        /// <summary>Whether this no-storage site is disabled detailed logging for</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsNoStorageEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsNoStorageEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsNoStorageEnabled = value ?? default(bool); }

        /// <summary>Whether this site is enabled for authentication with Bot Framework.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsSecureSiteEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsSecureSiteEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsSecureSiteEnabled = value ?? default(bool); }

        /// <summary>Whether this site is token enabled for channel</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsTokenEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsTokenEnabled; }

        /// <summary>Whether this site is enabled for Bot Framework V1 protocol.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsV1Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsV1Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsV1Enabled = value ?? default(bool); }

        /// <summary>Whether this site is enabled for Bot Framework V1 protocol.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsV3Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsV3Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsV3Enabled = value ?? default(bool); }

        /// <summary>Whether this site is enabled for preview versions of Webchat</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public bool? IsWebchatPreviewEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsWebchatPreviewEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsWebchatPreviewEnabled = value ?? default(bool); }

        /// <summary>
        /// Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Key { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key; }

        /// <summary>
        /// Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Key2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key2; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Id = value; }

        /// <summary>Internal Acessors for IsTokenEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal.IsTokenEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsTokenEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).IsTokenEnabled = value; }

        /// <summary>Internal Acessors for Key</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal.Key { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key = value; }

        /// <summary>Internal Acessors for Key2</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal.Key2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key2; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Key2 = value; }

        /// <summary>Site name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).Name = value ; }

        /// <summary>
        /// List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Inherited)]
        public string[] TrustedOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).TrustedOrigin; set => ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal)__site).TrustedOrigin = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="DirectLineSite" /> instance.</summary>
        public DirectLineSite()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__site), __site);
            await eventListener.AssertObjectIsValid(nameof(__site), __site);
        }
    }
    /// A site for the Direct Line channel
    public partial interface IDirectLineSite :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite
    {

    }
    /// A site for the Direct Line channel
    internal partial interface IDirectLineSiteInternal :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISiteInternal
    {

    }
}