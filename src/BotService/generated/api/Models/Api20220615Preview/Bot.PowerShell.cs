// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.PowerShell;

    /// <summary>Bot resource definition</summary>
    [System.ComponentModel.TypeConverter(typeof(BotTypeConverter))]
    public partial class Bot
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Bot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Bot(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind.CreateFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EndpointVersion = (string) content.GetValueForProperty("EndpointVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EndpointVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AllSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AllSetting = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings) content.GetValueForProperty("AllSetting",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AllSetting, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesAllSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Parameter, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ManifestUrl = (string) content.GetValueForProperty("ManifestUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ManifestUrl, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppType = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType?) content.GetValueForProperty("MsaAppType",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppType, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType.CreateFrom);
            }
            if (content.Contains("MsaAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppId = (string) content.GetValueForProperty("MsaAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppTenantId = (string) content.GetValueForProperty("MsaAppTenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppMsiResourceId = (string) content.GetValueForProperty("MsaAppMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ConfiguredChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ConfiguredChannel = (string[]) content.GetValueForProperty("ConfiguredChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ConfiguredChannel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnabledChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EnabledChannel = (string[]) content.GetValueForProperty("EnabledChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EnabledChannel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DeveloperAppInsightKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightKey = (string) content.GetValueForProperty("DeveloperAppInsightKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApiKey = (string) content.GetValueForProperty("DeveloperAppInsightsApiKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApiKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApplicationId = (string) content.GetValueForProperty("DeveloperAppInsightsApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("LuisAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisAppId = (string[]) content.GetValueForProperty("LuisAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisAppId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LuisKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisKey = (string) content.GetValueForProperty("LuisKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsCmekEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsCmekEnabled = (bool?) content.GetValueForProperty("IsCmekEnabled",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsCmekEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CmekKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekKeyVaultUrl = (string) content.GetValueForProperty("CmekKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("CmekEncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekEncryptionStatus = (string) content.GetValueForProperty("CmekEncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekEncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("IsStreamingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsStreamingSupported = (bool?) content.GetValueForProperty("IsStreamingSupported",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsStreamingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsDeveloperAppInsightsApiKeySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsDeveloperAppInsightsApiKeySet = (bool?) content.GetValueForProperty("IsDeveloperAppInsightsApiKeySet",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsDeveloperAppInsightsApiKeySet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MigrationToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MigrationToken = (string) content.GetValueForProperty("MigrationToken",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MigrationToken, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SchemaTransformationVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).SchemaTransformationVersion = (string) content.GetValueForProperty("SchemaTransformationVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).SchemaTransformationVersion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).StorageResourceId = (string) content.GetValueForProperty("StorageResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).StorageResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OpenWithHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).OpenWithHint = (string) content.GetValueForProperty("OpenWithHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).OpenWithHint, global::System.Convert.ToString);
            }
            if (content.Contains("AppPasswordHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AppPasswordHint = (string) content.GetValueForProperty("AppPasswordHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AppPasswordHint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublishingCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublishingCredentials = (string) content.GetValueForProperty("PublishingCredentials",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublishingCredentials, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Bot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Bot(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind?) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.Kind.CreateFrom);
            }
            if (content.Contains("Etag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Etag = (string) content.GetValueForProperty("Etag",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Etag, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IResourceInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("IconUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IconUrl = (string) content.GetValueForProperty("IconUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IconUrl, global::System.Convert.ToString);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Endpoint = (string) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Endpoint, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EndpointVersion = (string) content.GetValueForProperty("EndpointVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EndpointVersion, global::System.Convert.ToString);
            }
            if (content.Contains("AllSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AllSetting = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesAllSettings) content.GetValueForProperty("AllSetting",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AllSetting, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesAllSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotPropertiesParameters) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).Parameter, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.BotPropertiesParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ManifestUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ManifestUrl = (string) content.GetValueForProperty("ManifestUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ManifestUrl, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppType = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType?) content.GetValueForProperty("MsaAppType",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppType, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.MsaAppType.CreateFrom);
            }
            if (content.Contains("MsaAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppId = (string) content.GetValueForProperty("MsaAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppTenantId = (string) content.GetValueForProperty("MsaAppTenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("MsaAppMsiResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppMsiResourceId = (string) content.GetValueForProperty("MsaAppMsiResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MsaAppMsiResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("ConfiguredChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ConfiguredChannel = (string[]) content.GetValueForProperty("ConfiguredChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ConfiguredChannel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("EnabledChannel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EnabledChannel = (string[]) content.GetValueForProperty("EnabledChannel",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).EnabledChannel, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("DeveloperAppInsightKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightKey = (string) content.GetValueForProperty("DeveloperAppInsightKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApiKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApiKey = (string) content.GetValueForProperty("DeveloperAppInsightsApiKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApiKey, global::System.Convert.ToString);
            }
            if (content.Contains("DeveloperAppInsightsApplicationId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApplicationId = (string) content.GetValueForProperty("DeveloperAppInsightsApplicationId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DeveloperAppInsightsApplicationId, global::System.Convert.ToString);
            }
            if (content.Contains("LuisAppId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisAppId = (string[]) content.GetValueForProperty("LuisAppId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisAppId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("LuisKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisKey = (string) content.GetValueForProperty("LuisKey",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).LuisKey, global::System.Convert.ToString);
            }
            if (content.Contains("IsCmekEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsCmekEnabled = (bool?) content.GetValueForProperty("IsCmekEnabled",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsCmekEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("CmekKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekKeyVaultUrl = (string) content.GetValueForProperty("CmekKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("CmekEncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekEncryptionStatus = (string) content.GetValueForProperty("CmekEncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).CmekEncryptionStatus, global::System.Convert.ToString);
            }
            if (content.Contains("TenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).TenantId = (string) content.GetValueForProperty("TenantId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).TenantId, global::System.Convert.ToString);
            }
            if (content.Contains("PublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess?) content.GetValueForProperty("PublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.BotService.Support.PublicNetworkAccess.CreateFrom);
            }
            if (content.Contains("IsStreamingSupported"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsStreamingSupported = (bool?) content.GetValueForProperty("IsStreamingSupported",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsStreamingSupported, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsDeveloperAppInsightsApiKeySet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsDeveloperAppInsightsApiKeySet = (bool?) content.GetValueForProperty("IsDeveloperAppInsightsApiKeySet",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).IsDeveloperAppInsightsApiKeySet, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MigrationToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MigrationToken = (string) content.GetValueForProperty("MigrationToken",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).MigrationToken, global::System.Convert.ToString);
            }
            if (content.Contains("DisableLocalAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisableLocalAuth = (bool?) content.GetValueForProperty("DisableLocalAuth",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).DisableLocalAuth, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SchemaTransformationVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).SchemaTransformationVersion = (string) content.GetValueForProperty("SchemaTransformationVersion",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).SchemaTransformationVersion, global::System.Convert.ToString);
            }
            if (content.Contains("StorageResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).StorageResourceId = (string) content.GetValueForProperty("StorageResourceId",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).StorageResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("OpenWithHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).OpenWithHint = (string) content.GetValueForProperty("OpenWithHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).OpenWithHint, global::System.Convert.ToString);
            }
            if (content.Contains("AppPasswordHint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AppPasswordHint = (string) content.GetValueForProperty("AppPasswordHint",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).AppPasswordHint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("PublishingCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublishingCredentials = (string) content.GetValueForProperty("PublishingCredentials",((Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBotInternal)this).PublishingCredentials, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Bot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Bot(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.Bot"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Bot(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Bot" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Bot" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IBot FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Bot resource definition
    [System.ComponentModel.TypeConverter(typeof(BotTypeConverter))]
    public partial interface IBot

    {

    }
}