// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Extensions;

    /// <summary>Channel settings definition</summary>
    public partial class ChannelSettings :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IChannelSettings,
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IChannelSettingsInternal
    {

        /// <summary>Backing field for <see cref="BotIconUrl" /> property.</summary>
        private string _botIconUrl;

        /// <summary>The bot icon url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string BotIconUrl { get => this._botIconUrl; set => this._botIconUrl = value; }

        /// <summary>Backing field for <see cref="BotId" /> property.</summary>
        private string _botId;

        /// <summary>The bot id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string BotId { get => this._botId; set => this._botId = value; }

        /// <summary>Backing field for <see cref="ChannelDisplayName" /> property.</summary>
        private string _channelDisplayName;

        /// <summary>The channel display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ChannelDisplayName { get => this._channelDisplayName; set => this._channelDisplayName = value; }

        /// <summary>Backing field for <see cref="ChannelId" /> property.</summary>
        private string _channelId;

        /// <summary>The channel id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ChannelId { get => this._channelId; set => this._channelId = value; }

        /// <summary>Backing field for <see cref="DisableLocalAuth" /> property.</summary>
        private bool? _disableLocalAuth;

        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? DisableLocalAuth { get => this._disableLocalAuth; set => this._disableLocalAuth = value; }

        /// <summary>Backing field for <see cref="ExtensionKey1" /> property.</summary>
        private string _extensionKey1;

        /// <summary>The extensionKey1</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ExtensionKey1 { get => this._extensionKey1; }

        /// <summary>Backing field for <see cref="ExtensionKey2" /> property.</summary>
        private string _extensionKey2;

        /// <summary>The extensionKey2</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public string ExtensionKey2 { get => this._extensionKey2; }

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>Whether this channel is enabled for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public bool? IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Internal Acessors for ExtensionKey1</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IChannelSettingsInternal.ExtensionKey1 { get => this._extensionKey1; set { {_extensionKey1 = value;} } }

        /// <summary>Internal Acessors for ExtensionKey2</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.IChannelSettingsInternal.ExtensionKey2 { get => this._extensionKey2; set { {_extensionKey2 = value;} } }

        /// <summary>Backing field for <see cref="Site" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite[] _site;

        /// <summary>The list of sites</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Origin(Microsoft.Azure.PowerShell.Cmdlets.BotService.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite[] Site { get => this._site; set => this._site = value; }

        /// <summary>Creates an new <see cref="ChannelSettings" /> instance.</summary>
        public ChannelSettings()
        {

        }
    }
    /// Channel settings definition
    public partial interface IChannelSettings :
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.IJsonSerializable
    {
        /// <summary>The bot icon url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bot icon url",
        SerializedName = @"botIconUrl",
        PossibleTypes = new [] { typeof(string) })]
        string BotIconUrl { get; set; }
        /// <summary>The bot id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The bot id",
        SerializedName = @"botId",
        PossibleTypes = new [] { typeof(string) })]
        string BotId { get; set; }
        /// <summary>The channel display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The channel display name",
        SerializedName = @"channelDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ChannelDisplayName { get; set; }
        /// <summary>The channel id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The channel id",
        SerializedName = @"channelId",
        PossibleTypes = new [] { typeof(string) })]
        string ChannelId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
        SerializedName = @"disableLocalAuth",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DisableLocalAuth { get; set; }
        /// <summary>The extensionKey1</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The extensionKey1",
        SerializedName = @"extensionKey1",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionKey1 { get;  }
        /// <summary>The extensionKey2</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The extensionKey2",
        SerializedName = @"extensionKey2",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionKey2 { get;  }
        /// <summary>Whether this channel is enabled for the bot</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether this channel is enabled for the bot",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get; set; }
        /// <summary>The list of sites</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BotService.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of sites",
        SerializedName = @"sites",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite) })]
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite[] Site { get; set; }

    }
    /// Channel settings definition
    internal partial interface IChannelSettingsInternal

    {
        /// <summary>The bot icon url</summary>
        string BotIconUrl { get; set; }
        /// <summary>The bot id</summary>
        string BotId { get; set; }
        /// <summary>The channel display name</summary>
        string ChannelDisplayName { get; set; }
        /// <summary>The channel id</summary>
        string ChannelId { get; set; }
        /// <summary>
        /// Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        /// </summary>
        bool? DisableLocalAuth { get; set; }
        /// <summary>The extensionKey1</summary>
        string ExtensionKey1 { get; set; }
        /// <summary>The extensionKey2</summary>
        string ExtensionKey2 { get; set; }
        /// <summary>Whether this channel is enabled for the bot</summary>
        bool? IsEnabled { get; set; }
        /// <summary>The list of sites</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BotService.Models.Api20220615Preview.ISite[] Site { get; set; }

    }
}