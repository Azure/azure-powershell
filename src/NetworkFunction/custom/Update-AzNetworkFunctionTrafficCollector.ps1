
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates or updates a Azure Traffic Collector resource
.Description
Creates or updates a Azure Traffic Collector resource
.Example
{{ Add code here }}
.Example
{{ Add code here }}
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Models.Api20221101.IAzureTrafficCollector
.Notes
COMPLEX PARAMETER PROPERTIES
To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.
COLLECTORPOLICY <ICollectorPolicy[]>: Collector Policies for Azure Traffic Collector.
  [Location <String>]: Resource location.
  [SystemDataCreatedAt <DateTime?>]: The timestamp of resource creation (UTC).
  [SystemDataCreatedBy <String>]: The identity that created the resource.
  [SystemDataCreatedByType <CreatedByType?>]: The type of identity that created the resource.
  [SystemDataLastModifiedBy <String>]: The identity that last modified the resource.
  [SystemDataLastModifiedByType <CreatedByType?>]: The type of identity that last modified the resource.
  [Tag <ITrackedResourceTags>]: Resource tags.
    [(Any) <String>]: This indicates any property can be added to this object.
  [EmissionPolicy <IEmissionPoliciesPropertiesFormat[]>]: Emission policies.
    [EmissionDestination <IEmissionPolicyDestination[]>]: Emission policy destinations.
      [DestinationType <DestinationType?>]: Emission destination type.
    [EmissionType <EmissionType?>]: Emission format type.
  [IngestionPolicyIngestionSource <IIngestionSourcesPropertiesFormat[]>]: Ingestion Sources.
    [ResourceId <String>]: Resource ID.
    [SourceType <SourceType?>]: Ingestion source type.
  [IngestionPolicyIngestionType <IngestionType?>]: The ingestion type.
#>
function Update-AzNetworkFunctionTrafficCollector {
  [OutputType([Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Models.Api20221101.IAzureTrafficCollector])]
  [CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
  param(
      [Parameter(Mandatory)]
      [Alias('AzureTrafficCollectorName')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Path')]
      [System.String]
      # Azure Traffic Collector name
      ${Name},
  
      [Parameter(Mandatory)]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Path')]
      [System.String]
      # The name of the resource group.
      ${ResourceGroupName},
  
      [Parameter()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Path')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
      [System.String]
      # Azure Subscription ID.
      ${SubscriptionId},
  
      [Parameter()]
      [AllowEmptyCollection()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Body')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Models.Api20221101.ICollectorPolicy[]]
      # Collector Policies for Azure Traffic Collector.
      # To construct, see NOTES section for COLLECTORPOLICY properties and create a hash table.
      ${CollectorPolicy},
  
      [Parameter(Mandatory)]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Body')]
      [System.String]
      # Resource location.
      ${Location},
  
      [Parameter()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Body')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Models.Api20221101.ITrackedResourceTags]))]
      [System.Collections.Hashtable]
      # Resource tags.
      ${Tag},
  
      [Parameter()]
      [Alias('AzureRMContext', 'AzureCredential')]
      [ValidateNotNull()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Azure')]
      [System.Management.Automation.PSObject]
      # The credentials, account, tenant, and subscription used for communication with Azure.
      ${DefaultProfile},
  
      [Parameter()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Management.Automation.SwitchParameter]
      # Run the command as a job
      ${AsJob},
  
      [Parameter(DontShow)]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Management.Automation.SwitchParameter]
      # Wait for .NET debugger to attach
      ${Break},
  
      [Parameter(DontShow)]
      [ValidateNotNull()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Runtime.SendAsyncStep[]]
      # SendAsync Pipeline Steps to be appended to the front of the pipeline
      ${HttpPipelineAppend},
  
      [Parameter(DontShow)]
      [ValidateNotNull()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Runtime.SendAsyncStep[]]
      # SendAsync Pipeline Steps to be prepended to the front of the pipeline
      ${HttpPipelinePrepend},
  
      [Parameter()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Management.Automation.SwitchParameter]
      # Run the command asynchronously
      ${NoWait},
  
      [Parameter(DontShow)]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Uri]
      # The URI for the proxy server to use
      ${Proxy},
  
      [Parameter(DontShow)]
      [ValidateNotNull()]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Management.Automation.PSCredential]
      # Credentials for a proxy server to use for the remote call
      ${ProxyCredential},
  
      [Parameter(DontShow)]
      [Microsoft.Azure.PowerShell.Cmdlets.NetworkFunction.Category('Runtime')]
      [System.Management.Automation.SwitchParameter]
      # Use the default credentials for the proxy
      ${ProxyUseDefaultCredentials}
  )
  
  process {
    try {
      # 1. GET
      $hasCollectorPolicy = $PSBoundParameters.Remove('CollectorPolicy')
      $hasTag = $PSBoundParameters.Remove('Tag')
      $hasAsJob = $PSBoundParameters.Remove('AsJob')
      $null = $PSBoundParameters.Remove('WhatIf')
      $null = $PSBoundParameters.Remove('Confirm')
      $null = $PSBoundParameters.Remove('Location')

      $atc = Get-AzNetworkFunctionTrafficCollector @PSBoundParameters

      # 2. PUT
      $null = $PSBoundParameters.Remove('ResourceGroupName')
      $null = $PSBoundParameters.Remove('Name')
      $null = $PSBoundParameters.Remove('SubscriptionId')

      if ($hasCollectorPolicy) {
        $atc.CollectorPolicy = $CollectorPolicy
      }
      if ($hasTag) {
        $atc.Tag = $Tag
      }
      if ($hasAsJob) {
        $PSBoundParameters.Add('AsJob', $true)
      }
        
      Az.NetworkFunction.private\New-AzNetworkFunctionTrafficCollector_CreateViaIdentity -InputObject $atc -Parameter $atc @PSBoundParameters
    } catch {
        throw
    }
    }
  }