// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Extensions;

    /// <summary>Properties of NSP LinkReference resource.</summary>
    public partial class NspLinkReferenceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferenceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>
        /// A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto
        /// Approved'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string Description { get => this._description; }

        /// <summary>Backing field for <see cref="LocalInboundProfile" /> property.</summary>
        private System.Collections.Generic.List<string> _localInboundProfile;

        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> LocalInboundProfile { get => this._localInboundProfile; set => this._localInboundProfile = value; }

        /// <summary>Backing field for <see cref="LocalOutboundProfile" /> property.</summary>
        private System.Collections.Generic.List<string> _localOutboundProfile;

        /// <summary>
        /// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value
        /// is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> LocalOutboundProfile { get => this._localOutboundProfile; }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.Description { get => this._description; set { {_description = value;} } }

        /// <summary>Internal Acessors for LocalOutboundProfile</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.LocalOutboundProfile { get => this._localOutboundProfile; set { {_localOutboundProfile = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RemoteInboundProfile</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.RemoteInboundProfile { get => this._remoteInboundProfile; set { {_remoteInboundProfile = value;} } }

        /// <summary>Internal Acessors for RemoteOutboundProfile</summary>
        System.Collections.Generic.List<string> Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.RemoteOutboundProfile { get => this._remoteOutboundProfile; set { {_remoteOutboundProfile = value;} } }

        /// <summary>Internal Acessors for RemotePerimeterGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.RemotePerimeterGuid { get => this._remotePerimeterGuid; set { {_remotePerimeterGuid = value;} } }

        /// <summary>Internal Acessors for RemotePerimeterLocation</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.RemotePerimeterLocation { get => this._remotePerimeterLocation; set { {_remotePerimeterLocation = value;} } }

        /// <summary>Internal Acessors for RemotePerimeterResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Models.INspLinkReferencePropertiesInternal.RemotePerimeterResourceId { get => this._remotePerimeterResourceId; set { {_remotePerimeterResourceId = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state of the NSP LinkReference resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RemoteInboundProfile" /> property.</summary>
        private System.Collections.Generic.List<string> _remoteInboundProfile;

        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote
        /// perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> RemoteInboundProfile { get => this._remoteInboundProfile; }

        /// <summary>Backing field for <see cref="RemoteOutboundProfile" /> property.</summary>
        private System.Collections.Generic.List<string> _remoteOutboundProfile;

        /// <summary>
        /// Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles
        /// at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> RemoteOutboundProfile { get => this._remoteOutboundProfile; }

        /// <summary>Backing field for <see cref="RemotePerimeterGuid" /> property.</summary>
        private string _remotePerimeterGuid;

        /// <summary>Remote NSP Guid with which the link is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string RemotePerimeterGuid { get => this._remotePerimeterGuid; }

        /// <summary>Backing field for <see cref="RemotePerimeterLocation" /> property.</summary>
        private string _remotePerimeterLocation;

        /// <summary>Remote NSP location with which the link gets created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string RemotePerimeterLocation { get => this._remotePerimeterLocation; }

        /// <summary>Backing field for <see cref="RemotePerimeterResourceId" /> property.</summary>
        private string _remotePerimeterResourceId;

        /// <summary>Perimeter ARM Id for the remote NSP with which the link is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string RemotePerimeterResourceId { get => this._remotePerimeterResourceId; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>
        /// The NSP linkReference state. It cannot be changed if link is created in auto-approval mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Origin(Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="NspLinkReferenceProperties" /> instance.</summary>
        public NspLinkReferenceProperties()
        {

        }
    }
    /// Properties of NSP LinkReference resource.
    public partial interface INspLinkReferenceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.IJsonSerializable
    {
        /// <summary>
        /// A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto
        /// Approved'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto Approved'.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get;  }
        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.",
        SerializedName = @"localInboundProfiles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LocalInboundProfile { get; set; }
        /// <summary>
        /// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value
        /// is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.",
        SerializedName = @"localOutboundProfiles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> LocalOutboundProfile { get;  }
        /// <summary>The provisioning state of the NSP LinkReference resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The provisioning state of the NSP LinkReference resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed", "WaitForRemoteCompletion")]
        string ProvisioningState { get;  }
        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote
        /// perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter.",
        SerializedName = @"remoteInboundProfiles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RemoteInboundProfile { get;  }
        /// <summary>
        /// Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles
        /// at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter.",
        SerializedName = @"remoteOutboundProfiles",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> RemoteOutboundProfile { get;  }
        /// <summary>Remote NSP Guid with which the link is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Remote NSP Guid with which the link is created.",
        SerializedName = @"remotePerimeterGuid",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePerimeterGuid { get;  }
        /// <summary>Remote NSP location with which the link gets created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Remote NSP location with which the link gets created.",
        SerializedName = @"remotePerimeterLocation",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePerimeterLocation { get;  }
        /// <summary>Perimeter ARM Id for the remote NSP with which the link is created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Perimeter ARM Id for the remote NSP with which the link is created.",
        SerializedName = @"remotePerimeterResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RemotePerimeterResourceId { get;  }
        /// <summary>
        /// The NSP linkReference state. It cannot be changed if link is created in auto-approval mode.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The NSP linkReference state. It cannot be changed if link is created in auto-approval mode.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Approved", "Pending", "Rejected", "Disconnected")]
        string Status { get; set; }

    }
    /// Properties of NSP LinkReference resource.
    internal partial interface INspLinkReferencePropertiesInternal

    {
        /// <summary>
        /// A message sent by the remote NSP link admin for connection request. In case of Auto-approved flow, it is default to 'Auto
        /// Approved'.
        /// </summary>
        string Description { get; set; }
        /// <summary>
        /// Local Inbound profile names to which Inbound is allowed. Use ['*'] to allow inbound to all profiles.
        /// </summary>
        System.Collections.Generic.List<string> LocalInboundProfile { get; set; }
        /// <summary>
        /// Local Outbound profile names from which Outbound is allowed. In current version, it is readonly property and it's value
        /// is set to ['*'] to allow outbound from all profiles. In later version, user will be able to modify it.
        /// </summary>
        System.Collections.Generic.List<string> LocalOutboundProfile { get; set; }
        /// <summary>The provisioning state of the NSP LinkReference resource.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Succeeded", "Creating", "Updating", "Deleting", "Accepted", "Failed", "WaitForRemoteCompletion")]
        string ProvisioningState { get; set; }
        /// <summary>
        /// Remote Inbound profile names to which Inbound is allowed. ['*'] value implies inbound is allowed to all profiles at remote
        /// perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        System.Collections.Generic.List<string> RemoteInboundProfile { get; set; }
        /// <summary>
        /// Remote Outbound profile names from which Outbound is allowed. ['*'] value implies outbound is allowed from all profiles
        /// at remote perimeter. This property can only be updated from corresponding link resource present in remote perimeter.
        /// </summary>
        System.Collections.Generic.List<string> RemoteOutboundProfile { get; set; }
        /// <summary>Remote NSP Guid with which the link is created.</summary>
        string RemotePerimeterGuid { get; set; }
        /// <summary>Remote NSP location with which the link gets created.</summary>
        string RemotePerimeterLocation { get; set; }
        /// <summary>Perimeter ARM Id for the remote NSP with which the link is created.</summary>
        string RemotePerimeterResourceId { get; set; }
        /// <summary>
        /// The NSP linkReference state. It cannot be changed if link is created in auto-approval mode.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.NetworkSecurityPerimeter.PSArgumentCompleterAttribute("Approved", "Pending", "Rejected", "Disconnected")]
        string Status { get; set; }

    }
}