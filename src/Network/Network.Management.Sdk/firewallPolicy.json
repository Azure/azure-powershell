{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2024-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}": {
      "delete": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_Delete",
        "description": "Deletes the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Firewall Policy": {
            "$ref": "./examples/FirewallPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_Get",
        "description": "Gets the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_CreateOrUpdate",
        "description": "Creates or updates the specified Firewall Policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            },
            "description": "Parameters supplied to the create or update Firewall Policy operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_UpdateTags",
        "description": "Updates tags of a Azure Firewall Policy resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update Azure Firewall Policy tags."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicy"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update FirewallPolicy Tags": {
            "$ref": "./examples/FirewallPolicyPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies": {
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_List",
        "description": "Lists all Firewall Policies in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicy resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Firewall Policies for a given resource group": {
            "$ref": "./examples/FirewallPolicyListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/firewallPolicies": {
      "get": {
        "tags": [
          "FirewallPolicies"
        ],
        "operationId": "FirewallPolicies_ListAll",
        "description": "Gets all the Firewall Policies in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicy resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Firewall Policies for a given subscription": {
            "$ref": "./examples/FirewallPolicyListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}": {
      "delete": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_Delete",
        "description": "Deletes the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete FirewallPolicyRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_Get",
        "description": "Gets the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get FirewallPolicyRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupGet.json"
          },
          "Get FirewallPolicyRuleCollectionGroup With IpGroups": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsGet.json"
          },
          "Get FirewallPolicyNatRuleCollectionGroup": {
            "$ref": "./examples/FirewallPolicyNatRuleCollectionGroupGet.json"
          },
          "Get FirewallPolicyRuleCollectionGroup With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_CreateOrUpdate",
        "description": "Creates or updates the specified FirewallPolicyRuleCollectionGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            },
            "description": "Parameters supplied to the create or update FirewallPolicyRuleCollectionGroup operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request received successfully. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "200": {
            "description": "Request successful. The operation returns the resulting FirewallPolicyRuleCollectionGroup resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Firewall Policy Rule Collection Group": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupPut.json"
          },
          "Create Firewall Policy Rule Collection Group With IP Groups": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsPut.json"
          },
          "Create Firewall Policy Nat Rule Collection Group": {
            "$ref": "./examples/FirewallPolicyNatRuleCollectionGroupPut.json"
          },
          "Create Firewall Policy Rule Collection Group With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesPut.json"
          },
          "Create Firewall Policy Rule Collection Group With http header to insert": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithHttpHeadersToInsert.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups": {
      "get": {
        "tags": [
          "FirewallPolicyRuleCollectionGroups"
        ],
        "operationId": "FirewallPolicyRuleCollectionGroups_List",
        "description": "Lists all FirewallPolicyRuleCollectionGroups in a FirewallPolicy resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of FirewallPolicyRuleCollectionGroup resources.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all FirewallPolicyRuleCollectionGroups for a given FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupList.json"
          },
          "List all FirewallPolicyRuleCollectionGroups with IpGroups for a given FirewallPolicy": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithIpGroupsList.json"
          },
          "List all FirewallPolicyRuleCollectionGroup With Web Categories": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupWithWebCategoriesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsSignatures": {
      "post": {
        "operationId": "FirewallPolicyIdpsSignatures_List",
        "description": "Retrieves the current status of IDPS signatures for the relevant policy. Maximal amount of returned signatures is 1000.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IDPSQueryObject"
            }
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns an IDPS Query Response",
            "schema": {
              "$ref": "#/definitions/QueryResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "query signature overrides": {
            "$ref": "./examples/FirewallPolicyQuerySignatureOverrides.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default": {
      "patch": {
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Patch",
        "description": "Will update the status of policy's signature overrides for IDPS",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "Will contain all properties of the object to put",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "patch signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesPatch.json"
          }
        }
      },
      "put": {
        "description": "Will override/create a new signature overrides for the policy's IDPS",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Put",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "description": "Will contain all properties of the object to put",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describes the new state of the signature overrides after the PUT operation",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "put signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesPut.json"
          }
        }
      },
      "get": {
        "description": "Returns all signatures overrides for a specific policy.",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object",
            "schema": {
              "$ref": "#/definitions/SignaturesOverrides"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/listIdpsFilterOptions": {
      "post": {
        "operationId": "FirewallPolicyIdpsSignaturesFilterValues_List",
        "description": "Retrieves the current filter values for the signatures overrides",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignatureOverridesFilterValuesQuery"
            }
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all valid filter values for the requested column",
            "schema": {
              "$ref": "#/definitions/SignatureOverridesFilterValuesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "query signature overrides": {
            "$ref": "./examples/FirewallPolicyQuerySignatureOverridesFilterValues.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides": {
      "get": {
        "description": "Returns all signatures overrides objects for a specific policy as a list containing a single value.",
        "operationId": "FirewallPolicyIdpsSignaturesOverrides_List",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Will return the policy current signature overrides object inside a list",
            "schema": {
              "$ref": "#/definitions/SignaturesOverridesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get signature overrides": {
            "$ref": "./examples/FirewallPolicySignatureOverridesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default": {
      "put": {
        "description": "Create or update a draft Firewall Policy.",
        "operationId": "FirewallPolicyDrafts_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            },
            "description": "Parameters supplied to the create or update Firewall Policy Draft operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create or update firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftPut.json"
          }
        }
      },
      "delete": {
        "description": "Delete a draft policy.",
        "operationId": "FirewallPolicyDrafts_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Firewall Draft Policy"
          },
          "204": {
            "description": "Firewall Policy Draft not found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftDelete.json"
          }
        }
      },
      "get": {
        "description": "Get a draft Firewall Policy.",
        "operationId": "FirewallPolicyDrafts_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/deploy": {
      "post": {
        "description": "Deploys the firewall policy draft and child rule collection group drafts.",
        "operationId": "FirewallPolicyDeployments_Deploy",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL to get the status of the operation."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "URL to get the status of the operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "deploy firewall policy draft": {
            "$ref": "./examples/FirewallPolicyDraftDeploy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}/ruleCollectionGroupDrafts/default": {
      "delete": {
        "description": "Delete Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted Rule Collection Group Draft"
          },
          "204": {
            "description": "Firewall Policy Rule Collection Group Draft not found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "delete firewall rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftDelete.json"
          }
        }
      },
      "put": {
        "description": "Create or Update Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            },
            "description": "Parameters supplied to the create or update FirewallPolicyRuleCollectionGroup operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "201": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "create or update rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftPut.json"
          }
        }
      },
      "get": {
        "description": "Get Rule Collection Group Draft.",
        "operationId": "FirewallPolicyRuleCollectionGroupDrafts_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "firewallPolicyName",
            "in": "path",
            "required": true,
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "type": "string",
            "description": "The name of the Firewall Policy."
          },
          {
            "name": "ruleCollectionGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
            "description": "The name of the FirewallPolicyRuleCollectionGroup."
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a Firewall Policy Rule Collection Group Draft resource.",
            "schema": {
              "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraft"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "get rule collection group draft": {
            "$ref": "./examples/FirewallPolicyRuleCollectionGroupDraftGet.json"
          }
        }
      }
    }
  },
  "definitions": {
    "FirewallPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyPropertiesFormat",
          "description": "Properties of the firewall policy."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the firewall policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "FirewallPolicy Resource."
    },
    "FirewallPolicyPropertiesFormat": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyPropertiesFormat in MB. (ex 0.5MB)"
        },
        "ruleCollectionGroups": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to FirewallPolicyRuleCollectionGroups.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall policy resource."
        },
        "basePolicy": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The parent firewall policy from which rules are inherited."
        },
        "firewalls": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Azure Firewalls that this Firewall Policy is associated with.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "childPolicies": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Child Firewall Policies.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "threatIntelMode": {
          "description": "The operation mode for Threat Intelligence.",
          "$ref": "./azureFirewall.json#/definitions/AzureFirewallThreatIntelMode"
        },
        "threatIntelWhitelist": {
          "description": "ThreatIntel Whitelist for Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyThreatIntelWhitelist"
        },
        "insights": {
          "description": "Insights on Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyInsights"
        },
        "snat": {
          "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
          "$ref": "#/definitions/FirewallPolicySNAT"
        },
        "sql": {
          "description": "SQL Settings definition.",
          "$ref": "#/definitions/FirewallPolicySQL"
        },
        "dnsSettings": {
          "description": "DNS Proxy Settings definition.",
          "$ref": "#/definitions/DnsSettings"
        },
        "explicitProxy": {
          "description": "Explicit Proxy Settings definition.",
          "$ref": "#/definitions/ExplicitProxy"
        },
        "intrusionDetection": {
          "description": "The configuration for Intrusion detection.",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetection"
        },
        "transportSecurity": {
          "description": "TLS Configuration definition.",
          "$ref": "#/definitions/FirewallPolicyTransportSecurity"
        },
        "sku": {
          "description": "The Firewall Policy SKU.",
          "$ref": "#/definitions/FirewallPolicySku"
        }
      },
      "description": "Firewall Policy definition."
    },
    "FirewallPolicyDraft": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyDraftProperties",
          "description": "Properties of the firewall policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "FirewallPolicy Resource."
    },
    "FirewallPolicyDraftProperties": {
      "type": "object",
      "properties": {
        "basePolicy": {
          "readOnly": false,
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The parent firewall policy from which rules are inherited."
        },
        "threatIntelMode": {
          "description": "The operation mode for Threat Intelligence.",
          "$ref": "./azureFirewall.json#/definitions/AzureFirewallThreatIntelMode"
        },
        "threatIntelWhitelist": {
          "description": "ThreatIntel Whitelist for Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyThreatIntelWhitelist"
        },
        "insights": {
          "description": "Insights on Firewall Policy.",
          "$ref": "#/definitions/FirewallPolicyInsights"
        },
        "snat": {
          "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
          "$ref": "#/definitions/FirewallPolicySNAT"
        },
        "sql": {
          "description": "SQL Settings definition.",
          "$ref": "#/definitions/FirewallPolicySQL"
        },
        "dnsSettings": {
          "description": "DNS Proxy Settings definition.",
          "$ref": "#/definitions/DnsSettings"
        },
        "explicitProxy": {
          "description": "Explicit Proxy Settings definition.",
          "$ref": "#/definitions/ExplicitProxy"
        },
        "intrusionDetection": {
          "description": "The configuration for Intrusion detection.",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetection"
        }
      }
    },
    "FirewallPolicyRuleCollectionGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupProperties",
          "description": "The properties of the firewall policy rule collection group."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Rule Group type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rule Collection Group resource."
    },
    "FirewallPolicyRuleCollectionGroupDraft": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FirewallPolicyRuleCollectionGroupDraftProperties",
          "description": "The properties of the firewall policy rule collection group."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Rule Group type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rule Collection Group resource."
    },
    "FirewallPolicyRuleCollectionGroupProperties": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection Group resource."
        },
        "ruleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollection"
          },
          "description": "Group of Firewall Policy rule collections.",
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall policy rule collection group resource."
        }
      },
      "description": "Properties of the rule collection group."
    },
    "FirewallPolicyRuleCollectionGroupDraftProperties": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "readOnly": true,
          "description": "A read-only string that represents the size of the FirewallPolicyRuleCollectionGroupProperties in MB. (ex 1.2MB)"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection Group resource."
        },
        "ruleCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollection"
          },
          "description": "Group of Firewall Policy rule collections.",
          "x-ms-identifiers": []
        }
      },
      "description": "Properties of the rule collection group draft."
    },
    "FirewallPolicyRuleCollection": {
      "type": "object",
      "description": "Properties of the rule collection.",
      "discriminator": "ruleCollectionType",
      "required": [
        "ruleCollectionType"
      ],
      "properties": {
        "ruleCollectionType": {
          "type": "string",
          "description": "The type of the rule collection.",
          "enum": [
            "FirewallPolicyNatRuleCollection",
            "FirewallPolicyFilterRuleCollection"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyRuleCollectionType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the rule collection."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "maximum": 65000,
          "exclusiveMaximum": false,
          "minimum": 100,
          "exclusiveMinimum": false,
          "description": "Priority of the Firewall Policy Rule Collection resource."
        }
      }
    },
    "FirewallPolicyNatRuleCollection": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FirewallPolicyNatRuleCollectionAction",
          "description": "The action type of a Nat rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRule"
          },
          "description": "List of rules included in a rule collection.",
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRuleCollection"
        }
      ],
      "x-ms-discriminator-value": "FirewallPolicyNatRuleCollection",
      "description": "Firewall Policy NAT Rule Collection."
    },
    "FirewallPolicyFilterRuleCollection": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/FirewallPolicyFilterRuleCollectionAction",
          "description": "The action type of a Filter rule collection."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRule"
          },
          "description": "List of rules included in a rule collection.",
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRuleCollection"
        }
      ],
      "x-ms-discriminator-value": "FirewallPolicyFilterRuleCollection",
      "description": "Firewall Policy Filter Rule Collection."
    },
    "FirewallPolicyRule": {
      "type": "object",
      "description": "Properties of a rule.",
      "discriminator": "ruleType",
      "required": [
        "ruleType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "ruleType": {
          "type": "string",
          "description": "Rule Type.",
          "enum": [
            "ApplicationRule",
            "NetworkRule",
            "NatRule"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyRuleType",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationRule": {
      "type": "object",
      "x-ms-discriminator-value": "ApplicationRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "protocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleApplicationProtocol"
          },
          "x-ms-identifiers": [],
          "description": "Array of Application Protocols."
        },
        "targetFqdns": {
          "type": "array",
          "description": "List of FQDNs for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "targetUrls": {
          "type": "array",
          "description": "List of Urls for this rule condition.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "fqdnTags": {
          "type": "array",
          "description": "List of FQDN Tags for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "terminateTLS": {
          "type": "boolean",
          "description": "Terminate TLS connections for this rule."
        },
        "webCategories": {
          "type": "array",
          "description": "List of destination azure web categories.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "httpHeadersToInsert": {
          "type": "array",
          "description": "List of HTTP/S headers to insert.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyHttpHeaderToInsert"
          },
          "x-ms-identifiers": []
        }
      },
      "description": "Rule of type application."
    },
    "NatRule": {
      "type": "object",
      "description": "Rule of type nat.",
      "x-ms-discriminator-value": "NatRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "ipProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleNetworkProtocol"
          },
          "description": "Array of FirewallPolicyRuleNetworkProtocols."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "translatedAddress": {
          "type": "string",
          "description": "The translated address for this NAT rule."
        },
        "translatedPort": {
          "type": "string",
          "description": "The translated port for this NAT rule."
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "translatedFqdn": {
          "type": "string",
          "description": "The translated FQDN for this NAT rule."
        }
      }
    },
    "NetworkRule": {
      "type": "object",
      "description": "Rule of type network.",
      "x-ms-discriminator-value": "NetworkRule",
      "allOf": [
        {
          "$ref": "#/definitions/FirewallPolicyRule"
        }
      ],
      "properties": {
        "ipProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleNetworkProtocol"
          },
          "description": "Array of FirewallPolicyRuleNetworkProtocols."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or Service Tags.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationIpGroups": {
          "type": "array",
          "description": "List of destination IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationFqdns": {
          "type": "array",
          "description": "List of destination FQDNs.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyRuleApplicationProtocol": {
      "type": "object",
      "properties": {
        "protocolType": {
          "description": "Protocol type.",
          "$ref": "#/definitions/FirewallPolicyRuleApplicationProtocolType"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for the protocol, cannot be greater than 64000."
        }
      },
      "description": "Properties of the application rule protocol."
    },
    "FirewallPolicyRuleApplicationProtocolType": {
      "type": "string",
      "description": "The application protocol type of a Rule.",
      "enum": [
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyRuleApplicationProtocolType",
        "modelAsString": true
      }
    },
    "FirewallPolicyNatRuleCollectionActionType": {
      "type": "string",
      "description": "The action type of a rule.",
      "enum": [
        "DNAT"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyNatRuleCollectionActionType",
        "modelAsString": true
      }
    },
    "FirewallPolicyNatRuleCollectionAction": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/FirewallPolicyNatRuleCollectionActionType"
        }
      },
      "description": "Properties of the FirewallPolicyNatRuleCollectionAction."
    },
    "FirewallPolicyFilterRuleCollectionActionType": {
      "type": "string",
      "description": "The action type of a rule.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyFilterRuleCollectionActionType",
        "modelAsString": true
      }
    },
    "FirewallPolicyFilterRuleCollectionAction": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of action.",
          "$ref": "#/definitions/FirewallPolicyFilterRuleCollectionActionType"
        }
      },
      "description": "Properties of the FirewallPolicyFilterRuleCollectionAction."
    },
    "FirewallPolicyRuleNetworkProtocol": {
      "type": "string",
      "description": "The Network protocol of a Rule.",
      "enum": [
        "TCP",
        "UDP",
        "Any",
        "ICMP"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyRuleNetworkProtocol",
        "modelAsString": true
      }
    },
    "FirewallPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicy"
          },
          "description": "List of Firewall Policies in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListFirewallPolicies API service call."
    },
    "FirewallPolicyRuleCollectionGroupListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallPolicyRuleCollectionGroup"
          },
          "description": "List of FirewallPolicyRuleCollectionGroups in a FirewallPolicy."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListFirewallPolicyRuleCollectionGroups API service call."
    },
    "FirewallPolicyThreatIntelWhitelist": {
      "type": "object",
      "description": "ThreatIntel Whitelist for Firewall Policy.",
      "properties": {
        "ipAddresses": {
          "type": "array",
          "description": "List of IP addresses for the ThreatIntel Whitelist.",
          "items": {
            "type": "string"
          }
        },
        "fqdns": {
          "type": "array",
          "description": "List of FQDNs for the ThreatIntel Whitelist.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyInsights": {
      "type": "object",
      "description": "Firewall Policy Insights.",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "A flag to indicate if the insights are enabled on the policy."
        },
        "retentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Number of days the insights should be enabled on the policy."
        },
        "logAnalyticsResources": {
          "description": "Workspaces needed to configure the Firewall Policy Insights.",
          "$ref": "#/definitions/FirewallPolicyLogAnalyticsResources"
        }
      }
    },
    "FirewallPolicySNAT": {
      "type": "object",
      "description": "The private IP addresses/IP ranges to which traffic will not be SNAT.",
      "properties": {
        "privateRanges": {
          "type": "array",
          "description": "List of private IP addresses/IP address ranges to not be SNAT.",
          "items": {
            "type": "string"
          }
        },
        "autoLearnPrivateRanges": {
          "type": "string",
          "description": "The operation mode for automatically learning private ranges to not be SNAT",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AutoLearnPrivateRangesMode",
            "modelAsString": true
          }
        }
      }
    },
    "FirewallPolicySQL": {
      "type": "object",
      "description": "SQL Settings in Firewall Policy.",
      "properties": {
        "allowSqlRedirect": {
          "type": "boolean",
          "description": "A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999."
        }
      }
    },
    "DnsSettings": {
      "type": "object",
      "description": "DNS Proxy Settings in Firewall Policy.",
      "properties": {
        "servers": {
          "type": "array",
          "description": "List of Custom DNS Servers.",
          "items": {
            "type": "string"
          }
        },
        "enableProxy": {
          "type": "boolean",
          "description": "Enable DNS Proxy on Firewalls attached to the Firewall Policy."
        },
        "requireProxyForNetworkRules": {
          "type": "boolean",
          "description": "FQDNs in Network Rules are supported when set to true.",
          "x-nullable": true
        }
      }
    },
    "ExplicitProxy": {
      "description": "Explicit Proxy Settings in Firewall Policy.",
      "type": "object",
      "properties": {
        "enableExplicitProxy": {
          "type": "boolean",
          "description": "When set to true, explicit proxy mode is enabled.",
          "x-nullable": true
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for explicit proxy http protocol, cannot be greater than 64000."
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for explicit proxy https protocol, cannot be greater than 64000."
        },
        "enablePacFile": {
          "type": "boolean",
          "description": "When set to true, pac file port and url needs to be provided.",
          "x-nullable": true
        },
        "pacFilePort": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Port number for firewall to serve PAC file."
        },
        "pacFile": {
          "type": "string",
          "description": "SAS URL for PAC file."
        }
      }
    },
    "FirewallPolicyIntrusionDetection": {
      "type": "object",
      "description": "Configuration for intrusion detection mode and rules.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionStateOptions",
          "description": "Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two."
        },
        "profile": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionProfileOptions",
          "description": "IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy."
        },
        "configuration": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionConfiguration",
          "description": "Intrusion detection configuration properties."
        }
      }
    },
    "FirewallPolicyIntrusionDetectionStateOptions": {
      "type": "string",
      "description": "Possible state values.",
      "enum": [
        "Off",
        "Alert",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionStateType",
        "modelAsString": true
      }
    },
    "FirewallPolicyIntrusionDetectionProfileOptions": {
      "type": "string",
      "description": "Possible Intrusion Detection profile values.",
      "enum": [
        "Basic",
        "Standard",
        "Advanced",
        "Extended"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionProfileType",
        "modelAsString": true
      }
    },
    "FirewallPolicyIntrusionDetectionConfiguration": {
      "type": "object",
      "description": "The operation for configuring intrusion detection.",
      "properties": {
        "signatureOverrides": {
          "type": "array",
          "description": "List of specific signatures states.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyIntrusionDetectionSignatureSpecification"
          }
        },
        "bypassTrafficSettings": {
          "type": "array",
          "description": "List of rules for traffic to bypass.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyIntrusionDetectionBypassTrafficSpecifications"
          },
          "x-ms-identifiers": []
        },
        "privateRanges": {
          "type": "array",
          "description": "IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FirewallPolicyIntrusionDetectionSignatureSpecification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Signature id."
        },
        "mode": {
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionStateOptions",
          "description": "The signature state."
        }
      },
      "description": "Intrusion detection signatures specification states."
    },
    "FirewallPolicyIntrusionDetectionBypassTrafficSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the bypass traffic rule."
        },
        "description": {
          "type": "string",
          "description": "Description of the bypass traffic rule."
        },
        "protocol": {
          "type": "string",
          "$ref": "#/definitions/FirewallPolicyIntrusionDetectionBypassTrafficProtocol",
          "description": "The rule bypass protocol."
        },
        "sourceAddresses": {
          "type": "array",
          "description": "List of source IP addresses or ranges for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddresses": {
          "type": "array",
          "description": "List of destination IP addresses or ranges for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationPorts": {
          "type": "array",
          "description": "List of destination ports or ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourceIpGroups": {
          "type": "array",
          "description": "List of source IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        },
        "destinationIpGroups": {
          "type": "array",
          "description": "List of destination IpGroups for this rule.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Intrusion detection bypass traffic specification."
    },
    "FirewallPolicyIntrusionDetectionBypassTrafficProtocol": {
      "type": "string",
      "description": "Possible intrusion detection bypass traffic protocols.",
      "enum": [
        "TCP",
        "UDP",
        "ICMP",
        "ANY"
      ],
      "x-ms-enum": {
        "name": "FirewallPolicyIntrusionDetectionProtocol",
        "modelAsString": true
      }
    },
    "FirewallPolicyTransportSecurity": {
      "type": "object",
      "properties": {
        "certificateAuthority": {
          "$ref": "#/definitions/FirewallPolicyCertificateAuthority",
          "description": "The CA used for intermediate CA generation."
        }
      },
      "description": "Configuration needed to perform TLS termination & initiation."
    },
    "FirewallPolicyCertificateAuthority": {
      "type": "object",
      "properties": {
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "name": {
          "type": "string",
          "description": "Name of the CA certificate."
        }
      },
      "description": "Trusted Root certificates properties for tls."
    },
    "FirewallPolicySku": {
      "type": "object",
      "properties": {
        "tier": {
          "type": "string",
          "description": "Tier of Firewall Policy.",
          "enum": [
            "Standard",
            "Premium",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicySkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of Firewall policy."
    },
    "FirewallPolicyLogAnalyticsResources": {
      "type": "object",
      "description": "Log Analytics Resources for Firewall Policy Insights.",
      "properties": {
        "workspaces": {
          "type": "array",
          "description": "List of workspaces for Firewall Policy Insights.",
          "items": {
            "$ref": "#/definitions/FirewallPolicyLogAnalyticsWorkspace"
          },
          "x-ms-identifiers": []
        },
        "defaultWorkspaceId": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The default workspace Id for Firewall Policy Insights."
        }
      }
    },
    "FirewallPolicyLogAnalyticsWorkspace": {
      "type": "object",
      "description": "Log Analytics Workspace for Firewall Policy Insights.",
      "properties": {
        "region": {
          "type": "string",
          "description": "Region to configure the Workspace."
        },
        "workspaceId": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The workspace Id for Firewall Policy Insights."
        }
      }
    },
    "IDPSQueryObject": {
      "description": "Will describe the query to run against the IDPS signatures DB",
      "type": "object",
      "properties": {
        "filters": {
          "type": "object",
          "description": "Contain all filters names and values",
          "$ref": "#/definitions/Filters"
        },
        "search": {
          "type": "string",
          "description": "Search term in all columns"
        },
        "orderBy": {
          "type": "object",
          "$ref": "#/definitions/OrderBy",
          "description": "Column to sort response by"
        },
        "resultsPerPage": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000,
          "description": "The number of the results to return in each page"
        },
        "skip": {
          "type": "integer",
          "format": "int32",
          "description": "The number of records matching the filter to skip"
        }
      }
    },
    "Filters": {
      "description": "Describers the filters to filter response by",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FilterItems"
      },
      "x-ms-identifiers": []
    },
    "FilterItems": {
      "description": "Will contain the filter name and values to operate on",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "The name of the field we would like to filter"
        },
        "values": {
          "type": "array",
          "description": "List of values to filter the current field by",
          "items": {
            "type": "string",
            "description": "Value of the field to filter by"
          }
        }
      }
    },
    "OrderBy": {
      "description": "Describes a column to sort",
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "Describes the actual column name to sort by"
        },
        "order": {
          "type": "string",
          "description": "Describes if results should be in ascending/descending order",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSQuerySortOrder",
            "modelAsString": true
          }
        }
      }
    },
    "QueryResults": {
      "description": "Query result",
      "type": "object",
      "properties": {
        "matchingRecordsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of total records matching the query."
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleQueryResult"
          },
          "description": "Array containing the results of the query",
          "x-ms-identifiers": []
        }
      }
    },
    "SingleQueryResult": {
      "type": "object",
      "properties": {
        "signatureId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the signature"
        },
        "mode": {
          "type": "integer",
          "format": "int32",
          "description": "The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny",
          "enum": [
            0,
            1,
            2
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureMode",
            "modelAsString": false
          }
        },
        "severity": {
          "type": "integer",
          "format": "int32",
          "description": "Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low",
          "enum": [
            1,
            2,
            3
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureSeverity",
            "modelAsString": false
          }
        },
        "direction": {
          "type": "integer",
          "format": "int32",
          "description": "Describes in which direction signature is being enforced: 0 - OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "x-ms-enum": {
            "name": "FirewallPolicyIDPSSignatureDirection",
            "modelAsString": false
          }
        },
        "group": {
          "type": "string",
          "description": "Describes the groups the signature belongs to"
        },
        "description": {
          "type": "string",
          "description": "Describes what is the signature enforces"
        },
        "protocol": {
          "type": "string",
          "description": "Describes the protocol the signatures is being enforced in"
        },
        "sourcePorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortsList"
          },
          "description": "Describes the list of source ports related to this signature"
        },
        "destinationPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortsList"
          },
          "description": "Describes the list of destination ports related to this signature"
        },
        "lastUpdated": {
          "type": "string",
          "description": "Describes the last updated time of the signature (provided from 3rd party vendor)"
        },
        "inheritedFromParentPolicy": {
          "type": "boolean",
          "description": "Describes if this override is inherited from base policy or not"
        }
      }
    },
    "PortsList": {
      "type": "string",
      "description": "Describes a port, port range, or negation of a port"
    },
    "Signatures": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "SignaturesOverridesList": {
      "type": "object",
      "description": "Describes an object containing an array with a single item",
      "properties": {
        "value": {
          "type": "array",
          "description": "Describes a list consisting exactly one item describing the policy's signature override status",
          "items": {
            "description": "Describes the single signatures overrides object related to that policy.",
            "$ref": "#/definitions/SignaturesOverrides"
          }
        }
      }
    },
    "SignaturesOverrides": {
      "x-ms-azure-resource": true,
      "type": "object",
      "description": "Contains all specific policy signatures overrides for the IDPS",
      "properties": {
        "name": {
          "type": "string",
          "description": "Contains the name of the resource (default)"
        },
        "id": {
          "description": "Will contain the resource id of the signature override resource",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Will contain the type of the resource: Microsoft.Network/firewallPolicies/intrusionDetectionSignaturesOverrides"
        },
        "properties": {
          "type": "object",
          "description": "Will contain the properties of the resource (the actual signature overrides)",
          "properties": {
            "signatures": {
              "type": "object",
              "$ref": "#/definitions/Signatures"
            }
          }
        }
      }
    },
    "SignatureOverridesFilterValuesQuery": {
      "description": "Describes the filter values possibles for a given column",
      "type": "object",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "Describes the name of the column which values will be returned"
        }
      }
    },
    "SignatureOverridesFilterValuesResponse": {
      "description": "Describes the list of all possible values for a specific filter value",
      "type": "object",
      "properties": {
        "filterValues": {
          "description": "Describes the possible values",
          "type": "array",
          "items": {
            "description": "Describes a single value of the filter",
            "type": "string"
          }
        }
      }
    },
    "FirewallPolicyHttpHeaderToInsert": {
      "description": "name and value of HTTP/S header to insert",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Contains the name of the header",
          "type": "string"
        },
        "headerValue": {
          "description": "Contains the value of the header",
          "type": "string"
        }
      }
    }
  }
}

