// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Network
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ServiceTagsOperations
    /// </summary>
    public static partial class ServiceTagsOperationsExtensions
    {
        /// <summary>
        /// Gets a list of service tag information resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location that will be used as a reference for version (not as a filter
        /// based on location, you will get the list of service tags with prefix
        /// details across all regions but limited to the cloud that your subscription
        /// belongs to).
        /// </param>
        public static ServiceTagsListResult List(this IServiceTagsOperations operations, string location)
        {
                return ((IServiceTagsOperations)operations).ListAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of service tag information resources.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location that will be used as a reference for version (not as a filter
        /// based on location, you will get the list of service tags with prefix
        /// details across all regions but limited to the cloud that your subscription
        /// belongs to).
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ServiceTagsListResult> ListAsync(this IServiceTagsOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
