// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Network
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for PrivateDnsZoneGroupsOperations
    /// </summary>
    public static partial class PrivateDnsZoneGroupsOperationsExtensions
    {
        /// <summary>
        /// Deletes the specified private dns zone group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        public static void Delete(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName)
        {
                ((IPrivateDnsZoneGroupsOperations)operations).DeleteAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified private dns zone group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Gets the private dns zone group resource by specified private dns zone
        /// group name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        public static PrivateDnsZoneGroup Get(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName)
        {
                return ((IPrivateDnsZoneGroupsOperations)operations).GetAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the private dns zone group resource by specified private dns zone
        /// group name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<PrivateDnsZoneGroup> GetAsync(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates or updates a private dns zone group in the specified private
        /// endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        public static PrivateDnsZoneGroup CreateOrUpdate(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, PrivateDnsZoneGroup parameters)
        {
                return ((IPrivateDnsZoneGroupsOperations)operations).CreateOrUpdateAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a private dns zone group in the specified private
        /// endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<PrivateDnsZoneGroup> CreateOrUpdateAsync(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, PrivateDnsZoneGroup parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all private dns zone groups in a private endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<PrivateDnsZoneGroup> List(this IPrivateDnsZoneGroupsOperations operations, string privateEndpointName, string resourceGroupName)
        {
                return ((IPrivateDnsZoneGroupsOperations)operations).ListAsync(privateEndpointName, resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all private dns zone groups in a private endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<PrivateDnsZoneGroup>> ListAsync(this IPrivateDnsZoneGroupsOperations operations, string privateEndpointName, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(privateEndpointName, resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the specified private dns zone group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        public static void BeginDelete(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName)
        {
                ((IPrivateDnsZoneGroupsOperations)operations).BeginDeleteAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified private dns zone group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Creates or updates a private dns zone group in the specified private
        /// endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        public static PrivateDnsZoneGroup BeginCreateOrUpdate(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, PrivateDnsZoneGroup parameters)
        {
                return ((IPrivateDnsZoneGroupsOperations)operations).BeginCreateOrUpdateAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, parameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates or updates a private dns zone group in the specified private
        /// endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='privateEndpointName'>
        /// The name of the private endpoint.
        /// </param>
        /// <param name='privateDnsZoneGroupName'>
        /// The name of the private dns zone group.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<PrivateDnsZoneGroup> BeginCreateOrUpdateAsync(this IPrivateDnsZoneGroupsOperations operations, string resourceGroupName, string privateEndpointName, string privateDnsZoneGroupName, PrivateDnsZoneGroup parameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, privateEndpointName, privateDnsZoneGroupName, parameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all private dns zone groups in a private endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<PrivateDnsZoneGroup> ListNext(this IPrivateDnsZoneGroupsOperations operations, string nextPageLink)
        {
                return ((IPrivateDnsZoneGroupsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all private dns zone groups in a private endpoint.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<PrivateDnsZoneGroup>> ListNextAsync(this IPrivateDnsZoneGroupsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
