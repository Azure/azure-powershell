// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Network
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ServiceTagInformationOperations
    /// </summary>
    public static partial class ServiceTagInformationOperationsExtensions
    {
        /// <summary>
        /// Gets a list of service tag information resources with pagination.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location that will be used as a reference for cloud (not as a filter
        /// based on location, you will get the list of service tags with prefix
        /// details across all regions but limited to the cloud that your subscription
        /// belongs to).
        /// </param>
        /// <param name='noAddressPrefixes'>
        /// Do not return address prefixes for the tag(s).
        /// </param>
        /// <param name='tagName'>
        /// Return tag information for a particular tag.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ServiceTagInformation> List(this IServiceTagInformationOperations operations, string location, bool? noAddressPrefixes = default(bool?), string tagName = default(string))
        {
                return ((IServiceTagInformationOperations)operations).ListAsync(location, noAddressPrefixes, tagName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of service tag information resources with pagination.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// The location that will be used as a reference for cloud (not as a filter
        /// based on location, you will get the list of service tags with prefix
        /// details across all regions but limited to the cloud that your subscription
        /// belongs to).
        /// </param>
        /// <param name='noAddressPrefixes'>
        /// Do not return address prefixes for the tag(s).
        /// </param>
        /// <param name='tagName'>
        /// Return tag information for a particular tag.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ServiceTagInformation>> ListAsync(this IServiceTagInformationOperations operations, string location, bool? noAddressPrefixes = default(bool?), string tagName = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(location, noAddressPrefixes, tagName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of service tag information resources with pagination.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ServiceTagInformation> ListNext(this IServiceTagInformationOperations operations, string nextPageLink)
        {
                return ((IServiceTagInformationOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of service tag information resources with pagination.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ServiceTagInformation>> ListNextAsync(this IServiceTagInformationOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
