// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Network
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for PeerExpressRouteCircuitConnectionsOperations
    /// </summary>
    public static partial class PeerExpressRouteCircuitConnectionsOperationsExtensions
    {
        /// <summary>
        /// Gets the specified Peer Express Route Circuit Connection from the specified
        /// express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='circuitName'>
        /// The name of the express route circuit.
        /// </param>
        /// <param name='peeringName'>
        /// The name of the peering.
        /// </param>
        /// <param name='connectionName'>
        /// The name of the peer express route circuit connection.
        /// </param>
        public static PeerExpressRouteCircuitConnection Get(this IPeerExpressRouteCircuitConnectionsOperations operations, string resourceGroupName, string circuitName, string peeringName, string connectionName)
        {
                return ((IPeerExpressRouteCircuitConnectionsOperations)operations).GetAsync(resourceGroupName, circuitName, peeringName, connectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the specified Peer Express Route Circuit Connection from the specified
        /// express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='circuitName'>
        /// The name of the express route circuit.
        /// </param>
        /// <param name='peeringName'>
        /// The name of the peering.
        /// </param>
        /// <param name='connectionName'>
        /// The name of the peer express route circuit connection.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<PeerExpressRouteCircuitConnection> GetAsync(this IPeerExpressRouteCircuitConnectionsOperations operations, string resourceGroupName, string circuitName, string peeringName, string connectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, circuitName, peeringName, connectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all global reach peer connections associated with a private peering in
        /// an express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='circuitName'>
        /// The name of the circuit.
        /// </param>
        /// <param name='peeringName'>
        /// The name of the peering.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<PeerExpressRouteCircuitConnection> List(this IPeerExpressRouteCircuitConnectionsOperations operations, string resourceGroupName, string circuitName, string peeringName)
        {
                return ((IPeerExpressRouteCircuitConnectionsOperations)operations).ListAsync(resourceGroupName, circuitName, peeringName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all global reach peer connections associated with a private peering in
        /// an express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group.
        /// </param>
        /// <param name='circuitName'>
        /// The name of the circuit.
        /// </param>
        /// <param name='peeringName'>
        /// The name of the peering.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<PeerExpressRouteCircuitConnection>> ListAsync(this IPeerExpressRouteCircuitConnectionsOperations operations, string resourceGroupName, string circuitName, string peeringName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, circuitName, peeringName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets all global reach peer connections associated with a private peering in
        /// an express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<PeerExpressRouteCircuitConnection> ListNext(this IPeerExpressRouteCircuitConnectionsOperations operations, string nextPageLink)
        {
                return ((IPeerExpressRouteCircuitConnectionsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all global reach peer connections associated with a private peering in
        /// an express route circuit.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<PeerExpressRouteCircuitConnection>> ListNextAsync(this IPeerExpressRouteCircuitConnectionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
