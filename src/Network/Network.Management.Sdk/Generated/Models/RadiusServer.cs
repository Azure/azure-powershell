// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Radius Server Settings.
    /// </summary>
    public partial class RadiusServer
    {
        /// <summary>
        /// Initializes a new instance of the RadiusServer class.
        /// </summary>
        public RadiusServer()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RadiusServer class.
        /// </summary>

        /// <param name="radiusServerAddress">The address of this radius server.
        /// </param>

        /// <param name="radiusServerScore">The initial score assigned to this radius server.
        /// </param>

        /// <param name="radiusServerSecret">The secret used for this radius server.
        /// </param>
        public RadiusServer(string radiusServerAddress, long? radiusServerScore = default(long?), string radiusServerSecret = default(string))

        {
            this.RadiusServerAddress = radiusServerAddress;
            this.RadiusServerScore = radiusServerScore;
            this.RadiusServerSecret = radiusServerSecret;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the address of this radius server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerAddress")]
        public string RadiusServerAddress {get; set; }

        /// <summary>
        /// Gets or sets the initial score assigned to this radius server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerScore")]
        public long? RadiusServerScore {get; set; }

        /// <summary>
        /// Gets or sets the secret used for this radius server.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerSecret")]
        public string RadiusServerSecret {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RadiusServerAddress == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RadiusServerAddress");
            }


        }
    }
}