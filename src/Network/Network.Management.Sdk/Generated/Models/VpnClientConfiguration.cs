// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// VpnClientConfiguration for P2S client.
    /// </summary>
    public partial class VpnClientConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the VpnClientConfiguration class.
        /// </summary>
        public VpnClientConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VpnClientConfiguration class.
        /// </summary>

        /// <param name="vpnClientAddressPool">The reference to the address space resource which represents Address space
        /// for P2S VpnClient.
        /// </param>

        /// <param name="vpnClientRootCertificates">VpnClientRootCertificate for virtual network gateway.
        /// </param>

        /// <param name="vpnClientRevokedCertificates">VpnClientRevokedCertificate for Virtual network gateway.
        /// </param>

        /// <param name="vpnClientProtocols">VpnClientProtocols for Virtual network gateway.
        /// </param>

        /// <param name="vpnAuthenticationTypes">VPN authentication types for the virtual network gateway..
        /// </param>

        /// <param name="vpnClientIpsecPolicies">VpnClientIpsecPolicies for virtual network gateway P2S client.
        /// </param>

        /// <param name="radiusServerAddress">The radius server address property of the VirtualNetworkGateway resource
        /// for vpn client connection.
        /// </param>

        /// <param name="radiusServerSecret">The radius secret property of the VirtualNetworkGateway resource for vpn
        /// client connection.
        /// </param>

        /// <param name="radiusServers">The radiusServers property for multiple radius server configuration.
        /// </param>

        /// <param name="aadTenant">The AADTenant property of the VirtualNetworkGateway resource for vpn client
        /// connection used for AAD authentication.
        /// </param>

        /// <param name="aadAudience">The AADAudience property of the VirtualNetworkGateway resource for vpn
        /// client connection used for AAD authentication.
        /// </param>

        /// <param name="aadIssuer">The AADIssuer property of the VirtualNetworkGateway resource for vpn client
        /// connection used for AAD authentication.
        /// </param>

        /// <param name="vngClientConnectionConfigurations">per ip address pool connection policy for virtual network gateway P2S
        /// client.
        /// </param>
        public VpnClientConfiguration(AddressSpace vpnClientAddressPool = default(AddressSpace), System.Collections.Generic.IList<VpnClientRootCertificate> vpnClientRootCertificates = default(System.Collections.Generic.IList<VpnClientRootCertificate>), System.Collections.Generic.IList<VpnClientRevokedCertificate> vpnClientRevokedCertificates = default(System.Collections.Generic.IList<VpnClientRevokedCertificate>), System.Collections.Generic.IList<string> vpnClientProtocols = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> vpnAuthenticationTypes = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<IpsecPolicy> vpnClientIpsecPolicies = default(System.Collections.Generic.IList<IpsecPolicy>), string radiusServerAddress = default(string), string radiusServerSecret = default(string), System.Collections.Generic.IList<RadiusServer> radiusServers = default(System.Collections.Generic.IList<RadiusServer>), string aadTenant = default(string), string aadAudience = default(string), string aadIssuer = default(string), System.Collections.Generic.IList<VngClientConnectionConfiguration> vngClientConnectionConfigurations = default(System.Collections.Generic.IList<VngClientConnectionConfiguration>))

        {
            this.VpnClientAddressPool = vpnClientAddressPool;
            this.VpnClientRootCertificates = vpnClientRootCertificates;
            this.VpnClientRevokedCertificates = vpnClientRevokedCertificates;
            this.VpnClientProtocols = vpnClientProtocols;
            this.VpnAuthenticationTypes = vpnAuthenticationTypes;
            this.VpnClientIpsecPolicies = vpnClientIpsecPolicies;
            this.RadiusServerAddress = radiusServerAddress;
            this.RadiusServerSecret = radiusServerSecret;
            this.RadiusServers = radiusServers;
            this.AadTenant = aadTenant;
            this.AadAudience = aadAudience;
            this.AadIssuer = aadIssuer;
            this.VngClientConnectionConfigurations = vngClientConnectionConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the reference to the address space resource which represents
        /// Address space for P2S VpnClient.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientAddressPool")]
        public AddressSpace VpnClientAddressPool {get; set; }

        /// <summary>
        /// Gets or sets vpnClientRootCertificate for virtual network gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientRootCertificates")]
        public System.Collections.Generic.IList<VpnClientRootCertificate> VpnClientRootCertificates {get; set; }

        /// <summary>
        /// Gets or sets vpnClientRevokedCertificate for Virtual network gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientRevokedCertificates")]
        public System.Collections.Generic.IList<VpnClientRevokedCertificate> VpnClientRevokedCertificates {get; set; }

        /// <summary>
        /// Gets or sets vpnClientProtocols for Virtual network gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientProtocols")]
        public System.Collections.Generic.IList<string> VpnClientProtocols {get; set; }

        /// <summary>
        /// Gets or sets vPN authentication types for the virtual network gateway..
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnAuthenticationTypes")]
        public System.Collections.Generic.IList<string> VpnAuthenticationTypes {get; set; }

        /// <summary>
        /// Gets or sets vpnClientIpsecPolicies for virtual network gateway P2S client.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientIpsecPolicies")]
        public System.Collections.Generic.IList<IpsecPolicy> VpnClientIpsecPolicies {get; set; }

        /// <summary>
        /// Gets or sets the radius server address property of the
        /// VirtualNetworkGateway resource for vpn client connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerAddress")]
        public string RadiusServerAddress {get; set; }

        /// <summary>
        /// Gets or sets the radius secret property of the VirtualNetworkGateway
        /// resource for vpn client connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerSecret")]
        public string RadiusServerSecret {get; set; }

        /// <summary>
        /// Gets or sets the radiusServers property for multiple radius server
        /// configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServers")]
        public System.Collections.Generic.IList<RadiusServer> RadiusServers {get; set; }

        /// <summary>
        /// Gets or sets the AADTenant property of the VirtualNetworkGateway resource
        /// for vpn client connection used for AAD authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aadTenant")]
        public string AadTenant {get; set; }

        /// <summary>
        /// Gets or sets the AADAudience property of the VirtualNetworkGateway resource
        /// for vpn client connection used for AAD authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aadAudience")]
        public string AadAudience {get; set; }

        /// <summary>
        /// Gets or sets the AADIssuer property of the VirtualNetworkGateway resource
        /// for vpn client connection used for AAD authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aadIssuer")]
        public string AadIssuer {get; set; }

        /// <summary>
        /// Gets or sets per ip address pool connection policy for virtual network
        /// gateway P2S client.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vngClientConnectionConfigurations")]
        public System.Collections.Generic.IList<VngClientConnectionConfiguration> VngClientConnectionConfigurations {get; set; }
    }
}