// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    public partial class SingleQueryResult
    {
        /// <summary>
        /// Initializes a new instance of the SingleQueryResult class.
        /// </summary>
        public SingleQueryResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SingleQueryResult class.
        /// </summary>

        /// <param name="signatureId">The ID of the signature
        /// </param>

        /// <param name="mode">The current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny
        /// Possible values include: &#39;0&#39;, &#39;1&#39;, &#39;2&#39;</param>

        /// <param name="severity">Describes the severity of signature: 1 - High, 2 - Medium, 3 - Low
        /// Possible values include: &#39;1&#39;, &#39;2&#39;, &#39;3&#39;</param>

        /// <param name="direction">Describes in which direction signature is being enforced: 0 - OutBound, 1 -
        /// InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound
        /// Possible values include: &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;</param>

        /// <param name="group">Describes the groups the signature belongs to
        /// </param>

        /// <param name="description">Describes what is the signature enforces
        /// </param>

        /// <param name="protocol">Describes the protocol the signatures is being enforced in
        /// </param>

        /// <param name="sourcePorts">Describes the list of source ports related to this signature
        /// </param>

        /// <param name="destinationPorts">Describes the list of destination ports related to this signature
        /// </param>

        /// <param name="lastUpdated">Describes the last updated time of the signature (provided from 3rd party
        /// vendor)
        /// </param>

        /// <param name="inheritedFromParentPolicy">Describes if this override is inherited from base policy or not
        /// </param>
        public SingleQueryResult(int? signatureId = default(int?), int? mode = default(int?), int? severity = default(int?), int? direction = default(int?), string group = default(string), string description = default(string), string protocol = default(string), System.Collections.Generic.IList<string> sourcePorts = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> destinationPorts = default(System.Collections.Generic.IList<string>), string lastUpdated = default(string), bool? inheritedFromParentPolicy = default(bool?))

        {
            this.SignatureId = signatureId;
            this.Mode = mode;
            this.Severity = severity;
            this.Direction = direction;
            this.Group = group;
            this.Description = description;
            this.Protocol = protocol;
            this.SourcePorts = sourcePorts;
            this.DestinationPorts = destinationPorts;
            this.LastUpdated = lastUpdated;
            this.InheritedFromParentPolicy = inheritedFromParentPolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of the signature
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signatureId")]
        public int? SignatureId {get; set; }

        /// <summary>
        /// Gets or sets the current mode enforced, 0 - Disabled, 1 - Alert, 2 -Deny Possible values include: &#39;0&#39;, &#39;1&#39;, &#39;2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mode")]
        public int? Mode {get; set; }

        /// <summary>
        /// Gets or sets describes the severity of signature: 1 - High, 2 - Medium, 3 -
        /// Low Possible values include: &#39;1&#39;, &#39;2&#39;, &#39;3&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "severity")]
        public int? Severity {get; set; }

        /// <summary>
        /// Gets or sets describes in which direction signature is being enforced: 0 -
        /// OutBound, 1 - InBound, 2 - Any, 3 - Internal, 4 - InternalOutbound Possible values include: &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "direction")]
        public int? Direction {get; set; }

        /// <summary>
        /// Gets or sets describes the groups the signature belongs to
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "group")]
        public string Group {get; set; }

        /// <summary>
        /// Gets or sets describes what is the signature enforces
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets describes the protocol the signatures is being enforced in
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protocol")]
        public string Protocol {get; set; }

        /// <summary>
        /// Gets or sets describes the list of source ports related to this signature
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourcePorts")]
        public System.Collections.Generic.IList<string> SourcePorts {get; set; }

        /// <summary>
        /// Gets or sets describes the list of destination ports related to this
        /// signature
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationPorts")]
        public System.Collections.Generic.IList<string> DestinationPorts {get; set; }

        /// <summary>
        /// Gets or sets describes the last updated time of the signature (provided
        /// from 3rd party vendor)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastUpdated")]
        public string LastUpdated {get; set; }

        /// <summary>
        /// Gets or sets describes if this override is inherited from base policy or
        /// not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inheritedFromParentPolicy")]
        public bool? InheritedFromParentPolicy {get; set; }
    }
}