// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of VirtualNetworkGatewayPolicyGroup.
    /// </summary>
    public partial class VirtualNetworkGatewayPolicyGroupProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkGatewayPolicyGroupProperties class.
        /// </summary>
        public VirtualNetworkGatewayPolicyGroupProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkGatewayPolicyGroupProperties class.
        /// </summary>

        /// <param name="isDefault">Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
        /// </param>

        /// <param name="priority">Priority for VirtualNetworkGatewayPolicyGroup.
        /// </param>

        /// <param name="policyMembers">Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
        /// </param>

        /// <param name="vngClientConnectionConfigurations">List of references to vngClientConnectionConfigurations.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the VirtualNetworkGatewayPolicyGroup resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public VirtualNetworkGatewayPolicyGroupProperties(bool isDefault, int priority, System.Collections.Generic.IList<VirtualNetworkGatewayPolicyGroupMember> policyMembers, System.Collections.Generic.IList<SubResource> vngClientConnectionConfigurations = default(System.Collections.Generic.IList<SubResource>), string provisioningState = default(string))

        {
            this.IsDefault = isDefault;
            this.Priority = priority;
            this.PolicyMembers = policyMembers;
            this.VngClientConnectionConfigurations = vngClientConnectionConfigurations;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets shows if this is a Default VirtualNetworkGatewayPolicyGroup or
        /// not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isDefault")]
        public bool IsDefault {get; set; }

        /// <summary>
        /// Gets or sets priority for VirtualNetworkGatewayPolicyGroup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "priority")]
        public int Priority {get; set; }

        /// <summary>
        /// Gets or sets multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "policyMembers")]
        public System.Collections.Generic.IList<VirtualNetworkGatewayPolicyGroupMember> PolicyMembers {get; set; }

        /// <summary>
        /// Gets list of references to vngClientConnectionConfigurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vngClientConnectionConfigurations")]
        public System.Collections.Generic.IList<SubResource> VngClientConnectionConfigurations {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the VirtualNetworkGatewayPolicyGroup
        /// resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.PolicyMembers == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PolicyMembers");
            }



        }
    }
}