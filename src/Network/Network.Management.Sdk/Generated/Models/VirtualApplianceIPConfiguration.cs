// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Represents a single IP configuration.
    /// </summary>
    public partial class VirtualApplianceIPConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the VirtualApplianceIPConfiguration class.
        /// </summary>
        public VirtualApplianceIPConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualApplianceIPConfiguration class.
        /// </summary>

        /// <param name="name">For hub NVAs, primary IP configs must be named &#39;privatenicipconfig&#39; and
        /// &#39;publicnicipconfig&#39;, with non-primary configs using these prefixes; no
        /// naming restrictions apply for NVAs in VNets. Maximum 80 character are
        /// allowed.
        /// </param>

        /// <param name="properties">Represents a single IP configuration properties.
        /// </param>
        public VirtualApplianceIPConfiguration(string name = default(string), VirtualApplianceIPConfigurationProperties properties = default(VirtualApplianceIPConfigurationProperties))

        {
            this.Name = name;
            this.Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets for hub NVAs, primary IP configs must be named
        /// &#39;privatenicipconfig&#39; and &#39;publicnicipconfig&#39;, with non-primary configs
        /// using these prefixes; no naming restrictions apply for NVAs in VNets.
        /// Maximum 80 character are allowed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets represents a single IP configuration properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties")]
        public VirtualApplianceIPConfigurationProperties Properties {get; set; }
    }
}