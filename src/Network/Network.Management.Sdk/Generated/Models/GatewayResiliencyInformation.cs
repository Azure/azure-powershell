// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Gateway Resiliency Information
    /// </summary>
    public partial class GatewayResiliencyInformation
    {
        /// <summary>
        /// Initializes a new instance of the GatewayResiliencyInformation class.
        /// </summary>
        public GatewayResiliencyInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayResiliencyInformation class.
        /// </summary>

        /// <param name="overallScore">Current Resiliency Score for the gateway
        /// </param>

        /// <param name="scoreChange">Update in the Resiliency Score for the gateway from the last computed score
        /// </param>

        /// <param name="minScoreFromRecommendations">Minimum increase expected in the score if the at least one of the
        /// recommendations is applied for the gateway
        /// </param>

        /// <param name="maxScoreFromRecommendations">Maximum increase expected in the score if all of the recommendations are
        /// applied for the gateway
        /// </param>

        /// <param name="lastComputedTime">Timestamp denoting the last time when the resiliency score was computed for
        /// the gateway
        /// </param>

        /// <param name="nextEligibleComputeTime">Timestamp denoting the next eligible time to re-compute the resiliency
        /// score for the gateway
        /// </param>

        /// <param name="components">List of Resiliency based Recommendation Components for the gateway
        /// </param>
        public GatewayResiliencyInformation(string overallScore = default(string), string scoreChange = default(string), string minScoreFromRecommendations = default(string), string maxScoreFromRecommendations = default(string), System.DateTime? lastComputedTime = default(System.DateTime?), System.DateTime? nextEligibleComputeTime = default(System.DateTime?), System.Collections.Generic.IList<ResiliencyRecommendationComponents> components = default(System.Collections.Generic.IList<ResiliencyRecommendationComponents>))

        {
            this.OverallScore = overallScore;
            this.ScoreChange = scoreChange;
            this.MinScoreFromRecommendations = minScoreFromRecommendations;
            this.MaxScoreFromRecommendations = maxScoreFromRecommendations;
            this.LastComputedTime = lastComputedTime;
            this.NextEligibleComputeTime = nextEligibleComputeTime;
            this.Components = components;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets current Resiliency Score for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "overallScore")]
        public string OverallScore {get; set; }

        /// <summary>
        /// Gets or sets update in the Resiliency Score for the gateway from the last
        /// computed score
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scoreChange")]
        public string ScoreChange {get; set; }

        /// <summary>
        /// Gets or sets minimum increase expected in the score if the at least one of
        /// the recommendations is applied for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "minScoreFromRecommendations")]
        public string MinScoreFromRecommendations {get; set; }

        /// <summary>
        /// Gets or sets maximum increase expected in the score if all of the
        /// recommendations are applied for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxScoreFromRecommendations")]
        public string MaxScoreFromRecommendations {get; set; }

        /// <summary>
        /// Gets or sets timestamp denoting the last time when the resiliency score was
        /// computed for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastComputedTime")]
        public System.DateTime? LastComputedTime {get; set; }

        /// <summary>
        /// Gets or sets timestamp denoting the next eligible time to re-compute the
        /// resiliency score for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextEligibleComputeTime")]
        public System.DateTime? NextEligibleComputeTime {get; set; }

        /// <summary>
        /// Gets or sets list of Resiliency based Recommendation Components for the
        /// gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "components")]
        public System.Collections.Generic.IList<ResiliencyRecommendationComponents> Components {get; set; }
    }
}