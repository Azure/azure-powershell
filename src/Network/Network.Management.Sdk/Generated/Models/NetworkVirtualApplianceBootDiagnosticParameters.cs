// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies input parameters required to retrieve the boot diagnostic logs
    /// for an NVA instance
    /// </summary>
    public partial class NetworkVirtualApplianceBootDiagnosticParameters
    {
        /// <summary>
        /// Initializes a new instance of the NetworkVirtualApplianceBootDiagnosticParameters class.
        /// </summary>
        public NetworkVirtualApplianceBootDiagnosticParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkVirtualApplianceBootDiagnosticParameters class.
        /// </summary>

        /// <param name="instanceId">The network virtual appliance instance id for which boot diagnostic logs is
        /// being requested
        /// </param>

        /// <param name="serialConsoleStorageSasUrl">Specifies the sas-url to the storage blob into which serial console logs
        /// for the requested instance will be written
        /// </param>

        /// <param name="consoleScreenshotStorageSasUrl">Specifies the sas-url to the storage blob into which console screen shot
        /// for the requested instance will be written
        /// </param>
        public NetworkVirtualApplianceBootDiagnosticParameters(int? instanceId = default(int?), string serialConsoleStorageSasUrl = default(string), string consoleScreenshotStorageSasUrl = default(string))

        {
            this.InstanceId = instanceId;
            this.SerialConsoleStorageSasUrl = serialConsoleStorageSasUrl;
            this.ConsoleScreenshotStorageSasUrl = consoleScreenshotStorageSasUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the network virtual appliance instance id for which boot
        /// diagnostic logs is being requested
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceId")]
        public int? InstanceId {get; set; }

        /// <summary>
        /// Gets or sets specifies the sas-url to the storage blob into which serial
        /// console logs for the requested instance will be written
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serialConsoleStorageSasUrl")]
        public string SerialConsoleStorageSasUrl {get; set; }

        /// <summary>
        /// Gets or sets specifies the sas-url to the storage blob into which console
        /// screen shot for the requested instance will be written
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "consoleScreenshotStorageSasUrl")]
        public string ConsoleScreenshotStorageSasUrl {get; set; }
    }
}