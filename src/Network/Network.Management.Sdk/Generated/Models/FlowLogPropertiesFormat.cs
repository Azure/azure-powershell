// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters that define the configuration of flow log.
    /// </summary>
    public partial class FlowLogPropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the FlowLogPropertiesFormat class.
        /// </summary>
        public FlowLogPropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FlowLogPropertiesFormat class.
        /// </summary>

        /// <param name="targetResourceId">ID of network security group to which flow log will be applied.
        /// </param>

        /// <param name="targetResourceGuid">Guid of network security group to which flow log will be applied.
        /// </param>

        /// <param name="storageId">ID of the storage account which is used to store the flow log.
        /// </param>

        /// <param name="enabled">Flag to enable/disable flow logging.
        /// </param>

        /// <param name="retentionPolicy">Parameters that define the retention policy for flow log.
        /// </param>

        /// <param name="format">Parameters that define the flow log format.
        /// </param>

        /// <param name="flowAnalyticsConfiguration">Parameters that define the configuration of traffic analytics.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the flow log.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public FlowLogPropertiesFormat(string targetResourceId, string storageId, string targetResourceGuid = default(string), bool? enabled = default(bool?), RetentionPolicyParameters retentionPolicy = default(RetentionPolicyParameters), FlowLogFormatParameters format = default(FlowLogFormatParameters), TrafficAnalyticsProperties flowAnalyticsConfiguration = default(TrafficAnalyticsProperties), string provisioningState = default(string))

        {
            this.TargetResourceId = targetResourceId;
            this.TargetResourceGuid = targetResourceGuid;
            this.StorageId = storageId;
            this.Enabled = enabled;
            this.RetentionPolicy = retentionPolicy;
            this.Format = format;
            this.FlowAnalyticsConfiguration = flowAnalyticsConfiguration;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets iD of network security group to which flow log will be
        /// applied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetResourceId")]
        public string TargetResourceId {get; set; }

        /// <summary>
        /// Gets guid of network security group to which flow log will be applied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetResourceGuid")]
        public string TargetResourceGuid {get; private set; }

        /// <summary>
        /// Gets or sets iD of the storage account which is used to store the flow log.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageId")]
        public string StorageId {get; set; }

        /// <summary>
        /// Gets or sets flag to enable/disable flow logging.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets parameters that define the retention policy for flow log.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "retentionPolicy")]
        public RetentionPolicyParameters RetentionPolicy {get; set; }

        /// <summary>
        /// Gets or sets parameters that define the flow log format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "format")]
        public FlowLogFormatParameters Format {get; set; }

        /// <summary>
        /// Gets or sets parameters that define the configuration of traffic analytics.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "flowAnalyticsConfiguration")]
        public TrafficAnalyticsProperties FlowAnalyticsConfiguration {get; set; }

        /// <summary>
        /// Gets the provisioning state of the flow log. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.TargetResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetResourceId");
            }
            if (this.StorageId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StorageId");
            }







        }
    }
}