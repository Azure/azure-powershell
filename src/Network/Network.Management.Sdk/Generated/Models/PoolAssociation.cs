// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// IpamPool association information.
    /// </summary>
    public partial class PoolAssociation
    {
        /// <summary>
        /// Initializes a new instance of the PoolAssociation class.
        /// </summary>
        public PoolAssociation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PoolAssociation class.
        /// </summary>

        /// <param name="resourceId">Resource id of the associated Azure resource.
        /// </param>

        /// <param name="poolId">IpamPool id for which the resource is associated to.
        /// </param>

        /// <param name="description">
        /// </param>

        /// <param name="addressPrefixes">List of assigned IP address prefixes in the IpamPool of the associated
        /// resource.
        /// </param>

        /// <param name="reservedPrefixes">List of reserved IP address prefixes in the IpamPool of the associated
        /// resource.
        /// </param>

        /// <param name="totalNumberOfIPAddresses">Total number of assigned IP addresses of the association.
        /// </param>

        /// <param name="numberOfReservedIPAddresses">Total number of reserved IP addresses of the association.
        /// </param>

        /// <param name="createdAt">Creation time of the association.
        /// </param>

        /// <param name="reservationExpiresAt">Expire time for IP addresses reserved.
        /// </param>
        public PoolAssociation(string resourceId, string poolId = default(string), string description = default(string), System.Collections.Generic.IList<string> addressPrefixes = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> reservedPrefixes = default(System.Collections.Generic.IList<string>), string totalNumberOfIPAddresses = default(string), string numberOfReservedIPAddresses = default(string), System.DateTime? createdAt = default(System.DateTime?), System.DateTime? reservationExpiresAt = default(System.DateTime?))

        {
            this.ResourceId = resourceId;
            this.PoolId = poolId;
            this.Description = description;
            this.AddressPrefixes = addressPrefixes;
            this.ReservedPrefixes = reservedPrefixes;
            this.TotalNumberOfIPAddresses = totalNumberOfIPAddresses;
            this.NumberOfReservedIPAddresses = numberOfReservedIPAddresses;
            this.CreatedAt = createdAt;
            this.ReservationExpiresAt = reservationExpiresAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets resource id of the associated Azure resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets or sets ipamPool id for which the resource is associated to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "poolId")]
        public string PoolId {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets list of assigned IP address prefixes in the IpamPool of the associated
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "addressPrefixes")]
        public System.Collections.Generic.IList<string> AddressPrefixes {get; private set; }

        /// <summary>
        /// Gets list of reserved IP address prefixes in the IpamPool of the associated
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reservedPrefixes")]
        public System.Collections.Generic.IList<string> ReservedPrefixes {get; private set; }

        /// <summary>
        /// Gets total number of assigned IP addresses of the association.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "totalNumberOfIPAddresses")]
        public string TotalNumberOfIPAddresses {get; private set; }

        /// <summary>
        /// Gets total number of reserved IP addresses of the association.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numberOfReservedIPAddresses")]
        public string NumberOfReservedIPAddresses {get; private set; }

        /// <summary>
        /// Gets creation time of the association.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt {get; private set; }

        /// <summary>
        /// Gets expire time for IP addresses reserved.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reservationExpiresAt")]
        public System.DateTime? ReservationExpiresAt {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ResourceId");
            }







        }
    }
}