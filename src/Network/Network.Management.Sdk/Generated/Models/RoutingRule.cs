// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Network routing rule.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class RoutingRule : ChildResource
    {
        /// <summary>
        /// Initializes a new instance of the RoutingRule class.
        /// </summary>
        public RoutingRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RoutingRule class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="systemData">The system metadata related to this resource.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="description">A description for this rule.
        /// </param>

        /// <param name="resourceGuid">Unique identifier for this resource.
        /// </param>

        /// <param name="destination">Indicates the destination for this particular rule.
        /// </param>

        /// <param name="nextHop">Indicates the next hop for this particular rule.
        /// </param>
        public RoutingRule(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), SystemData systemData = default(SystemData), string provisioningState = default(string), string description = default(string), string resourceGuid = default(string), RoutingRuleRouteDestination destination = default(RoutingRuleRouteDestination), RoutingRuleNextHop nextHop = default(RoutingRuleNextHop))

        : base(id, name, type, etag)
        {
            this.SystemData = systemData;
            this.ProvisioningState = provisioningState;
            this.Description = description;
            this.ResourceGuid = resourceGuid;
            this.Destination = destination;
            this.NextHop = nextHop;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the system metadata related to this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "systemData")]
        public SystemData SystemData {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets a description for this rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets unique identifier for this resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid {get; private set; }

        /// <summary>
        /// Gets or sets indicates the destination for this particular rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.destination")]
        public RoutingRuleRouteDestination Destination {get; set; }

        /// <summary>
        /// Gets or sets indicates the next hop for this particular rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.nextHop")]
        public RoutingRuleNextHop NextHop {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




            if (this.Destination != null)
            {
                this.Destination.Validate();
            }
            if (this.NextHop != null)
            {
                this.NextHop.Validate();
            }
        }
    }
}