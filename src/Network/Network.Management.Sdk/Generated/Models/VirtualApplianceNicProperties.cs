// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Network Virtual Appliance NIC properties.
    /// </summary>
    public partial class VirtualApplianceNicProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualApplianceNicProperties class.
        /// </summary>
        public VirtualApplianceNicProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualApplianceNicProperties class.
        /// </summary>

        /// <param name="nicType">NIC type - PublicNic, PrivateNic, or AdditionalNic.
        /// Possible values include: &#39;PublicNic&#39;, &#39;PrivateNic&#39;, &#39;AdditionalNic&#39;</param>

        /// <param name="name">NIC name.
        /// </param>

        /// <param name="publicIPAddress">Public IP address.
        /// </param>

        /// <param name="privateIPAddress">Private IP address.
        /// </param>

        /// <param name="instanceName">Instance on which nic is attached.
        /// </param>
        public VirtualApplianceNicProperties(string nicType = default(string), string name = default(string), string publicIPAddress = default(string), string privateIPAddress = default(string), string instanceName = default(string))

        {
            this.NicType = nicType;
            this.Name = name;
            this.PublicIPAddress = publicIPAddress;
            this.PrivateIPAddress = privateIPAddress;
            this.InstanceName = instanceName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets nIC type - PublicNic, PrivateNic, or AdditionalNic. Possible values include: &#39;PublicNic&#39;, &#39;PrivateNic&#39;, &#39;AdditionalNic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nicType")]
        public string NicType {get; private set; }

        /// <summary>
        /// Gets nIC name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIpAddress")]
        public string PublicIPAddress {get; private set; }

        /// <summary>
        /// Gets private IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIPAddress {get; private set; }

        /// <summary>
        /// Gets instance on which nic is attached.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceName")]
        public string InstanceName {get; private set; }
    }
}