// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Response for ApplicationGatewayAvailableSslOptions API service call.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayAvailableSslOptions : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayAvailableSslOptions class.
        /// </summary>
        public ApplicationGatewayAvailableSslOptions()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayAvailableSslOptions class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="predefinedPolicies">List of available Ssl predefined policy.
        /// </param>

        /// <param name="defaultPolicy">Name of the Ssl predefined policy applied by default to application
        /// gateway.
        /// Possible values include: &#39;AppGwSslPolicy20150501&#39;,
        /// &#39;AppGwSslPolicy20170401&#39;, &#39;AppGwSslPolicy20170401S&#39;,
        /// &#39;AppGwSslPolicy20220101&#39;, &#39;AppGwSslPolicy20220101S&#39;</param>

        /// <param name="availableCipherSuites">List of available Ssl cipher suites.
        /// </param>

        /// <param name="availableProtocols">List of available Ssl protocols.
        /// </param>
        public ApplicationGatewayAvailableSslOptions(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<SubResource> predefinedPolicies = default(System.Collections.Generic.IList<SubResource>), string defaultPolicy = default(string), System.Collections.Generic.IList<string> availableCipherSuites = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> availableProtocols = default(System.Collections.Generic.IList<string>))

        : base(id, name, type, location, tags)
        {
            this.PredefinedPolicies = predefinedPolicies;
            this.DefaultPolicy = defaultPolicy;
            this.AvailableCipherSuites = availableCipherSuites;
            this.AvailableProtocols = availableProtocols;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of available Ssl predefined policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.predefinedPolicies")]
        public System.Collections.Generic.IList<SubResource> PredefinedPolicies {get; set; }

        /// <summary>
        /// Gets or sets name of the Ssl predefined policy applied by default to
        /// application gateway. Possible values include: &#39;AppGwSslPolicy20150501&#39;, &#39;AppGwSslPolicy20170401&#39;, &#39;AppGwSslPolicy20170401S&#39;, &#39;AppGwSslPolicy20220101&#39;, &#39;AppGwSslPolicy20220101S&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.defaultPolicy")]
        public string DefaultPolicy {get; set; }

        /// <summary>
        /// Gets or sets list of available Ssl cipher suites.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.availableCipherSuites")]
        public System.Collections.Generic.IList<string> AvailableCipherSuites {get; set; }

        /// <summary>
        /// Gets or sets list of available Ssl protocols.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.availableProtocols")]
        public System.Collections.Generic.IList<string> AvailableProtocols {get; set; }
    }
}