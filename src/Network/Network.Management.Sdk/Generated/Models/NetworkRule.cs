// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Rule of type network.
    /// </summary>
    [Newtonsoft.Json.JsonObject("NetworkRule")]
    public partial class NetworkRule : FirewallPolicyRule
    {
        /// <summary>
        /// Initializes a new instance of the NetworkRule class.
        /// </summary>
        public NetworkRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkRule class.
        /// </summary>

        /// <param name="name">Name of the rule.
        /// </param>

        /// <param name="description">Description of the rule.
        /// </param>

        /// <param name="ipProtocols">Array of FirewallPolicyRuleNetworkProtocols.
        /// </param>

        /// <param name="sourceAddresses">List of source IP addresses for this rule.
        /// </param>

        /// <param name="destinationAddresses">List of destination IP addresses or Service Tags.
        /// </param>

        /// <param name="destinationPorts">List of destination ports.
        /// </param>

        /// <param name="sourceIPGroups">List of source IpGroups for this rule.
        /// </param>

        /// <param name="destinationIPGroups">List of destination IpGroups for this rule.
        /// </param>

        /// <param name="destinationFqdns">List of destination FQDNs.
        /// </param>
        public NetworkRule(string name = default(string), string description = default(string), System.Collections.Generic.IList<string> ipProtocols = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> sourceAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> destinationAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> destinationPorts = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> sourceIPGroups = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> destinationIPGroups = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> destinationFqdns = default(System.Collections.Generic.IList<string>))

        : base(name, description)
        {
            this.IPProtocols = ipProtocols;
            this.SourceAddresses = sourceAddresses;
            this.DestinationAddresses = destinationAddresses;
            this.DestinationPorts = destinationPorts;
            this.SourceIPGroups = sourceIPGroups;
            this.DestinationIPGroups = destinationIPGroups;
            this.DestinationFqdns = destinationFqdns;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets array of FirewallPolicyRuleNetworkProtocols.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipProtocols")]
        public System.Collections.Generic.IList<string> IPProtocols {get; set; }

        /// <summary>
        /// Gets or sets list of source IP addresses for this rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceAddresses")]
        public System.Collections.Generic.IList<string> SourceAddresses {get; set; }

        /// <summary>
        /// Gets or sets list of destination IP addresses or Service Tags.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationAddresses")]
        public System.Collections.Generic.IList<string> DestinationAddresses {get; set; }

        /// <summary>
        /// Gets or sets list of destination ports.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationPorts")]
        public System.Collections.Generic.IList<string> DestinationPorts {get; set; }

        /// <summary>
        /// Gets or sets list of source IpGroups for this rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceIpGroups")]
        public System.Collections.Generic.IList<string> SourceIPGroups {get; set; }

        /// <summary>
        /// Gets or sets list of destination IpGroups for this rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationIpGroups")]
        public System.Collections.Generic.IList<string> DestinationIPGroups {get; set; }

        /// <summary>
        /// Gets or sets list of destination FQDNs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "destinationFqdns")]
        public System.Collections.Generic.IList<string> DestinationFqdns {get; set; }
    }
}