// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the IpAllocation.
    /// </summary>
    public partial class IpAllocationPropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the IpAllocationPropertiesFormat class.
        /// </summary>
        public IpAllocationPropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IpAllocationPropertiesFormat class.
        /// </summary>

        /// <param name="subnet">The Subnet that using the prefix of this IpAllocation resource.
        /// </param>

        /// <param name="virtualNetwork">The VirtualNetwork that using the prefix of this IpAllocation resource.
        /// </param>

        /// <param name="type">The type for the IpAllocation.
        /// Possible values include: &#39;Undefined&#39;, &#39;Hypernet&#39;</param>

        /// <param name="prefix">The address prefix for the IpAllocation.
        /// </param>

        /// <param name="prefixLength">The address prefix length for the IpAllocation.
        /// </param>

        /// <param name="prefixType">The address prefix Type for the IpAllocation.
        /// Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;</param>

        /// <param name="ipamAllocationId">The IPAM allocation ID.
        /// </param>

        /// <param name="allocationTags">IpAllocation tags.
        /// </param>
        public IpAllocationPropertiesFormat(SubResource subnet = default(SubResource), SubResource virtualNetwork = default(SubResource), string type = default(string), string prefix = default(string), int? prefixLength = default(int?), string prefixType = default(string), string ipamAllocationId = default(string), System.Collections.Generic.IDictionary<string, string> allocationTags = default(System.Collections.Generic.IDictionary<string, string>))

        {
            this.Subnet = subnet;
            this.VirtualNetwork = virtualNetwork;
            this.Type = type;
            this.Prefix = prefix;
            this.PrefixLength = prefixLength;
            this.PrefixType = prefixType;
            this.IpamAllocationId = ipamAllocationId;
            this.AllocationTags = allocationTags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the Subnet that using the prefix of this IpAllocation resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnet")]
        public SubResource Subnet {get; private set; }

        /// <summary>
        /// Gets the VirtualNetwork that using the prefix of this IpAllocation
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualNetwork")]
        public SubResource VirtualNetwork {get; private set; }

        /// <summary>
        /// Gets or sets the type for the IpAllocation. Possible values include: &#39;Undefined&#39;, &#39;Hypernet&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the address prefix for the IpAllocation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "prefix")]
        public string Prefix {get; set; }

        /// <summary>
        /// Gets or sets the address prefix length for the IpAllocation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "prefixLength")]
        public int? PrefixLength {get; set; }

        /// <summary>
        /// Gets or sets the address prefix Type for the IpAllocation. Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "prefixType")]
        public string PrefixType {get; set; }

        /// <summary>
        /// Gets or sets the IPAM allocation ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipamAllocationId")]
        public string IpamAllocationId {get; set; }

        /// <summary>
        /// Gets or sets ipAllocation tags.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allocationTags")]
        public System.Collections.Generic.IDictionary<string, string> AllocationTags {get; set; }
    }
}