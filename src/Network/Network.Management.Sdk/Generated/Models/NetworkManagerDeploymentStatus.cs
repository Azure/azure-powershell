// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Network Manager Deployment Status.
    /// </summary>
    public partial class NetworkManagerDeploymentStatus
    {
        /// <summary>
        /// Initializes a new instance of the NetworkManagerDeploymentStatus class.
        /// </summary>
        public NetworkManagerDeploymentStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkManagerDeploymentStatus class.
        /// </summary>

        /// <param name="commitTime">Commit Time.
        /// </param>

        /// <param name="region">Region Name.
        /// </param>

        /// <param name="deploymentStatus">Deployment Status.
        /// Possible values include: &#39;NotStarted&#39;, &#39;Deploying&#39;, &#39;Deployed&#39;, &#39;Failed&#39;</param>

        /// <param name="configurationIds">List of configuration ids.
        /// </param>

        /// <param name="deploymentType">Configuration Deployment Type.
        /// Possible values include: &#39;SecurityAdmin&#39;, &#39;Connectivity&#39;</param>

        /// <param name="errorMessage">Error Message.
        /// </param>
        public NetworkManagerDeploymentStatus(System.DateTime? commitTime = default(System.DateTime?), string region = default(string), string deploymentStatus = default(string), System.Collections.Generic.IList<string> configurationIds = default(System.Collections.Generic.IList<string>), string deploymentType = default(string), string errorMessage = default(string))

        {
            this.CommitTime = commitTime;
            this.Region = region;
            this.DeploymentStatus = deploymentStatus;
            this.ConfigurationIds = configurationIds;
            this.DeploymentType = deploymentType;
            this.ErrorMessage = errorMessage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets commit Time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "commitTime")]
        public System.DateTime? CommitTime {get; set; }

        /// <summary>
        /// Gets or sets region Name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "region")]
        public string Region {get; set; }

        /// <summary>
        /// Gets or sets deployment Status. Possible values include: &#39;NotStarted&#39;, &#39;Deploying&#39;, &#39;Deployed&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deploymentStatus")]
        public string DeploymentStatus {get; set; }

        /// <summary>
        /// Gets or sets list of configuration ids.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configurationIds")]
        public System.Collections.Generic.IList<string> ConfigurationIds {get; set; }

        /// <summary>
        /// Gets or sets configuration Deployment Type. Possible values include: &#39;SecurityAdmin&#39;, &#39;Connectivity&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deploymentType")]
        public string DeploymentType {get; set; }

        /// <summary>
        /// Gets or sets error Message.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage {get; set; }
    }
}