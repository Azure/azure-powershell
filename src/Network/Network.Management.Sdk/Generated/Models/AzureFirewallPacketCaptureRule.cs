// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Group of src/dest ips and ports to be captured.
    /// </summary>
    public partial class AzureFirewallPacketCaptureRule
    {
        /// <summary>
        /// Initializes a new instance of the AzureFirewallPacketCaptureRule
        /// class.
        /// </summary>
        public AzureFirewallPacketCaptureRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureFirewallPacketCaptureRule
        /// class.
        /// </summary>
        /// <param name="sources">List of source IP addresses/subnets to be
        /// captured.</param>
        /// <param name="destinations">List of destination IP addresses/subnets
        /// to be captured.</param>
        /// <param name="destinationPorts">List of ports to be
        /// captured.</param>
        public AzureFirewallPacketCaptureRule(IList<string> sources = default(IList<string>), IList<string> destinations = default(IList<string>), IList<string> destinationPorts = default(IList<string>))
        {
            Sources = sources;
            Destinations = destinations;
            DestinationPorts = destinationPorts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets list of source IP addresses/subnets to be captured.
        /// </summary>
        [JsonProperty(PropertyName = "sources")]
        public IList<string> Sources { get; set; }

        /// <summary>
        /// Gets or sets list of destination IP addresses/subnets to be
        /// captured.
        /// </summary>
        [JsonProperty(PropertyName = "destinations")]
        public IList<string> Destinations { get; set; }

        /// <summary>
        /// Gets or sets list of ports to be captured.
        /// </summary>
        [JsonProperty(PropertyName = "destinationPorts")]
        public IList<string> DestinationPorts { get; set; }

    }
}
