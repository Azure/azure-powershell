// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Connection draining allows open connections to a backend server to be
    /// active for a specified time after the backend server got removed from the
    /// configuration.
    /// </summary>
    public partial class ApplicationGatewayConnectionDraining
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayConnectionDraining class.
        /// </summary>
        public ApplicationGatewayConnectionDraining()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayConnectionDraining class.
        /// </summary>

        /// <param name="enabled">Whether connection draining is enabled or not.
        /// </param>

        /// <param name="drainTimeoutInSec">The number of seconds connection draining is active. Acceptable values are
        /// from 1 second to 3600 seconds.
        /// </param>
        public ApplicationGatewayConnectionDraining(bool enabled, int drainTimeoutInSec)

        {
            this.Enabled = enabled;
            this.DrainTimeoutInSec = drainTimeoutInSec;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets whether connection draining is enabled or not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool Enabled {get; set; }

        /// <summary>
        /// Gets or sets the number of seconds connection draining is active.
        /// Acceptable values are from 1 second to 3600 seconds.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "drainTimeoutInSec")]
        public int DrainTimeoutInSec {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DrainTimeoutInSec > 3600)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "DrainTimeoutInSec", 3600);
            }
            if (this.DrainTimeoutInSec < 1)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "DrainTimeoutInSec", 1);
            }
        }
    }
}