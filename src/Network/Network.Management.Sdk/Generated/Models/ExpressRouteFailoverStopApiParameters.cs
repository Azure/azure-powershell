// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Start packet capture parameters on virtual network gateway.
    /// </summary>
    public partial class ExpressRouteFailoverStopApiParameters
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverStopApiParameters class.
        /// </summary>
        public ExpressRouteFailoverStopApiParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverStopApiParameters class.
        /// </summary>

        /// <param name="peeringLocation">Peering location of the test
        /// </param>

        /// <param name="wasSimulationSuccessful">Whether the failover simulation was successful or not
        /// </param>

        /// <param name="details">List of all the failover connections for this peering location
        /// </param>
        public ExpressRouteFailoverStopApiParameters(string peeringLocation = default(string), bool? wasSimulationSuccessful = default(bool?), System.Collections.Generic.IList<FailoverConnectionDetails> details = default(System.Collections.Generic.IList<FailoverConnectionDetails>))

        {
            this.PeeringLocation = peeringLocation;
            this.WasSimulationSuccessful = wasSimulationSuccessful;
            this.Details = details;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets peering location of the test
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "peeringLocation")]
        public string PeeringLocation {get; set; }

        /// <summary>
        /// Gets or sets whether the failover simulation was successful or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "wasSimulationSuccessful")]
        public bool? WasSimulationSuccessful {get; set; }

        /// <summary>
        /// Gets or sets list of all the failover connections for this peering location
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "details")]
        public System.Collections.Generic.IList<FailoverConnectionDetails> Details {get; set; }
    }
}