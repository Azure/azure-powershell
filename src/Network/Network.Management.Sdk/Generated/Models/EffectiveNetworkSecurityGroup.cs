// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Effective network security group.
    /// </summary>
    public partial class EffectiveNetworkSecurityGroup
    {
        /// <summary>
        /// Initializes a new instance of the EffectiveNetworkSecurityGroup class.
        /// </summary>
        public EffectiveNetworkSecurityGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EffectiveNetworkSecurityGroup class.
        /// </summary>

        /// <param name="networkSecurityGroup">The ID of network security group that is applied.
        /// </param>

        /// <param name="association">Associated resources.
        /// </param>

        /// <param name="effectiveSecurityRules">A collection of effective security rules.
        /// </param>

        /// <param name="tagMap">Mapping of tags to list of IP Addresses included within the tag.
        /// </param>
        public EffectiveNetworkSecurityGroup(SubResource networkSecurityGroup = default(SubResource), EffectiveNetworkSecurityGroupAssociation association = default(EffectiveNetworkSecurityGroupAssociation), System.Collections.Generic.IList<EffectiveNetworkSecurityRule> effectiveSecurityRules = default(System.Collections.Generic.IList<EffectiveNetworkSecurityRule>), System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>> tagMap = default(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>))

        {
            this.NetworkSecurityGroup = networkSecurityGroup;
            this.Association = association;
            this.EffectiveSecurityRules = effectiveSecurityRules;
            this.TagMap = tagMap;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of network security group that is applied.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkSecurityGroup")]
        public SubResource NetworkSecurityGroup {get; set; }

        /// <summary>
        /// Gets or sets associated resources.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "association")]
        public EffectiveNetworkSecurityGroupAssociation Association {get; set; }

        /// <summary>
        /// Gets or sets a collection of effective security rules.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "effectiveSecurityRules")]
        public System.Collections.Generic.IList<EffectiveNetworkSecurityRule> EffectiveSecurityRules {get; set; }

        /// <summary>
        /// Gets or sets mapping of tags to list of IP Addresses included within the
        /// tag.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tagMap")]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>> TagMap {get; set; }
    }
}