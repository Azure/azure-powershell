// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Scope connection.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ScopeConnectionProperties
    {
        /// <summary>
        /// Initializes a new instance of the ScopeConnectionProperties class.
        /// </summary>
        public ScopeConnectionProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScopeConnectionProperties class.
        /// </summary>

        /// <param name="tenantId">Tenant ID.
        /// </param>

        /// <param name="resourceId">Resource ID.
        /// </param>

        /// <param name="connectionState">Connection State
        /// Possible values include: &#39;Connected&#39;, &#39;Pending&#39;, &#39;Conflict&#39;, &#39;Revoked&#39;,
        /// &#39;Rejected&#39;</param>

        /// <param name="description">A description of the scope connection.
        /// </param>
        public ScopeConnectionProperties(string tenantId = default(string), string resourceId = default(string), string connectionState = default(string), string description = default(string))

        {
            this.TenantId = tenantId;
            this.ResourceId = resourceId;
            this.ConnectionState = connectionState;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets tenant ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; set; }

        /// <summary>
        /// Gets or sets resource ID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets connection State Possible values include: &#39;Connected&#39;, &#39;Pending&#39;, &#39;Conflict&#39;, &#39;Revoked&#39;, &#39;Rejected&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionState")]
        public string ConnectionState {get; private set; }

        /// <summary>
        /// Gets or sets a description of the scope connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
    }
}