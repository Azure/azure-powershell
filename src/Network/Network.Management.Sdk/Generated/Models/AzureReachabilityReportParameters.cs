// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Geographic and time constraints for Azure reachability report.
    /// </summary>
    public partial class AzureReachabilityReportParameters
    {
        /// <summary>
        /// Initializes a new instance of the AzureReachabilityReportParameters class.
        /// </summary>
        public AzureReachabilityReportParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureReachabilityReportParameters class.
        /// </summary>

        /// <param name="providerLocation">Parameters that define a geographic location.
        /// </param>

        /// <param name="providers">List of Internet service providers.
        /// </param>

        /// <param name="azureLocations">Optional Azure regions to scope the query to.
        /// </param>

        /// <param name="startTime">The start time for the Azure reachability report.
        /// </param>

        /// <param name="endTime">The end time for the Azure reachability report.
        /// </param>
        public AzureReachabilityReportParameters(AzureReachabilityReportLocation providerLocation, System.DateTime startTime, System.DateTime endTime, System.Collections.Generic.IList<string> providers = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> azureLocations = default(System.Collections.Generic.IList<string>))

        {
            this.ProviderLocation = providerLocation;
            this.Providers = providers;
            this.AzureLocations = azureLocations;
            this.StartTime = startTime;
            this.EndTime = endTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets parameters that define a geographic location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "providerLocation")]
        public AzureReachabilityReportLocation ProviderLocation {get; set; }

        /// <summary>
        /// Gets or sets list of Internet service providers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "providers")]
        public System.Collections.Generic.IList<string> Providers {get; set; }

        /// <summary>
        /// Gets or sets optional Azure regions to scope the query to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureLocations")]
        public System.Collections.Generic.IList<string> AzureLocations {get; set; }

        /// <summary>
        /// Gets or sets the start time for the Azure reachability report.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTime StartTime {get; set; }

        /// <summary>
        /// Gets or sets the end time for the Azure reachability report.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTime EndTime {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ProviderLocation == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ProviderLocation");
            }
            if (this.ProviderLocation != null)
            {
                this.ProviderLocation.Validate();
            }


        }
    }
}