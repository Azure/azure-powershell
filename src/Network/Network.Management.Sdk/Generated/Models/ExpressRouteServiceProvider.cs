// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// A ExpressRouteResourceProvider object.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ExpressRouteServiceProvider : Resource
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteServiceProvider class.
        /// </summary>
        public ExpressRouteServiceProvider()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteServiceProvider class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the express route service provider resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="peeringLocations">A list of peering locations.
        /// </param>

        /// <param name="bandwidthsOffered">A list of bandwidths offered.
        /// </param>
        public ExpressRouteServiceProvider(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string provisioningState = default(string), System.Collections.Generic.IList<string> peeringLocations = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<ExpressRouteServiceProviderBandwidthsOffered> bandwidthsOffered = default(System.Collections.Generic.IList<ExpressRouteServiceProviderBandwidthsOffered>))

        : base(id, name, type, location, tags)
        {
            this.ProvisioningState = provisioningState;
            this.PeeringLocations = peeringLocations;
            this.BandwidthsOffered = bandwidthsOffered;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the provisioning state of the express route service provider resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets a list of peering locations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.peeringLocations")]
        public System.Collections.Generic.IList<string> PeeringLocations {get; set; }

        /// <summary>
        /// Gets or sets a list of bandwidths offered.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.bandwidthsOffered")]
        public System.Collections.Generic.IList<ExpressRouteServiceProviderBandwidthsOffered> BandwidthsOffered {get; set; }
    }
}