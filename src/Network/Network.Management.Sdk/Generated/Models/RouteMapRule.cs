// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// A RouteMap Rule.
    /// </summary>
    public partial class RouteMapRule
    {
        /// <summary>
        /// Initializes a new instance of the RouteMapRule class.
        /// </summary>
        public RouteMapRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RouteMapRule class.
        /// </summary>

        /// <param name="name">The unique name for the rule.
        /// </param>

        /// <param name="matchCriteria">List of matching criterion which will be applied to traffic.
        /// </param>

        /// <param name="actions">List of actions which will be applied on a match.
        /// </param>

        /// <param name="nextStepIfMatched">Next step after rule is evaluated. Current supported behaviors are
        /// &#39;Continue&#39;(to next rule) and &#39;Terminate&#39;.
        /// Possible values include: &#39;Unknown&#39;, &#39;Continue&#39;, &#39;Terminate&#39;</param>
        public RouteMapRule(string name = default(string), System.Collections.Generic.IList<Criterion> matchCriteria = default(System.Collections.Generic.IList<Criterion>), System.Collections.Generic.IList<Action> actions = default(System.Collections.Generic.IList<Action>), string nextStepIfMatched = default(string))

        {
            this.Name = name;
            this.MatchCriteria = matchCriteria;
            this.Actions = actions;
            this.NextStepIfMatched = nextStepIfMatched;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the unique name for the rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets list of matching criterion which will be applied to traffic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "matchCriteria")]
        public System.Collections.Generic.IList<Criterion> MatchCriteria {get; set; }

        /// <summary>
        /// Gets or sets list of actions which will be applied on a match.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "actions")]
        public System.Collections.Generic.IList<Action> Actions {get; set; }

        /// <summary>
        /// Gets or sets next step after rule is evaluated. Current supported behaviors
        /// are &#39;Continue&#39;(to next rule) and &#39;Terminate&#39;. Possible values include: &#39;Unknown&#39;, &#39;Continue&#39;, &#39;Terminate&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextStepIfMatched")]
        public string NextStepIfMatched {get; set; }
    }
}