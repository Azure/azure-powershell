// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Allow to exclude some variable satisfy the condition for the WAF check.
    /// </summary>
    public partial class ApplicationGatewayFirewallExclusion
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayFirewallExclusion class.
        /// </summary>
        public ApplicationGatewayFirewallExclusion()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayFirewallExclusion class.
        /// </summary>

        /// <param name="matchVariable">The variable to be excluded.
        /// </param>

        /// <param name="selectorMatchOperator">When matchVariable is a collection, operate on the selector to specify
        /// which elements in the collection this exclusion applies to.
        /// </param>

        /// <param name="selector">When matchVariable is a collection, operator used to specify which elements
        /// in the collection this exclusion applies to.
        /// </param>
        public ApplicationGatewayFirewallExclusion(string matchVariable, string selectorMatchOperator, string selector)

        {
            this.MatchVariable = matchVariable;
            this.SelectorMatchOperator = selectorMatchOperator;
            this.Selector = selector;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the variable to be excluded.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "matchVariable")]
        public string MatchVariable {get; set; }

        /// <summary>
        /// Gets or sets when matchVariable is a collection, operate on the selector to
        /// specify which elements in the collection this exclusion applies to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "selectorMatchOperator")]
        public string SelectorMatchOperator {get; set; }

        /// <summary>
        /// Gets or sets when matchVariable is a collection, operator used to specify
        /// which elements in the collection this exclusion applies to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "selector")]
        public string Selector {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.MatchVariable == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "MatchVariable");
            }
            if (this.SelectorMatchOperator == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SelectorMatchOperator");
            }
            if (this.Selector == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Selector");
            }



        }
    }
}