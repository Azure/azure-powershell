// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// ExpressRoute failover test details
    /// </summary>
    public partial class ExpressRouteFailoverTestDetails
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverTestDetails class.
        /// </summary>
        public ExpressRouteFailoverTestDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverTestDetails class.
        /// </summary>

        /// <param name="peeringLocation">Peering location of the test
        /// </param>

        /// <param name="circuits">All circuits in the peering location
        /// </param>

        /// <param name="status">The current status of the test
        /// Possible values include: &#39;NotStarted&#39;, &#39;Starting&#39;, &#39;Running&#39;,
        /// &#39;StartFailed&#39;, &#39;Stopping&#39;, &#39;Completed&#39;, &#39;StopFailed&#39;, &#39;Invalid&#39;, &#39;Expired&#39;</param>

        /// <param name="startTime">Time when the test was started
        /// </param>

        /// <param name="endTime">Time when the test was completed
        /// </param>

        /// <param name="connections">All connections to the circuits in the peering location
        /// </param>

        /// <param name="testGuid">The unique GUID associated with the test
        /// </param>

        /// <param name="testType">The type of failover test
        /// Possible values include: &#39;SingleSiteFailover&#39;, &#39;MultiSiteFailover&#39;, &#39;All&#39;</param>

        /// <param name="issues">A list of all issues with the test
        /// </param>
        public ExpressRouteFailoverTestDetails(string peeringLocation = default(string), System.Collections.Generic.IList<ExpressRouteFailoverCircuitResourceDetails> circuits = default(System.Collections.Generic.IList<ExpressRouteFailoverCircuitResourceDetails>), string status = default(string), string startTime = default(string), string endTime = default(string), System.Collections.Generic.IList<ExpressRouteFailoverConnectionResourceDetails> connections = default(System.Collections.Generic.IList<ExpressRouteFailoverConnectionResourceDetails>), string testGuid = default(string), string testType = default(string), System.Collections.Generic.IList<string> issues = default(System.Collections.Generic.IList<string>))

        {
            this.PeeringLocation = peeringLocation;
            this.Circuits = circuits;
            this.Status = status;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Connections = connections;
            this.TestGuid = testGuid;
            this.TestType = testType;
            this.Issues = issues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets peering location of the test
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "peeringLocation")]
        public string PeeringLocation {get; set; }

        /// <summary>
        /// Gets or sets all circuits in the peering location
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "circuits")]
        public System.Collections.Generic.IList<ExpressRouteFailoverCircuitResourceDetails> Circuits {get; set; }

        /// <summary>
        /// Gets or sets the current status of the test Possible values include: &#39;NotStarted&#39;, &#39;Starting&#39;, &#39;Running&#39;, &#39;StartFailed&#39;, &#39;Stopping&#39;, &#39;Completed&#39;, &#39;StopFailed&#39;, &#39;Invalid&#39;, &#39;Expired&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets time when the test was started
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public string StartTime {get; set; }

        /// <summary>
        /// Gets or sets time when the test was completed
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public string EndTime {get; set; }

        /// <summary>
        /// Gets or sets all connections to the circuits in the peering location
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connections")]
        public System.Collections.Generic.IList<ExpressRouteFailoverConnectionResourceDetails> Connections {get; set; }

        /// <summary>
        /// Gets or sets the unique GUID associated with the test
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testGuid")]
        public string TestGuid {get; set; }

        /// <summary>
        /// Gets or sets the type of failover test Possible values include: &#39;SingleSiteFailover&#39;, &#39;MultiSiteFailover&#39;, &#39;All&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "testType")]
        public string TestType {get; set; }

        /// <summary>
        /// Gets or sets a list of all issues with the test
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "issues")]
        public System.Collections.Generic.IList<string> Issues {get; set; }
    }
}