// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    public partial class ExpressRouteFailoverCircuitResourceDetails
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverCircuitResourceDetails class.
        /// </summary>
        public ExpressRouteFailoverCircuitResourceDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteFailoverCircuitResourceDetails class.
        /// </summary>

        /// <param name="nrpResourceUri">NRP Resource URI of the circuit
        /// </param>

        /// <param name="name">Circuit Name
        /// </param>

        /// <param name="connectionName">Connection name associated with the circuit
        /// </param>
        public ExpressRouteFailoverCircuitResourceDetails(string nrpResourceUri = default(string), string name = default(string), string connectionName = default(string))

        {
            this.NrpResourceUri = nrpResourceUri;
            this.Name = name;
            this.ConnectionName = connectionName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets nRP Resource URI of the circuit
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nrpResourceUri")]
        public string NrpResourceUri {get; set; }

        /// <summary>
        /// Gets or sets circuit Name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets connection name associated with the circuit
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionName")]
        public string ConnectionName {get; set; }
    }
}