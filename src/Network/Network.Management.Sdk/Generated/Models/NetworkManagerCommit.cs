// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Network Manager Commit.
    /// </summary>
    public partial class NetworkManagerCommit
    {
        /// <summary>
        /// Initializes a new instance of the NetworkManagerCommit class.
        /// </summary>
        public NetworkManagerCommit()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkManagerCommit class.
        /// </summary>

        /// <param name="commitId">Commit Id.
        /// </param>

        /// <param name="targetLocations">List of target locations.
        /// </param>

        /// <param name="configurationIds">List of configuration ids.
        /// </param>

        /// <param name="commitType">Commit Type.
        /// Possible values include: &#39;SecurityAdmin&#39;, &#39;Connectivity&#39;</param>
        public NetworkManagerCommit(System.Collections.Generic.IList<string> targetLocations, string commitType, string commitId = default(string), System.Collections.Generic.IList<string> configurationIds = default(System.Collections.Generic.IList<string>))

        {
            this.CommitId = commitId;
            this.TargetLocations = targetLocations;
            this.ConfigurationIds = configurationIds;
            this.CommitType = commitType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets commit Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "commitId")]
        public string CommitId {get; private set; }

        /// <summary>
        /// Gets or sets list of target locations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetLocations")]
        public System.Collections.Generic.IList<string> TargetLocations {get; set; }

        /// <summary>
        /// Gets or sets list of configuration ids.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configurationIds")]
        public System.Collections.Generic.IList<string> ConfigurationIds {get; set; }

        /// <summary>
        /// Gets or sets commit Type. Possible values include: &#39;SecurityAdmin&#39;, &#39;Connectivity&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "commitType")]
        public string CommitType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.TargetLocations == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetLocations");
            }
            if (this.CommitType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CommitType");
            }




        }
    }
}