// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Container network interface child resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ContainerNetworkInterface : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ContainerNetworkInterface class.
        /// </summary>
        public ContainerNetworkInterface()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerNetworkInterface class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">The name of the resource. This name can be used to access the resource.
        /// </param>

        /// <param name="type">Sub Resource type.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="container">Reference to the container to which this container network interface is
        /// attached.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the container network interface resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="containerNetworkInterfaceConfiguration">Container network interface configuration from which this container network
        /// interface is created.
        /// </param>

        /// <param name="ipConfigurations">Reference to the ip configuration on this container nic.
        /// </param>
        public ContainerNetworkInterface(string id = default(string), string name = default(string), string type = default(string), string etag = default(string), Container container = default(Container), string provisioningState = default(string), ContainerNetworkInterfaceConfiguration containerNetworkInterfaceConfiguration = default(ContainerNetworkInterfaceConfiguration), System.Collections.Generic.IList<ContainerNetworkInterfaceIpConfiguration> ipConfigurations = default(System.Collections.Generic.IList<ContainerNetworkInterfaceIpConfiguration>))

        : base(id)
        {
            this.Name = name;
            this.Type = type;
            this.Etag = etag;
            this.Container = container;
            this.ProvisioningState = provisioningState;
            this.ContainerNetworkInterfaceConfiguration = containerNetworkInterfaceConfiguration;
            this.IPConfigurations = ipConfigurations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the resource. This name can be used to access the
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets sub Resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets reference to the container to which this container network
        /// interface is attached.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.container")]
        public Container Container {get; set; }

        /// <summary>
        /// Gets the provisioning state of the container network interface resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets container network interface configuration from which this container
        /// network interface is created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.containerNetworkInterfaceConfiguration")]
        public ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfiguration {get; private set; }

        /// <summary>
        /// Gets reference to the ip configuration on this container nic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<ContainerNetworkInterfaceIpConfiguration> IPConfigurations {get; private set; }
    }
}