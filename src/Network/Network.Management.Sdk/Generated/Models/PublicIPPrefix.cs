// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Public IP prefix resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PublicIPPrefix : Resource
    {
        /// <summary>
        /// Initializes a new instance of the PublicIPPrefix class.
        /// </summary>
        public PublicIPPrefix()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PublicIPPrefix class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="extendedLocation">The extended location of the public ip address.
        /// </param>

        /// <param name="sku">The public IP prefix SKU.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="zones">A list of availability zones denoting the IP allocated for the resource
        /// needs to come from.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the public IP prefix resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="natGateway">NatGateway of Public IP Prefix.
        /// </param>

        /// <param name="publicIPAddressVersion">The public IP address version.
        /// Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;</param>

        /// <param name="ipTags">The list of tags associated with the public IP prefix.
        /// </param>

        /// <param name="prefixLength">The Length of the Public IP Prefix.
        /// </param>

        /// <param name="ipPrefix">The allocated Prefix.
        /// </param>

        /// <param name="publicIPAddresses">The list of all referenced PublicIPAddresses.
        /// </param>

        /// <param name="loadBalancerFrontendIPConfiguration">The reference to load balancer frontend IP configuration associated with
        /// the public IP prefix.
        /// </param>

        /// <param name="customIPPrefix">The customIpPrefix that this prefix is associated with.
        /// </param>

        /// <param name="resourceGuid">The resource GUID property of the public IP prefix resource.
        /// </param>
        public PublicIPPrefix(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ExtendedLocation extendedLocation = default(ExtendedLocation), PublicIPPrefixSku sku = default(PublicIPPrefixSku), string etag = default(string), System.Collections.Generic.IList<string> zones = default(System.Collections.Generic.IList<string>), string provisioningState = default(string), NatGateway natGateway = default(NatGateway), string publicIPAddressVersion = default(string), System.Collections.Generic.IList<IpTag> ipTags = default(System.Collections.Generic.IList<IpTag>), int? prefixLength = default(int?), string ipPrefix = default(string), System.Collections.Generic.IList<ReferencedPublicIpAddress> publicIPAddresses = default(System.Collections.Generic.IList<ReferencedPublicIpAddress>), SubResource loadBalancerFrontendIPConfiguration = default(SubResource), SubResource customIPPrefix = default(SubResource), string resourceGuid = default(string))

        : base(id, name, type, location, tags)
        {
            this.ExtendedLocation = extendedLocation;
            this.Sku = sku;
            this.Etag = etag;
            this.Zones = zones;
            this.ProvisioningState = provisioningState;
            this.NatGateway = natGateway;
            this.PublicIPAddressVersion = publicIPAddressVersion;
            this.IPTags = ipTags;
            this.PrefixLength = prefixLength;
            this.IPPrefix = ipPrefix;
            this.PublicIPAddresses = publicIPAddresses;
            this.LoadBalancerFrontendIPConfiguration = loadBalancerFrontendIPConfiguration;
            this.CustomIPPrefix = customIPPrefix;
            this.ResourceGuid = resourceGuid;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the extended location of the public ip address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation {get; set; }

        /// <summary>
        /// Gets or sets the public IP prefix SKU.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public PublicIPPrefixSku Sku {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets a list of availability zones denoting the IP allocated for the
        /// resource needs to come from.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zones")]
        public System.Collections.Generic.IList<string> Zones {get; set; }

        /// <summary>
        /// Gets the provisioning state of the public IP prefix resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets natGateway of Public IP Prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.natGateway")]
        public NatGateway NatGateway {get; set; }

        /// <summary>
        /// Gets or sets the public IP address version. Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicIPAddressVersion")]
        public string PublicIPAddressVersion {get; set; }

        /// <summary>
        /// Gets or sets the list of tags associated with the public IP prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipTags")]
        public System.Collections.Generic.IList<IpTag> IPTags {get; set; }

        /// <summary>
        /// Gets or sets the Length of the Public IP Prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.prefixLength")]
        public int? PrefixLength {get; set; }

        /// <summary>
        /// Gets the allocated Prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipPrefix")]
        public string IPPrefix {get; private set; }

        /// <summary>
        /// Gets the list of all referenced PublicIPAddresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicIPAddresses")]
        public System.Collections.Generic.IList<ReferencedPublicIpAddress> PublicIPAddresses {get; private set; }

        /// <summary>
        /// Gets the reference to load balancer frontend IP configuration associated
        /// with the public IP prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.loadBalancerFrontendIpConfiguration")]
        public SubResource LoadBalancerFrontendIPConfiguration {get; private set; }

        /// <summary>
        /// Gets or sets the customIpPrefix that this prefix is associated with.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.customIPPrefix")]
        public SubResource CustomIPPrefix {get; set; }

        /// <summary>
        /// Gets the resource GUID property of the public IP prefix resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceGuid")]
        public string ResourceGuid {get; private set; }
    }
}