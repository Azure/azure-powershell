// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Defines a managed rule set rule group
    /// </summary>
    public partial class ManagedRuleSetRuleGroup
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRuleSetRuleGroup class.
        /// </summary>
        public ManagedRuleSetRuleGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRuleSetRuleGroup class.
        /// </summary>

        /// <param name="ruleGroupName">Name of the rule group
        /// </param>

        /// <param name="rules">List of rules within the rule group
        /// </param>
        public ManagedRuleSetRuleGroup(string ruleGroupName, System.Collections.Generic.IList<string> rules = default(System.Collections.Generic.IList<string>))

        {
            this.RuleGroupName = ruleGroupName;
            this.Rules = rules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the rule group
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ruleGroupName")]
        public string RuleGroupName {get; set; }

        /// <summary>
        /// Gets or sets list of rules within the rule group
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rules")]
        public System.Collections.Generic.IList<string> Rules {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RuleGroupName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RuleGroupName");
            }


        }
    }
}