// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters to get network configuration diagnostic.
    /// </summary>
    public partial class NetworkConfigurationDiagnosticParameters
    {
        /// <summary>
        /// Initializes a new instance of the NetworkConfigurationDiagnosticParameters class.
        /// </summary>
        public NetworkConfigurationDiagnosticParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkConfigurationDiagnosticParameters class.
        /// </summary>

        /// <param name="targetResourceId">The ID of the target resource to perform network configuration diagnostic.
        /// Valid options are VM, NetworkInterface, VMSS/NetworkInterface and
        /// Application Gateway.
        /// </param>

        /// <param name="verbosityLevel">Verbosity level.
        /// Possible values include: &#39;Normal&#39;, &#39;Minimum&#39;, &#39;Full&#39;</param>

        /// <param name="profiles">List of network configuration diagnostic profiles.
        /// </param>
        public NetworkConfigurationDiagnosticParameters(string targetResourceId, System.Collections.Generic.IList<NetworkConfigurationDiagnosticProfile> profiles, string verbosityLevel = default(string))

        {
            this.TargetResourceId = targetResourceId;
            this.VerbosityLevel = verbosityLevel;
            this.Profiles = profiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of the target resource to perform network configuration
        /// diagnostic. Valid options are VM, NetworkInterface, VMSS/NetworkInterface
        /// and Application Gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetResourceId")]
        public string TargetResourceId {get; set; }

        /// <summary>
        /// Gets or sets verbosity level. Possible values include: &#39;Normal&#39;, &#39;Minimum&#39;, &#39;Full&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "verbosityLevel")]
        public string VerbosityLevel {get; set; }

        /// <summary>
        /// Gets or sets list of network configuration diagnostic profiles.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "profiles")]
        public System.Collections.Generic.IList<NetworkConfigurationDiagnosticProfile> Profiles {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.TargetResourceId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TargetResourceId");
            }
            if (this.Profiles == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Profiles");
            }


            if (this.Profiles != null)
            {
                foreach (var element in this.Profiles)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}