// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Connectivity group item.
    /// </summary>
    public partial class ConnectivityGroupItem
    {
        /// <summary>
        /// Initializes a new instance of the ConnectivityGroupItem class.
        /// </summary>
        public ConnectivityGroupItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectivityGroupItem class.
        /// </summary>

        /// <param name="networkGroupId">Network group Id.
        /// </param>

        /// <param name="useHubGateway">Flag if need to use hub gateway.
        /// Possible values include: &#39;False&#39;, &#39;True&#39;</param>

        /// <param name="isGlobal">Flag if global is supported.
        /// Possible values include: &#39;False&#39;, &#39;True&#39;</param>

        /// <param name="groupConnectivity">Group connectivity type.
        /// Possible values include: &#39;None&#39;, &#39;DirectlyConnected&#39;</param>
        public ConnectivityGroupItem(string networkGroupId, string groupConnectivity, string useHubGateway = default(string), string isGlobal = default(string))

        {
            this.NetworkGroupId = networkGroupId;
            this.UseHubGateway = useHubGateway;
            this.IsGlobal = isGlobal;
            this.GroupConnectivity = groupConnectivity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets network group Id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkGroupId")]
        public string NetworkGroupId {get; set; }

        /// <summary>
        /// Gets or sets flag if need to use hub gateway. Possible values include: &#39;False&#39;, &#39;True&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "useHubGateway")]
        public string UseHubGateway {get; set; }

        /// <summary>
        /// Gets or sets flag if global is supported. Possible values include: &#39;False&#39;, &#39;True&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isGlobal")]
        public string IsGlobal {get; set; }

        /// <summary>
        /// Gets or sets group connectivity type. Possible values include: &#39;None&#39;, &#39;DirectlyConnected&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "groupConnectivity")]
        public string GroupConnectivity {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.NetworkGroupId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NetworkGroupId");
            }
            if (this.GroupConnectivity == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "GroupConnectivity");
            }




        }
    }
}