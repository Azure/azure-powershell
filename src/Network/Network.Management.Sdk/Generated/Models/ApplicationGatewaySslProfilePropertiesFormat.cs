// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of SSL profile of an application gateway.
    /// </summary>
    public partial class ApplicationGatewaySslProfilePropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewaySslProfilePropertiesFormat class.
        /// </summary>
        public ApplicationGatewaySslProfilePropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewaySslProfilePropertiesFormat class.
        /// </summary>

        /// <param name="trustedClientCertificates">Array of references to application gateway trusted client certificates.
        /// </param>

        /// <param name="sslPolicy">SSL policy of the application gateway resource.
        /// </param>

        /// <param name="clientAuthConfiguration">Client authentication configuration of the application gateway resource.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the HTTP listener resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public ApplicationGatewaySslProfilePropertiesFormat(System.Collections.Generic.IList<SubResource> trustedClientCertificates = default(System.Collections.Generic.IList<SubResource>), ApplicationGatewaySslPolicy sslPolicy = default(ApplicationGatewaySslPolicy), ApplicationGatewayClientAuthConfiguration clientAuthConfiguration = default(ApplicationGatewayClientAuthConfiguration), string provisioningState = default(string))

        {
            this.TrustedClientCertificates = trustedClientCertificates;
            this.SslPolicy = sslPolicy;
            this.ClientAuthConfiguration = clientAuthConfiguration;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets array of references to application gateway trusted client
        /// certificates.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "trustedClientCertificates")]
        public System.Collections.Generic.IList<SubResource> TrustedClientCertificates {get; set; }

        /// <summary>
        /// Gets or sets sSL policy of the application gateway resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sslPolicy")]
        public ApplicationGatewaySslPolicy SslPolicy {get; set; }

        /// <summary>
        /// Gets or sets client authentication configuration of the application gateway
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientAuthConfiguration")]
        public ApplicationGatewayClientAuthConfiguration ClientAuthConfiguration {get; set; }

        /// <summary>
        /// Gets the provisioning state of the HTTP listener resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}