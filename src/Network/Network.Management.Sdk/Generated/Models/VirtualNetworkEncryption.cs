// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Indicates if encryption is enabled on virtual network and if VM without
    /// encryption is allowed in encrypted VNet.
    /// </summary>
    public partial class VirtualNetworkEncryption
    {
        /// <summary>
        /// Initializes a new instance of the VirtualNetworkEncryption class.
        /// </summary>
        public VirtualNetworkEncryption()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualNetworkEncryption class.
        /// </summary>

        /// <param name="enabled">Indicates if encryption is enabled on the virtual network.
        /// </param>

        /// <param name="enforcement">If the encrypted VNet allows VM that does not support encryption
        /// Possible values include: &#39;DropUnencrypted&#39;, &#39;AllowUnencrypted&#39;</param>
        public VirtualNetworkEncryption(bool enabled, string enforcement = default(string))

        {
            this.Enabled = enabled;
            this.Enforcement = enforcement;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets indicates if encryption is enabled on the virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool Enabled {get; set; }

        /// <summary>
        /// Gets or sets if the encrypted VNet allows VM that does not support
        /// encryption Possible values include: &#39;DropUnencrypted&#39;, &#39;AllowUnencrypted&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enforcement")]
        public string Enforcement {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

        }
    }
}