// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// List of Vpn-Sites.
    /// </summary>
    public partial class GetVpnSitesConfigurationRequest
    {
        /// <summary>
        /// Initializes a new instance of the GetVpnSitesConfigurationRequest class.
        /// </summary>
        public GetVpnSitesConfigurationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetVpnSitesConfigurationRequest class.
        /// </summary>

        /// <param name="vpnSites">List of resource-ids of the vpn-sites for which config is to be downloaded.
        /// </param>

        /// <param name="outputBlobSasUrl">The sas-url to download the configurations for vpn-sites.
        /// </param>
        public GetVpnSitesConfigurationRequest(string outputBlobSasUrl, System.Collections.Generic.IList<string> vpnSites = default(System.Collections.Generic.IList<string>))

        {
            this.VpnSites = vpnSites;
            this.OutputBlobSasUrl = outputBlobSasUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of resource-ids of the vpn-sites for which config is to
        /// be downloaded.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnSites")]
        public System.Collections.Generic.IList<string> VpnSites {get; set; }

        /// <summary>
        /// Gets or sets the sas-url to download the configurations for vpn-sites.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "outputBlobSasUrl")]
        public string OutputBlobSasUrl {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.OutputBlobSasUrl == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "OutputBlobSasUrl");
            }


        }
    }
}