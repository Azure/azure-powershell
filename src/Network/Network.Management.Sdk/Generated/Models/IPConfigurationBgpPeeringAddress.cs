// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of IPConfigurationBgpPeeringAddress.
    /// </summary>
    public partial class IPConfigurationBgpPeeringAddress
    {
        /// <summary>
        /// Initializes a new instance of the IPConfigurationBgpPeeringAddress class.
        /// </summary>
        public IPConfigurationBgpPeeringAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IPConfigurationBgpPeeringAddress class.
        /// </summary>

        /// <param name="ipconfigurationId">The ID of IP configuration which belongs to gateway.
        /// </param>

        /// <param name="defaultBgpIPAddresses">The list of default BGP peering addresses which belong to IP configuration.
        /// </param>

        /// <param name="customBgpIPAddresses">The list of custom BGP peering addresses which belong to IP configuration.
        /// </param>

        /// <param name="tunnelIPAddresses">The list of tunnel public IP addresses which belong to IP configuration.
        /// </param>
        public IPConfigurationBgpPeeringAddress(string ipconfigurationId = default(string), System.Collections.Generic.IList<string> defaultBgpIPAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> customBgpIPAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> tunnelIPAddresses = default(System.Collections.Generic.IList<string>))

        {
            this.IpconfigurationId = ipconfigurationId;
            this.DefaultBgpIPAddresses = defaultBgpIPAddresses;
            this.CustomBgpIPAddresses = customBgpIPAddresses;
            this.TunnelIPAddresses = tunnelIPAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the ID of IP configuration which belongs to gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipconfigurationId")]
        public string IpconfigurationId {get; set; }

        /// <summary>
        /// Gets the list of default BGP peering addresses which belong to IP
        /// configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultBgpIpAddresses")]
        public System.Collections.Generic.IList<string> DefaultBgpIPAddresses {get; private set; }

        /// <summary>
        /// Gets or sets the list of custom BGP peering addresses which belong to IP
        /// configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customBgpIpAddresses")]
        public System.Collections.Generic.IList<string> CustomBgpIPAddresses {get; set; }

        /// <summary>
        /// Gets the list of tunnel public IP addresses which belong to IP
        /// configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tunnelIpAddresses")]
        public System.Collections.Generic.IList<string> TunnelIPAddresses {get; private set; }
    }
}