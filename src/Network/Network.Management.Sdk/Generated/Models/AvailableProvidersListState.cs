// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// State details.
    /// </summary>
    public partial class AvailableProvidersListState
    {
        /// <summary>
        /// Initializes a new instance of the AvailableProvidersListState class.
        /// </summary>
        public AvailableProvidersListState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailableProvidersListState class.
        /// </summary>

        /// <param name="stateName">The state name.
        /// </param>

        /// <param name="providers">A list of Internet service providers.
        /// </param>

        /// <param name="cities">List of available cities or towns in the state.
        /// </param>
        public AvailableProvidersListState(string stateName = default(string), System.Collections.Generic.IList<string> providers = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<AvailableProvidersListCity> cities = default(System.Collections.Generic.IList<AvailableProvidersListCity>))

        {
            this.StateName = stateName;
            this.Providers = providers;
            this.Cities = cities;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the state name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "stateName")]
        public string StateName {get; set; }

        /// <summary>
        /// Gets or sets a list of Internet service providers.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "providers")]
        public System.Collections.Generic.IList<string> Providers {get; set; }

        /// <summary>
        /// Gets or sets list of available cities or towns in the state.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cities")]
        public System.Collections.Generic.IList<AvailableProvidersListCity> Cities {get; set; }
    }
}