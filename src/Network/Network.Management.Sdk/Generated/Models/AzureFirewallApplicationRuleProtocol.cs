// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the application rule protocol.
    /// </summary>
    public partial class AzureFirewallApplicationRuleProtocol
    {
        /// <summary>
        /// Initializes a new instance of the AzureFirewallApplicationRuleProtocol class.
        /// </summary>
        public AzureFirewallApplicationRuleProtocol()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureFirewallApplicationRuleProtocol class.
        /// </summary>

        /// <param name="protocolType">Protocol type.
        /// Possible values include: &#39;Http&#39;, &#39;Https&#39;, &#39;Mssql&#39;</param>

        /// <param name="port">Port number for the protocol, cannot be greater than 64000. This field is
        /// optional.
        /// </param>
        public AzureFirewallApplicationRuleProtocol(string protocolType = default(string), int? port = default(int?))

        {
            this.ProtocolType = protocolType;
            this.Port = port;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets protocol type. Possible values include: &#39;Http&#39;, &#39;Https&#39;, &#39;Mssql&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protocolType")]
        public string ProtocolType {get; set; }

        /// <summary>
        /// Gets or sets port number for the protocol, cannot be greater than 64000.
        /// This field is optional.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "port")]
        public int? Port {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.Port != null)
            {
                if (this.Port > 64000)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "Port", 64000);
                }
                if (this.Port < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "Port", 0);
                }
            }
        }
    }
}