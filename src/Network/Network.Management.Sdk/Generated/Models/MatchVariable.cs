// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Define match variables.
    /// </summary>
    public partial class MatchVariable
    {
        /// <summary>
        /// Initializes a new instance of the MatchVariable class.
        /// </summary>
        public MatchVariable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MatchVariable class.
        /// </summary>

        /// <param name="variableName">Match Variable.
        /// Possible values include: &#39;RemoteAddr&#39;, &#39;RequestMethod&#39;, &#39;QueryString&#39;,
        /// &#39;PostArgs&#39;, &#39;RequestUri&#39;, &#39;RequestHeaders&#39;, &#39;RequestBody&#39;, &#39;RequestCookies&#39;</param>

        /// <param name="selector">The selector of match variable.
        /// </param>
        public MatchVariable(string variableName, string selector = default(string))

        {
            this.VariableName = variableName;
            this.Selector = selector;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets match Variable. Possible values include: &#39;RemoteAddr&#39;, &#39;RequestMethod&#39;, &#39;QueryString&#39;, &#39;PostArgs&#39;, &#39;RequestUri&#39;, &#39;RequestHeaders&#39;, &#39;RequestBody&#39;, &#39;RequestCookies&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "variableName")]
        public string VariableName {get; set; }

        /// <summary>
        /// Gets or sets the selector of match variable.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "selector")]
        public string Selector {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VariableName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "VariableName");
            }


        }
    }
}