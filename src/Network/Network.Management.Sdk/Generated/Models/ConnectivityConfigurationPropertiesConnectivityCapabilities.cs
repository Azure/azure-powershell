// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Collection of additional settings to enhance specific topology behaviors of
    /// the connectivity configuration resource.
    /// </summary>
    public partial class ConnectivityConfigurationPropertiesConnectivityCapabilities
    {
        /// <summary>
        /// Initializes a new instance of the ConnectivityConfigurationPropertiesConnectivityCapabilities class.
        /// </summary>
        public ConnectivityConfigurationPropertiesConnectivityCapabilities()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectivityConfigurationPropertiesConnectivityCapabilities class.
        /// </summary>

        /// <param name="connectedGroupPrivateEndpointScale">Option indicating the scale of private endpoints allowed in the connected
        /// group of the connectivity configuration.
        /// Possible values include: &#39;Standard&#39;, &#39;HighScale&#39;</param>

        /// <param name="connectedGroupAddressOverlap">Behavior to handle overlapped IP address space among members of the
        /// connected group of the connectivity configuration.
        /// Possible values include: &#39;Allowed&#39;, &#39;Disallowed&#39;</param>

        /// <param name="peeringEnforcement">Option indicating enforcement of peerings created by the connectivity
        /// configuration.
        /// Possible values include: &#39;Unenforced&#39;, &#39;Enforced&#39;</param>
        public ConnectivityConfigurationPropertiesConnectivityCapabilities(string connectedGroupPrivateEndpointScale, string connectedGroupAddressOverlap, string peeringEnforcement)

        {
            this.ConnectedGroupPrivateEndpointScale = connectedGroupPrivateEndpointScale;
            this.ConnectedGroupAddressOverlap = connectedGroupAddressOverlap;
            this.PeeringEnforcement = peeringEnforcement;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets option indicating the scale of private endpoints allowed in
        /// the connected group of the connectivity configuration. Possible values include: &#39;Standard&#39;, &#39;HighScale&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectedGroupPrivateEndpointScale")]
        public string ConnectedGroupPrivateEndpointScale {get; set; }

        /// <summary>
        /// Gets or sets behavior to handle overlapped IP address space among members
        /// of the connected group of the connectivity configuration. Possible values include: &#39;Allowed&#39;, &#39;Disallowed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectedGroupAddressOverlap")]
        public string ConnectedGroupAddressOverlap {get; set; }

        /// <summary>
        /// Gets or sets option indicating enforcement of peerings created by the
        /// connectivity configuration. Possible values include: &#39;Unenforced&#39;, &#39;Enforced&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "peeringEnforcement")]
        public string PeeringEnforcement {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ConnectedGroupPrivateEndpointScale == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectedGroupPrivateEndpointScale");
            }
            if (this.ConnectedGroupAddressOverlap == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectedGroupAddressOverlap");
            }
            if (this.PeeringEnforcement == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PeeringEnforcement");
            }



        }
    }
}