// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Gateway routing details.
    /// </summary>
    public partial class GatewayRoute
    {
        /// <summary>
        /// Initializes a new instance of the GatewayRoute class.
        /// </summary>
        public GatewayRoute()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayRoute class.
        /// </summary>

        /// <param name="localAddress">The gateway&#39;s local address.
        /// </param>

        /// <param name="network">The route&#39;s network prefix.
        /// </param>

        /// <param name="nextHop">The route&#39;s next hop.
        /// </param>

        /// <param name="sourcePeer">The peer this route was learned from.
        /// </param>

        /// <param name="origin">The source this route was learned from.
        /// </param>

        /// <param name="asPath">The route&#39;s AS path sequence.
        /// </param>

        /// <param name="weight">The route&#39;s weight.
        /// </param>
        public GatewayRoute(string localAddress = default(string), string network = default(string), string nextHop = default(string), string sourcePeer = default(string), string origin = default(string), string asPath = default(string), int? weight = default(int?))

        {
            this.LocalAddress = localAddress;
            this.Network = network;
            this.NextHop = nextHop;
            this.SourcePeer = sourcePeer;
            this.Origin = origin;
            this.AsPath = asPath;
            this.Weight = weight;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the gateway&#39;s local address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "localAddress")]
        public string LocalAddress {get; private set; }

        /// <summary>
        /// Gets the route&#39;s network prefix.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "network")]
        public string Network {get; private set; }

        /// <summary>
        /// Gets the route&#39;s next hop.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextHop")]
        public string NextHop {get; private set; }

        /// <summary>
        /// Gets the peer this route was learned from.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourcePeer")]
        public string SourcePeer {get; private set; }

        /// <summary>
        /// Gets the source this route was learned from.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "origin")]
        public string Origin {get; private set; }

        /// <summary>
        /// Gets the route&#39;s AS path sequence.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "asPath")]
        public string AsPath {get; private set; }

        /// <summary>
        /// Gets the route&#39;s weight.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "weight")]
        public int? Weight {get; private set; }
    }
}