// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// The response for a Health API.
    /// </summary>
    public partial class LoadBalancerHealthPerRule
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancerHealthPerRule class.
        /// </summary>
        public LoadBalancerHealthPerRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancerHealthPerRule class.
        /// </summary>

        /// <param name="up">Number of backend instances associated to the LB rule that are considered
        /// healthy.
        /// </param>

        /// <param name="down">Number of backend instances associated to the LB rule that are considered
        /// unhealthy.
        /// </param>

        /// <param name="loadBalancerBackendAddresses">Information about the health per rule of the backend addresses.
        /// </param>
        public LoadBalancerHealthPerRule(int? up = default(int?), int? down = default(int?), System.Collections.Generic.IList<LoadBalancerHealthPerRulePerBackendAddress> loadBalancerBackendAddresses = default(System.Collections.Generic.IList<LoadBalancerHealthPerRulePerBackendAddress>))

        {
            this.Up = up;
            this.Down = down;
            this.LoadBalancerBackendAddresses = loadBalancerBackendAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets number of backend instances associated to the LB rule that are
        /// considered healthy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "up")]
        public int? Up {get; set; }

        /// <summary>
        /// Gets or sets number of backend instances associated to the LB rule that are
        /// considered unhealthy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "down")]
        public int? Down {get; set; }

        /// <summary>
        /// Gets or sets information about the health per rule of the backend
        /// addresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "loadBalancerBackendAddresses")]
        public System.Collections.Generic.IList<LoadBalancerHealthPerRulePerBackendAddress> LoadBalancerBackendAddresses {get; set; }
    }
}