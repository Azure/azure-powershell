// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Private link service resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateLinkService : Resource
    {
        /// <summary>
        /// Initializes a new instance of the PrivateLinkService class.
        /// </summary>
        public PrivateLinkService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateLinkService class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="extendedLocation">The extended location of the load balancer.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the private link service resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="loadBalancerFrontendIPConfigurations">An array of references to the load balancer IP configurations.
        /// </param>

        /// <param name="ipConfigurations">An array of private link service IP configurations.
        /// </param>

        /// <param name="networkInterfaces">An array of references to the network interfaces created for this private
        /// link service.
        /// </param>

        /// <param name="privateEndpointConnections">An array of list about connections to the private endpoint.
        /// </param>

        /// <param name="visibility">The visibility list of the private link service.
        /// </param>

        /// <param name="autoApproval">The auto-approval list of the private link service.
        /// </param>

        /// <param name="fqdns">The list of Fqdn.
        /// </param>

        /// <param name="alias">The alias of the private link service.
        /// </param>

        /// <param name="enableProxyProtocol">Whether the private link service is enabled for proxy protocol or not.
        /// </param>
        public PrivateLinkService(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ExtendedLocation extendedLocation = default(ExtendedLocation), string etag = default(string), string provisioningState = default(string), System.Collections.Generic.IList<FrontendIPConfiguration> loadBalancerFrontendIPConfigurations = default(System.Collections.Generic.IList<FrontendIPConfiguration>), System.Collections.Generic.IList<PrivateLinkServiceIpConfiguration> ipConfigurations = default(System.Collections.Generic.IList<PrivateLinkServiceIpConfiguration>), System.Collections.Generic.IList<NetworkInterface> networkInterfaces = default(System.Collections.Generic.IList<NetworkInterface>), System.Collections.Generic.IList<PrivateEndpointConnection> privateEndpointConnections = default(System.Collections.Generic.IList<PrivateEndpointConnection>), PrivateLinkServicePropertiesVisibility visibility = default(PrivateLinkServicePropertiesVisibility), PrivateLinkServicePropertiesAutoApproval autoApproval = default(PrivateLinkServicePropertiesAutoApproval), System.Collections.Generic.IList<string> fqdns = default(System.Collections.Generic.IList<string>), string alias = default(string), bool? enableProxyProtocol = default(bool?))

        : base(id, name, type, location, tags)
        {
            this.ExtendedLocation = extendedLocation;
            this.Etag = etag;
            this.ProvisioningState = provisioningState;
            this.LoadBalancerFrontendIPConfigurations = loadBalancerFrontendIPConfigurations;
            this.IPConfigurations = ipConfigurations;
            this.NetworkInterfaces = networkInterfaces;
            this.PrivateEndpointConnections = privateEndpointConnections;
            this.Visibility = visibility;
            this.AutoApproval = autoApproval;
            this.Fqdns = fqdns;
            this.Alias = alias;
            this.EnableProxyProtocol = enableProxyProtocol;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the extended location of the load balancer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the private link service resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets an array of references to the load balancer IP configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.loadBalancerFrontendIpConfigurations")]
        public System.Collections.Generic.IList<FrontendIPConfiguration> LoadBalancerFrontendIPConfigurations {get; set; }

        /// <summary>
        /// Gets or sets an array of private link service IP configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<PrivateLinkServiceIpConfiguration> IPConfigurations {get; set; }

        /// <summary>
        /// Gets an array of references to the network interfaces created for this
        /// private link service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkInterfaces")]
        public System.Collections.Generic.IList<NetworkInterface> NetworkInterfaces {get; private set; }

        /// <summary>
        /// Gets an array of list about connections to the private endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateEndpointConnections")]
        public System.Collections.Generic.IList<PrivateEndpointConnection> PrivateEndpointConnections {get; private set; }

        /// <summary>
        /// Gets or sets the visibility list of the private link service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.visibility")]
        public PrivateLinkServicePropertiesVisibility Visibility {get; set; }

        /// <summary>
        /// Gets or sets the auto-approval list of the private link service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.autoApproval")]
        public PrivateLinkServicePropertiesAutoApproval AutoApproval {get; set; }

        /// <summary>
        /// Gets or sets the list of Fqdn.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.fqdns")]
        public System.Collections.Generic.IList<string> Fqdns {get; set; }

        /// <summary>
        /// Gets the alias of the private link service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alias")]
        public string Alias {get; private set; }

        /// <summary>
        /// Gets or sets whether the private link service is enabled for proxy protocol
        /// or not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableProxyProtocol")]
        public bool? EnableProxyProtocol {get; set; }
    }
}