// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters for P2SVpnGateway.
    /// </summary>
    public partial class P2SVpnGatewayProperties
    {
        /// <summary>
        /// Initializes a new instance of the P2SVpnGatewayProperties class.
        /// </summary>
        public P2SVpnGatewayProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the P2SVpnGatewayProperties class.
        /// </summary>

        /// <param name="virtualHub">The VirtualHub to which the gateway belongs.
        /// </param>

        /// <param name="p2SConnectionConfigurations">List of all p2s connection configurations of the gateway.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the P2S VPN gateway resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="vpnGatewayScaleUnit">The scale unit for this p2s vpn gateway.
        /// </param>

        /// <param name="vpnServerConfiguration">The VpnServerConfiguration to which the p2sVpnGateway is attached to.
        /// </param>

        /// <param name="vpnClientConnectionHealth">All P2S VPN clients&#39; connection health status.
        /// </param>

        /// <param name="customDnsServers">List of all customer specified DNS servers IP addresses.
        /// </param>

        /// <param name="isRoutingPreferenceInternet">Enable Routing Preference property for the Public IP Interface of the
        /// P2SVpnGateway.
        /// </param>
        public P2SVpnGatewayProperties(SubResource virtualHub = default(SubResource), System.Collections.Generic.IList<P2SConnectionConfiguration> p2SConnectionConfigurations = default(System.Collections.Generic.IList<P2SConnectionConfiguration>), string provisioningState = default(string), int? vpnGatewayScaleUnit = default(int?), SubResource vpnServerConfiguration = default(SubResource), VpnClientConnectionHealth vpnClientConnectionHealth = default(VpnClientConnectionHealth), System.Collections.Generic.IList<string> customDnsServers = default(System.Collections.Generic.IList<string>), bool? isRoutingPreferenceInternet = default(bool?))

        {
            this.VirtualHub = virtualHub;
            this.P2SConnectionConfigurations = p2SConnectionConfigurations;
            this.ProvisioningState = provisioningState;
            this.VpnGatewayScaleUnit = vpnGatewayScaleUnit;
            this.VpnServerConfiguration = vpnServerConfiguration;
            this.VpnClientConnectionHealth = vpnClientConnectionHealth;
            this.CustomDnsServers = customDnsServers;
            this.IsRoutingPreferenceInternet = isRoutingPreferenceInternet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the VirtualHub to which the gateway belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualHub")]
        public SubResource VirtualHub {get; set; }

        /// <summary>
        /// Gets or sets list of all p2s connection configurations of the gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "p2SConnectionConfigurations")]
        public System.Collections.Generic.IList<P2SConnectionConfiguration> P2SConnectionConfigurations {get; set; }

        /// <summary>
        /// Gets the provisioning state of the P2S VPN gateway resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the scale unit for this p2s vpn gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnGatewayScaleUnit")]
        public int? VpnGatewayScaleUnit {get; set; }

        /// <summary>
        /// Gets or sets the VpnServerConfiguration to which the p2sVpnGateway is
        /// attached to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnServerConfiguration")]
        public SubResource VpnServerConfiguration {get; set; }

        /// <summary>
        /// Gets all P2S VPN clients&#39; connection health status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vpnClientConnectionHealth")]
        public VpnClientConnectionHealth VpnClientConnectionHealth {get; private set; }

        /// <summary>
        /// Gets or sets list of all customer specified DNS servers IP addresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customDnsServers")]
        public System.Collections.Generic.IList<string> CustomDnsServers {get; set; }

        /// <summary>
        /// Gets or sets enable Routing Preference property for the Public IP Interface
        /// of the P2SVpnGateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isRoutingPreferenceInternet")]
        public bool? IsRoutingPreferenceInternet {get; set; }
    }
}