// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Status of packet capture session.
    /// </summary>
    public partial class PacketCaptureQueryStatusResult
    {
        /// <summary>
        /// Initializes a new instance of the PacketCaptureQueryStatusResult class.
        /// </summary>
        public PacketCaptureQueryStatusResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PacketCaptureQueryStatusResult class.
        /// </summary>

        /// <param name="name">The name of the packet capture resource.
        /// </param>

        /// <param name="id">The ID of the packet capture resource.
        /// </param>

        /// <param name="captureStartTime">The start time of the packet capture session.
        /// </param>

        /// <param name="packetCaptureStatus">The status of the packet capture session.
        /// Possible values include: &#39;NotStarted&#39;, &#39;Running&#39;, &#39;Stopped&#39;, &#39;Error&#39;,
        /// &#39;Unknown&#39;</param>

        /// <param name="stopReason">The reason the current packet capture session was stopped.
        /// </param>

        /// <param name="packetCaptureError">List of errors of packet capture session.
        /// </param>
        public PacketCaptureQueryStatusResult(string name = default(string), string id = default(string), System.DateTime? captureStartTime = default(System.DateTime?), string packetCaptureStatus = default(string), string stopReason = default(string), System.Collections.Generic.IList<string> packetCaptureError = default(System.Collections.Generic.IList<string>))

        {
            this.Name = name;
            this.Id = id;
            this.CaptureStartTime = captureStartTime;
            this.PacketCaptureStatus = packetCaptureStatus;
            this.StopReason = stopReason;
            this.PacketCaptureError = packetCaptureError;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the packet capture resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the ID of the packet capture resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets the start time of the packet capture session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "captureStartTime")]
        public System.DateTime? CaptureStartTime {get; set; }

        /// <summary>
        /// Gets or sets the status of the packet capture session. Possible values include: &#39;NotStarted&#39;, &#39;Running&#39;, &#39;Stopped&#39;, &#39;Error&#39;, &#39;Unknown&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packetCaptureStatus")]
        public string PacketCaptureStatus {get; set; }

        /// <summary>
        /// Gets or sets the reason the current packet capture session was stopped.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "stopReason")]
        public string StopReason {get; set; }

        /// <summary>
        /// Gets or sets list of errors of packet capture session.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packetCaptureError")]
        public System.Collections.Generic.IList<string> PacketCaptureError {get; set; }
    }
}