// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of an application gateway private link IP configuration.
    /// </summary>
    public partial class ApplicationGatewayPrivateLinkIpConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayPrivateLinkIpConfigurationProperties class.
        /// </summary>
        public ApplicationGatewayPrivateLinkIpConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayPrivateLinkIpConfigurationProperties class.
        /// </summary>

        /// <param name="privateIPAddress">The private IP address of the IP configuration.
        /// </param>

        /// <param name="privateIPAllocationMethod">The private IP address allocation method.
        /// Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;</param>

        /// <param name="subnet">Reference to the subnet resource.
        /// </param>

        /// <param name="primary">Whether the ip configuration is primary or not.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the application gateway private link IP
        /// configuration.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public ApplicationGatewayPrivateLinkIpConfigurationProperties(string privateIPAddress = default(string), string privateIPAllocationMethod = default(string), SubResource subnet = default(SubResource), bool? primary = default(bool?), string provisioningState = default(string))

        {
            this.PrivateIPAddress = privateIPAddress;
            this.PrivateIPAllocationMethod = privateIPAllocationMethod;
            this.Subnet = subnet;
            this.Primary = primary;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the private IP address of the IP configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIPAddress")]
        public string PrivateIPAddress {get; set; }

        /// <summary>
        /// Gets or sets the private IP address allocation method. Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIPAllocationMethod")]
        public string PrivateIPAllocationMethod {get; set; }

        /// <summary>
        /// Gets or sets reference to the subnet resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnet")]
        public SubResource Subnet {get; set; }

        /// <summary>
        /// Gets or sets whether the ip configuration is primary or not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primary")]
        public bool? Primary {get; set; }

        /// <summary>
        /// Gets the provisioning state of the application gateway private link IP
        /// configuration. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}