// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// FirewallPolicy Resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class FirewallPolicy : Resource
    {
        /// <summary>
        /// Initializes a new instance of the FirewallPolicy class.
        /// </summary>
        public FirewallPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FirewallPolicy class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="identity">The identity of the firewall policy.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the firewall policy resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="dnsSettings">DNS Proxy Settings definition.
        /// </param>

        /// <param name="explicitProxy">Explicit Proxy Settings definition.
        /// </param>

        /// <param name="size">A read-only string that represents the size of the
        /// FirewallPolicyPropertiesFormat in MB. (ex 0.5MB)
        /// </param>

        /// <param name="ruleCollectionGroups">List of references to FirewallPolicyRuleCollectionGroups.
        /// </param>

        /// <param name="basePolicy">The parent firewall policy from which rules are inherited.
        /// </param>

        /// <param name="firewalls">List of references to Azure Firewalls that this Firewall Policy is
        /// associated with.
        /// </param>

        /// <param name="childPolicies">List of references to Child Firewall Policies.
        /// </param>

        /// <param name="threatIntelMode">The operation mode for Threat Intelligence.
        /// Possible values include: &#39;Alert&#39;, &#39;Deny&#39;, &#39;Off&#39;</param>

        /// <param name="threatIntelWhitelist">ThreatIntel Whitelist for Firewall Policy.
        /// </param>

        /// <param name="insights">Insights on Firewall Policy.
        /// </param>

        /// <param name="snat">The private IP addresses/IP ranges to which traffic will not be SNAT.
        /// </param>

        /// <param name="sql">SQL Settings definition.
        /// </param>

        /// <param name="intrusionDetection">The configuration for Intrusion detection.
        /// </param>

        /// <param name="transportSecurity">TLS Configuration definition.
        /// </param>

        /// <param name="sku">The Firewall Policy SKU.
        /// </param>
        public FirewallPolicy(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string etag = default(string), ManagedServiceIdentity identity = default(ManagedServiceIdentity), string provisioningState = default(string), DnsSettings dnsSettings = default(DnsSettings), ExplicitProxy explicitProxy = default(ExplicitProxy), string size = default(string), System.Collections.Generic.IList<SubResource> ruleCollectionGroups = default(System.Collections.Generic.IList<SubResource>), SubResource basePolicy = default(SubResource), System.Collections.Generic.IList<SubResource> firewalls = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<SubResource> childPolicies = default(System.Collections.Generic.IList<SubResource>), string threatIntelMode = default(string), FirewallPolicyThreatIntelWhitelist threatIntelWhitelist = default(FirewallPolicyThreatIntelWhitelist), FirewallPolicyInsights insights = default(FirewallPolicyInsights), FirewallPolicySnat snat = default(FirewallPolicySnat), FirewallPolicySQL sql = default(FirewallPolicySQL), FirewallPolicyIntrusionDetection intrusionDetection = default(FirewallPolicyIntrusionDetection), FirewallPolicyTransportSecurity transportSecurity = default(FirewallPolicyTransportSecurity), FirewallPolicySku sku = default(FirewallPolicySku))

        : base(id, name, type, location, tags)
        {
            this.Etag = etag;
            this.Identity = identity;
            this.ProvisioningState = provisioningState;
            this.DnsSettings = dnsSettings;
            this.ExplicitProxy = explicitProxy;
            this.Size = size;
            this.RuleCollectionGroups = ruleCollectionGroups;
            this.BasePolicy = basePolicy;
            this.Firewalls = firewalls;
            this.ChildPolicies = childPolicies;
            this.ThreatIntelMode = threatIntelMode;
            this.ThreatIntelWhitelist = threatIntelWhitelist;
            this.Insights = insights;
            this.Snat = snat;
            this.Sql = sql;
            this.IntrusionDetection = intrusionDetection;
            this.TransportSecurity = transportSecurity;
            this.Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets the identity of the firewall policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "identity")]
        public ManagedServiceIdentity Identity {get; set; }

        /// <summary>
        /// Gets the provisioning state of the firewall policy resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets dNS Proxy Settings definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dnsSettings")]
        public DnsSettings DnsSettings {get; set; }

        /// <summary>
        /// Gets or sets explicit Proxy Settings definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.explicitProxy")]
        public ExplicitProxy ExplicitProxy {get; set; }

        /// <summary>
        /// Gets a read-only string that represents the size of the
        /// FirewallPolicyPropertiesFormat in MB. (ex 0.5MB)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.size")]
        public string Size {get; private set; }

        /// <summary>
        /// Gets list of references to FirewallPolicyRuleCollectionGroups.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ruleCollectionGroups")]
        public System.Collections.Generic.IList<SubResource> RuleCollectionGroups {get; private set; }

        /// <summary>
        /// Gets or sets the parent firewall policy from which rules are inherited.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.basePolicy")]
        public SubResource BasePolicy {get; set; }

        /// <summary>
        /// Gets list of references to Azure Firewalls that this Firewall Policy is
        /// associated with.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.firewalls")]
        public System.Collections.Generic.IList<SubResource> Firewalls {get; private set; }

        /// <summary>
        /// Gets list of references to Child Firewall Policies.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.childPolicies")]
        public System.Collections.Generic.IList<SubResource> ChildPolicies {get; private set; }

        /// <summary>
        /// Gets or sets the operation mode for Threat Intelligence. Possible values include: &#39;Alert&#39;, &#39;Deny&#39;, &#39;Off&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.threatIntelMode")]
        public string ThreatIntelMode {get; set; }

        /// <summary>
        /// Gets or sets threatIntel Whitelist for Firewall Policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.threatIntelWhitelist")]
        public FirewallPolicyThreatIntelWhitelist ThreatIntelWhitelist {get; set; }

        /// <summary>
        /// Gets or sets insights on Firewall Policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.insights")]
        public FirewallPolicyInsights Insights {get; set; }

        /// <summary>
        /// Gets or sets the private IP addresses/IP ranges to which traffic will not
        /// be SNAT.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.snat")]
        public FirewallPolicySnat Snat {get; set; }

        /// <summary>
        /// Gets or sets sQL Settings definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sql")]
        public FirewallPolicySQL Sql {get; set; }

        /// <summary>
        /// Gets or sets the configuration for Intrusion detection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.intrusionDetection")]
        public FirewallPolicyIntrusionDetection IntrusionDetection {get; set; }

        /// <summary>
        /// Gets or sets tLS Configuration definition.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.transportSecurity")]
        public FirewallPolicyTransportSecurity TransportSecurity {get; set; }

        /// <summary>
        /// Gets or sets the Firewall Policy SKU.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sku")]
        public FirewallPolicySku Sku {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {




            if (this.ExplicitProxy != null)
            {
                this.ExplicitProxy.Validate();
            }













        }
    }
}