// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters for RouteTable.
    /// </summary>
    public partial class HubRouteTableProperties
    {
        /// <summary>
        /// Initializes a new instance of the HubRouteTableProperties class.
        /// </summary>
        public HubRouteTableProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HubRouteTableProperties class.
        /// </summary>

        /// <param name="routes">List of all routes.
        /// </param>

        /// <param name="labels">List of labels associated with this route table.
        /// </param>

        /// <param name="associatedConnections">List of all connections associated with this route table.
        /// </param>

        /// <param name="propagatingConnections">List of all connections that advertise to this route table.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the RouteTable resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public HubRouteTableProperties(System.Collections.Generic.IList<HubRoute> routes = default(System.Collections.Generic.IList<HubRoute>), System.Collections.Generic.IList<string> labels = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> associatedConnections = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> propagatingConnections = default(System.Collections.Generic.IList<string>), string provisioningState = default(string))

        {
            this.Routes = routes;
            this.Labels = labels;
            this.AssociatedConnections = associatedConnections;
            this.PropagatingConnections = propagatingConnections;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of all routes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routes")]
        public System.Collections.Generic.IList<HubRoute> Routes {get; set; }

        /// <summary>
        /// Gets or sets list of labels associated with this route table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "labels")]
        public System.Collections.Generic.IList<string> Labels {get; set; }

        /// <summary>
        /// Gets list of all connections associated with this route table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "associatedConnections")]
        public System.Collections.Generic.IList<string> AssociatedConnections {get; private set; }

        /// <summary>
        /// Gets list of all connections that advertise to this route table.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "propagatingConnections")]
        public System.Collections.Generic.IList<string> PropagatingConnections {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the RouteTable resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}