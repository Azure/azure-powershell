// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// The application gateway private link ip configuration.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayPrivateLinkIpConfiguration : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayPrivateLinkIpConfiguration class.
        /// </summary>
        public ApplicationGatewayPrivateLinkIpConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayPrivateLinkIpConfiguration class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">The name of application gateway private link ip configuration.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="type">The resource type.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the application gateway private link IP
        /// configuration.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="privateIPAddress">The private IP address of the IP configuration.
        /// </param>

        /// <param name="privateIPAllocationMethod">The private IP address allocation method.
        /// Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;</param>

        /// <param name="subnet">Reference to the subnet resource.
        /// </param>

        /// <param name="primary">Whether the ip configuration is primary or not.
        /// </param>
        public ApplicationGatewayPrivateLinkIpConfiguration(string id = default(string), string name = default(string), string etag = default(string), string type = default(string), string provisioningState = default(string), string privateIPAddress = default(string), string privateIPAllocationMethod = default(string), SubResource subnet = default(SubResource), bool? primary = default(bool?))

        : base(id)
        {
            this.Name = name;
            this.Etag = etag;
            this.Type = type;
            this.ProvisioningState = provisioningState;
            this.PrivateIPAddress = privateIPAddress;
            this.PrivateIPAllocationMethod = privateIPAllocationMethod;
            this.Subnet = subnet;
            this.Primary = primary;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of application gateway private link ip configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets the resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the application gateway private link IP
        /// configuration. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the private IP address of the IP configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateIPAddress")]
        public string PrivateIPAddress {get; set; }

        /// <summary>
        /// Gets or sets the private IP address allocation method. Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateIPAllocationMethod")]
        public string PrivateIPAllocationMethod {get; set; }

        /// <summary>
        /// Gets or sets reference to the subnet resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.subnet")]
        public SubResource Subnet {get; set; }

        /// <summary>
        /// Gets or sets whether the ip configuration is primary or not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.primary")]
        public bool? Primary {get; set; }
    }
}