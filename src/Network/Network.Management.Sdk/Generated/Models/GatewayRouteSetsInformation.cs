// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Gateway Route Sets Information
    /// </summary>
    public partial class GatewayRouteSetsInformation
    {
        /// <summary>
        /// Initializes a new instance of the GatewayRouteSetsInformation class.
        /// </summary>
        public GatewayRouteSetsInformation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GatewayRouteSetsInformation class.
        /// </summary>

        /// <param name="lastComputedTime">Timestamp denoting the last time when the route sets were computed for the
        /// gateway
        /// </param>

        /// <param name="nextEligibleComputeTime">Timestamp denoting the next eligible time to re-compute the route sets for
        /// the gateway
        /// </param>

        /// <param name="routeSetVersion">Version for the route set
        /// </param>

        /// <param name="routeSets">List of Gateway Route Sets
        /// </param>

        /// <param name="circuitsMetadataMap">Dictionary containing map of the circuit id and circuit details
        /// </param>
        public GatewayRouteSetsInformation(System.DateTime? lastComputedTime = default(System.DateTime?), System.DateTime? nextEligibleComputeTime = default(System.DateTime?), string routeSetVersion = default(string), System.Collections.Generic.IList<GatewayRouteSet> routeSets = default(System.Collections.Generic.IList<GatewayRouteSet>), System.Collections.Generic.IDictionary<string, CircuitMetadataMap> circuitsMetadataMap = default(System.Collections.Generic.IDictionary<string, CircuitMetadataMap>))

        {
            this.LastComputedTime = lastComputedTime;
            this.NextEligibleComputeTime = nextEligibleComputeTime;
            this.RouteSetVersion = routeSetVersion;
            this.RouteSets = routeSets;
            this.CircuitsMetadataMap = circuitsMetadataMap;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets timestamp denoting the last time when the route sets were
        /// computed for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastComputedTime")]
        public System.DateTime? LastComputedTime {get; set; }

        /// <summary>
        /// Gets or sets timestamp denoting the next eligible time to re-compute the
        /// route sets for the gateway
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextEligibleComputeTime")]
        public System.DateTime? NextEligibleComputeTime {get; set; }

        /// <summary>
        /// Gets or sets version for the route set
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routeSetVersion")]
        public string RouteSetVersion {get; set; }

        /// <summary>
        /// Gets or sets list of Gateway Route Sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "routeSets")]
        public System.Collections.Generic.IList<GatewayRouteSet> RouteSets {get; set; }

        /// <summary>
        /// Gets or sets dictionary containing map of the circuit id and circuit
        /// details
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "circuitsMetadataMap")]
        public System.Collections.Generic.IDictionary<string, CircuitMetadataMap> CircuitsMetadataMap {get; set; }
    }
}