// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties specific to ExpressRoutePorts peering location resources.
    /// </summary>
    /// <remarks>
    /// Properties specific to ExpressRoutePorts peering location resources.
    /// </remarks>
    public partial class ExpressRoutePortsLocationPropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRoutePortsLocationPropertiesFormat class.
        /// </summary>
        public ExpressRoutePortsLocationPropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRoutePortsLocationPropertiesFormat class.
        /// </summary>

        /// <param name="address">Address of peering location.
        /// </param>

        /// <param name="contact">Contact details of peering locations.
        /// </param>

        /// <param name="availableBandwidths">The inventory of available ExpressRoutePort bandwidths.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the express route port location resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public ExpressRoutePortsLocationPropertiesFormat(string address = default(string), string contact = default(string), System.Collections.Generic.IList<ExpressRoutePortsLocationBandwidths> availableBandwidths = default(System.Collections.Generic.IList<ExpressRoutePortsLocationBandwidths>), string provisioningState = default(string))

        {
            this.Address = address;
            this.Contact = contact;
            this.AvailableBandwidths = availableBandwidths;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets address of peering location.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "address")]
        public string Address {get; private set; }

        /// <summary>
        /// Gets contact details of peering locations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contact")]
        public string Contact {get; private set; }

        /// <summary>
        /// Gets or sets the inventory of available ExpressRoutePort bandwidths.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "availableBandwidths")]
        public System.Collections.Generic.IList<ExpressRoutePortsLocationBandwidths> AvailableBandwidths {get; set; }

        /// <summary>
        /// Gets the provisioning state of the express route port location resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}