// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// The information about health per rule per backend address.
    /// </summary>
    public partial class LoadBalancerHealthPerRulePerBackendAddress
    {
        /// <summary>
        /// Initializes a new instance of the LoadBalancerHealthPerRulePerBackendAddress class.
        /// </summary>
        public LoadBalancerHealthPerRulePerBackendAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LoadBalancerHealthPerRulePerBackendAddress class.
        /// </summary>

        /// <param name="ipAddress">The IP address belonging to the backend address.
        /// </param>

        /// <param name="networkInterfaceIPConfigurationId">The id of the network interface ip configuration belonging to the backend
        /// address
        /// </param>

        /// <param name="state">The current health of the backend instances that is associated to the LB
        /// rule.
        /// </param>

        /// <param name="reason">The explanation of the State
        /// </param>
        public LoadBalancerHealthPerRulePerBackendAddress(string ipAddress = default(string), NetworkInterfaceIPConfiguration networkInterfaceIPConfigurationId = default(NetworkInterfaceIPConfiguration), string state = default(string), string reason = default(string))

        {
            this.IPAddress = ipAddress;
            this.NetworkInterfaceIPConfigurationId = networkInterfaceIPConfigurationId;
            this.State = state;
            this.Reason = reason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the IP address belonging to the backend address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipAddress")]
        public string IPAddress {get; set; }

        /// <summary>
        /// Gets or sets the id of the network interface ip configuration belonging to
        /// the backend address
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkInterfaceIPConfigurationId")]
        public NetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationId {get; set; }

        /// <summary>
        /// Gets or sets the current health of the backend instances that is associated
        /// to the LB rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }

        /// <summary>
        /// Gets or sets the explanation of the State
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reason")]
        public string Reason {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.NetworkInterfaceIPConfigurationId != null)
            {
                this.NetworkInterfaceIPConfigurationId.Validate();
            }


        }
    }
}