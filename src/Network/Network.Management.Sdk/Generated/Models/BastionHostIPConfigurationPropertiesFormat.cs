// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of IP configuration of an Bastion Host.
    /// </summary>
    public partial class BastionHostIPConfigurationPropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the BastionHostIPConfigurationPropertiesFormat class.
        /// </summary>
        public BastionHostIPConfigurationPropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BastionHostIPConfigurationPropertiesFormat class.
        /// </summary>

        /// <param name="subnet">Reference of the subnet resource.
        /// </param>

        /// <param name="publicIPAddress">Reference of the PublicIP resource.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the bastion host IP configuration resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="privateIPAllocationMethod">Private IP allocation method.
        /// Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;</param>
        public BastionHostIPConfigurationPropertiesFormat(SubResource subnet, SubResource publicIPAddress, string provisioningState = default(string), string privateIPAllocationMethod = default(string))

        {
            this.Subnet = subnet;
            this.PublicIPAddress = publicIPAddress;
            this.ProvisioningState = provisioningState;
            this.PrivateIPAllocationMethod = privateIPAllocationMethod;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets reference of the subnet resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnet")]
        public SubResource Subnet {get; set; }

        /// <summary>
        /// Gets or sets reference of the PublicIP resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPAddress")]
        public SubResource PublicIPAddress {get; set; }

        /// <summary>
        /// Gets the provisioning state of the bastion host IP configuration resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets private IP allocation method. Possible values include: &#39;Static&#39;, &#39;Dynamic&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIPAllocationMethod")]
        public string PrivateIPAllocationMethod {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Subnet == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Subnet");
            }
            if (this.PublicIPAddress == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PublicIPAddress");
            }




        }
    }
}