// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// P2SConnectionConfiguration Resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class P2SConnectionConfiguration : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the P2SConnectionConfiguration class.
        /// </summary>
        public P2SConnectionConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the P2SConnectionConfiguration class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">The name of the resource that is unique within a resource group. This name
        /// can be used to access the resource.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="routingConfiguration">The Routing Configuration indicating the associated and propagated route
        /// tables on this connection.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the P2SConnectionConfiguration resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="vpnClientAddressPool">The reference to the address space resource which represents Address space
        /// for P2S VpnClient.
        /// </param>

        /// <param name="enableInternetSecurity">Flag indicating whether the enable internet security flag is turned on for
        /// the P2S Connections or not.
        /// </param>

        /// <param name="configurationPolicyGroupAssociations">List of Configuration Policy Groups that this P2SConnectionConfiguration is
        /// attached to.
        /// </param>

        /// <param name="previousConfigurationPolicyGroupAssociations">List of previous Configuration Policy Groups that this
        /// P2SConnectionConfiguration was attached to.
        /// </param>
        public P2SConnectionConfiguration(string id = default(string), string name = default(string), string etag = default(string), RoutingConfiguration routingConfiguration = default(RoutingConfiguration), string provisioningState = default(string), AddressSpace vpnClientAddressPool = default(AddressSpace), bool? enableInternetSecurity = default(bool?), System.Collections.Generic.IList<SubResource> configurationPolicyGroupAssociations = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<VpnServerConfigurationPolicyGroup> previousConfigurationPolicyGroupAssociations = default(System.Collections.Generic.IList<VpnServerConfigurationPolicyGroup>))

        : base(id)
        {
            this.Name = name;
            this.Etag = etag;
            this.RoutingConfiguration = routingConfiguration;
            this.ProvisioningState = provisioningState;
            this.VpnClientAddressPool = vpnClientAddressPool;
            this.EnableInternetSecurity = enableInternetSecurity;
            this.ConfigurationPolicyGroupAssociations = configurationPolicyGroupAssociations;
            this.PreviousConfigurationPolicyGroupAssociations = previousConfigurationPolicyGroupAssociations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the resource that is unique within a resource
        /// group. This name can be used to access the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets the Routing Configuration indicating the associated and
        /// propagated route tables on this connection.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.routingConfiguration")]
        public RoutingConfiguration RoutingConfiguration {get; set; }

        /// <summary>
        /// Gets the provisioning state of the P2SConnectionConfiguration resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the reference to the address space resource which represents
        /// Address space for P2S VpnClient.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vpnClientAddressPool")]
        public AddressSpace VpnClientAddressPool {get; set; }

        /// <summary>
        /// Gets or sets flag indicating whether the enable internet security flag is
        /// turned on for the P2S Connections or not.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableInternetSecurity")]
        public bool? EnableInternetSecurity {get; set; }

        /// <summary>
        /// Gets list of Configuration Policy Groups that this
        /// P2SConnectionConfiguration is attached to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.configurationPolicyGroupAssociations")]
        public System.Collections.Generic.IList<SubResource> ConfigurationPolicyGroupAssociations {get; private set; }

        /// <summary>
        /// Gets list of previous Configuration Policy Groups that this
        /// P2SConnectionConfiguration was attached to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.previousConfigurationPolicyGroupAssociations")]
        public System.Collections.Generic.IList<VpnServerConfigurationPolicyGroup> PreviousConfigurationPolicyGroupAssociations {get; private set; }
    }
}