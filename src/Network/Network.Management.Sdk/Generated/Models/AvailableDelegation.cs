// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// The serviceName of an AvailableDelegation indicates a possible delegation
    /// for a subnet.
    /// </summary>
    public partial class AvailableDelegation
    {
        /// <summary>
        /// Initializes a new instance of the AvailableDelegation class.
        /// </summary>
        public AvailableDelegation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailableDelegation class.
        /// </summary>

        /// <param name="name">The name of the AvailableDelegation resource.
        /// </param>

        /// <param name="id">A unique identifier of the AvailableDelegation resource.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="serviceName">The name of the service and resource.
        /// </param>

        /// <param name="actions">The actions permitted to the service upon delegation.
        /// </param>
        public AvailableDelegation(string name = default(string), string id = default(string), string type = default(string), string serviceName = default(string), System.Collections.Generic.IList<string> actions = default(System.Collections.Generic.IList<string>))

        {
            this.Name = name;
            this.Id = id;
            this.Type = type;
            this.ServiceName = serviceName;
            this.Actions = actions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of the AvailableDelegation resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets a unique identifier of the AvailableDelegation resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets the name of the service and resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceName")]
        public string ServiceName {get; set; }

        /// <summary>
        /// Gets or sets the actions permitted to the service upon delegation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "actions")]
        public System.Collections.Generic.IList<string> Actions {get; set; }
    }
}