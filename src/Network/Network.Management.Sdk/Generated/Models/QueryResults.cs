// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Query result
    /// </summary>
    public partial class QueryResults
    {
        /// <summary>
        /// Initializes a new instance of the QueryResults class.
        /// </summary>
        public QueryResults()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryResults class.
        /// </summary>

        /// <param name="matchingRecordsCount">Number of total records matching the query.
        /// </param>

        /// <param name="signatures">Array containing the results of the query
        /// </param>
        public QueryResults(long? matchingRecordsCount = default(long?), System.Collections.Generic.IList<SingleQueryResult> signatures = default(System.Collections.Generic.IList<SingleQueryResult>))

        {
            this.MatchingRecordsCount = matchingRecordsCount;
            this.Signatures = signatures;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets number of total records matching the query.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "matchingRecordsCount")]
        public long? MatchingRecordsCount {get; set; }

        /// <summary>
        /// Gets or sets array containing the results of the query
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "signatures")]
        public System.Collections.Generic.IList<SingleQueryResult> Signatures {get; set; }
    }
}