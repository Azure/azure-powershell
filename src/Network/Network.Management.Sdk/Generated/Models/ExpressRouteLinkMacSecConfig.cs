// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// ExpressRouteLink Mac Security Configuration.
    /// </summary>
    /// <remarks>
    /// ExpressRouteLink Mac Security Configuration.
    /// </remarks>
    public partial class ExpressRouteLinkMacSecConfig
    {
        /// <summary>
        /// Initializes a new instance of the ExpressRouteLinkMacSecConfig class.
        /// </summary>
        public ExpressRouteLinkMacSecConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExpressRouteLinkMacSecConfig class.
        /// </summary>

        /// <param name="cknSecretIdentifier">Keyvault Secret Identifier URL containing Mac security CKN key.
        /// </param>

        /// <param name="cakSecretIdentifier">Keyvault Secret Identifier URL containing Mac security CAK key.
        /// </param>

        /// <param name="cipher">Mac security cipher.
        /// Possible values include: &#39;GcmAes256&#39;, &#39;GcmAes128&#39;, &#39;GcmAesXpn128&#39;,
        /// &#39;GcmAesXpn256&#39;</param>

        /// <param name="sciState">Sci mode enabled/disabled.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>
        public ExpressRouteLinkMacSecConfig(string cknSecretIdentifier = default(string), string cakSecretIdentifier = default(string), string cipher = default(string), string sciState = default(string))

        {
            this.CknSecretIdentifier = cknSecretIdentifier;
            this.CakSecretIdentifier = cakSecretIdentifier;
            this.Cipher = cipher;
            this.SciState = sciState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets keyvault Secret Identifier URL containing Mac security CKN
        /// key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cknSecretIdentifier")]
        public string CknSecretIdentifier {get; set; }

        /// <summary>
        /// Gets or sets keyvault Secret Identifier URL containing Mac security CAK
        /// key.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cakSecretIdentifier")]
        public string CakSecretIdentifier {get; set; }

        /// <summary>
        /// Gets or sets mac security cipher. Possible values include: &#39;GcmAes256&#39;, &#39;GcmAes128&#39;, &#39;GcmAesXpn128&#39;, &#39;GcmAesXpn256&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cipher")]
        public string Cipher {get; set; }

        /// <summary>
        /// Gets or sets sci mode enabled/disabled. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sciState")]
        public string SciState {get; set; }
    }
}