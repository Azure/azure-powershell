// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Parameters that define the configuration of traffic analytics.
    /// </summary>
    public partial class TrafficAnalyticsConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the TrafficAnalyticsConfigurationProperties class.
        /// </summary>
        public TrafficAnalyticsConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrafficAnalyticsConfigurationProperties class.
        /// </summary>

        /// <param name="enabled">Flag to enable/disable traffic analytics.
        /// </param>

        /// <param name="workspaceId">The resource guid of the attached workspace.
        /// </param>

        /// <param name="workspaceRegion">The location of the attached workspace.
        /// </param>

        /// <param name="workspaceResourceId">Resource Id of the attached workspace.
        /// </param>

        /// <param name="trafficAnalyticsInterval">The interval in minutes which would decide how frequently TA service should
        /// do flow analytics.
        /// </param>
        public TrafficAnalyticsConfigurationProperties(bool? enabled = default(bool?), string workspaceId = default(string), string workspaceRegion = default(string), string workspaceResourceId = default(string), int? trafficAnalyticsInterval = default(int?))

        {
            this.Enabled = enabled;
            this.WorkspaceId = workspaceId;
            this.WorkspaceRegion = workspaceRegion;
            this.WorkspaceResourceId = workspaceResourceId;
            this.TrafficAnalyticsInterval = trafficAnalyticsInterval;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets flag to enable/disable traffic analytics.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public bool? Enabled {get; set; }

        /// <summary>
        /// Gets or sets the resource guid of the attached workspace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceId")]
        public string WorkspaceId {get; set; }

        /// <summary>
        /// Gets or sets the location of the attached workspace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceRegion")]
        public string WorkspaceRegion {get; set; }

        /// <summary>
        /// Gets or sets resource Id of the attached workspace.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "workspaceResourceId")]
        public string WorkspaceResourceId {get; set; }

        /// <summary>
        /// Gets or sets the interval in minutes which would decide how frequently TA
        /// service should do flow analytics.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "trafficAnalyticsInterval")]
        public int? TrafficAnalyticsInterval {get; set; }
    }
}