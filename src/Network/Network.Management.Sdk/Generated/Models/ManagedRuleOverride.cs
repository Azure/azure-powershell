// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Defines a managed rule group override setting.
    /// </summary>
    public partial class ManagedRuleOverride
    {
        /// <summary>
        /// Initializes a new instance of the ManagedRuleOverride class.
        /// </summary>
        public ManagedRuleOverride()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedRuleOverride class.
        /// </summary>

        /// <param name="ruleId">Identifier for the managed rule.
        /// </param>

        /// <param name="state">The state of the managed rule. Defaults to Disabled if not specified.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="action">Describes the override action to be applied when rule matches.
        /// Possible values include: &#39;AnomalyScoring&#39;, &#39;Allow&#39;, &#39;Block&#39;, &#39;Log&#39;,
        /// &#39;JSChallenge&#39;</param>
        public ManagedRuleOverride(string ruleId, string state = default(string), string action = default(string))

        {
            this.RuleId = ruleId;
            this.State = state;
            this.Action = action;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets identifier for the managed rule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ruleId")]
        public string RuleId {get; set; }

        /// <summary>
        /// Gets or sets the state of the managed rule. Defaults to Disabled if not
        /// specified. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }

        /// <summary>
        /// Gets or sets describes the override action to be applied when rule matches. Possible values include: &#39;AnomalyScoring&#39;, &#39;Allow&#39;, &#39;Block&#39;, &#39;Log&#39;, &#39;JSChallenge&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "action")]
        public string Action {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RuleId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RuleId");
            }



        }
    }
}