// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of UrlPathMap of the application gateway.
    /// </summary>
    public partial class ApplicationGatewayUrlPathMapPropertiesFormat
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayUrlPathMapPropertiesFormat class.
        /// </summary>
        public ApplicationGatewayUrlPathMapPropertiesFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayUrlPathMapPropertiesFormat class.
        /// </summary>

        /// <param name="defaultBackendAddressPool">Default backend address pool resource of URL path map.
        /// </param>

        /// <param name="defaultBackendHttpSettings">Default backend http settings resource of URL path map.
        /// </param>

        /// <param name="defaultRewriteRuleSet">Default Rewrite rule set resource of URL path map.
        /// </param>

        /// <param name="defaultRedirectConfiguration">Default redirect configuration resource of URL path map.
        /// </param>

        /// <param name="defaultLoadDistributionPolicy">Default Load Distribution Policy resource of URL path map.
        /// </param>

        /// <param name="pathRules">Path rule of URL path map resource.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the URL path map resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>
        public ApplicationGatewayUrlPathMapPropertiesFormat(SubResource defaultBackendAddressPool = default(SubResource), SubResource defaultBackendHttpSettings = default(SubResource), SubResource defaultRewriteRuleSet = default(SubResource), SubResource defaultRedirectConfiguration = default(SubResource), SubResource defaultLoadDistributionPolicy = default(SubResource), System.Collections.Generic.IList<ApplicationGatewayPathRule> pathRules = default(System.Collections.Generic.IList<ApplicationGatewayPathRule>), string provisioningState = default(string))

        {
            this.DefaultBackendAddressPool = defaultBackendAddressPool;
            this.DefaultBackendHttpSettings = defaultBackendHttpSettings;
            this.DefaultRewriteRuleSet = defaultRewriteRuleSet;
            this.DefaultRedirectConfiguration = defaultRedirectConfiguration;
            this.DefaultLoadDistributionPolicy = defaultLoadDistributionPolicy;
            this.PathRules = pathRules;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets default backend address pool resource of URL path map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultBackendAddressPool")]
        public SubResource DefaultBackendAddressPool {get; set; }

        /// <summary>
        /// Gets or sets default backend http settings resource of URL path map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultBackendHttpSettings")]
        public SubResource DefaultBackendHttpSettings {get; set; }

        /// <summary>
        /// Gets or sets default Rewrite rule set resource of URL path map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultRewriteRuleSet")]
        public SubResource DefaultRewriteRuleSet {get; set; }

        /// <summary>
        /// Gets or sets default redirect configuration resource of URL path map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultRedirectConfiguration")]
        public SubResource DefaultRedirectConfiguration {get; set; }

        /// <summary>
        /// Gets or sets default Load Distribution Policy resource of URL path map.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultLoadDistributionPolicy")]
        public SubResource DefaultLoadDistributionPolicy {get; set; }

        /// <summary>
        /// Gets or sets path rule of URL path map resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pathRules")]
        public System.Collections.Generic.IList<ApplicationGatewayPathRule> PathRules {get; set; }

        /// <summary>
        /// Gets the provisioning state of the URL path map resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
    }
}