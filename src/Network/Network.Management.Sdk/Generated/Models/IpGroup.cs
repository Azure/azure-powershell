// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// The IpGroups resource information.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class IpGroup : Resource
    {
        /// <summary>
        /// Initializes a new instance of the IpGroup class.
        /// </summary>
        public IpGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IpGroup class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the IpGroups resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="ipAddresses">IpAddresses/IpAddressPrefixes in the IpGroups resource.
        /// </param>

        /// <param name="firewalls">List of references to Firewall resources that this IpGroups is associated
        /// with.
        /// </param>

        /// <param name="firewallPolicies">List of references to Firewall Policies resources that this IpGroups is
        /// associated with.
        /// </param>
        public IpGroup(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string etag = default(string), string provisioningState = default(string), System.Collections.Generic.IList<string> ipAddresses = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<SubResource> firewalls = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<SubResource> firewallPolicies = default(System.Collections.Generic.IList<SubResource>))

        : base(id, name, type, location, tags)
        {
            this.Etag = etag;
            this.ProvisioningState = provisioningState;
            this.IPAddresses = ipAddresses;
            this.Firewalls = firewalls;
            this.FirewallPolicies = firewallPolicies;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the IpGroups resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets ipAddresses/IpAddressPrefixes in the IpGroups resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipAddresses")]
        public System.Collections.Generic.IList<string> IPAddresses {get; set; }

        /// <summary>
        /// Gets list of references to Firewall resources that this IpGroups is
        /// associated with.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.firewalls")]
        public System.Collections.Generic.IList<SubResource> Firewalls {get; private set; }

        /// <summary>
        /// Gets list of references to Firewall Policies resources that this IpGroups
        /// is associated with.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.firewallPolicies")]
        public System.Collections.Generic.IList<SubResource> FirewallPolicies {get; private set; }
    }
}