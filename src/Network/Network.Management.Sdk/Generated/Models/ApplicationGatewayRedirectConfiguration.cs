// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Redirect configuration of an application gateway.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayRedirectConfiguration : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayRedirectConfiguration class.
        /// </summary>
        public ApplicationGatewayRedirectConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayRedirectConfiguration class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Name of the redirect configuration that is unique within an Application
        /// Gateway.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="type">Type of the resource.
        /// </param>

        /// <param name="redirectType">HTTP redirection type.
        /// Possible values include: &#39;Permanent&#39;, &#39;Found&#39;, &#39;SeeOther&#39;, &#39;Temporary&#39;</param>

        /// <param name="targetListener">Reference to a listener to redirect the request to.
        /// </param>

        /// <param name="targetUrl">Url to redirect the request to.
        /// </param>

        /// <param name="includePath">Include path in the redirected url.
        /// </param>

        /// <param name="includeQueryString">Include query string in the redirected url.
        /// </param>

        /// <param name="requestRoutingRules">Request routing specifying redirect configuration.
        /// </param>

        /// <param name="urlPathMaps">Url path maps specifying default redirect configuration.
        /// </param>

        /// <param name="pathRules">Path rules specifying redirect configuration.
        /// </param>
        public ApplicationGatewayRedirectConfiguration(string id = default(string), string name = default(string), string etag = default(string), string type = default(string), string redirectType = default(string), SubResource targetListener = default(SubResource), string targetUrl = default(string), bool? includePath = default(bool?), bool? includeQueryString = default(bool?), System.Collections.Generic.IList<SubResource> requestRoutingRules = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<SubResource> urlPathMaps = default(System.Collections.Generic.IList<SubResource>), System.Collections.Generic.IList<SubResource> pathRules = default(System.Collections.Generic.IList<SubResource>))

        : base(id)
        {
            this.Name = name;
            this.Etag = etag;
            this.Type = type;
            this.RedirectType = redirectType;
            this.TargetListener = targetListener;
            this.TargetUrl = targetUrl;
            this.IncludePath = includePath;
            this.IncludeQueryString = includeQueryString;
            this.RequestRoutingRules = requestRoutingRules;
            this.UrlPathMaps = urlPathMaps;
            this.PathRules = pathRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the redirect configuration that is unique within an
        /// Application Gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets type of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets hTTP redirection type. Possible values include: &#39;Permanent&#39;, &#39;Found&#39;, &#39;SeeOther&#39;, &#39;Temporary&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.redirectType")]
        public string RedirectType {get; set; }

        /// <summary>
        /// Gets or sets reference to a listener to redirect the request to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.targetListener")]
        public SubResource TargetListener {get; set; }

        /// <summary>
        /// Gets or sets url to redirect the request to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.targetUrl")]
        public string TargetUrl {get; set; }

        /// <summary>
        /// Gets or sets include path in the redirected url.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.includePath")]
        public bool? IncludePath {get; set; }

        /// <summary>
        /// Gets or sets include query string in the redirected url.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.includeQueryString")]
        public bool? IncludeQueryString {get; set; }

        /// <summary>
        /// Gets or sets request routing specifying redirect configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requestRoutingRules")]
        public System.Collections.Generic.IList<SubResource> RequestRoutingRules {get; set; }

        /// <summary>
        /// Gets or sets url path maps specifying default redirect configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.urlPathMaps")]
        public System.Collections.Generic.IList<SubResource> UrlPathMaps {get; set; }

        /// <summary>
        /// Gets or sets path rules specifying redirect configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.pathRules")]
        public System.Collections.Generic.IList<SubResource> PathRules {get; set; }
    }
}