// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Private endpoint resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class PrivateEndpoint : Resource
    {
        /// <summary>
        /// Initializes a new instance of the PrivateEndpoint class.
        /// </summary>
        public PrivateEndpoint()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrivateEndpoint class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="extendedLocation">The extended location of the load balancer.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="subnet">The ID of the subnet from which the private IP will be allocated.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the private endpoint resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="networkInterfaces">An array of references to the network interfaces created for this private
        /// endpoint.
        /// </param>

        /// <param name="privateLinkServiceConnections">A grouping of information about the connection to the remote resource.
        /// </param>

        /// <param name="manualPrivateLinkServiceConnections">A grouping of information about the connection to the remote resource. Used
        /// when the network admin does not have access to approve connections to the
        /// remote resource.
        /// </param>

        /// <param name="customDnsConfigs">An array of custom dns configurations.
        /// </param>

        /// <param name="applicationSecurityGroups">Application security groups in which the private endpoint IP configuration
        /// is included.
        /// </param>

        /// <param name="ipConfigurations">A list of IP configurations of the private endpoint. This will be used to
        /// map to the First Party Service&#39;s endpoints.
        /// </param>

        /// <param name="customNetworkInterfaceName">The custom name of the network interface attached to the private endpoint.
        /// </param>
        public PrivateEndpoint(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ExtendedLocation extendedLocation = default(ExtendedLocation), string etag = default(string), Subnet subnet = default(Subnet), string provisioningState = default(string), System.Collections.Generic.IList<NetworkInterface> networkInterfaces = default(System.Collections.Generic.IList<NetworkInterface>), System.Collections.Generic.IList<PrivateLinkServiceConnection> privateLinkServiceConnections = default(System.Collections.Generic.IList<PrivateLinkServiceConnection>), System.Collections.Generic.IList<PrivateLinkServiceConnection> manualPrivateLinkServiceConnections = default(System.Collections.Generic.IList<PrivateLinkServiceConnection>), System.Collections.Generic.IList<CustomDnsConfigPropertiesFormat> customDnsConfigs = default(System.Collections.Generic.IList<CustomDnsConfigPropertiesFormat>), System.Collections.Generic.IList<ApplicationSecurityGroup> applicationSecurityGroups = default(System.Collections.Generic.IList<ApplicationSecurityGroup>), System.Collections.Generic.IList<PrivateEndpointIPConfiguration> ipConfigurations = default(System.Collections.Generic.IList<PrivateEndpointIPConfiguration>), string customNetworkInterfaceName = default(string))

        : base(id, name, type, location, tags)
        {
            this.ExtendedLocation = extendedLocation;
            this.Etag = etag;
            this.Subnet = subnet;
            this.ProvisioningState = provisioningState;
            this.NetworkInterfaces = networkInterfaces;
            this.PrivateLinkServiceConnections = privateLinkServiceConnections;
            this.ManualPrivateLinkServiceConnections = manualPrivateLinkServiceConnections;
            this.CustomDnsConfigs = customDnsConfigs;
            this.ApplicationSecurityGroups = applicationSecurityGroups;
            this.IPConfigurations = ipConfigurations;
            this.CustomNetworkInterfaceName = customNetworkInterfaceName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the extended location of the load balancer.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extendedLocation")]
        public ExtendedLocation ExtendedLocation {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets the ID of the subnet from which the private IP will be
        /// allocated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.subnet")]
        public Subnet Subnet {get; set; }

        /// <summary>
        /// Gets the provisioning state of the private endpoint resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets an array of references to the network interfaces created for this
        /// private endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkInterfaces")]
        public System.Collections.Generic.IList<NetworkInterface> NetworkInterfaces {get; private set; }

        /// <summary>
        /// Gets or sets a grouping of information about the connection to the remote
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.privateLinkServiceConnections")]
        public System.Collections.Generic.IList<PrivateLinkServiceConnection> PrivateLinkServiceConnections {get; set; }

        /// <summary>
        /// Gets or sets a grouping of information about the connection to the remote
        /// resource. Used when the network admin does not have access to approve
        /// connections to the remote resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.manualPrivateLinkServiceConnections")]
        public System.Collections.Generic.IList<PrivateLinkServiceConnection> ManualPrivateLinkServiceConnections {get; set; }

        /// <summary>
        /// Gets or sets an array of custom dns configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.customDnsConfigs")]
        public System.Collections.Generic.IList<CustomDnsConfigPropertiesFormat> CustomDnsConfigs {get; set; }

        /// <summary>
        /// Gets or sets application security groups in which the private endpoint IP
        /// configuration is included.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.applicationSecurityGroups")]
        public System.Collections.Generic.IList<ApplicationSecurityGroup> ApplicationSecurityGroups {get; set; }

        /// <summary>
        /// Gets or sets a list of IP configurations of the private endpoint. This will
        /// be used to map to the First Party Service&#39;s endpoints.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<PrivateEndpointIPConfiguration> IPConfigurations {get; set; }

        /// <summary>
        /// Gets or sets the custom name of the network interface attached to the
        /// private endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.customNetworkInterfaceName")]
        public string CustomNetworkInterfaceName {get; set; }
    }
}