// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// ResourceNavigationLink resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ResourceNavigationLink : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ResourceNavigationLink class.
        /// </summary>
        public ResourceNavigationLink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceNavigationLink class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Name of the resource that is unique within a resource group. This name can
        /// be used to access the resource.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the resource navigation link resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="linkedResourceType">Resource type of the linked resource.
        /// </param>

        /// <param name="link">Link to the external resource.
        /// </param>
        public ResourceNavigationLink(string id = default(string), string name = default(string), string etag = default(string), string type = default(string), string provisioningState = default(string), string linkedResourceType = default(string), string link = default(string))

        : base(id)
        {
            this.Name = name;
            this.Etag = etag;
            this.Type = type;
            this.ProvisioningState = provisioningState;
            this.LinkedResourceType = linkedResourceType;
            this.Link = link;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the resource that is unique within a resource group.
        /// This name can be used to access the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets resource type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the resource navigation link resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets resource type of the linked resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.linkedResourceType")]
        public string LinkedResourceType {get; set; }

        /// <summary>
        /// Gets or sets link to the external resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.link")]
        public string Link {get; set; }
    }
}