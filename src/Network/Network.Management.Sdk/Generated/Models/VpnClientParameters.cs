// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Vpn Client Parameters for package generation.
    /// </summary>
    public partial class VpnClientParameters
    {
        /// <summary>
        /// Initializes a new instance of the VpnClientParameters class.
        /// </summary>
        public VpnClientParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VpnClientParameters class.
        /// </summary>

        /// <param name="processorArchitecture">VPN client Processor Architecture.
        /// Possible values include: &#39;Amd64&#39;, &#39;X86&#39;</param>

        /// <param name="authenticationMethod">VPN client authentication method.
        /// Possible values include: &#39;EAPTLS&#39;, &#39;EAPMSCHAPv2&#39;</param>

        /// <param name="radiusServerAuthCertificate">The public certificate data for the radius server authentication
        /// certificate as a Base-64 encoded string. Required only if external radius
        /// authentication has been configured with EAPTLS authentication.
        /// </param>

        /// <param name="clientRootCertificates">A list of client root certificates public certificate data encoded as
        /// Base-64 strings. Optional parameter for external radius based
        /// authentication with EAPTLS.
        /// </param>
        public VpnClientParameters(string processorArchitecture = default(string), string authenticationMethod = default(string), string radiusServerAuthCertificate = default(string), System.Collections.Generic.IList<string> clientRootCertificates = default(System.Collections.Generic.IList<string>))

        {
            this.ProcessorArchitecture = processorArchitecture;
            this.AuthenticationMethod = authenticationMethod;
            this.RadiusServerAuthCertificate = radiusServerAuthCertificate;
            this.ClientRootCertificates = clientRootCertificates;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets vPN client Processor Architecture. Possible values include: &#39;Amd64&#39;, &#39;X86&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "processorArchitecture")]
        public string ProcessorArchitecture {get; set; }

        /// <summary>
        /// Gets or sets vPN client authentication method. Possible values include: &#39;EAPTLS&#39;, &#39;EAPMSCHAPv2&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "authenticationMethod")]
        public string AuthenticationMethod {get; set; }

        /// <summary>
        /// Gets or sets the public certificate data for the radius server
        /// authentication certificate as a Base-64 encoded string. Required only if
        /// external radius authentication has been configured with EAPTLS
        /// authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "radiusServerAuthCertificate")]
        public string RadiusServerAuthCertificate {get; set; }

        /// <summary>
        /// Gets or sets a list of client root certificates public certificate data
        /// encoded as Base-64 strings. Optional parameter for external radius based
        /// authentication with EAPTLS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientRootCertificates")]
        public System.Collections.Generic.IList<string> ClientRootCertificates {get; set; }
    }
}