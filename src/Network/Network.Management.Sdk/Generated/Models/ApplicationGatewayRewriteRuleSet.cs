// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Rewrite rule set of an application gateway.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ApplicationGatewayRewriteRuleSet : SubResource
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayRewriteRuleSet class.
        /// </summary>
        public ApplicationGatewayRewriteRuleSet()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationGatewayRewriteRuleSet class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Name of the rewrite rule set that is unique within an Application Gateway.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the rewrite rule set resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="rewriteRules">Rewrite rules in the rewrite rule set.
        /// </param>
        public ApplicationGatewayRewriteRuleSet(string id = default(string), string name = default(string), string etag = default(string), string provisioningState = default(string), System.Collections.Generic.IList<ApplicationGatewayRewriteRule> rewriteRules = default(System.Collections.Generic.IList<ApplicationGatewayRewriteRule>))

        : base(id)
        {
            this.Name = name;
            this.Etag = etag;
            this.ProvisioningState = provisioningState;
            this.RewriteRules = rewriteRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the rewrite rule set that is unique within an
        /// Application Gateway.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets the provisioning state of the rewrite rule set resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets rewrite rules in the rewrite rule set.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.rewriteRules")]
        public System.Collections.Generic.IList<ApplicationGatewayRewriteRule> RewriteRules {get; set; }
    }
}