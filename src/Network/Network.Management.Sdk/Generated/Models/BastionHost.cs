// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Network.Models
{
    using System.Linq;

    /// <summary>
    /// Bastion Host resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class BastionHost : Resource
    {
        /// <summary>
        /// Initializes a new instance of the BastionHost class.
        /// </summary>
        public BastionHost()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BastionHost class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="zones">A list of availability zones denoting where the resource needs to come
        /// from.
        /// </param>

        /// <param name="etag">A unique read-only string that changes whenever the resource is updated.
        /// </param>

        /// <param name="sku">The sku of this Bastion Host.
        /// </param>

        /// <param name="provisioningState">The provisioning state of the bastion host resource.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;</param>

        /// <param name="ipConfigurations">IP configuration of the Bastion Host resource.
        /// </param>

        /// <param name="dnsName">FQDN for the endpoint on which bastion host is accessible.
        /// </param>

        /// <param name="virtualNetwork">Reference to an existing virtual network required for Developer Bastion
        /// Host only.
        /// </param>

        /// <param name="networkAcls">
        /// </param>

        /// <param name="scaleUnits">The scale units for the Bastion Host resource.
        /// </param>

        /// <param name="disableCopyPaste">Enable/Disable Copy/Paste feature of the Bastion Host resource.
        /// </param>

        /// <param name="enableFileCopy">Enable/Disable File Copy feature of the Bastion Host resource.
        /// </param>

        /// <param name="enableIPConnect">Enable/Disable IP Connect feature of the Bastion Host resource.
        /// </param>

        /// <param name="enableShareableLink">Enable/Disable Shareable Link of the Bastion Host resource.
        /// </param>

        /// <param name="enableTunneling">Enable/Disable Tunneling feature of the Bastion Host resource.
        /// </param>

        /// <param name="enableKerberos">Enable/Disable Kerberos feature of the Bastion Host resource.
        /// </param>
        public BastionHost(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<string> zones = default(System.Collections.Generic.IList<string>), string etag = default(string), Sku sku = default(Sku), string provisioningState = default(string), System.Collections.Generic.IList<BastionHostIPConfiguration> ipConfigurations = default(System.Collections.Generic.IList<BastionHostIPConfiguration>), string dnsName = default(string), SubResource virtualNetwork = default(SubResource), BastionHostPropertiesFormatNetworkAcls networkAcls = default(BastionHostPropertiesFormatNetworkAcls), int? scaleUnits = default(int?), bool? disableCopyPaste = default(bool?), bool? enableFileCopy = default(bool?), bool? enableIPConnect = default(bool?), bool? enableShareableLink = default(bool?), bool? enableTunneling = default(bool?), bool? enableKerberos = default(bool?))

        : base(id, name, type, location, tags)
        {
            this.Zones = zones;
            this.Etag = etag;
            this.Sku = sku;
            this.ProvisioningState = provisioningState;
            this.IPConfigurations = ipConfigurations;
            this.DnsName = dnsName;
            this.VirtualNetwork = virtualNetwork;
            this.NetworkAcls = networkAcls;
            this.ScaleUnits = scaleUnits;
            this.DisableCopyPaste = disableCopyPaste;
            this.EnableFileCopy = enableFileCopy;
            this.EnableIPConnect = enableIPConnect;
            this.EnableShareableLink = enableShareableLink;
            this.EnableTunneling = enableTunneling;
            this.EnableKerberos = enableKerberos;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets a list of availability zones denoting where the resource needs
        /// to come from.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "zones")]
        public System.Collections.Generic.IList<string> Zones {get; set; }

        /// <summary>
        /// Gets a unique read-only string that changes whenever the resource is
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; private set; }

        /// <summary>
        /// Gets or sets the sku of this Bastion Host.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public Sku Sku {get; set; }

        /// <summary>
        /// Gets the provisioning state of the bastion host resource. Possible values include: &#39;Succeeded&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets iP configuration of the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.ipConfigurations")]
        public System.Collections.Generic.IList<BastionHostIPConfiguration> IPConfigurations {get; set; }

        /// <summary>
        /// Gets or sets fQDN for the endpoint on which bastion host is accessible.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.dnsName")]
        public string DnsName {get; set; }

        /// <summary>
        /// Gets or sets reference to an existing virtual network required for
        /// Developer Bastion Host only.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualNetwork")]
        public SubResource VirtualNetwork {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.networkAcls")]
        public BastionHostPropertiesFormatNetworkAcls NetworkAcls {get; set; }

        /// <summary>
        /// Gets or sets the scale units for the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.scaleUnits")]
        public int? ScaleUnits {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable Copy/Paste feature of the Bastion Host
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.disableCopyPaste")]
        public bool? DisableCopyPaste {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable File Copy feature of the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableFileCopy")]
        public bool? EnableFileCopy {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable IP Connect feature of the Bastion Host
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableIpConnect")]
        public bool? EnableIPConnect {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable Shareable Link of the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableShareableLink")]
        public bool? EnableShareableLink {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable Tunneling feature of the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableTunneling")]
        public bool? EnableTunneling {get; set; }

        /// <summary>
        /// Gets or sets enable/Disable Kerberos feature of the Bastion Host resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enableKerberos")]
        public bool? EnableKerberos {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {








            if (this.ScaleUnits != null)
            {
                if (this.ScaleUnits > 50)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMaximum, "ScaleUnits", 50);
                }
                if (this.ScaleUnits < 2)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "ScaleUnits", 2);
                }
            }
        }
    }
}