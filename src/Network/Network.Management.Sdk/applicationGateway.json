{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2024-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}": {
      "delete": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Delete",
        "x-ms-examples": {
          "Delete ApplicationGateway": {
            "$ref": "./examples/ApplicationGatewayDelete.json"
          }
        },
        "description": "Deletes the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Get",
        "x-ms-examples": {
          "Get ApplicationGateway": {
            "$ref": "./examples/ApplicationGatewayGet.json"
          }
        },
        "description": "Gets the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_CreateOrUpdate",
        "description": "Creates or updates the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            },
            "description": "Parameters supplied to the create or update application gateway operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Application Gateway": {
            "$ref": "./examples/ApplicationGatewayCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_UpdateTags",
        "x-ms-examples": {
          "Update Application Gateway tags": {
            "$ref": "./examples/ApplicationGatewayUpdateTags.json"
          }
        },
        "description": "Updates the specified application gateway tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update application gateway tags."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ApplicationGateway resource.",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_List",
        "x-ms-examples": {
          "Lists all application gateways in a resource group": {
            "$ref": "./examples/ApplicationGatewayList.json"
          }
        },
        "description": "Lists all application gateways in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAll",
        "x-ms-examples": {
          "Lists all application gateways in a subscription": {
            "$ref": "./examples/ApplicationGatewayListAll.json"
          }
        },
        "description": "Gets all the application gateways in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of ApplicationGateway resources.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Start",
        "x-ms-examples": {
          "Start Application Gateway": {
            "$ref": "./examples/ApplicationGatewayStart.json"
          }
        },
        "description": "Starts the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation starts the ApplicationGateway resource."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Stop",
        "x-ms-examples": {
          "Stop Application Gateway": {
            "$ref": "./examples/ApplicationGatewayStop.json"
          }
        },
        "description": "Stops the specified application gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the ApplicationGateway resource."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendhealth": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_BackendHealth",
        "description": "Gets the backend health of the specified application gateway in a resource group.",
        "x-ms-examples": {
          "Get Backend Health": {
            "$ref": "./examples/ApplicationGatewayBackendHealthGet.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayBackendHealth"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/getBackendHealthOnDemand": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_BackendHealthOnDemand",
        "description": "Gets the backend health for given combination of backend pool and http setting of the specified application gateway in a resource group.",
        "x-ms-examples": {
          "Test Backend Health": {
            "$ref": "./examples/ApplicationGatewayBackendHealthTest.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands BackendAddressPool and BackendHttpSettings referenced in backend health."
          },
          {
            "name": "probeRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayOnDemandProbe"
            },
            "description": "Request body for on-demand test probe operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayBackendHealthOnDemand"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateLinkResources": {
      "get": {
        "tags": [
          "ApplicationGatewayPrivateLinkResources"
        ],
        "operationId": "ApplicationGatewayPrivateLinkResources_List",
        "x-ms-examples": {
          "Lists all private link resources on application gateway": {
            "$ref": "./examples/ApplicationGatewayPrivateLinkResourceList.json"
          }
        },
        "description": "Lists all private link resources on an application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of private link resources on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}": {
      "delete": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "Delete Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionDelete.json"
          }
        },
        "description": "Deletes the specified private endpoint connection on application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "put": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Update",
        "description": "Updates the specified private endpoint connection on application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            },
            "description": "Parameters supplied to update application gateway private endpoint connection operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting private endpoint connection on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection on application gateway.",
        "x-ms-examples": {
          "Get Application Gateway Private Endpoint Connection": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionGet.json"
          }
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway private endpoint connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns an application gateway private endpoint connection.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "ApplicationGatewayPrivateEndpointConnections"
        ],
        "operationId": "ApplicationGatewayPrivateEndpointConnections_List",
        "x-ms-examples": {
          "Lists all private endpoint connections on application gateway": {
            "$ref": "./examples/ApplicationGatewayPrivateEndpointConnectionList.json"
          }
        },
        "description": "Lists all private endpoint connections on an application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of private endpoint connections on application gateway.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableServerVariables": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableServerVariables",
        "x-ms-examples": {
          "Get Available Server Variables": {
            "$ref": "./examples/ApplicationGatewayAvailableServerVariablesGet.json"
          }
        },
        "description": "Lists all available server variables.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available server variables.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableServerVariablesResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableRequestHeaders": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableRequestHeaders",
        "x-ms-examples": {
          "Get Available Request Headers": {
            "$ref": "./examples/ApplicationGatewayAvailableRequestHeadersGet.json"
          }
        },
        "description": "Lists all available request headers.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available request headers.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableRequestHeadersResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableResponseHeaders": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableResponseHeaders",
        "x-ms-examples": {
          "Get Available Response Headers": {
            "$ref": "./examples/ApplicationGatewayAvailableResponseHeadersGet.json"
          }
        },
        "description": "Lists all available response headers.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available response headers.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableResponseHeadersResult"
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableWafRuleSets": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableWafRuleSets",
        "x-ms-examples": {
          "Get Available Waf Rule Sets": {
            "$ref": "./examples/ApplicationGatewayAvailableWafRuleSetsGet.json"
          }
        },
        "description": "Lists all available web application firewall rule sets.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of all available web application firewall rule sets.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableWafRuleSetsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableSslOptions",
        "x-ms-examples": {
          "Get Available Ssl Options": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsGet.json"
          }
        },
        "description": "Lists available Ssl options for configuring Ssl policy.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns all available Ssl options for configuring Ssl policy.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableSslOptions"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAvailableSslPredefinedPolicies",
        "x-ms-examples": {
          "Get Available Ssl Predefined Policies": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsPredefinedPoliciesGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Lists all SSL predefined policies for configuring Ssl policy.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a lists of all Ssl predefined policies for configuring Ssl policy.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayAvailableSslPredefinedPolicies"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGatewayAvailableSslOptions/default/predefinedPolicies/{predefinedPolicyName}": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_GetSslPredefinedPolicy",
        "x-ms-examples": {
          "Get Available Ssl Predefined Policy by name": {
            "$ref": "./examples/ApplicationGatewayAvailableSslOptionsPredefinedPolicyGet.json"
          }
        },
        "description": "Gets Ssl predefined policy with the specified policy name.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "predefinedPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of Ssl predefined policy."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a Ssl predefined policy with the specified policy name.",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGatewayOnDemandProbe": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to backend pool of application gateway to which probe request will be sent."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to backend http setting of application gateway to be used for test probe."
        }
      },
      "description": "Details of on demand test probe request."
    },
    "ApplicationGatewayBackendHealthOnDemand": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference to an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHealthHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings",
          "description": "Application gateway BackendHealthHttp settings."
        }
      },
      "description": "Result of on demand test probe."
    },
    "ApplicationGatewayBackendHealth": {
      "properties": {
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthPool"
          },
          "description": "A list of ApplicationGatewayBackendHealthPool resources."
        }
      },
      "description": "Response for ApplicationGatewayBackendHealth API service call."
    },
    "ApplicationGatewayBackendHealthPool": {
      "properties": {
        "backendAddressPool": {
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPool",
          "description": "Reference to an ApplicationGatewayBackendAddressPool resource."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthHttpSettings"
          },
          "description": "List of ApplicationGatewayBackendHealthHttpSettings resources."
        }
      },
      "description": "Application gateway BackendHealth pool."
    },
    "ApplicationGatewayBackendHealthHttpSettings": {
      "properties": {
        "backendHttpSettings": {
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings",
          "description": "Reference to an ApplicationGatewayBackendHttpSettings resource."
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHealthServer"
          },
          "description": "List of ApplicationGatewayBackendHealthServer resources."
        }
      },
      "description": "Application gateway BackendHealthHttp settings."
    },
    "ApplicationGatewayBackendHealthServer": {
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address or FQDN of backend server."
        },
        "ipConfiguration": {
          "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration",
          "description": "Reference to IP configuration of backend server."
        },
        "health": {
          "type": "string",
          "description": "Health of backend server.",
          "enum": [
            "Unknown",
            "Up",
            "Down",
            "Partial",
            "Draining"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayBackendHealthServerHealth",
            "modelAsString": true
          }
        },
        "healthProbeLog": {
          "type": "string",
          "description": "Health Probe Log."
        }
      },
      "description": "Application gateway backendhealth http settings."
    },
    "ApplicationGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of an application gateway SKU.",
          "enum": [
            "Standard_Small",
            "Standard_Medium",
            "Standard_Large",
            "WAF_Medium",
            "WAF_Large",
            "Standard_v2",
            "WAF_v2",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of an application gateway.",
          "enum": [
            "Standard",
            "WAF",
            "Standard_v2",
            "WAF_v2",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity (instance count) of an application gateway."
        },
        "family": {
          "type": "string",
          "description": "Family of an application gateway SKU.",
          "enum": [
            "Generation_1",
            "Generation_2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuFamily",
            "modelAsString": true
          }
        }
      },
      "description": "SKU of an application gateway."
    },
    "ApplicationGatewaySslPolicy": {
      "properties": {
        "disabledSslProtocols": {
          "type": "array",
          "description": "Ssl protocols to be disabled on application gateway.",
          "items": {
            "type": "string",
            "$ref": "#/definitions/ProtocolsEnum"
          }
        },
        "policyType": {
          "type": "string",
          "description": "Type of Ssl Policy.",
          "enum": [
            "Predefined",
            "Custom",
            "CustomV2"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySslPolicyType",
            "modelAsString": true
          }
        },
        "policyName": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of Ssl predefined policy."
        },
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order to application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Application Gateway Ssl policy."
    },
    "ApplicationGatewayClientAuthConfiguration": {
      "properties": {
        "verifyClientCertIssuerDN": {
          "type": "boolean",
          "description": "Verify client certificate issuer name on the application gateway."
        },
        "verifyClientRevocation": {
          "type": "string",
          "description": "Verify client certificate revocation status.",
          "enum": [
            "None",
            "OCSP"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayClientRevocationOptions",
            "modelAsString": true
          }
        }
      },
      "description": "Application gateway client authentication configuration."
    },
    "ApplicationGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource. A subnet from where application gateway gets its private address."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway IP configuration resource."
        }
      },
      "description": "Properties of IP configuration of an application gateway."
    },
    "ApplicationGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed."
    },
    "ApplicationGatewayAuthenticationCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the authentication certificate resource."
        }
      },
      "description": "Authentication certificates properties of an application gateway."
    },
    "ApplicationGatewayAuthenticationCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificatePropertiesFormat",
          "description": "Properties of the application gateway authentication certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the authentication certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Authentication certificates of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the trusted root certificate resource."
        }
      },
      "description": "Trusted Root certificates properties of an application gateway."
    },
    "ApplicationGatewayTrustedRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificatePropertiesFormat",
          "description": "Properties of the application gateway trusted root certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the trusted root certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Trusted Root certificates of an application gateway."
    },
    "ApplicationGatewayTrustedClientCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data."
        },
        "validatedCertData": {
          "readOnly": true,
          "type": "string",
          "description": "Validated certificate data."
        },
        "clientCertIssuerDN": {
          "readOnly": true,
          "type": "string",
          "description": "Distinguished name of client certificate issuer."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the trusted client certificate resource."
        }
      },
      "description": "Trusted client certificates properties of an application gateway."
    },
    "ApplicationGatewayTrustedClientCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayTrustedClientCertificatePropertiesFormat",
          "description": "Properties of the application gateway trusted client certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the trusted client certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Trusted client certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base-64 encoded pfx certificate. Only applicable in PUT Request."
        },
        "password": {
          "type": "string",
          "description": "Password for the pfx file specified in data. Only applicable in PUT request."
        },
        "publicCertData": {
          "readOnly": true,
          "type": "string",
          "description": "Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request."
        },
        "keyVaultSecretId": {
          "type": "string",
          "description": "Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the SSL certificate resource."
        }
      },
      "description": "Properties of SSL certificates of an application gateway."
    },
    "ApplicationGatewaySslCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslCertificatePropertiesFormat",
          "description": "Properties of the application gateway SSL certificate."
        },
        "name": {
          "type": "string",
          "description": "Name of the SSL certificate that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "SSL certificates of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "PrivateIPAddress of the network interface IP Configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the PublicIP resource."
        },
        "privateLinkConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the application gateway private link configuration."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend IP configuration resource."
        }
      },
      "description": "Properties of Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendIPConfigurationPropertiesFormat",
          "description": "Properties of the application gateway frontend IP configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend IP configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP configuration of an application gateway."
    },
    "ApplicationGatewayFrontendPortPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend port."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the frontend port resource."
        }
      },
      "description": "Properties of Frontend port of an application gateway."
    },
    "ApplicationGatewayFrontendPort": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendPortPropertiesFormat",
          "description": "Properties of the application gateway frontend port."
        },
        "name": {
          "type": "string",
          "description": "Name of the frontend port that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Frontend port of an application gateway."
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN)."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address."
        }
      },
      "description": "Backend address of an application gateway."
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in network interfaces."
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend address pool resource."
        }
      },
      "description": "Properties of Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat",
          "description": "Properties of the application gateway backend address pool."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend address pool that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettingsPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port on the backend."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used to communicate with the backend."
        },
        "cookieBasedAffinity": {
          "type": "string",
          "description": "Cookie based affinity.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCookieBasedAffinity",
            "modelAsString": true
          }
        },
        "requestTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds."
        },
        "probe": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Probe resource of an application gateway."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway authentication certificates."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted root certificates."
        },
        "connectionDraining": {
          "$ref": "#/definitions/ApplicationGatewayConnectionDraining",
          "description": "Connection draining of the backend http settings resource."
        },
        "hostName": {
          "type": "string",
          "description": "Host header to be sent to the backend servers."
        },
        "pickHostNameFromBackendAddress": {
          "type": "boolean",
          "description": "Whether to pick host header should be picked from the host name of the backend server. Default value is false."
        },
        "affinityCookieName": {
          "type": "string",
          "description": "Cookie name to use for the affinity cookie."
        },
        "probeEnabled": {
          "type": "boolean",
          "description": "Whether the probe is enabled. Default value is false."
        },
        "path": {
          "type": "string",
          "description": "Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend HTTP settings resource."
        }
      },
      "description": "Properties of Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendHttpSettings": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettingsPropertiesFormat",
          "description": "Properties of the application gateway backend HTTP settings."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend http settings that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendSettingsPropertiesFormat": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The destination port on the backend."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used to communicate with the backend."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds."
        },
        "probe": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Probe resource of an application gateway."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted root certificates."
        },
        "hostName": {
          "type": "string",
          "description": "Server name indication to be sent to the backend servers for Tls protocol."
        },
        "pickHostNameFromBackendAddress": {
          "type": "boolean",
          "description": "Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the backend HTTP settings resource."
        }
      },
      "description": "Properties of Backend address pool settings of an application gateway."
    },
    "ApplicationGatewayBackendSettings": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendSettingsPropertiesFormat",
          "description": "Properties of the application gateway backend settings."
        },
        "name": {
          "type": "string",
          "description": "Name of the backend settings that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of an application gateway."
    },
    "ApplicationGatewaySslProfilePropertiesFormat": {
      "properties": {
        "trustedClientCertificates": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Array of references to application gateway trusted client certificates."
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of the application gateway resource."
        },
        "clientAuthConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayClientAuthConfiguration",
          "description": "Client authentication configuration of the application gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the HTTP listener resource."
        }
      },
      "description": "Properties of SSL profile of an application gateway."
    },
    "ApplicationGatewaySslProfile": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslProfilePropertiesFormat",
          "description": "Properties of the application gateway SSL profile."
        },
        "name": {
          "type": "string",
          "description": "Name of the SSL profile that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "SSL profile of an application gateway."
    },
    "ApplicationGatewayHttpListenerPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend IP configuration resource of an application gateway."
        },
        "frontendPort": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend port resource of an application gateway."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "Protocol of the HTTP listener."
        },
        "hostName": {
          "type": "string",
          "description": "Host name of HTTP listener."
        },
        "sslCertificate": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL certificate resource of an application gateway."
        },
        "sslProfile": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL profile resource of the application gateway."
        },
        "requireServerNameIndication": {
          "type": "boolean",
          "description": "Applicable only if protocol is https. Enables SNI for multi-hosting."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the HTTP listener resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the HTTP listener."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Host names for HTTP Listener that allows special wildcard characters as well."
        }
      },
      "description": "Properties of HTTP listener of an application gateway."
    },
    "ApplicationGatewayHttpListener": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayHttpListenerPropertiesFormat",
          "description": "Properties of the application gateway HTTP listener."
        },
        "name": {
          "type": "string",
          "description": "Name of the HTTP listener that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Http listener of an application gateway."
    },
    "ApplicationGatewayListenerPropertiesFormat": {
      "type": "object",
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend IP configuration resource of an application gateway."
        },
        "frontendPort": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Frontend port resource of an application gateway."
        },
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "Protocol of the listener."
        },
        "sslCertificate": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL certificate resource of an application gateway."
        },
        "sslProfile": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "SSL profile resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the listener resource."
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Server Name Indications(SNI) for TLS Multi-site Listener that allows special wildcard characters as well."
        }
      },
      "description": "Properties of listener of an application gateway."
    },
    "ApplicationGatewayListener": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayListenerPropertiesFormat",
          "description": "Properties of the application gateway listener."
        },
        "name": {
          "type": "string",
          "description": "Name of the listener that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Listener of an application gateway."
    },
    "ApplicationGatewayPathRulePropertiesFormat": {
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Path rules of URL path map."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of URL path map path rule."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend http settings resource of URL path map path rule."
        },
        "redirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Redirect configuration resource of URL path map path rule."
        },
        "rewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Rewrite rule set resource of URL path map path rule."
        },
        "loadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Load Distribution Policy resource of URL path map path rule."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the path rule resource."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        }
      },
      "description": "Properties of path rule of an application gateway."
    },
    "ApplicationGatewayPathRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPathRulePropertiesFormat",
          "description": "Properties of the application gateway path rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the path rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Path rule of URL path map of an application gateway."
    },
    "ApplicationGatewayProbePropertiesFormat": {
      "properties": {
        "protocol": {
          "$ref": "#/definitions/ApplicationGatewayProtocol",
          "description": "The protocol used for the probe."
        },
        "host": {
          "type": "string",
          "description": "Host name to send the probe to."
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds."
        },
        "unhealthyThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20."
        },
        "pickHostNameFromBackendHttpSettings": {
          "type": "boolean",
          "description": "Whether the host header should be picked from the backend http settings. Default value is false."
        },
        "pickHostNameFromBackendSettings": {
          "type": "boolean",
          "description": "Whether the server name indication should be picked from the backend settings for Tls protocol. Default value is false."
        },
        "minServers": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of servers that are always marked healthy. Default value is 0."
        },
        "match": {
          "$ref": "#/definitions/ApplicationGatewayProbeHealthResponseMatch",
          "description": "Criterion for classifying a healthy probe response."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the probe resource."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Basic, Standard_v2 and WAF_v2 only.",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "description": "Properties of probe of an application gateway."
    },
    "ApplicationGatewayProbeHealthResponseMatch": {
      "properties": {
        "body": {
          "type": "string",
          "description": "Body that must be contained in the health response. Default value is empty."
        },
        "statusCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399."
        }
      },
      "description": "Application gateway probe health response match."
    },
    "ApplicationGatewayProbe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayProbePropertiesFormat",
          "description": "Properties of the application gateway probe."
        },
        "name": {
          "type": "string",
          "description": "Name of the probe that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Probe of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRulePropertiesFormat": {
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type.",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 20000,
          "exclusiveMaximum": false,
          "description": "Priority of the request routing rule."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        },
        "backendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend http settings resource of the application gateway."
        },
        "httpListener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Http listener resource of the application gateway."
        },
        "urlPathMap": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "URL path map resource of the application gateway."
        },
        "rewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Rewrite Rule Set resource in Basic rule of the application gateway."
        },
        "redirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Redirect configuration resource of the application gateway."
        },
        "loadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Load Distribution Policy resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the request routing rule resource."
        }
      },
      "description": "Properties of request routing rule of the application gateway."
    },
    "ApplicationGatewayRequestRoutingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRequestRoutingRulePropertiesFormat",
          "description": "Properties of the application gateway request routing rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the request routing rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Request routing rule of an application gateway."
    },
    "ApplicationGatewayRoutingRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type.",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "exclusiveMinimum": false,
          "maximum": 20000,
          "exclusiveMaximum": false,
          "description": "Priority of the routing rule."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        },
        "backendSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend settings resource of the application gateway."
        },
        "listener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Listener resource of the application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the request routing rule resource."
        }
      },
      "required": [
        "priority"
      ],
      "description": "Properties of routing rule of the application gateway."
    },
    "ApplicationGatewayRoutingRule": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRoutingRulePropertiesFormat",
          "description": "Properties of the application gateway routing rule."
        },
        "name": {
          "type": "string",
          "description": "Name of the routing rule that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Routing rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleSetPropertiesFormat",
          "description": "Properties of the application gateway rewrite rule set."
        },
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule set that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Rewrite rule set of an application gateway."
    },
    "ApplicationGatewayRewriteRuleSetPropertiesFormat": {
      "properties": {
        "rewriteRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRule"
          },
          "description": "Rewrite rules in the rewrite rule set."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the rewrite rule set resource."
        }
      },
      "description": "Properties of rewrite rule set of the application gateway."
    },
    "ApplicationGatewayRewriteRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rewrite rule that is unique within an Application Gateway."
        },
        "ruleSequence": {
          "type": "integer",
          "description": "Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleCondition"
          },
          "description": "Conditions based on which the action set execution will be evaluated."
        },
        "actionSet": {
          "type": "object",
          "$ref": "#/definitions/ApplicationGatewayRewriteRuleActionSet",
          "description": "Set of actions to be done as part of the rewrite Rule."
        }
      },
      "description": "Rewrite rule of an application gateway."
    },
    "ApplicationGatewayRewriteRuleCondition": {
      "properties": {
        "variable": {
          "type": "string",
          "description": "The condition parameter of the RewriteRuleCondition."
        },
        "pattern": {
          "type": "string",
          "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition."
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison."
        },
        "negate": {
          "type": "boolean",
          "description": "Setting this value as truth will force to check the negation of the condition given by the user."
        }
      },
      "description": "Set of conditions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayRewriteRuleActionSet": {
      "properties": {
        "requestHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Request Header Actions in the Action Set."
        },
        "responseHeaderConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHeaderConfiguration"
          },
          "description": "Response Header Actions in the Action Set."
        },
        "urlConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayUrlConfiguration",
          "description": "Url Configuration Action in the Action Set."
        }
      },
      "description": "Set of actions in the Rewrite Rule in Application Gateway."
    },
    "ApplicationGatewayHeaderConfiguration": {
      "properties": {
        "headerName": {
          "type": "string",
          "description": "Header name of the header configuration."
        },
        "headerValueMatcher": {
          "type": "object",
          "$ref": "#/definitions/HeaderValueMatcher",
          "description": "An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud"
        },
        "headerValue": {
          "type": "string",
          "description": "Header value of the header configuration."
        }
      },
      "description": "Header configuration of the Actions set in Application Gateway."
    },
    "HeaderValueMatcher": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "The pattern, either fixed string or regular expression, that evaluates if a header value should be selected for rewrite."
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison."
        },
        "negate": {
          "type": "boolean",
          "description": "Setting this value as truth will force to check the negation of the condition given by the user in the pattern field."
        }
      },
      "description": "An optional field under \"Rewrite Action\". It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud"
    },
    "ApplicationGatewayUrlConfiguration": {
      "properties": {
        "modifiedPath": {
          "type": "string",
          "description": "Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null."
        },
        "modifiedQueryString": {
          "type": "string",
          "description": "Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null."
        },
        "reroute": {
          "type": "boolean",
          "description": "If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false."
        }
      },
      "description": "Url configuration of the Actions set in Application Gateway."
    },
    "ApplicationGatewayRedirectConfigurationPropertiesFormat": {
      "properties": {
        "redirectType": {
          "type": "string",
          "$ref": "#/definitions/RedirectTypeEnum",
          "description": "HTTP redirection type."
        },
        "targetListener": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to a listener to redirect the request to."
        },
        "targetUrl": {
          "type": "string",
          "description": "Url to redirect the request to."
        },
        "includePath": {
          "type": "boolean",
          "description": "Include path in the redirected url."
        },
        "includeQueryString": {
          "type": "boolean",
          "description": "Include query string in the redirected url."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Request routing specifying redirect configuration."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Url path maps specifying default redirect configuration."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "Path rules specifying redirect configuration."
        }
      },
      "description": "Properties of redirect configuration of the application gateway."
    },
    "ApplicationGatewayRedirectConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRedirectConfigurationPropertiesFormat",
          "description": "Properties of the application gateway redirect configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the redirect configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Redirect configuration of an application gateway."
    },
    "ApplicationGatewayPrivateLinkConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkConfigurationProperties",
          "description": "Properties of the application gateway private link configuration."
        },
        "name": {
          "type": "string",
          "description": "Name of the private link configuration that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Private Link Configuration on an application gateway."
    },
    "ApplicationGatewayPrivateLinkConfigurationProperties": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkIpConfiguration"
          },
          "description": "An array of application gateway private link ip configurations."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private link configuration."
        }
      },
      "description": "Properties of private link configuration on an application gateway."
    },
    "ApplicationGatewayPrivateLinkIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkIpConfigurationProperties",
          "description": "Properties of an application gateway private link ip configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of application gateway private link ip configuration."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "The application gateway private link ip configuration."
    },
    "ApplicationGatewayPrivateLinkIpConfigurationProperties": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the subnet resource."
        },
        "primary": {
          "type": "boolean",
          "description": "Whether the ip configuration is primary or not."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private link IP configuration."
        }
      },
      "description": "Properties of an application gateway private link IP configuration."
    },
    "ApplicationGatewayPrivateLinkResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateLinkResourceProperties",
          "description": "Properties of the application gateway private link resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the private link resource that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "PrivateLink Resource of an application gateway."
    },
    "ApplicationGatewayPrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "Group identifier of private link resource.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required member names of private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required DNS zone names of the the private link resource."
        }
      },
      "description": "Properties of a private link resource."
    },
    "ApplicationGatewayPrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkResource"
          },
          "description": "List of private link resources of an application gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGatewayPrivateLinkResources API service call. Gets all private link resources for an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnectionProperties",
          "description": "Properties of the application gateway private endpoint connection."
        },
        "name": {
          "type": "string",
          "description": "Name of the private endpoint connection on an application gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Private Endpoint connection on an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "readOnly": true,
          "$ref": "./privateEndpoint.json#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "./privateLinkService.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway private endpoint connection resource."
        },
        "linkIdentifier": {
          "readOnly": true,
          "type": "string",
          "description": "The consumer link id."
        }
      },
      "description": "Properties of Private Link Resource of an application gateway."
    },
    "ApplicationGatewayPrivateEndpointConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
          },
          "description": "List of private endpoint connections on an application gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGatewayPrivateEndpointConnection API service call. Gets all private endpoint connections for an application gateway."
    },
    "ApplicationGatewayPropertiesFormat": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ApplicationGatewaySku",
          "description": "SKU of the application gateway resource."
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of the application gateway resource."
        },
        "operationalState": {
          "readOnly": true,
          "type": "string",
          "description": "Operational state of the application gateway resource.",
          "enum": [
            "Stopped",
            "Starting",
            "Running",
            "Stopping"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayOperationalState",
            "modelAsString": true
          }
        },
        "gatewayIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayIPConfiguration"
          },
          "description": "Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificate"
          },
          "description": "Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "trustedRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayTrustedRootCertificate"
          },
          "description": "Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "trustedClientCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayTrustedClientCertificate"
          },
          "description": "Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "sslCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslCertificate"
          },
          "description": "SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendIPConfiguration"
          },
          "description": "Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "frontendPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendPort"
          },
          "description": "Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayProbe"
          },
          "description": "Probes of the application gateway resource."
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings"
          },
          "description": "Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "backendSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendSettings"
          },
          "description": "Backend settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "httpListeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHttpListener"
          },
          "description": "Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "listeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayListener"
          },
          "description": "Listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "sslProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslProfile"
          },
          "description": "SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayUrlPathMap"
          },
          "description": "URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRequestRoutingRule"
          },
          "description": "Request routing rules of the application gateway resource."
        },
        "routingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRoutingRule"
          },
          "description": "Routing rules of the application gateway resource."
        },
        "rewriteRuleSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRewriteRuleSet"
          },
          "description": "Rewrite rules for the application gateway resource."
        },
        "redirectConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRedirectConfiguration"
          },
          "description": "Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits)."
        },
        "webApplicationFirewallConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayWebApplicationFirewallConfiguration",
          "description": "Web application firewall configuration."
        },
        "firewallPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the FirewallPolicy resource."
        },
        "enableHttp2": {
          "type": "boolean",
          "description": "Whether HTTP2 is enabled on the application gateway resource."
        },
        "enableFips": {
          "type": "boolean",
          "description": "Whether FIPS is enabled on the application gateway resource."
        },
        "autoscaleConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayAutoscaleConfiguration",
          "description": "Autoscale Configuration."
        },
        "privateLinkConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateLinkConfiguration"
          },
          "description": "PrivateLink configurations on application gateway."
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPrivateEndpointConnection"
          },
          "description": "Private Endpoint connections on application gateway."
        },
        "resourceGuid": {
          "readOnly": true,
          "type": "string",
          "description": "The resource GUID property of the application gateway resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the application gateway resource."
        },
        "customErrorConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayCustomError"
          },
          "description": "Custom error configurations of the application gateway resource."
        },
        "forceFirewallPolicyAssociation": {
          "type": "boolean",
          "description": "If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config."
        },
        "loadDistributionPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayLoadDistributionPolicy"
          },
          "description": "Load distribution policies of the application gateway resource."
        },
        "globalConfiguration": {
          "$ref": "#/definitions/ApplicationGatewayGlobalConfiguration",
          "description": "Global Configuration."
        },
        "defaultPredefinedSslPolicy": {
          "$ref": "#/definitions/PolicyNameEnum",
          "readOnly": true,
          "description": "The default predefined SSL Policy applied on the application gateway resource."
        }
      },
      "description": "Properties of the application gateway."
    },
    "ApplicationGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPropertiesFormat",
          "description": "Properties of the application gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        },
        "identity": {
          "$ref": "./network.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the application gateway, if configured."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Application gateway resource."
    },
    "ApplicationGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGateway"
          },
          "description": "List of an application gateways in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGateways API service call."
    },
    "ApplicationGatewayUrlPathMapPropertiesFormat": {
      "properties": {
        "defaultBackendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default backend address pool resource of URL path map."
        },
        "defaultBackendHttpSettings": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default backend http settings resource of URL path map."
        },
        "defaultRewriteRuleSet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default Rewrite rule set resource of URL path map."
        },
        "defaultRedirectConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default redirect configuration resource of URL path map."
        },
        "defaultLoadDistributionPolicy": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Default Load Distribution Policy resource of URL path map."
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPathRule"
          },
          "description": "Path rule of URL path map resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the URL path map resource."
        }
      },
      "description": "Properties of UrlPathMap of the application gateway."
    },
    "ApplicationGatewayUrlPathMap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayUrlPathMapPropertiesFormat",
          "description": "Properties of the application gateway URL path map."
        },
        "name": {
          "type": "string",
          "description": "Name of the URL path map that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "UrlPathMaps give a url path to the backend mapping information for PathBasedRouting."
    },
    "ApplicationGatewayWebApplicationFirewallConfiguration": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the web application firewall is enabled or not."
        },
        "firewallMode": {
          "type": "string",
          "description": "Web application firewall mode.",
          "enum": [
            "Detection",
            "Prevention"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayFirewallMode",
            "modelAsString": true
          }
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set. Possible values are: 'OWASP'."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the rule set type."
        },
        "disabledRuleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallDisabledRuleGroup"
          },
          "description": "The disabled rule groups."
        },
        "requestBodyCheck": {
          "type": "boolean",
          "description": "Whether allow WAF to check request Body."
        },
        "maxRequestBodySize": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size for WAF."
        },
        "maxRequestBodySizeInKb": {
          "type": "integer",
          "format": "int32",
          "maximum": 128,
          "exclusiveMaximum": false,
          "minimum": 8,
          "exclusiveMinimum": false,
          "description": "Maximum request body size in Kb for WAF."
        },
        "fileUploadLimitInMb": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Maximum file upload size in Mb for WAF."
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallExclusion"
          },
          "description": "The exclusion list."
        }
      },
      "required": [
        "enabled",
        "firewallMode",
        "ruleSetType",
        "ruleSetVersion"
      ],
      "description": "Application gateway web application firewall configuration."
    },
    "ApplicationGatewayAutoscaleConfiguration": {
      "properties": {
        "minCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "Lower bound on number of Application Gateway capacity."
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 2,
          "exclusiveMinimum": false,
          "description": "Upper bound on number of Application Gateway capacity."
        }
      },
      "required": [
        "minCapacity"
      ],
      "description": "Application Gateway autoscale configuration."
    },
    "ApplicationGatewayConnectionDraining": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether connection draining is enabled or not."
        },
        "drainTimeoutInSec": {
          "type": "integer",
          "format": "int32",
          "maximum": 3600,
          "exclusiveMaximum": false,
          "minimum": 1,
          "exclusiveMinimum": false,
          "description": "The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds."
        }
      },
      "required": [
        "enabled",
        "drainTimeoutInSec"
      ],
      "description": "Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration."
    },
    "ApplicationGatewayFirewallDisabledRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the rule group that will be disabled."
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "description": "The list of rules that will be disabled. If null, all rules of the rule group will be disabled."
        }
      },
      "required": [
        "ruleGroupName"
      ],
      "description": "Allows to disable rules within a rule group or an entire rule group."
    },
    "ApplicationGatewayAvailableServerVariablesResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableServerVariables API service call."
    },
    "ApplicationGatewayAvailableRequestHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableRequestHeaders API service call."
    },
    "ApplicationGatewayAvailableResponseHeadersResult": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Response for ApplicationGatewayAvailableResponseHeaders API service call."
    },
    "ApplicationGatewayFirewallExclusion": {
      "properties": {
        "matchVariable": {
          "type": "string",
          "description": "The variable to be excluded."
        },
        "selectorMatchOperator": {
          "type": "string",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to."
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to."
        }
      },
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ],
      "description": "Allow to exclude some variable satisfy the condition for the WAF check."
    },
    "ApplicationGatewayAvailableWafRuleSetsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleSet"
          },
          "description": "The list of application gateway rule sets."
        }
      },
      "description": "Response for ApplicationGatewayAvailableWafRuleSets API service call."
    },
    "ApplicationGatewayFirewallRuleSet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFirewallRuleSetPropertiesFormat",
          "description": "Properties of the application gateway firewall rule set."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "A web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleSetPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the web application firewall rule set."
        },
        "ruleSetType": {
          "type": "string",
          "description": "The type of the web application firewall rule set."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "The version of the web application firewall rule set type."
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRuleGroup"
          },
          "description": "The rule groups of the web application firewall rule set."
        },
        "tiers": {
          "type": "array",
          "description": "Tier of an application gateway that support the rule set.",
          "items": {
            "type": "string",
            "enum": [
              "Standard",
              "WAF",
              "Standard_v2",
              "WAF_v2"
            ],
            "x-ms-enum": {
              "name": "ApplicationGatewayTierTypes",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion",
        "ruleGroups"
      ],
      "description": "Properties of the web application firewall rule set."
    },
    "ApplicationGatewayFirewallRuleGroup": {
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The name of the web application firewall rule group."
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule group."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFirewallRule"
          },
          "description": "The rules of the web application firewall rule group."
        }
      },
      "required": [
        "ruleGroupName",
        "rules"
      ],
      "description": "A web application firewall rule group."
    },
    "ApplicationGatewayFirewallRule": {
      "properties": {
        "ruleId": {
          "type": "integer",
          "format": "int32",
          "description": "The identifier of the web application firewall rule."
        },
        "ruleIdString": {
          "type": "string",
          "description": "The string representation of the web application firewall rule identifier."
        },
        "state": {
          "type": "string",
          "description": "The string representation of the web application firewall rule state.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayWafRuleStateTypes",
            "modelAsString": true
          }
        },
        "action": {
          "type": "string",
          "description": "The string representation of the web application firewall rule action.",
          "enum": [
            "None",
            "AnomalyScoring",
            "Allow",
            "Block",
            "Log"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayWafRuleActionTypes",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The description of the web application firewall rule."
        }
      },
      "required": [
        "ruleId"
      ],
      "description": "A web application firewall rule."
    },
    "ApplicationGatewayAvailableSslOptions": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAvailableSslOptionsPropertiesFormat",
          "description": "Properties of the application gateway available SSL options."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewayAvailableSslOptionsPropertiesFormat": {
      "properties": {
        "predefinedPolicies": {
          "type": "array",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of available Ssl predefined policy."
        },
        "defaultPolicy": {
          "$ref": "#/definitions/PolicyNameEnum",
          "description": "Name of the Ssl predefined policy applied by default to application gateway."
        },
        "availableCipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "List of available Ssl cipher suites."
        },
        "availableProtocols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtocolsEnum"
          },
          "description": "List of available Ssl protocols."
        }
      },
      "description": "Properties of ApplicationGatewayAvailableSslOptions."
    },
    "ApplicationGatewayAvailableSslPredefinedPolicies": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicy"
          },
          "description": "List of available Ssl predefined policy."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ApplicationGatewayAvailableSslOptions API service call."
    },
    "ApplicationGatewaySslPredefinedPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Ssl predefined policy."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslPredefinedPolicyPropertiesFormat",
          "description": "Properties of the application gateway SSL predefined policy."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "An Ssl predefined policy."
    },
    "ApplicationGatewaySslPredefinedPolicyPropertiesFormat": {
      "properties": {
        "cipherSuites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CipherSuitesEnum"
          },
          "description": "Ssl cipher suites to be enabled in the specified order for application gateway."
        },
        "minProtocolVersion": {
          "$ref": "#/definitions/ProtocolsEnum",
          "description": "Minimum version of Ssl protocol to be supported on application gateway."
        }
      },
      "description": "Properties of ApplicationGatewaySslPredefinedPolicy."
    },
    "ApplicationGatewayCustomError": {
      "properties": {
        "statusCode": {
          "type": "string",
          "description": "Status code of the application gateway custom error.",
          "enum": [
            "HttpStatus400",
            "HttpStatus403",
            "HttpStatus404",
            "HttpStatus405",
            "HttpStatus408",
            "HttpStatus500",
            "HttpStatus502",
            "HttpStatus503",
            "HttpStatus504"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCustomErrorStatusCode",
            "modelAsString": true
          }
        },
        "customErrorPageUrl": {
          "type": "string",
          "description": "Error page URL of the application gateway custom error."
        }
      },
      "description": "Custom error of an application gateway."
    },
    "PolicyNameEnum": {
      "type": "string",
      "description": "Ssl predefined policy name enums.",
      "enum": [
        "AppGwSslPolicy20150501",
        "AppGwSslPolicy20170401",
        "AppGwSslPolicy20170401S",
        "AppGwSslPolicy20220101",
        "AppGwSslPolicy20220101S"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslPolicyName",
        "modelAsString": true
      }
    },
    "ProtocolsEnum": {
      "type": "string",
      "description": "Ssl protocol enums.",
      "enum": [
        "TLSv1_0",
        "TLSv1_1",
        "TLSv1_2",
        "TLSv1_3"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslProtocol",
        "modelAsString": true
      }
    },
    "CipherSuitesEnum": {
      "type": "string",
      "description": "Ssl cipher suites enums.",
      "enum": [
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_DHE_RSA_WITH_AES_256_CBC_SHA",
        "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_AES_256_GCM_SHA384",
        "TLS_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA256",
        "TLS_RSA_WITH_AES_128_CBC_SHA256",
        "TLS_RSA_WITH_AES_256_CBC_SHA",
        "TLS_RSA_WITH_AES_128_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
        "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
        "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",
        "TLS_DHE_DSS_WITH_AES_256_CBC_SHA",
        "TLS_DHE_DSS_WITH_AES_128_CBC_SHA",
        "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
        "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",
        "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
        "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewaySslCipherSuite",
        "modelAsString": true
      }
    },
    "RedirectTypeEnum": {
      "type": "string",
      "description": "Redirect type enum.",
      "enum": [
        "Permanent",
        "Found",
        "SeeOther",
        "Temporary"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayRedirectType",
        "modelAsString": true
      }
    },
    "ApplicationGatewayProtocol": {
      "type": "string",
      "description": "Application Gateway protocol.",
      "enum": [
        "Http",
        "Https",
        "Tcp",
        "Tls"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayProtocol",
        "modelAsString": true,
        "values": [
          {
            "value": "Http",
            "description": "Supported for httpListeners and  backendHttpSettingsCollection properties."
          },
          {
            "value": "Https",
            "description": "Supported for httpListeners and  backendHttpSettingsCollection properties."
          },
          {
            "value": "Tcp",
            "description": "Supported for listeners and backendSettingsCollection properties."
          },
          {
            "value": "Tls",
            "description": "Supported for listeners and backendSettingsCollection properties."
          }
        ]
      }
    },
    "ApplicationGatewayLoadDistributionPolicyPropertiesFormat": {
      "properties": {
        "loadDistributionTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayLoadDistributionTarget"
          },
          "description": "Load Distribution Targets resource of an application gateway."
        },
        "loadDistributionAlgorithm": {
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionAlgorithmEnum",
          "description": "Load Distribution Targets resource of an application gateway."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Load Distribution Policy resource."
        }
      },
      "description": "Properties of Load Distribution Policy of an application gateway."
    },
    "ApplicationGatewayLoadDistributionPolicy": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionPolicyPropertiesFormat",
          "description": "Properties of the application gateway load distribution policy."
        },
        "name": {
          "type": "string",
          "description": "Name of the load distribution policy that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Load Distribution Policy of an application gateway."
    },
    "ApplicationGatewayLoadDistributionTargetPropertiesFormat": {
      "properties": {
        "weightPerServer": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "exclusiveMaximum": false,
          "minimum": 1,
          "exclusiveMinimum": false,
          "description": "Weight per server. Range between 1 and 100."
        },
        "backendAddressPool": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Backend address pool resource of the application gateway."
        }
      }
    },
    "ApplicationGatewayLoadDistributionTarget": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayLoadDistributionTargetPropertiesFormat",
          "description": "Properties of the application gateway load distribution target."
        },
        "name": {
          "type": "string",
          "description": "Name of the load distribution policy that is unique within an Application Gateway."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Load Distribution Target of an application gateway."
    },
    "ApplicationGatewayLoadDistributionAlgorithmEnum": {
      "type": "string",
      "description": "Load Distribution Algorithm enums.",
      "enum": [
        "RoundRobin",
        "LeastConnections",
        "IpHash"
      ],
      "x-ms-enum": {
        "name": "ApplicationGatewayLoadDistributionAlgorithm",
        "modelAsString": true
      }
    },
    "ApplicationGatewayGlobalConfiguration": {
      "properties": {
        "enableRequestBuffering": {
          "type": "boolean",
          "description": "Enable request buffering."
        },
        "enableResponseBuffering": {
          "type": "boolean",
          "description": "Enable response buffering."
        }
      },
      "description": "Application Gateway global configuration."
    }
  }
}

