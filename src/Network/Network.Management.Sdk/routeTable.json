{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2024-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}": {
      "delete": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Delete",
        "description": "Deletes the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "200": {
            "description": "Request successful. Operation to delete was accepted."
          },
          "202": {
            "description": "Accepted. If route table not found returned synchronously, otherwise if found returned asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete route table": {
            "$ref": "./examples/RouteTableDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Get",
        "description": "Gets the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Expands referenced resources."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get route table": {
            "$ref": "./examples/RouteTableGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_CreateOrUpdate",
        "description": "Create or updates a route table in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteTable"
            },
            "description": "Parameters supplied to the create or update route table operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create route table": {
            "$ref": "./examples/RouteTableCreate.json"
          },
          "Create route table with route": {
            "$ref": "./examples/RouteTableCreateWithRoute.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_UpdateTags",
        "description": "Updates a route table tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update route table tags."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting RouteTable resource.",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update route table tags": {
            "$ref": "./examples/RouteTableUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_List",
        "description": "Gets all route tables in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of RouteTable resources.",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List route tables in resource group": {
            "$ref": "./examples/RouteTableList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_ListAll",
        "description": "Gets all route tables in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of RouteTable resources.",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all route tables": {
            "$ref": "./examples/RouteTableListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}": {
      "delete": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Delete",
        "description": "Deletes the specified route from a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "200": {
            "description": "Accepted."
          },
          "204": {
            "description": "Route was deleted or not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete route": {
            "$ref": "./examples/RouteTableRouteDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Get",
        "description": "Gets the specified route from a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get route": {
            "$ref": "./examples/RouteTableRouteGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_CreateOrUpdate",
        "description": "Creates or updates a route in the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "name": "routeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Route"
            },
            "description": "Parameters supplied to the create or update route operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Route resource.",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create route": {
            "$ref": "./examples/RouteTableRouteCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_List",
        "description": "Gets all routes in a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Route resources.",
            "schema": {
              "$ref": "#/definitions/RouteListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List routes": {
            "$ref": "./examples/RouteTableRouteList.json"
          }
        }
      }
    }
  },
  "definitions": {
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "The destination CIDR to which the route applies."
        },
        "nextHopType": {
          "$ref": "#/definitions/RouteNextHopType",
          "description": "The type of Azure hop the packet should be sent to."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route resource."
        },
        "hasBgpOverride": {
          "type": "boolean",
          "description": "A value indicating whether this route overrides overlapping BGP routes regardless of LPM."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource."
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat",
          "description": "Properties of the route."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Route resource."
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Collection of routes contained within a route table."
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet"
          },
          "description": "A collection of references to subnets."
        },
        "disableBgpRoutePropagation": {
          "type": "boolean",
          "description": "Whether to disable the routes learned by BGP on that route table. True means disable."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the route table resource."
        },
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "The resource GUID property of the route table."
        }
      },
      "description": "Route Table resource."
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat",
          "description": "Properties of the route table."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Route table resource."
    },
    "RouteTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteTable"
          },
          "description": "A list of route tables in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRouteTable API service call."
    },
    "RouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "A list of routes in a resource group."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for the ListRoute API service call."
    },
    "RouteNextHopType": {
      "type": "string",
      "description": "The type of Azure hop the packet should be sent to.",
      "enum": [
        "VirtualNetworkGateway",
        "VnetLocal",
        "Internet",
        "VirtualAppliance",
        "None"
      ],
      "x-ms-enum": {
        "name": "RouteNextHopType",
        "modelAsString": true
      }
    }
  }
}

