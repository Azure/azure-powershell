// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Extensions;

    /// <summary>Quota request status details.</summary>
    public partial class QuotaRequestStatusDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetails,
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal
    {

        /// <summary>Backing field for <see cref="Limit" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject _limit;

        /// <summary>Resource quota limit properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject Limit { get => (this._limit = this._limit ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.LimitObject()); set => this._limit = value; }

        /// <summary>The limit object type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string LimitObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitJsonObjectInternal)Limit).Type; }

        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObjectInternal)Limit).LimitType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObjectInternal)Limit).LimitType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes)""); }

        /// <summary>The quota/limit value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public int? LimitValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObjectInternal)Limit).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObjectInternal)Limit).Value = value ?? default(int); }

        /// <summary>Backing field for <see cref="Message" /> property.</summary>
        private string _message;

        /// <summary>User-friendly message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Message { get => this._message; }

        /// <summary>Internal Acessors for Limit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.Limit { get => (this._limit = this._limit ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.LimitObject()); set { {_limit = value;} } }

        /// <summary>Internal Acessors for LimitObjectType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.LimitObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitJsonObjectInternal)Limit).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitJsonObjectInternal)Limit).Type = value; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.Message { get => this._message; set { {_message = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ResourceName()); set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceNameInternal)Name).LocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceNameInternal)Name).LocalizedValue = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for QuotaPeriod</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestStatusDetailsInternal.QuotaPeriod { get => this._quotaPeriod; set { {_quotaPeriod = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName _name;

        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ResourceName()); set => this._name = value; }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceNameInternal)Name).LocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceNameInternal)Name).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceNameInternal)Name).Value = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny _property;

        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Any()); set => this._property = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? _provisioningState;

        /// <summary>Quota request status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="QuotaPeriod" /> property.</summary>
        private string _quotaPeriod;

        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string QuotaPeriod { get => this._quotaPeriod; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>Resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; set => this._unit = value; }

        /// <summary>Creates an new <see cref="QuotaRequestStatusDetails" /> instance.</summary>
        public QuotaRequestStatusDetails()
        {

        }
    }
    /// Quota request status details.
    public partial interface IQuotaRequestStatusDetails :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IJsonSerializable
    {
        /// <summary>The limit object type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The limit object type.",
        SerializedName = @"limitObjectType",
        PossibleTypes = new [] { typeof(string) })]
        string LimitObjectType { get;  }
        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The quota or usages limit types.",
        SerializedName = @"limitType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get; set; }
        /// <summary>The quota/limit value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The quota/limit value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(int) })]
        int? LimitValue { get; set; }
        /// <summary>User-friendly message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User-friendly message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional properties for the specific resource provider.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get; set; }
        /// <summary>Quota request status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Quota request status.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get;  }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time period over which the quota usage values are summarized. For example:
        *P1D (per one day)
        *PT1M (per one minute)
        *PT1S (per one second).
        This parameter is optional because, for some resources like compute, the period is irrelevant.",
        SerializedName = @"quotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaPeriod { get;  }
        /// <summary>Resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource type name.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Quota request status details.
    internal partial interface IQuotaRequestStatusDetailsInternal

    {
        /// <summary>Resource quota limit properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject Limit { get; set; }
        /// <summary>The limit object type.</summary>
        string LimitObjectType { get; set; }
        /// <summary>The quota or usages limit types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get; set; }
        /// <summary>The quota/limit value</summary>
        int? LimitValue { get; set; }
        /// <summary>User-friendly message.</summary>
        string Message { get; set; }
        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>Additional properties for the specific resource provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get; set; }
        /// <summary>Quota request status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get; set; }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        string QuotaPeriod { get; set; }
        /// <summary>Resource type name.</summary>
        string ResourceType { get; set; }
        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        string Unit { get; set; }

    }
}