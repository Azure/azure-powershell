// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Extensions;

    /// <summary>Quota request response.</summary>
    public partial class QuotaRequestOneResourceSubmitResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponse,
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal
    {

        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Property = value ?? null /* model class */; }

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Code; }

        /// <summary>Usage information for the current resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public int? CurrentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).CurrentValue; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ErrorMessage; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Quota request ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public bool? IsQuotaApplicable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).IsQuotaApplicable; }

        /// <summary>The limit object type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string LimitObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitObjectType; }

        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes)""); }

        /// <summary>The quota/limit value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public int? LimitValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitValue = value ?? default(int); }

        /// <summary>User-friendly status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Message; }

        /// <summary>Internal Acessors for Code</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Code = value; }

        /// <summary>Internal Acessors for CurrentValue</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.CurrentValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).CurrentValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).CurrentValue = value; }

        /// <summary>Internal Acessors for Error</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IServiceErrorDetail Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Error { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Error = value; }

        /// <summary>Internal Acessors for ErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.ErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ErrorMessage = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for IsQuotaApplicable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.IsQuotaApplicable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).IsQuotaApplicable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).IsQuotaApplicable = value; }

        /// <summary>Internal Acessors for Limit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Limit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Limit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Limit = value; }

        /// <summary>Internal Acessors for LimitObjectType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.LimitObjectType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitObjectType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).LimitObjectType = value; }

        /// <summary>Internal Acessors for Message</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Message = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).NameLocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).NameLocalizedValue = value; }

        /// <summary>Internal Acessors for PropertiesName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.PropertiesName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Name = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceProperties Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.QuotaRequestOneResourceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for QuotaPeriod</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.QuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).QuotaPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).QuotaPeriod = value; }

        /// <summary>Internal Acessors for RequestSubmitTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.RequestSubmitTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).RequestSubmitTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).RequestSubmitTime = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceSubmitResponseInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the quota request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).NameLocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).NameValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).NameValue = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceProperties _property;

        /// <summary>Quota request details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.QuotaRequestOneResourceProperties()); set => this._property = value; }

        /// <summary>Quota request status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string QuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).QuotaPeriod; }

        /// <summary>
        /// Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public global::System.DateTime? RequestSubmitTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).RequestSubmitTime; }

        /// <summary>Resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).ResourceType = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Resource type. "Microsoft.Quota/ServiceLimitRequests"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string Unit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Unit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourcePropertiesInternal)Property).Unit = value ?? null; }

        /// <summary>Creates an new <see cref="QuotaRequestOneResourceSubmitResponse" /> instance.</summary>
        public QuotaRequestOneResourceSubmitResponse()
        {

        }
    }
    /// Quota request response.
    public partial interface IQuotaRequestOneResourceSubmitResponse :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IJsonSerializable
    {
        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional properties for the specific resource provider.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get; set; }
        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>Usage information for the current resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Usage information for the current resource.",
        SerializedName = @"currentValue",
        PossibleTypes = new [] { typeof(int) })]
        int? CurrentValue { get;  }
        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get;  }
        /// <summary>Quota request ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Quota request ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"States if quota can be requested for this resource.",
        SerializedName = @"isQuotaApplicable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsQuotaApplicable { get;  }
        /// <summary>The limit object type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The limit object type.",
        SerializedName = @"limitObjectType",
        PossibleTypes = new [] { typeof(string) })]
        string LimitObjectType { get;  }
        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The quota or usages limit types.",
        SerializedName = @"limitType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get; set; }
        /// <summary>The quota/limit value</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The quota/limit value",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(int) })]
        int? LimitValue { get; set; }
        /// <summary>User-friendly status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User-friendly status message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>The name of the quota request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the quota request.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>Quota request status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Quota request status.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get;  }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time period over which the quota usage values are summarized. For example:
        *P1D (per one day)
        *PT1M (per one minute)
        *PT1S (per one second).
        This parameter is optional because, for some resources like compute, the period is irrelevant.",
        SerializedName = @"quotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaPeriod { get;  }
        /// <summary>
        /// Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.",
        SerializedName = @"requestSubmitTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RequestSubmitTime { get;  }
        /// <summary>Resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource type name.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>Resource type. "Microsoft.Quota/ServiceLimitRequests"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type. ""Microsoft.Quota/ServiceLimitRequests""",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get; set; }

    }
    /// Quota request response.
    internal partial interface IQuotaRequestOneResourceSubmitResponseInternal

    {
        /// <summary>Additional properties for the specific resource provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get; set; }
        /// <summary>Error code.</summary>
        string Code { get; set; }
        /// <summary>Usage information for the current resource.</summary>
        int? CurrentValue { get; set; }
        /// <summary>Error details of the quota request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IServiceErrorDetail Error { get; set; }
        /// <summary>Error message.</summary>
        string ErrorMessage { get; set; }
        /// <summary>Quota request ID.</summary>
        string Id { get; set; }
        /// <summary>States if quota can be requested for this resource.</summary>
        bool? IsQuotaApplicable { get; set; }
        /// <summary>Resource quota limit properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.ILimitObject Limit { get; set; }
        /// <summary>The limit object type.</summary>
        string LimitObjectType { get; set; }
        /// <summary>The quota or usages limit types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes? LimitType { get; set; }
        /// <summary>The quota/limit value</summary>
        int? LimitValue { get; set; }
        /// <summary>User-friendly status message.</summary>
        string Message { get; set; }
        /// <summary>The name of the quota request.</summary>
        string Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IResourceName PropertiesName { get; set; }
        /// <summary>Quota request details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.IQuotaRequestOneResourceProperties Property { get; set; }
        /// <summary>Quota request status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaRequestState? ProvisioningState { get; set; }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        string QuotaPeriod { get; set; }
        /// <summary>
        /// Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.
        /// </summary>
        global::System.DateTime? RequestSubmitTime { get; set; }
        /// <summary>Resource type name.</summary>
        string ResourceType { get; set; }
        /// <summary>Resource type. "Microsoft.Quota/ServiceLimitRequests"</summary>
        string Type { get; set; }
        /// <summary>
        /// The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        string Unit { get; set; }

    }
}