
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for LimitObject.
.Description
Create an in-memory object for LimitObject.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.LimitObject
.Link
https://docs.microsoft.com/powershell/module/az.Quota/New-AzQuotaLimitObject
#>
function New-AzQuotaLimitObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.LimitObject')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="The quota or usages limit types.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes])]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Support.QuotaLimitTypes]
        $LimitType,
        [Parameter(Mandatory, HelpMessage="The quota/limit value.")]
        [int]
        $Value
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Api20210315Preview.LimitObject]::New()

        if ($PSBoundParameters.ContainsKey('LimitType')) {
            $Object.LimitType = $LimitType
        }
        if ($PSBoundParameters.ContainsKey('Value')) {
            $Object.Value = $Value
        }
        return $Object
    }
}

