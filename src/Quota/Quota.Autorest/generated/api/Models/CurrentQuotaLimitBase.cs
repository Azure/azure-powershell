// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Quota.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Extensions;

    /// <summary>Quota limit.</summary>
    public partial class CurrentQuotaLimitBase :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBase,
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IHeaderSerializable
    {

        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Property = value ?? null /* model class */; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.FormatTable(Index = 4)]
        public string ETag { get => this._eTag; set => this._eTag = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string Id { get => this._id; }

        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public bool? IsQuotaApplicable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).IsQuotaApplicable; }

        /// <summary>Resource quota limit properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ILimitJsonObject Limit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Limit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Limit = value ?? null /* model class */; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for IsQuotaApplicable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.IsQuotaApplicable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).IsQuotaApplicable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).IsQuotaApplicable = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).NameLocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).NameLocalizedValue = value; }

        /// <summary>Internal Acessors for PropertiesName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.PropertiesName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Name = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaProperties Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.QuotaProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for QuotaPeriod</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.QuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).QuotaPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).QuotaPeriod = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal.Unit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Unit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Unit = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.FormatTable(Index = 0)]
        public string Name { get => this._name; }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.FormatTable(Index = 1)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).NameLocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).NameValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).NameValue = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaProperties _property;

        /// <summary>
        /// Quota properties for the specified resource, based on the API called, Quotas or Usages.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.QuotaProperties()); set => this._property = value; }

        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string QuotaPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).QuotaPeriod; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The name of the resource type. Optional field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).ResourceType = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.DoNotFormat]
        public string Type { get => this._type; }

        /// <summary>
        /// The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in
        /// the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.FormatTable(Index = 3)]
        public string Unit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaPropertiesInternal)Property).Unit; }

        /// <summary>Creates an new <see cref="CurrentQuotaLimitBase" /> instance.</summary>
        public CurrentQuotaLimitBase()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("ETag", out var __eTagHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ICurrentQuotaLimitBaseInternal)this).ETag = System.Linq.Enumerable.FirstOrDefault(__eTagHeader0) is string __headerETagHeader0 ? __headerETagHeader0 : (string)null;
            }
        }
    }
    /// Quota limit.
    public partial interface ICurrentQuotaLimitBase :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IJsonSerializable
    {
        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Additional properties for the specific resource provider.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"",
        SerializedName = @"ETag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get; set; }
        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"States if quota can be requested for this resource.",
        SerializedName = @"isQuotaApplicable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsQuotaApplicable { get;  }
        /// <summary>Resource quota limit properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource quota limit properties.",
        SerializedName = @"limit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ILimitJsonObject) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ILimitJsonObject Limit { get; set; }
        /// <summary>The resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time period over which the quota usage values are summarized. For example:
        *P1D (per one day)
        *PT1M (per one minute)
        *PT1S (per one second).
        This parameter is optional because, for some resources like compute, the period is irrelevant.",
        SerializedName = @"quotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaPeriod { get;  }
        /// <summary>The name of the resource type. Optional field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the resource type. Optional field.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>
        /// The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in
        /// the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @" The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }

    }
    /// Quota limit.
    internal partial interface ICurrentQuotaLimitBaseInternal

    {
        /// <summary>Additional properties for the specific resource provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny AnyProperty { get; set; }

        string ETag { get; set; }
        /// <summary>The resource ID.</summary>
        string Id { get; set; }
        /// <summary>States if quota can be requested for this resource.</summary>
        bool? IsQuotaApplicable { get; set; }
        /// <summary>Resource quota limit properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ILimitJsonObject Limit { get; set; }
        /// <summary>The resource name.</summary>
        string Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName PropertiesName { get; set; }
        /// <summary>
        /// Quota properties for the specified resource, based on the API called, Quotas or Usages.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IQuotaProperties Property { get; set; }
        /// <summary>
        /// The time period over which the quota usage values are summarized. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because, for some resources like compute, the period is irrelevant.
        /// </summary>
        string QuotaPeriod { get; set; }
        /// <summary>The name of the resource type. Optional field.</summary>
        string ResourceType { get; set; }
        /// <summary>The resource type.</summary>
        string Type { get; set; }
        /// <summary>
        /// The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in
        /// the request body of your PUT operation.
        /// </summary>
        string Unit { get; set; }

    }
}