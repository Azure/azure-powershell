// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Quota.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Extensions;

    /// <summary>Usage properties for the specified resource.</summary>
    public partial class UsagesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal
    {

        /// <summary>Backing field for <see cref="IsQuotaApplicable" /> property.</summary>
        private bool? _isQuotaApplicable;

        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public bool? IsQuotaApplicable { get => this._isQuotaApplicable; }

        /// <summary>Internal Acessors for IsQuotaApplicable</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.IsQuotaApplicable { get => this._isQuotaApplicable; set { {_isQuotaApplicable = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ResourceName()); set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceNameInternal)Name).LocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceNameInternal)Name).LocalizedValue = value; }

        /// <summary>Internal Acessors for QuotaPeriod</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.QuotaPeriod { get => this._quotaPeriod; set { {_quotaPeriod = value;} } }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Internal Acessors for Usage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObject Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesPropertiesInternal.Usage { get => (this._usage = this._usage ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.UsagesObject()); set { {_usage = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName _name;

        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.ResourceName()); set => this._name = value; }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceNameInternal)Name).LocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceNameInternal)Name).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceNameInternal)Name).Value = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny _property;

        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.Any()); set => this._property = value; }

        /// <summary>Backing field for <see cref="QuotaPeriod" /> property.</summary>
        private string _quotaPeriod;

        /// <summary>
        /// The time period for the summary of the quota usage values. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because it is not relevant for all resources such as compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string QuotaPeriod { get => this._quotaPeriod; }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>The name of the resource type. Optional field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the
        /// GET response in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; }

        /// <summary>Backing field for <see cref="Usage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObject _usage;

        /// <summary>The quota limit properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObject Usage { get => (this._usage = this._usage ?? new Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.UsagesObject()); set => this._usage = value; }

        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public string UsageUsagesType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObjectInternal)Usage).UsagesType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObjectInternal)Usage).UsagesType = value ?? null; }

        /// <summary>The usages value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Origin(Microsoft.Azure.PowerShell.Cmdlets.Quota.PropertyOrigin.Inlined)]
        public int? UsageValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObjectInternal)Usage).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObjectInternal)Usage).Value = value ?? default(int); }

        /// <summary>Creates an new <see cref="UsagesProperties" /> instance.</summary>
        public UsagesProperties()
        {

        }
    }
    /// Usage properties for the specified resource.
    public partial interface IUsagesProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.IJsonSerializable
    {
        /// <summary>States if quota can be requested for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"States if quota can be requested for this resource.",
        SerializedName = @"isQuotaApplicable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsQuotaApplicable { get;  }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>Additional properties for the specific resource provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Additional properties for the specific resource provider.",
        SerializedName = @"properties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get; set; }
        /// <summary>
        /// The time period for the summary of the quota usage values. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because it is not relevant for all resources such as compute.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The time period for the summary of the quota usage values. For example:
        *P1D (per one day)
        *PT1M (per one minute)
        *PT1S (per one second).
        This parameter is optional because it is not relevant for all resources such as compute.",
        SerializedName = @"quotaPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string QuotaPeriod { get;  }
        /// <summary>The name of the resource type. Optional field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the resource type. Optional field.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>
        /// The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the
        /// GET response in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @" The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }
        /// <summary>The quota or usages limit types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The quota or usages limit types.",
        SerializedName = @"usagesType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Quota.PSArgumentCompleterAttribute("Individual", "Combined")]
        string UsageUsagesType { get; set; }
        /// <summary>The usages value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Quota.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The usages value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(int) })]
        int? UsageValue { get; set; }

    }
    /// Usage properties for the specified resource.
    internal partial interface IUsagesPropertiesInternal

    {
        /// <summary>States if quota can be requested for this resource.</summary>
        bool? IsQuotaApplicable { get; set; }
        /// <summary>
        /// Resource name provided by the resource provider. Use this property name when requesting quota.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IResourceName Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>Additional properties for the specific resource provider.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IAny Property { get; set; }
        /// <summary>
        /// The time period for the summary of the quota usage values. For example:
        /// *P1D (per one day)
        /// *PT1M (per one minute)
        /// *PT1S (per one second).
        /// This parameter is optional because it is not relevant for all resources such as compute.
        /// </summary>
        string QuotaPeriod { get; set; }
        /// <summary>The name of the resource type. Optional field.</summary>
        string ResourceType { get; set; }
        /// <summary>
        /// The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the
        /// GET response in the request body of your PUT operation.
        /// </summary>
        string Unit { get; set; }
        /// <summary>The quota limit properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Quota.Models.IUsagesObject Usage { get; set; }
        /// <summary>The quota or usages limit types.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Quota.PSArgumentCompleterAttribute("Individual", "Combined")]
        string UsageUsagesType { get; set; }
        /// <summary>The usages value.</summary>
        int? UsageValue { get; set; }

    }
}