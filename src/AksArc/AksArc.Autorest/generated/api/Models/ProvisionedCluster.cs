// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>The provisioned cluster resource definition.</summary>
    public partial class ProvisionedCluster :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedCluster,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProxyResource();

        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AgentPoolProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AgentPoolProfile = value ?? null /* arrayOf */; }

        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileBalanceSimilarNodeGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileBalanceSimilarNodeGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileBalanceSimilarNodeGroup = value ?? null; }

        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileExpander { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileExpander; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileExpander = value ?? null; }

        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxEmptyBulkDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxEmptyBulkDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxEmptyBulkDelete = value ?? null; }

        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxGracefulTerminationSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxGracefulTerminationSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxGracefulTerminationSec = value ?? null; }

        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxNodeProvisionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxNodeProvisionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxNodeProvisionTime = value ?? null; }

        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxTotalUnreadyPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxTotalUnreadyPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileMaxTotalUnreadyPercentage = value ?? null; }

        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileNewPodScaleUpDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileNewPodScaleUpDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileNewPodScaleUpDelay = value ?? null; }

        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileOkTotalUnreadyCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileOkTotalUnreadyCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileOkTotalUnreadyCount = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterAdd = value ?? null; }

        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterDelete = value ?? null; }

        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterFailure { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterFailure; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownDelayAfterFailure = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnneededTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnneededTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnneededTime = value ?? null; }

        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnreadyTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnreadyTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUnreadyTime = value ?? null; }

        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUtilizationThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUtilizationThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScaleDownUtilizationThreshold = value ?? null; }

        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScanInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScanInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileScanInterval = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithLocalStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithLocalStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithLocalStorage = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithSystemPod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithSystemPod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfileSkipNodesWithSystemPod = value ?? null; }

        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ClusterVMAccessProfileAuthorizedIprange { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ClusterVMAccessProfileAuthorizedIprange; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ClusterVMAccessProfileAuthorizedIprange = value ?? null; }

        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? ControlPlaneCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneCount = value ?? default(int); }

        /// <summary>IP address of the Kubernetes API server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ControlPlaneEndpointHostIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneEndpointHostIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneEndpointHostIP = value ?? null; }

        /// <summary>VM sku size of the control plane nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ControlPlaneVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneVMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneVMSize = value ?? null; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation _extendedLocation;

        /// <summary>Extended location pointing to the underlying infrastructure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocation()); set => this._extendedLocation = value; }

        /// <summary>ARM Id of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocationInternal)ExtendedLocation).Type = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).InfraNetworkProfileVnetSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).InfraNetworkProfileVnetSubnetId = value ?? null /* arrayOf */; }

        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string KubernetesVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).KubernetesVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).KubernetesVersion = value ?? null; }

        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string LicenseProfileAzureHybridBenefit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LicenseProfileAzureHybridBenefit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LicenseProfileAzureHybridBenefit = value ?? null; }

        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? LoadBalancerProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LoadBalancerProfileCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LoadBalancerProfileCount = value ?? default(int); }

        /// <summary>Internal Acessors for AutoScalerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.AutoScalerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).AutoScalerProfile = value; }

        /// <summary>Internal Acessors for CloudProviderProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.CloudProviderProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).CloudProviderProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).CloudProviderProfile = value; }

        /// <summary>Internal Acessors for CloudProviderProfileInfraNetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInfraNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.CloudProviderProfileInfraNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).CloudProviderProfileInfraNetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).CloudProviderProfileInfraNetworkProfile = value; }

        /// <summary>Internal Acessors for ClusterVMAccessProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.ClusterVMAccessProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ClusterVMAccessProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ClusterVMAccessProfile = value; }

        /// <summary>Internal Acessors for ControlPlane</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.ControlPlane { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlane; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlane = value; }

        /// <summary>Internal Acessors for ControlPlaneEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileControlPlaneEndpoint Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.ControlPlaneEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ControlPlaneEndpoint = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for LicenseProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.LicenseProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LicenseProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LicenseProfile = value; }

        /// <summary>Internal Acessors for LinuxProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.LinuxProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LinuxProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LinuxProfile = value; }

        /// <summary>Internal Acessors for LinuxProfileSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSsh Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.LinuxProfileSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LinuxProfileSsh; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).LinuxProfileSsh = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.NetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfile = value; }

        /// <summary>Internal Acessors for NetworkProfileLoadBalancerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileLoadBalancerProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.NetworkProfileLoadBalancerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfileLoadBalancerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfileLoadBalancerProfile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusCurrentState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusCurrentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusCurrentState = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.StorageProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfile = value; }

        /// <summary>Internal Acessors for StorageProfileNfsCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.StorageProfileNfsCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfileNfsCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfileNfsCsiDriver = value; }

        /// <summary>Internal Acessors for StorageProfileSmbCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterInternal.StorageProfileSmbCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfileSmbCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StorageProfileSmbCsiDriver = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string NetworkProfileNetworkPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfileNetworkPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfileNetworkPolicy = value ?? null; }

        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string NetworkProfilePodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfilePodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NetworkProfilePodCidr = value ?? null; }

        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? NfCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NfCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).NfCsiDriverEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties _property;

        /// <summary>Properties of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterProperties()); set => this._property = value; }

        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? SmbCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).SmbCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).SmbCsiDriverEnabled = value ?? default(bool); }

        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusControlPlaneStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusControlPlaneStatus = value ?? null /* arrayOf */; }

        /// <summary>The current state of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusCurrentState; }

        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal)Property).StatusErrorMessage = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="ProvisionedCluster" /> instance.</summary>
        public ProvisionedCluster()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// The provisioned cluster resource definition.
    public partial interface IProvisionedCluster :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResource
    {
        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The agent pool properties for the provisioned cluster.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Valid values are 'true' and 'false'",
        SerializedName = @"balance-similar-node-groups",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.",
        SerializedName = @"expander",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("least-waste", "most-pods", "priority", "random")]
        string AutoScalerProfileExpander { get; set; }
        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 10.",
        SerializedName = @"max-empty-bulk-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 600.",
        SerializedName = @"max-graceful-termination-sec",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"max-node-provision-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 45. The maximum is 100 and the minimum is 0.",
        SerializedName = @"max-total-unready-percentage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).",
        SerializedName = @"new-pod-scale-up-delay",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This must be an integer. The default is 3.",
        SerializedName = @"ok-total-unready-count",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-add",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-failure",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unneeded-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unready-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '0.5'.",
        SerializedName = @"scale-down-utilization-threshold",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10'. Values must be an integer number of seconds.",
        SerializedName = @"scan-interval",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-local-storage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-system-pods",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address or CIDR for SSH access to VMs in the provisioned cluster",
        SerializedName = @"authorizedIPRanges",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterVMAccessProfileAuthorizedIprange { get; set; }
        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of control plane nodes. The default value is 1, and the count should be an odd number",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ControlPlaneCount { get; set; }
        /// <summary>IP address of the Kubernetes API server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP address of the Kubernetes API server",
        SerializedName = @"hostIP",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneEndpointHostIP { get; set; }
        /// <summary>VM sku size of the control plane nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VM sku size of the control plane nodes",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneVMSize { get; set; }
        /// <summary>ARM Id of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ARM Id of the extended location.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The extended location type. Allowed value: 'CustomLocation'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CustomLocation")]
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}",
        SerializedName = @"vnetSubnetIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get; set; }
        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version of Kubernetes in use by the provisioned cluster.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get; set; }
        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
        SerializedName = @"azureHybridBenefit",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("True", "False", "NotApplicable")]
        string LicenseProfileAzureHybridBenefit { get; set; }
        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of HA Proxy load balancer VMs. The default value is 0.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBalancerProfileCount { get; set; }
        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Network policy used for building Kubernetes network. Possible values include: 'calico'.",
        SerializedName = @"networkPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("calico")]
        string NetworkProfileNetworkPolicy { get; set; }
        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A CIDR notation IP Address range from which to assign pod IPs.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable NFS CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the latest long running operation for the provisioned cluster.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable SMB CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmbCsiDriverEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get; set; }
        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The detailed status of the provisioned cluster components including addons.",
        SerializedName = @"controlPlaneStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get;  }
        /// <summary>The current state of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current state of the provisioned cluster.",
        SerializedName = @"currentState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get;  }
        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error messages during a provisioned cluster operation or steady state.",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusErrorMessage { get;  }

    }
    /// The provisioned cluster resource definition.
    internal partial interface IProvisionedClusterInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProxyResourceInternal
    {
        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get; set; }
        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile AutoScalerProfile { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("least-waste", "most-pods", "priority", "random")]
        string AutoScalerProfileExpander { get; set; }
        /// <summary>The default is 10.</summary>
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>
        /// The profile for the underlying cloud infrastructure provider for the provisioned cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile CloudProviderProfile { get; set; }
        /// <summary>The profile for the infrastructure networks used by the provisioned cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInfraNetworkProfile CloudProviderProfileInfraNetworkProfile { get; set; }
        /// <summary>The SSH restricted access profile for the VMs in the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile ClusterVMAccessProfile { get; set; }
        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        string ClusterVMAccessProfileAuthorizedIprange { get; set; }
        /// <summary>The profile for control plane of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile ControlPlane { get; set; }
        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        int? ControlPlaneCount { get; set; }
        /// <summary>IP Address of the Kubernetes API server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileControlPlaneEndpoint ControlPlaneEndpoint { get; set; }
        /// <summary>IP address of the Kubernetes API server</summary>
        string ControlPlaneEndpointHostIP { get; set; }
        /// <summary>VM sku size of the control plane nodes</summary>
        string ControlPlaneVMSize { get; set; }
        /// <summary>Extended location pointing to the underlying infrastructure</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation ExtendedLocation { get; set; }
        /// <summary>ARM Id of the extended location.</summary>
        string ExtendedLocationName { get; set; }
        /// <summary>The extended location type. Allowed value: 'CustomLocation'</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("CustomLocation")]
        string ExtendedLocationType { get; set; }
        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get; set; }
        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        string KubernetesVersion { get; set; }
        /// <summary>The license profile of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile LicenseProfile { get; set; }
        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("True", "False", "NotApplicable")]
        string LicenseProfileAzureHybridBenefit { get; set; }
        /// <summary>The profile for Linux VMs in the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties LinuxProfile { get; set; }
        /// <summary>SSH configuration for VMs of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSsh LinuxProfileSsh { get; set; }
        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        int? LoadBalancerProfileCount { get; set; }
        /// <summary>The network configuration profile for the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile NetworkProfile { get; set; }
        /// <summary>Profile of the HA Proxy load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileLoadBalancerProfile NetworkProfileLoadBalancerProfile { get; set; }
        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("calico")]
        string NetworkProfileNetworkPolicy { get; set; }
        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>Properties of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties Property { get; set; }
        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        bool? SmbCsiDriverEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get; set; }
        /// <summary>The observed status of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus Status { get; set; }
        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get; set; }
        /// <summary>The current state of the provisioned cluster.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get; set; }
        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        string StatusErrorMessage { get; set; }
        /// <summary>The storage configuration profile for the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile StorageProfile { get; set; }
        /// <summary>NFS CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver StorageProfileNfsCsiDriver { get; set; }
        /// <summary>SMB CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver StorageProfileSmbCsiDriver { get; set; }

    }
}