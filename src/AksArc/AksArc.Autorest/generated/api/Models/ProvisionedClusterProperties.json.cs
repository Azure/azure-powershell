// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>Properties of the provisioned cluster.</summary>
    public partial class ProvisionedClusterProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject json ? new ProvisionedClusterProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject into a new instance of <see cref="ProvisionedClusterProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ProvisionedClusterProperties(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_linuxProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("linuxProfile"), out var __jsonLinuxProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.LinuxProfileProperties.FromJson(__jsonLinuxProfile) : _linuxProfile;}
            {_controlPlane = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("controlPlane"), out var __jsonControlPlane) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ControlPlaneProfile.FromJson(__jsonControlPlane) : _controlPlane;}
            {_networkProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("networkProfile"), out var __jsonNetworkProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.NetworkProfile.FromJson(__jsonNetworkProfile) : _networkProfile;}
            {_storageProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("storageProfile"), out var __jsonStorageProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfile.FromJson(__jsonStorageProfile) : _storageProfile;}
            {_clusterVMAccessProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("clusterVMAccessProfile"), out var __jsonClusterVMAccessProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ClusterVMAccessProfile.FromJson(__jsonClusterVMAccessProfile) : _clusterVMAccessProfile;}
            {_cloudProviderProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("cloudProviderProfile"), out var __jsonCloudProviderProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.CloudProviderProfile.FromJson(__jsonCloudProviderProfile) : _cloudProviderProfile;}
            {_status = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("status"), out var __jsonStatus) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesStatus.FromJson(__jsonStatus) : _status;}
            {_licenseProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("licenseProfile"), out var __jsonLicenseProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterLicenseProfile.FromJson(__jsonLicenseProfile) : _licenseProfile;}
            {_autoScalerProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject>("autoScalerProfile"), out var __jsonAutoScalerProfile) ? Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesAutoScalerProfile.FromJson(__jsonAutoScalerProfile) : _autoScalerProfile;}
            {_kubernetesVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonString>("kubernetesVersion"), out var __jsonKubernetesVersion) ? (string)__jsonKubernetesVersion : (string)_kubernetesVersion;}
            {_agentPoolProfile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonArray>("agentPoolProfiles"), out var __jsonAgentPoolProfiles) ? If( __jsonAgentPoolProfiles as Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile>>(()=> global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile) (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.NamedAgentPoolProfile.FromJson(__u) )) ))() : null : _agentPoolProfile;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)_provisioningState;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ProvisionedClusterProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ProvisionedClusterProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._linuxProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._linuxProfile.ToJson(null,serializationMode) : null, "linuxProfile" ,container.Add );
            AddIf( null != this._controlPlane ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._controlPlane.ToJson(null,serializationMode) : null, "controlPlane" ,container.Add );
            AddIf( null != this._networkProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._networkProfile.ToJson(null,serializationMode) : null, "networkProfile" ,container.Add );
            AddIf( null != this._storageProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._storageProfile.ToJson(null,serializationMode) : null, "storageProfile" ,container.Add );
            AddIf( null != this._clusterVMAccessProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._clusterVMAccessProfile.ToJson(null,serializationMode) : null, "clusterVMAccessProfile" ,container.Add );
            AddIf( null != this._cloudProviderProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._cloudProviderProfile.ToJson(null,serializationMode) : null, "cloudProviderProfile" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != this._status ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._status.ToJson(null,serializationMode) : null, "status" ,container.Add );
            }
            AddIf( null != this._licenseProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._licenseProfile.ToJson(null,serializationMode) : null, "licenseProfile" ,container.Add );
            AddIf( null != this._autoScalerProfile ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) this._autoScalerProfile.ToJson(null,serializationMode) : null, "autoScalerProfile" ,container.Add );
            AddIf( null != (((object)this._kubernetesVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonString(this._kubernetesVersion.ToString()) : null, "kubernetesVersion" ,container.Add );
            if (null != this._agentPoolProfile)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.XNodeArray();
                foreach( var __x in this._agentPoolProfile )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("agentPoolProfiles",__w);
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}