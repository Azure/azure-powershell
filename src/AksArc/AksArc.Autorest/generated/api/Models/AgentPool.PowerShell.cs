// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.PowerShell;

    /// <summary>The agentPool resource definition</summary>
    [System.ComponentModel.TypeConverter(typeof(AgentPoolTypeConverter))]
    public partial class AgentPool
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPool"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal AgentPool(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("NodeLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeLabel = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels) content.GetValueForProperty("NodeLabel",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeLabel, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProfileNodeLabelsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeTaint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeTaint = (System.Collections.Generic.List<string>) content.GetValueForProperty("NodeTaint",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeTaint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MaxCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxCount = (int?) content.GetValueForProperty("MaxCount",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MinCount = (int?) content.GetValueForProperty("MinCount",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MinCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableAutoScaling"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).EnableAutoScaling = (bool?) content.GetValueForProperty("EnableAutoScaling",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).EnableAutoScaling, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxPod = (int?) content.GetValueForProperty("MaxPod",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxPod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Count"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Count = (int?) content.GetValueForProperty("Count",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Count, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).VMSize = (string) content.GetValueForProperty("VMSize",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).VMSize, global::System.Convert.ToString);
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatus1) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProvisioningStatus1TypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("StatusCurrentState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusCurrentState = (string) content.GetValueForProperty("StatusCurrentState",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusCurrentState, global::System.Convert.ToString);
            }
            if (content.Contains("StatusErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusErrorMessage = (string) content.GetValueForProperty("StatusErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("StatusReadyReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusReadyReplica = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile>) content.GetValueForProperty("StatusReadyReplica",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusReadyReplica, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolUpdateProfileTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPool"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal AgentPool(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("ExtendedLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocation = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IExtendedLocation) content.GetValueForProperty("ExtendedLocation",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocation, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ExtendedLocationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedByType = (string) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataCreatedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedByType = (string) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedByType, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSType = (string) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSType, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationName = (string) content.GetValueForProperty("ExtendedLocationName",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationName, global::System.Convert.ToString);
            }
            if (content.Contains("OSSku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSSku = (string) content.GetValueForProperty("OSSku",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).OSSku, global::System.Convert.ToString);
            }
            if (content.Contains("NodeLabel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeLabel = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProfileNodeLabels) content.GetValueForProperty("NodeLabel",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeLabel, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProfileNodeLabelsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NodeTaint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeTaint = (System.Collections.Generic.List<string>) content.GetValueForProperty("NodeTaint",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).NodeTaint, __y => TypeConverterExtensions.SelectToList<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("MaxCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxCount = (int?) content.GetValueForProperty("MaxCount",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MinCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MinCount = (int?) content.GetValueForProperty("MinCount",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MinCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EnableAutoScaling"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).EnableAutoScaling = (bool?) content.GetValueForProperty("EnableAutoScaling",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).EnableAutoScaling, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MaxPod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxPod = (int?) content.GetValueForProperty("MaxPod",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).MaxPod, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Count"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Count = (int?) content.GetValueForProperty("Count",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Count, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("VMSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).VMSize = (string) content.GetValueForProperty("VMSize",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).VMSize, global::System.Convert.ToString);
            }
            if (content.Contains("KubernetesVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).KubernetesVersion = (string) content.GetValueForProperty("KubernetesVersion",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).KubernetesVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolProvisioningStatus1) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolProvisioningStatus1TypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ProvisioningState = (string) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ProvisioningState, global::System.Convert.ToString);
            }
            if (content.Contains("ExtendedLocationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationType = (string) content.GetValueForProperty("ExtendedLocationType",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).ExtendedLocationType, global::System.Convert.ToString);
            }
            if (content.Contains("StatusCurrentState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusCurrentState = (string) content.GetValueForProperty("StatusCurrentState",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusCurrentState, global::System.Convert.ToString);
            }
            if (content.Contains("StatusErrorMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusErrorMessage = (string) content.GetValueForProperty("StatusErrorMessage",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusErrorMessage, global::System.Convert.ToString);
            }
            if (content.Contains("StatusReadyReplica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusReadyReplica = (System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile>) content.GetValueForProperty("StatusReadyReplica",((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolInternal)this).StatusReadyReplica, __y => TypeConverterExtensions.SelectToList<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPoolUpdateProfile>(__y, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPoolUpdateProfileTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPool"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new AgentPool(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.AgentPool"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new AgentPool(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="AgentPool" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="AgentPool" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAgentPool FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The agentPool resource definition
    [System.ComponentModel.TypeConverter(typeof(AgentPoolTypeConverter))]
    public partial interface IAgentPool

    {

    }
}