// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>Properties of the provisioned cluster.</summary>
    public partial class ProvisionedClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentPoolProfile" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> _agentPoolProfile;

        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get => this._agentPoolProfile; set => this._agentPoolProfile = value; }

        /// <summary>Backing field for <see cref="AutoScalerProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile _autoScalerProfile;

        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile AutoScalerProfile { get => (this._autoScalerProfile = this._autoScalerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesAutoScalerProfile()); set => this._autoScalerProfile = value; }

        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileBalanceSimilarNodeGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).BalanceSimilarNodeGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).BalanceSimilarNodeGroup = value ?? null; }

        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileExpander { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).Expander; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).Expander = value ?? null; }

        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxEmptyBulkDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxEmptyBulkDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxEmptyBulkDelete = value ?? null; }

        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxGracefulTerminationSec { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxGracefulTerminationSec; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxGracefulTerminationSec = value ?? null; }

        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxNodeProvisionTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxNodeProvisionTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxNodeProvisionTime = value ?? null; }

        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileMaxTotalUnreadyPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxTotalUnreadyPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).MaxTotalUnreadyPercentage = value ?? null; }

        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileNewPodScaleUpDelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).NewPodScaleUpDelay; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).NewPodScaleUpDelay = value ?? null; }

        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileOkTotalUnreadyCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).OkTotalUnreadyCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).OkTotalUnreadyCount = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterAdd = value ?? null; }

        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterDelete = value ?? null; }

        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownDelayAfterFailure { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterFailure; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownDelayAfterFailure = value ?? null; }

        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnneededTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUnneededTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUnneededTime = value ?? null; }

        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUnreadyTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUnreadyTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUnreadyTime = value ?? null; }

        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScaleDownUtilizationThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUtilizationThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScaleDownUtilizationThreshold = value ?? null; }

        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileScanInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScanInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).ScanInterval = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithLocalStorage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).SkipNodesWithLocalStorage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).SkipNodesWithLocalStorage = value ?? null; }

        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string AutoScalerProfileSkipNodesWithSystemPod { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).SkipNodesWithSystemPod; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfileInternal)AutoScalerProfile).SkipNodesWithSystemPod = value ?? null; }

        /// <summary>Backing field for <see cref="CloudProviderProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile _cloudProviderProfile;

        /// <summary>
        /// The profile for the underlying cloud infrastructure provider for the provisioned cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile CloudProviderProfile { get => (this._cloudProviderProfile = this._cloudProviderProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.CloudProviderProfile()); set => this._cloudProviderProfile = value; }

        /// <summary>Backing field for <see cref="ClusterVMAccessProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile _clusterVMAccessProfile;

        /// <summary>The SSH restricted access profile for the VMs in the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile ClusterVMAccessProfile { get => (this._clusterVMAccessProfile = this._clusterVMAccessProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ClusterVMAccessProfile()); set => this._clusterVMAccessProfile = value; }

        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ClusterVMAccessProfileAuthorizedIprange { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfileInternal)ClusterVMAccessProfile).AuthorizedIPRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfileInternal)ClusterVMAccessProfile).AuthorizedIPRange = value ?? null; }

        /// <summary>Backing field for <see cref="ControlPlane" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile _controlPlane;

        /// <summary>The profile for control plane of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile ControlPlane { get => (this._controlPlane = this._controlPlane ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ControlPlaneProfile()); set => this._controlPlane = value; }

        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? ControlPlaneCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).Count = value ?? default(int); }

        /// <summary>IP address of the Kubernetes API server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ControlPlaneEndpointHostIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).ControlPlaneEndpointHostIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).ControlPlaneEndpointHostIP = value ?? null; }

        /// <summary>VM sku size of the control plane nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string ControlPlaneVMSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).VMSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).VMSize = value ?? null; }

        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInternal)CloudProviderProfile).InfraNetworkProfileVnetSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInternal)CloudProviderProfile).InfraNetworkProfileVnetSubnetId = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="KubernetesVersion" /> property.</summary>
        private string _kubernetesVersion;

        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string KubernetesVersion { get => this._kubernetesVersion; set => this._kubernetesVersion = value; }

        /// <summary>Backing field for <see cref="LicenseProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile _licenseProfile;

        /// <summary>The license profile of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile LicenseProfile { get => (this._licenseProfile = this._licenseProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterLicenseProfile()); set => this._licenseProfile = value; }

        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string LicenseProfileAzureHybridBenefit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfileInternal)LicenseProfile).AzureHybridBenefit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfileInternal)LicenseProfile).AzureHybridBenefit = value ?? null; }

        /// <summary>Backing field for <see cref="LinuxProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties _linuxProfile;

        /// <summary>The profile for Linux VMs in the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties LinuxProfile { get => (this._linuxProfile = this._linuxProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.LinuxProfileProperties()); set => this._linuxProfile = value; }

        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public int? LoadBalancerProfileCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).LoadBalancerProfileCount = value ?? default(int); }

        /// <summary>Internal Acessors for AutoScalerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.AutoScalerProfile { get => (this._autoScalerProfile = this._autoScalerProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesAutoScalerProfile()); set { {_autoScalerProfile = value;} } }

        /// <summary>Internal Acessors for CloudProviderProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.CloudProviderProfile { get => (this._cloudProviderProfile = this._cloudProviderProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.CloudProviderProfile()); set { {_cloudProviderProfile = value;} } }

        /// <summary>Internal Acessors for CloudProviderProfileInfraNetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInfraNetworkProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.CloudProviderProfileInfraNetworkProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInternal)CloudProviderProfile).InfraNetworkProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInternal)CloudProviderProfile).InfraNetworkProfile = value; }

        /// <summary>Internal Acessors for ClusterVMAccessProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.ClusterVMAccessProfile { get => (this._clusterVMAccessProfile = this._clusterVMAccessProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ClusterVMAccessProfile()); set { {_clusterVMAccessProfile = value;} } }

        /// <summary>Internal Acessors for ControlPlane</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.ControlPlane { get => (this._controlPlane = this._controlPlane ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ControlPlaneProfile()); set { {_controlPlane = value;} } }

        /// <summary>Internal Acessors for ControlPlaneEndpoint</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileControlPlaneEndpoint Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.ControlPlaneEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).ControlPlaneEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileInternal)ControlPlane).ControlPlaneEndpoint = value; }

        /// <summary>Internal Acessors for LicenseProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.LicenseProfile { get => (this._licenseProfile = this._licenseProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterLicenseProfile()); set { {_licenseProfile = value;} } }

        /// <summary>Internal Acessors for LinuxProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.LinuxProfile { get => (this._linuxProfile = this._linuxProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.LinuxProfileProperties()); set { {_linuxProfile = value;} } }

        /// <summary>Internal Acessors for LinuxProfileSsh</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSsh Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.LinuxProfileSsh { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesInternal)LinuxProfile).Ssh; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesInternal)LinuxProfile).Ssh = value; }

        /// <summary>Internal Acessors for NetworkProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.NetworkProfile()); set { {_networkProfile = value;} } }

        /// <summary>Internal Acessors for NetworkProfileLoadBalancerProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileLoadBalancerProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.NetworkProfileLoadBalancerProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).LoadBalancerProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).LoadBalancerProfile = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesStatus()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusCurrentState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).CurrentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).CurrentState = value; }

        /// <summary>Internal Acessors for StorageProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfile()); set { {_storageProfile = value;} } }

        /// <summary>Internal Acessors for StorageProfileNfsCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.StorageProfileNfsCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).NfsCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).NfsCsiDriver = value; }

        /// <summary>Internal Acessors for StorageProfileSmbCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesInternal.StorageProfileSmbCsiDriver { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).SmbCsiDriver; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).SmbCsiDriver = value; }

        /// <summary>Backing field for <see cref="NetworkProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile _networkProfile;

        /// <summary>The network configuration profile for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile NetworkProfile { get => (this._networkProfile = this._networkProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.NetworkProfile()); set => this._networkProfile = value; }

        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string NetworkProfileNetworkPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).NetworkPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).NetworkPolicy = value ?? null; }

        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string NetworkProfilePodCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).PodCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileInternal)NetworkProfile).PodCidr = value ?? null; }

        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? NfCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).NfCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).NfCsiDriverEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? SmbCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).SmbCsiDriverEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal)StorageProfile).SmbCsiDriverEnabled = value ?? default(bool); }

        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesInternal)LinuxProfile).SshPublicKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesInternal)LinuxProfile).SshPublicKey = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus _status;

        /// <summary>The observed status of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ProvisionedClusterPropertiesStatus()); }

        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).ControlPlaneStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).ControlPlaneStatus = value ?? null /* arrayOf */; }

        /// <summary>The current state of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusCurrentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).CurrentState; }

        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string StatusErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatusInternal)Status).ErrorMessage = value ?? null; }

        /// <summary>Backing field for <see cref="StorageProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile _storageProfile;

        /// <summary>The storage configuration profile for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile StorageProfile { get => (this._storageProfile = this._storageProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfile()); set => this._storageProfile = value; }

        /// <summary>Creates an new <see cref="ProvisionedClusterProperties" /> instance.</summary>
        public ProvisionedClusterProperties()
        {

        }
    }
    /// Properties of the provisioned cluster.
    public partial interface IProvisionedClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable
    {
        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The agent pool properties for the provisioned cluster.",
        SerializedName = @"agentPoolProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Valid values are 'true' and 'false'",
        SerializedName = @"balance-similar-node-groups",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.",
        SerializedName = @"expander",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("least-waste", "most-pods", "priority", "random")]
        string AutoScalerProfileExpander { get; set; }
        /// <summary>The default is 10.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 10.",
        SerializedName = @"max-empty-bulk-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 600.",
        SerializedName = @"max-graceful-termination-sec",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"max-node-provision-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is 45. The maximum is 100 and the minimum is 0.",
        SerializedName = @"max-total-unready-percentage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).",
        SerializedName = @"new-pod-scale-up-delay",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"This must be an integer. The default is 3.",
        SerializedName = @"ok-total-unready-count",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-add",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-delete",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-delay-after-failure",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unneeded-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
        SerializedName = @"scale-down-unready-time",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '0.5'.",
        SerializedName = @"scale-down-utilization-threshold",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is '10'. Values must be an integer number of seconds.",
        SerializedName = @"scan-interval",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-local-storage",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The default is true.",
        SerializedName = @"skip-nodes-with-system-pods",
        PossibleTypes = new [] { typeof(string) })]
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address or CIDR for SSH access to VMs in the provisioned cluster",
        SerializedName = @"authorizedIPRanges",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterVMAccessProfileAuthorizedIprange { get; set; }
        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of control plane nodes. The default value is 1, and the count should be an odd number",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? ControlPlaneCount { get; set; }
        /// <summary>IP address of the Kubernetes API server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP address of the Kubernetes API server",
        SerializedName = @"hostIP",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneEndpointHostIP { get; set; }
        /// <summary>VM sku size of the control plane nodes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VM sku size of the control plane nodes",
        SerializedName = @"vmSize",
        PossibleTypes = new [] { typeof(string) })]
        string ControlPlaneVMSize { get; set; }
        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}",
        SerializedName = @"vnetSubnetIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get; set; }
        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The version of Kubernetes in use by the provisioned cluster.",
        SerializedName = @"kubernetesVersion",
        PossibleTypes = new [] { typeof(string) })]
        string KubernetesVersion { get; set; }
        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether Azure Hybrid Benefit is opted in. Default value is false",
        SerializedName = @"azureHybridBenefit",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("True", "False", "NotApplicable")]
        string LicenseProfileAzureHybridBenefit { get; set; }
        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of HA Proxy load balancer VMs. The default value is 0.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(int) })]
        int? LoadBalancerProfileCount { get; set; }
        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Network policy used for building Kubernetes network. Possible values include: 'calico'.",
        SerializedName = @"networkPolicy",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("calico")]
        string NetworkProfileNetworkPolicy { get; set; }
        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"A CIDR notation IP Address range from which to assign pod IPs.",
        SerializedName = @"podCidr",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable NFS CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the latest long running operation for the provisioned cluster.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable SMB CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmbCsiDriverEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.",
        SerializedName = @"publicKeys",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get; set; }
        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The detailed status of the provisioned cluster components including addons.",
        SerializedName = @"controlPlaneStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get;  }
        /// <summary>The current state of the provisioned cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The current state of the provisioned cluster.",
        SerializedName = @"currentState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get;  }
        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"Error messages during a provisioned cluster operation or steady state.",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusErrorMessage { get;  }

    }
    /// Properties of the provisioned cluster.
    internal partial interface IProvisionedClusterPropertiesInternal

    {
        /// <summary>The agent pool properties for the provisioned cluster.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INamedAgentPoolProfile> AgentPoolProfile { get; set; }
        /// <summary>
        /// Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesAutoScalerProfile AutoScalerProfile { get; set; }
        /// <summary>Valid values are 'true' and 'false'</summary>
        string AutoScalerProfileBalanceSimilarNodeGroup { get; set; }
        /// <summary>
        /// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
        /// for more information.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("least-waste", "most-pods", "priority", "random")]
        string AutoScalerProfileExpander { get; set; }
        /// <summary>The default is 10.</summary>
        string AutoScalerProfileMaxEmptyBulkDelete { get; set; }
        /// <summary>The default is 600.</summary>
        string AutoScalerProfileMaxGracefulTerminationSec { get; set; }
        /// <summary>
        /// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileMaxNodeProvisionTime { get; set; }
        /// <summary>The default is 45. The maximum is 100 and the minimum is 0.</summary>
        string AutoScalerProfileMaxTotalUnreadyPercentage { get; set; }
        /// <summary>
        /// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all
        /// the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be
        /// an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
        /// </summary>
        string AutoScalerProfileNewPodScaleUpDelay { get; set; }
        /// <summary>This must be an integer. The default is 3.</summary>
        string AutoScalerProfileOkTotalUnreadyCount { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterAdd { get; set; }
        /// <summary>
        /// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m)
        /// is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterDelete { get; set; }
        /// <summary>
        /// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownDelayAfterFailure { get; set; }
        /// <summary>
        /// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnneededTime { get; set; }
        /// <summary>
        /// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
        /// </summary>
        string AutoScalerProfileScaleDownUnreadyTime { get; set; }
        /// <summary>The default is '0.5'.</summary>
        string AutoScalerProfileScaleDownUtilizationThreshold { get; set; }
        /// <summary>The default is '10'. Values must be an integer number of seconds.</summary>
        string AutoScalerProfileScanInterval { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithLocalStorage { get; set; }
        /// <summary>The default is true.</summary>
        string AutoScalerProfileSkipNodesWithSystemPod { get; set; }
        /// <summary>
        /// The profile for the underlying cloud infrastructure provider for the provisioned cluster.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfile CloudProviderProfile { get; set; }
        /// <summary>The profile for the infrastructure networks used by the provisioned cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ICloudProviderProfileInfraNetworkProfile CloudProviderProfileInfraNetworkProfile { get; set; }
        /// <summary>The SSH restricted access profile for the VMs in the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IClusterVMAccessProfile ClusterVMAccessProfile { get; set; }
        /// <summary>IP Address or CIDR for SSH access to VMs in the provisioned cluster</summary>
        string ClusterVMAccessProfileAuthorizedIprange { get; set; }
        /// <summary>The profile for control plane of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfile ControlPlane { get; set; }
        /// <summary>
        /// Number of control plane nodes. The default value is 1, and the count should be an odd number
        /// </summary>
        int? ControlPlaneCount { get; set; }
        /// <summary>IP Address of the Kubernetes API server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IControlPlaneProfileControlPlaneEndpoint ControlPlaneEndpoint { get; set; }
        /// <summary>IP address of the Kubernetes API server</summary>
        string ControlPlaneEndpointHostIP { get; set; }
        /// <summary>VM sku size of the control plane nodes</summary>
        string ControlPlaneVMSize { get; set; }
        /// <summary>
        /// List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
        /// </summary>
        System.Collections.Generic.List<string> InfraNetworkProfileVnetSubnetId { get; set; }
        /// <summary>The version of Kubernetes in use by the provisioned cluster.</summary>
        string KubernetesVersion { get; set; }
        /// <summary>The license profile of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterLicenseProfile LicenseProfile { get; set; }
        /// <summary>Indicates whether Azure Hybrid Benefit is opted in. Default value is false</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("True", "False", "NotApplicable")]
        string LicenseProfileAzureHybridBenefit { get; set; }
        /// <summary>The profile for Linux VMs in the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfileProperties LinuxProfile { get; set; }
        /// <summary>SSH configuration for VMs of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSsh LinuxProfileSsh { get; set; }
        /// <summary>Number of HA Proxy load balancer VMs. The default value is 0.</summary>
        int? LoadBalancerProfileCount { get; set; }
        /// <summary>The network configuration profile for the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfile NetworkProfile { get; set; }
        /// <summary>Profile of the HA Proxy load balancer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.INetworkProfileLoadBalancerProfile NetworkProfileLoadBalancerProfile { get; set; }
        /// <summary>
        /// Network policy used for building Kubernetes network. Possible values include: 'calico'.
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("calico")]
        string NetworkProfileNetworkPolicy { get; set; }
        /// <summary>A CIDR notation IP Address range from which to assign pod IPs.</summary>
        string NetworkProfilePodCidr { get; set; }
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>The status of the latest long running operation for the provisioned cluster.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        bool? SmbCsiDriverEnabled { get; set; }
        /// <summary>
        /// The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.ILinuxProfilePropertiesSshPublicKeysItem> SshPublicKey { get; set; }
        /// <summary>The observed status of the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IProvisionedClusterPropertiesStatus Status { get; set; }
        /// <summary>The detailed status of the provisioned cluster components including addons.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile> StatusControlPlaneStatus { get; set; }
        /// <summary>The current state of the provisioned cluster.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Upgrading", "Accepted")]
        string StatusCurrentState { get; set; }
        /// <summary>Error messages during a provisioned cluster operation or steady state.</summary>
        string StatusErrorMessage { get; set; }
        /// <summary>The storage configuration profile for the provisioned cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile StorageProfile { get; set; }
        /// <summary>NFS CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver StorageProfileNfsCsiDriver { get; set; }
        /// <summary>SMB CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver StorageProfileSmbCsiDriver { get; set; }

    }
}