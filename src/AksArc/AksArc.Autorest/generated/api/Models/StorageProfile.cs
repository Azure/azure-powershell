// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>The storage configuration profile for the provisioned cluster.</summary>
    public partial class StorageProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfile,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal
    {

        /// <summary>Internal Acessors for NfsCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal.NfsCsiDriver { get => (this._nfsCsiDriver = this._nfsCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfileNfsCsiDriver()); set { {_nfsCsiDriver = value;} } }

        /// <summary>Internal Acessors for SmbCsiDriver</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileInternal.SmbCsiDriver { get => (this._smbCsiDriver = this._smbCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfileSmbCsiDriver()); set { {_smbCsiDriver = value;} } }

        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? NfCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriverInternal)NfsCsiDriver).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriverInternal)NfsCsiDriver).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="NfsCsiDriver" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver _nfsCsiDriver;

        /// <summary>NFS CSI Driver settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver NfsCsiDriver { get => (this._nfsCsiDriver = this._nfsCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfileNfsCsiDriver()); set => this._nfsCsiDriver = value; }

        /// <summary>Backing field for <see cref="SmbCsiDriver" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver _smbCsiDriver;

        /// <summary>SMB CSI Driver settings for the storage profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver SmbCsiDriver { get => (this._smbCsiDriver = this._smbCsiDriver ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.StorageProfileSmbCsiDriver()); set => this._smbCsiDriver = value; }

        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public bool? SmbCsiDriverEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriverInternal)SmbCsiDriver).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriverInternal)SmbCsiDriver).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="StorageProfile" /> instance.</summary>
        public StorageProfile()
        {

        }
    }
    /// The storage configuration profile for the provisioned cluster.
    public partial interface IStorageProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable NFS CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether to enable SMB CSI Driver. The default value is true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SmbCsiDriverEnabled { get; set; }

    }
    /// The storage configuration profile for the provisioned cluster.
    internal partial interface IStorageProfileInternal

    {
        /// <summary>Indicates whether to enable NFS CSI Driver. The default value is true.</summary>
        bool? NfCsiDriverEnabled { get; set; }
        /// <summary>NFS CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileNfsCsiDriver NfsCsiDriver { get; set; }
        /// <summary>SMB CSI Driver settings for the storage profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IStorageProfileSmbCsiDriver SmbCsiDriver { get; set; }
        /// <summary>Indicates whether to enable SMB CSI Driver. The default value is true.</summary>
        bool? SmbCsiDriverEnabled { get; set; }

    }
}