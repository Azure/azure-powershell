// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>The status profile of the addons and other kubernetes components</summary>
    public partial class AddonStatusProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfile,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IAddonStatusProfileInternal
    {

        /// <summary>Backing field for <see cref="ErrorMessage" /> property.</summary>
        private string _errorMessage;

        /// <summary>Observed error message from the addon or component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string ErrorMessage { get => this._errorMessage; set => this._errorMessage = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the addon or component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Phase" /> property.</summary>
        private string _phase;

        /// <summary>
        /// Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning',
        /// 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string Phase { get => this._phase; set => this._phase = value; }

        /// <summary>Backing field for <see cref="Ready" /> property.</summary>
        private bool? _ready;

        /// <summary>Indicates whether the addon or component is ready</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public bool? Ready { get => this._ready; set => this._ready = value; }

        /// <summary>Creates an new <see cref="AddonStatusProfile" /> instance.</summary>
        public AddonStatusProfile()
        {

        }
    }
    /// The status profile of the addons and other kubernetes components
    public partial interface IAddonStatusProfile :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable
    {
        /// <summary>Observed error message from the addon or component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Observed error message from the addon or component",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorMessage { get; set; }
        /// <summary>Name of the addon or component</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Name of the addon or component",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>
        /// Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning',
        /// 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning', 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'",
        SerializedName = @"phase",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("pending", "provisioning", "provisioning {HelmChartInstalled}", "provisioning {MSICertificateDownloaded}", "provisioned", "deleting", "failed", "upgrading")]
        string Phase { get; set; }
        /// <summary>Indicates whether the addon or component is ready</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Indicates whether the addon or component is ready",
        SerializedName = @"ready",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Ready { get; set; }

    }
    /// The status profile of the addons and other kubernetes components
    internal partial interface IAddonStatusProfileInternal

    {
        /// <summary>Observed error message from the addon or component</summary>
        string ErrorMessage { get; set; }
        /// <summary>Name of the addon or component</summary>
        string Name { get; set; }
        /// <summary>
        /// Observed phase of the addon or component on the provisioned cluster. Possible values include: 'pending', 'provisioning',
        /// 'provisioning {HelmChartInstalled}', 'provisioning {MSICertificateDownloaded}', 'provisioned', 'deleting', 'failed', 'upgrading'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("pending", "provisioning", "provisioning {HelmChartInstalled}", "provisioning {MSICertificateDownloaded}", "provisioned", "deleting", "failed", "upgrading")]
        string Phase { get; set; }
        /// <summary>Indicates whether the addon or component is ready</summary>
        bool? Ready { get; set; }

    }
}