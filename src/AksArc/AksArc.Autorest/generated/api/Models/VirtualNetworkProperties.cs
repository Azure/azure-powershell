// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Extensions;

    /// <summary>Properties of the virtual network resource</summary>
    public partial class VirtualNetworkProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal
    {

        /// <summary>The error code from the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string Code { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).Code = value ?? null; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private System.Collections.Generic.List<string> _dnsServer;

        /// <summary>List of DNS server IP Addresses associated with the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> DnsServer { get => this._dnsServer; set => this._dnsServer = value; }

        /// <summary>Backing field for <see cref="Gateway" /> property.</summary>
        private string _gateway;

        /// <summary>IP Address of the Gateway associated with the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string Gateway { get => this._gateway; set => this._gateway = value; }

        /// <summary>Group in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string HciMocGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocGroup = value ?? null; }

        /// <summary>Location in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string HciMocLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocLocation = value ?? null; }

        /// <summary>Virtual Network name in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string HciMocVnetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocVnetName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).HciMocVnetName = value ?? null; }

        /// <summary>Backing field for <see cref="IPAddressPrefix" /> property.</summary>
        private string _iPAddressPrefix;

        /// <summary>IP Address Prefix of the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string IPAddressPrefix { get => this._iPAddressPrefix; set => this._iPAddressPrefix = value; }

        /// <summary>Backing field for <see cref="InfraVnetProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfile _infraVnetProfile;

        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfile InfraVnetProfile { get => (this._infraVnetProfile = this._infraVnetProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.VirtualNetworkPropertiesInfraVnetProfile()); set => this._infraVnetProfile = value; }

        /// <summary>The error message from the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).Message = value ?? null; }

        /// <summary>Internal Acessors for InfraVnetProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfile Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.InfraVnetProfile { get => (this._infraVnetProfile = this._infraVnetProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.VirtualNetworkPropertiesInfraVnetProfile()); set { {_infraVnetProfile = value;} } }

        /// <summary>Internal Acessors for InfraVnetProfileHci</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileHci Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.InfraVnetProfileHci { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).Hci; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileInternal)InfraVnetProfile).Hci = value; }

        /// <summary>Internal Acessors for OperationStatusError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusOperationStatusError Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.OperationStatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusError; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusError = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatus Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.VirtualNetworkPropertiesStatus()); set { {_status = value;} } }

        /// <summary>Internal Acessors for StatusOperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusOperationStatus Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInternal.StatusOperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatus = value; }

        /// <summary>The status of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string OperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusStatus = value ?? null; }

        /// <summary>The identifier of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Inlined)]
        public string OperationStatusOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusInternal)Status).OperationStatusOperationId = value ?? null; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatus _status;

        /// <summary>Status of the virtual network resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatus Status { get => (this._status = this._status ?? new Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.VirtualNetworkPropertiesStatus()); }

        /// <summary>Backing field for <see cref="VipPool" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVipPoolItem> _vipPool;

        /// <summary>
        /// Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVipPoolItem> VipPool { get => this._vipPool; set => this._vipPool = value; }

        /// <summary>Backing field for <see cref="VlanId" /> property.</summary>
        private int? _vlanId;

        /// <summary>VLAN Id used by the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public int? VlanId { get => this._vlanId; set => this._vlanId = value; }

        /// <summary>Backing field for <see cref="VmipPool" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVmipPoolItem> _vmipPool;

        /// <summary>Range of IP Addresses for Kubernetes node VMs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Origin(Microsoft.Azure.PowerShell.Cmdlets.AksArc.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVmipPoolItem> VmipPool { get => this._vmipPool; set => this._vmipPool = value; }

        /// <summary>Creates an new <see cref="VirtualNetworkProperties" /> instance.</summary>
        public VirtualNetworkProperties()
        {

        }
    }
    /// Properties of the virtual network resource
    public partial interface IVirtualNetworkProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.IJsonSerializable
    {
        /// <summary>The error code from the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error code from the operation.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string Code { get;  }
        /// <summary>List of DNS server IP Addresses associated with the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of DNS server IP Addresses associated with the network",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> DnsServer { get; set; }
        /// <summary>IP Address of the Gateway associated with the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address of the Gateway associated with the network",
        SerializedName = @"gateway",
        PossibleTypes = new [] { typeof(string) })]
        string Gateway { get; set; }
        /// <summary>Group in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Group in MOC(Microsoft On-premises Cloud)",
        SerializedName = @"mocGroup",
        PossibleTypes = new [] { typeof(string) })]
        string HciMocGroup { get; set; }
        /// <summary>Location in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Location in MOC(Microsoft On-premises Cloud)",
        SerializedName = @"mocLocation",
        PossibleTypes = new [] { typeof(string) })]
        string HciMocLocation { get; set; }
        /// <summary>Virtual Network name in MOC(Microsoft On-premises Cloud)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Virtual Network name in MOC(Microsoft On-premises Cloud)",
        SerializedName = @"mocVnetName",
        PossibleTypes = new [] { typeof(string) })]
        string HciMocVnetName { get; set; }
        /// <summary>IP Address Prefix of the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address Prefix of the network",
        SerializedName = @"ipAddressPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddressPrefix { get; set; }
        /// <summary>The error message from the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The error message from the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get;  }
        /// <summary>The status of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the operation.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string OperationStatus { get;  }
        /// <summary>The identifier of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The identifier of the operation.",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string OperationStatusOperationId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>
        /// Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer",
        SerializedName = @"vipPool",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVipPoolItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVipPoolItem> VipPool { get; set; }
        /// <summary>VLAN Id used by the network</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VLAN Id used by the network",
        SerializedName = @"vlanID",
        PossibleTypes = new [] { typeof(int) })]
        int? VlanId { get; set; }
        /// <summary>Range of IP Addresses for Kubernetes node VMs</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AksArc.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Range of IP Addresses for Kubernetes node VMs",
        SerializedName = @"vmipPool",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVmipPoolItem) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVmipPoolItem> VmipPool { get; set; }

    }
    /// Properties of the virtual network resource
    internal partial interface IVirtualNetworkPropertiesInternal

    {
        /// <summary>The error code from the operation.</summary>
        string Code { get; set; }
        /// <summary>List of DNS server IP Addresses associated with the network</summary>
        System.Collections.Generic.List<string> DnsServer { get; set; }
        /// <summary>IP Address of the Gateway associated with the network</summary>
        string Gateway { get; set; }
        /// <summary>Group in MOC(Microsoft On-premises Cloud)</summary>
        string HciMocGroup { get; set; }
        /// <summary>Location in MOC(Microsoft On-premises Cloud)</summary>
        string HciMocLocation { get; set; }
        /// <summary>Virtual Network name in MOC(Microsoft On-premises Cloud)</summary>
        string HciMocVnetName { get; set; }
        /// <summary>IP Address Prefix of the network</summary>
        string IPAddressPrefix { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfile InfraVnetProfile { get; set; }
        /// <summary>Infrastructure network profile for HCI platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesInfraVnetProfileHci InfraVnetProfileHci { get; set; }
        /// <summary>The error message from the operation.</summary>
        string Message { get; set; }
        /// <summary>The status of the operation.</summary>
        string OperationStatus { get; set; }
        /// <summary>The error if any from the operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusOperationStatusError OperationStatusError { get; set; }
        /// <summary>The identifier of the operation.</summary>
        string OperationStatusOperationId { get; set; }

        [global::Microsoft.Azure.PowerShell.Cmdlets.AksArc.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Pending", "Creating", "Deleting", "Updating", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>Status of the virtual network resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatus Status { get; set; }
        /// <summary>The detailed status of the long running operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesStatusOperationStatus StatusOperationStatus { get; set; }
        /// <summary>
        /// Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer
        /// </summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVipPoolItem> VipPool { get; set; }
        /// <summary>VLAN Id used by the network</summary>
        int? VlanId { get; set; }
        /// <summary>Range of IP Addresses for Kubernetes node VMs</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.AksArc.Models.IVirtualNetworkPropertiesVmipPoolItem> VmipPool { get; set; }

    }
}