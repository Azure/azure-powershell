// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Definition of the job stream.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class JobStream
    {
        /// <summary>
        /// Initializes a new instance of the JobStream class.
        /// </summary>
        public JobStream()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JobStream class.
        /// </summary>

        /// <param name="id">Gets or sets the id of the resource.
        /// </param>

        /// <param name="jobStreamId">Gets or sets the id of the job stream.
        /// </param>

        /// <param name="time">Gets or sets the creation time of the job.
        /// </param>

        /// <param name="streamType">Gets or sets the stream type.
        /// Possible values include: &#39;Progress&#39;, &#39;Output&#39;, &#39;Warning&#39;, &#39;Error&#39;, &#39;Debug&#39;,
        /// &#39;Verbose&#39;, &#39;Any&#39;</param>

        /// <param name="streamText">Gets or sets the stream text.
        /// </param>

        /// <param name="summary">Gets or sets the summary.
        /// </param>

        /// <param name="value">Gets or sets the values of the job stream.
        /// </param>
        public JobStream(string id = default(string), string jobStreamId = default(string), System.DateTimeOffset time = default(System.DateTimeOffset), string streamType = default(string), string streamText = default(string), string summary = default(string), System.Collections.Generic.IDictionary<string, object> value = default(System.Collections.Generic.IDictionary<string, object>))

        {
            this.Id = id;
            this.JobStreamId = jobStreamId;
            this.Time = time;
            this.StreamType = streamType;
            this.StreamText = streamText;
            this.Summary = summary;
            this.Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the id of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the id of the job stream.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.jobStreamId")]
        public string JobStreamId {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the creation time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.time")]
        public System.DateTimeOffset Time {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the stream type. Possible values include: &#39;Progress&#39;, &#39;Output&#39;, &#39;Warning&#39;, &#39;Error&#39;, &#39;Debug&#39;, &#39;Verbose&#39;, &#39;Any&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.streamType")]
        public string StreamType {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the stream text.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.streamText")]
        public string StreamText {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the summary.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.summary")]
        public string Summary {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the values of the job stream.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.value")]
        public System.Collections.Generic.IDictionary<string, object> Value {get; set; }
    }
}