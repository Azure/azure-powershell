// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The parameters supplied to the create or update runbook properties.
    /// </summary>
    public partial class RunbookCreateOrUpdateProperties
    {
        /// <summary>
        /// Initializes a new instance of the RunbookCreateOrUpdateProperties class.
        /// </summary>
        public RunbookCreateOrUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunbookCreateOrUpdateProperties class.
        /// </summary>

        /// <param name="logVerbose">Gets or sets verbose log option.
        /// </param>

        /// <param name="logProgress">Gets or sets progress log option.
        /// </param>

        /// <param name="runbookType">Gets or sets the type of the runbook.
        /// Possible values include: &#39;Script&#39;, &#39;Graph&#39;, &#39;PowerShellWorkflow&#39;,
        /// &#39;PowerShell&#39;, &#39;GraphPowerShellWorkflow&#39;, &#39;GraphPowerShell&#39;, &#39;Python2&#39;,
        /// &#39;Python3&#39;, &#39;PowerShell72&#39;</param>

        /// <param name="draft">Gets or sets the draft runbook properties.
        /// </param>

        /// <param name="publishContentLink">Gets or sets the published runbook content link.
        /// </param>

        /// <param name="description">Gets or sets the description of the runbook.
        /// </param>

        /// <param name="logActivityTrace">Gets or sets the activity-level tracing options of the runbook.
        /// </param>
        public RunbookCreateOrUpdateProperties(string runbookType, bool? logVerbose = default(bool?), bool? logProgress = default(bool?), RunbookDraft draft = default(RunbookDraft), ContentLink publishContentLink = default(ContentLink), string description = default(string), int? logActivityTrace = default(int?))

        {
            this.LogVerbose = logVerbose;
            this.LogProgress = logProgress;
            this.RunbookType = runbookType;
            this.Draft = draft;
            this.PublishContentLink = publishContentLink;
            this.Description = description;
            this.LogActivityTrace = logActivityTrace;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets verbose log option.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logVerbose")]
        public bool? LogVerbose {get; set; }

        /// <summary>
        /// Gets or sets gets or sets progress log option.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logProgress")]
        public bool? LogProgress {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the type of the runbook. Possible values include: &#39;Script&#39;, &#39;Graph&#39;, &#39;PowerShellWorkflow&#39;, &#39;PowerShell&#39;, &#39;GraphPowerShellWorkflow&#39;, &#39;GraphPowerShell&#39;, &#39;Python2&#39;, &#39;Python3&#39;, &#39;PowerShell72&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runbookType")]
        public string RunbookType {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the draft runbook properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "draft")]
        public RunbookDraft Draft {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the published runbook content link.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publishContentLink")]
        public ContentLink PublishContentLink {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the description of the runbook.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the activity-level tracing options of the
        /// runbook.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logActivityTrace")]
        public int? LogActivityTrace {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.RunbookType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "RunbookType");
            }

            if (this.Draft != null)
            {
                this.Draft.Validate();
            }
            if (this.PublishContentLink != null)
            {
                this.PublishContentLink.Validate();
            }

        }
    }
}