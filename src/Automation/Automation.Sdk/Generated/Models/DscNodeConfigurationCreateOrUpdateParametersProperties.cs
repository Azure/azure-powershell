// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The parameter properties supplied to the create or update node
    /// configuration operation.
    /// </summary>
    public partial class DscNodeConfigurationCreateOrUpdateParametersProperties
    {
        /// <summary>
        /// Initializes a new instance of the DscNodeConfigurationCreateOrUpdateParametersProperties class.
        /// </summary>
        public DscNodeConfigurationCreateOrUpdateParametersProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscNodeConfigurationCreateOrUpdateParametersProperties class.
        /// </summary>

        /// <param name="source">Gets or sets the source.
        /// </param>

        /// <param name="configuration">Gets or sets the configuration of the node.
        /// </param>

        /// <param name="incrementNodeConfigurationBuild">If a new build version of NodeConfiguration is required.
        /// </param>
        public DscNodeConfigurationCreateOrUpdateParametersProperties(ContentSource source, DscConfigurationAssociationProperty configuration, bool? incrementNodeConfigurationBuild = default(bool?))

        {
            this.Source = source;
            this.Configuration = configuration;
            this.IncrementNodeConfigurationBuild = incrementNodeConfigurationBuild;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the source.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public ContentSource Source {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the configuration of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configuration")]
        public DscConfigurationAssociationProperty Configuration {get; set; }

        /// <summary>
        /// Gets or sets if a new build version of NodeConfiguration is required.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incrementNodeConfigurationBuild")]
        public bool? IncrementNodeConfigurationBuild {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Source == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Source");
            }
            if (this.Configuration == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Configuration");
            }
            if (this.Source != null)
            {
                this.Source.Validate();
            }

        }
    }
}