// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The properties to create or update configuration.
    /// </summary>
    public partial class DscConfigurationCreateOrUpdateProperties
    {
        /// <summary>
        /// Initializes a new instance of the DscConfigurationCreateOrUpdateProperties class.
        /// </summary>
        public DscConfigurationCreateOrUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscConfigurationCreateOrUpdateProperties class.
        /// </summary>

        /// <param name="logVerbose">Gets or sets verbose log option.
        /// </param>

        /// <param name="logProgress">Gets or sets progress log option.
        /// </param>

        /// <param name="source">Gets or sets the source.
        /// </param>

        /// <param name="parameters">Gets or sets the configuration parameters.
        /// </param>

        /// <param name="description">Gets or sets the description of the configuration.
        /// </param>
        public DscConfigurationCreateOrUpdateProperties(ContentSource source, bool? logVerbose = default(bool?), bool? logProgress = default(bool?), System.Collections.Generic.IDictionary<string, DscConfigurationParameter> parameters = default(System.Collections.Generic.IDictionary<string, DscConfigurationParameter>), string description = default(string))

        {
            this.LogVerbose = logVerbose;
            this.LogProgress = logProgress;
            this.Source = source;
            this.Parameters = parameters;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets verbose log option.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logVerbose")]
        public bool? LogVerbose {get; set; }

        /// <summary>
        /// Gets or sets gets or sets progress log option.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logProgress")]
        public bool? LogProgress {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the source.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public ContentSource Source {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the configuration parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, DscConfigurationParameter> Parameters {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the description of the configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Source == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Source");
            }
            if (this.Source != null)
            {
                this.Source.Validate();
            }


        }
    }
}