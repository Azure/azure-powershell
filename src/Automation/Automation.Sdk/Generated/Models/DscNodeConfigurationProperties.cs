// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for the DscNodeConfiguration
    /// </summary>
    public partial class DscNodeConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the DscNodeConfigurationProperties class.
        /// </summary>
        public DscNodeConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscNodeConfigurationProperties class.
        /// </summary>

        /// <param name="lastModifiedTime">Gets or sets the last modified time.
        /// </param>

        /// <param name="creationTime">Gets or sets creation time.
        /// </param>

        /// <param name="configuration">Gets or sets the configuration of the node.
        /// </param>

        /// <param name="source">Source of node configuration.
        /// </param>

        /// <param name="nodeCount">Number of nodes with this node configuration assigned
        /// </param>

        /// <param name="incrementNodeConfigurationBuild">If a new build version of NodeConfiguration is required.
        /// </param>
        public DscNodeConfigurationProperties(System.DateTimeOffset lastModifiedTime = default(System.DateTimeOffset), System.DateTimeOffset creationTime = default(System.DateTimeOffset), DscConfigurationAssociationProperty configuration = default(DscConfigurationAssociationProperty), string source = default(string), long? nodeCount = default(long?), bool? incrementNodeConfigurationBuild = default(bool?))

        {
            this.LastModifiedTime = lastModifiedTime;
            this.CreationTime = creationTime;
            this.Configuration = configuration;
            this.Source = source;
            this.NodeCount = nodeCount;
            this.IncrementNodeConfigurationBuild = incrementNodeConfigurationBuild;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the last modified time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset LastModifiedTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets creation time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTime")]
        public System.DateTimeOffset CreationTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the configuration of the node.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configuration")]
        public DscConfigurationAssociationProperty Configuration {get; set; }

        /// <summary>
        /// Gets or sets source of node configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source {get; set; }

        /// <summary>
        /// Gets or sets number of nodes with this node configuration assigned
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nodeCount")]
        public long? NodeCount {get; set; }

        /// <summary>
        /// Gets or sets if a new build version of NodeConfiguration is required.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "incrementNodeConfigurationBuild")]
        public bool? IncrementNodeConfigurationBuild {get; set; }
    }
}