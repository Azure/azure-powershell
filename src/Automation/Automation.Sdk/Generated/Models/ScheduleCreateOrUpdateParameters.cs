// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The parameters supplied to the create or update schedule operation.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class ScheduleCreateOrUpdateParameters
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleCreateOrUpdateParameters class.
        /// </summary>
        public ScheduleCreateOrUpdateParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduleCreateOrUpdateParameters class.
        /// </summary>

        /// <param name="name">Gets or sets the name of the Schedule.
        /// </param>

        /// <param name="advancedSchedule">Gets or sets the AdvancedSchedule.
        /// </param>

        /// <param name="description">Gets or sets the description of the schedule.
        /// </param>

        /// <param name="startTime">Gets or sets the start time of the schedule.
        /// </param>

        /// <param name="expiryTime">Gets or sets the end time of the schedule.
        /// </param>

        /// <param name="interval">Gets or sets the interval of the schedule.
        /// </param>

        /// <param name="frequency">Gets or sets the frequency of the schedule.
        /// Possible values include: &#39;OneTime&#39;, &#39;Day&#39;, &#39;Hour&#39;, &#39;Week&#39;, &#39;Month&#39;,
        /// &#39;Minute&#39;</param>

        /// <param name="timeZone">Gets or sets the time zone of the schedule.
        /// </param>
        public ScheduleCreateOrUpdateParameters(string name, System.DateTimeOffset startTime, string frequency, AdvancedSchedule advancedSchedule = default(AdvancedSchedule), string description = default(string), System.DateTimeOffset? expiryTime = default(System.DateTimeOffset?), object interval = default(object), string timeZone = default(string))

        {
            this.Name = name;
            this.AdvancedSchedule = advancedSchedule;
            this.Description = description;
            this.StartTime = startTime;
            this.ExpiryTime = expiryTime;
            this.Interval = interval;
            this.Frequency = frequency;
            this.TimeZone = timeZone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the name of the Schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the AdvancedSchedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.advancedSchedule")]
        public AdvancedSchedule AdvancedSchedule {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the description of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the start time of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.startTime")]
        public System.DateTimeOffset StartTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the end time of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.expiryTime")]
        public System.DateTimeOffset? ExpiryTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the interval of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.interval")]
        public object Interval {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the frequency of the schedule. Possible values include: &#39;OneTime&#39;, &#39;Day&#39;, &#39;Hour&#39;, &#39;Week&#39;, &#39;Month&#39;, &#39;Minute&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.frequency")]
        public string Frequency {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the time zone of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.timeZone")]
        public string TimeZone {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Name == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Name");
            }
            if (this.Frequency == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Frequency");
            }






        }
    }
}