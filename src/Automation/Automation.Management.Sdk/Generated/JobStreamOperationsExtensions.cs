// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Automation
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for JobStreamOperations
    /// </summary>
    public static partial class JobStreamOperationsExtensions
    {
        /// <summary>
        /// Retrieve the job stream identified by job stream id.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of an Azure Resource group.
        /// </param>
        /// <param name='automationAccountName'>
        /// The name of the automation account.
        /// </param>
        /// <param name='jobName'>
        /// The job name.
        /// </param>
        /// <param name='jobStreamId'>
        /// The job stream id.
        /// </param>
        /// <param name='clientRequestId'>
        /// Identifies this specific client request.
        /// </param>
        public static JobStream Get(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobName, string jobStreamId, string clientRequestId = default(string))
        {
                return ((IJobStreamOperations)operations).GetAsync(resourceGroupName, automationAccountName, jobName, jobStreamId, clientRequestId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieve the job stream identified by job stream id.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of an Azure Resource group.
        /// </param>
        /// <param name='automationAccountName'>
        /// The name of the automation account.
        /// </param>
        /// <param name='jobName'>
        /// The job name.
        /// </param>
        /// <param name='jobStreamId'>
        /// The job stream id.
        /// </param>
        /// <param name='clientRequestId'>
        /// Identifies this specific client request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<JobStream> GetAsync(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobName, string jobStreamId, string clientRequestId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, jobStreamId, clientRequestId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieve a list of jobs streams identified by job name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of an Azure Resource group.
        /// </param>
        /// <param name='automationAccountName'>
        /// The name of the automation account.
        /// </param>
        /// <param name='jobName'>
        /// The job name.
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the operation.
        /// </param>
        /// <param name='clientRequestId'>
        /// Identifies this specific client request.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<JobStream> ListByJob(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobName, string filter = default(string), string clientRequestId = default(string))
        {
                return ((IJobStreamOperations)operations).ListByJobAsync(resourceGroupName, automationAccountName, jobName, filter, clientRequestId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieve a list of jobs streams identified by job name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of an Azure Resource group.
        /// </param>
        /// <param name='automationAccountName'>
        /// The name of the automation account.
        /// </param>
        /// <param name='jobName'>
        /// The job name.
        /// </param>
        /// <param name='filter'>
        /// The filter to apply on the operation.
        /// </param>
        /// <param name='clientRequestId'>
        /// Identifies this specific client request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<JobStream>> ListByJobAsync(this IJobStreamOperations operations, string resourceGroupName, string automationAccountName, string jobName, string filter = default(string), string clientRequestId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByJobWithHttpMessagesAsync(resourceGroupName, automationAccountName, jobName, filter, clientRequestId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieve a list of jobs streams identified by job name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<JobStream> ListByJobNext(this IJobStreamOperations operations, string nextPageLink, string clientRequestId = default(string))
        {
                return ((IJobStreamOperations)operations).ListByJobNextAsync(nextPageLink, clientRequestId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieve a list of jobs streams identified by job name.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<JobStream>> ListByJobNextAsync(this IJobStreamOperations operations, string nextPageLink, string clientRequestId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByJobNextWithHttpMessagesAsync(nextPageLink, clientRequestId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
