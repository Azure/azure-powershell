// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// The properties of the create certificate operation.
    /// </summary>
    public partial class CertificateCreateOrUpdateProperties
    {
        /// <summary>
        /// Initializes a new instance of the CertificateCreateOrUpdateProperties class.
        /// </summary>
        public CertificateCreateOrUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CertificateCreateOrUpdateProperties class.
        /// </summary>

        /// <param name="base64Value">Gets or sets the base64 encoded value of the certificate.
        /// </param>

        /// <param name="description">Gets or sets the description of the certificate.
        /// </param>

        /// <param name="thumbprint">Gets or sets the thumbprint of the certificate.
        /// </param>

        /// <param name="isExportable">Gets or sets the is exportable flag of the certificate.
        /// </param>
        public CertificateCreateOrUpdateProperties(string base64Value, string description = default(string), string thumbprint = default(string), bool isExportable = default(bool))

        {
            this.Base64Value = base64Value;
            this.Description = description;
            this.Thumbprint = thumbprint;
            this.IsExportable = isExportable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the base64 encoded value of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "base64Value")]
        public string Base64Value {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the description of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the thumbprint of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "thumbprint")]
        public string Thumbprint {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the is exportable flag of the certificate.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isExportable")]
        public bool IsExportable {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Base64Value == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Base64Value");
            }



        }
    }
}