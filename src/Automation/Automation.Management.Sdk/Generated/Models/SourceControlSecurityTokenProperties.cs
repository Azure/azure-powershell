// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    public partial class SourceControlSecurityTokenProperties
    {
        /// <summary>
        /// Initializes a new instance of the SourceControlSecurityTokenProperties class.
        /// </summary>
        public SourceControlSecurityTokenProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SourceControlSecurityTokenProperties class.
        /// </summary>

        /// <param name="accessToken">The access token.
        /// </param>

        /// <param name="refreshToken">The refresh token.
        /// </param>

        /// <param name="tokenType">The token type. Must be either PersonalAccessToken or Oauth.
        /// Possible values include: &#39;PersonalAccessToken&#39;, &#39;Oauth&#39;</param>
        public SourceControlSecurityTokenProperties(string accessToken = default(string), string refreshToken = default(string), string tokenType = default(string))

        {
            this.AccessToken = accessToken;
            this.RefreshToken = refreshToken;
            this.TokenType = tokenType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the access token.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accessToken")]
        public string AccessToken {get; set; }

        /// <summary>
        /// Gets or sets the refresh token.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "refreshToken")]
        public string RefreshToken {get; set; }

        /// <summary>
        /// Gets or sets the token type. Must be either PersonalAccessToken or Oauth. Possible values include: &#39;PersonalAccessToken&#39;, &#39;Oauth&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tokenType")]
        public string TokenType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.AccessToken != null)
            {
                if (this.AccessToken.Length > 1024)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "AccessToken", 1024);
                }
            }
            if (this.RefreshToken != null)
            {
                if (this.RefreshToken.Length > 1024)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "RefreshToken", 1024);
                }
            }

        }
    }
}