// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Definition of Dsc Compilation job properties.
    /// </summary>
    public partial class DscCompilationJobProperties
    {
        /// <summary>
        /// Initializes a new instance of the DscCompilationJobProperties class.
        /// </summary>
        public DscCompilationJobProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DscCompilationJobProperties class.
        /// </summary>

        /// <param name="configuration">Gets or sets the configuration.
        /// </param>

        /// <param name="startedBy">Gets the compilation job started by.
        /// </param>

        /// <param name="jobId">Gets the id of the job.
        /// </param>

        /// <param name="creationTime">Gets the creation time of the job.
        /// </param>

        /// <param name="provisioningState">The current provisioning state of the job.
        /// Possible values include: &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Suspended&#39;, &#39;Processing&#39;</param>

        /// <param name="runOn">Gets or sets the runOn which specifies the group name where the job is to
        /// be executed.
        /// </param>

        /// <param name="status">Gets or sets the status of the job.
        /// Possible values include: &#39;New&#39;, &#39;Activating&#39;, &#39;Running&#39;, &#39;Completed&#39;,
        /// &#39;Failed&#39;, &#39;Stopped&#39;, &#39;Blocked&#39;, &#39;Suspended&#39;, &#39;Disconnected&#39;, &#39;Suspending&#39;,
        /// &#39;Stopping&#39;, &#39;Resuming&#39;, &#39;Removing&#39;</param>

        /// <param name="statusDetails">Gets or sets the status details of the job.
        /// </param>

        /// <param name="startTime">Gets the start time of the job.
        /// </param>

        /// <param name="endTime">Gets the end time of the job.
        /// </param>

        /// <param name="exception">Gets the exception of the job.
        /// </param>

        /// <param name="lastModifiedTime">Gets the last modified time of the job.
        /// </param>

        /// <param name="lastStatusModifiedTime">Gets the last status modified time of the job.
        /// </param>

        /// <param name="parameters">Gets or sets the parameters of the job.
        /// </param>
        public DscCompilationJobProperties(DscConfigurationAssociationProperty configuration = default(DscConfigurationAssociationProperty), string startedBy = default(string), System.Guid jobId = default(System.Guid), System.DateTimeOffset creationTime = default(System.DateTimeOffset), string provisioningState = default(string), string runOn = default(string), string status = default(string), string statusDetails = default(string), System.DateTimeOffset? startTime = default(System.DateTimeOffset?), System.DateTimeOffset? endTime = default(System.DateTimeOffset?), string exception = default(string), System.DateTimeOffset lastModifiedTime = default(System.DateTimeOffset), System.DateTimeOffset? lastStatusModifiedTime = default(System.DateTimeOffset?), System.Collections.Generic.IDictionary<string, string> parameters = default(System.Collections.Generic.IDictionary<string, string>))

        {
            this.Configuration = configuration;
            this.StartedBy = startedBy;
            this.JobId = jobId;
            this.CreationTime = creationTime;
            this.ProvisioningState = provisioningState;
            this.RunOn = runOn;
            this.Status = status;
            this.StatusDetails = statusDetails;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Exception = exception;
            this.LastModifiedTime = lastModifiedTime;
            this.LastStatusModifiedTime = lastStatusModifiedTime;
            this.Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "configuration")]
        public DscConfigurationAssociationProperty Configuration {get; set; }

        /// <summary>
        /// Gets gets the compilation job started by.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startedBy")]
        public string StartedBy {get; private set; }

        /// <summary>
        /// Gets gets the id of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobId")]
        public System.Guid JobId {get; private set; }

        /// <summary>
        /// Gets gets the creation time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTime")]
        public System.DateTimeOffset CreationTime {get; private set; }

        /// <summary>
        /// Gets or sets the current provisioning state of the job. Possible values include: &#39;Failed&#39;, &#39;Succeeded&#39;, &#39;Suspended&#39;, &#39;Processing&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the runOn which specifies the group name where
        /// the job is to be executed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "runOn")]
        public string RunOn {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the status of the job. Possible values include: &#39;New&#39;, &#39;Activating&#39;, &#39;Running&#39;, &#39;Completed&#39;, &#39;Failed&#39;, &#39;Stopped&#39;, &#39;Blocked&#39;, &#39;Suspended&#39;, &#39;Disconnected&#39;, &#39;Suspending&#39;, &#39;Stopping&#39;, &#39;Resuming&#39;, &#39;Removing&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the status details of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "statusDetails")]
        public string StatusDetails {get; set; }

        /// <summary>
        /// Gets gets the start time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTimeOffset? StartTime {get; private set; }

        /// <summary>
        /// Gets gets the end time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTimeOffset? EndTime {get; private set; }

        /// <summary>
        /// Gets gets the exception of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exception")]
        public string Exception {get; private set; }

        /// <summary>
        /// Gets gets the last modified time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset LastModifiedTime {get; private set; }

        /// <summary>
        /// Gets gets the last status modified time of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastStatusModifiedTime")]
        public System.DateTimeOffset? LastStatusModifiedTime {get; private set; }

        /// <summary>
        /// Gets or sets gets or sets the parameters of the job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IDictionary<string, string> Parameters {get; set; }
    }
}