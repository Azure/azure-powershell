// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Update specific properties of the software update configuration.
    /// </summary>
    public partial class UpdateConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the UpdateConfiguration class.
        /// </summary>
        public UpdateConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpdateConfiguration class.
        /// </summary>

        /// <param name="operatingSystem">operating system of target machines
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;</param>

        /// <param name="windows">Windows specific update configuration.
        /// </param>

        /// <param name="linux">Linux specific update configuration.
        /// </param>

        /// <param name="duration">Maximum time allowed for the software update configuration run. Duration
        /// needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601
        /// </param>

        /// <param name="azureVirtualMachines">List of azure resource Ids for azure virtual machines targeted by the
        /// software update configuration.
        /// </param>

        /// <param name="nonAzureComputerNames">List of names of non-azure machines targeted by the software update
        /// configuration.
        /// </param>

        /// <param name="targets">Group targets for the software update configuration.
        /// </param>
        public UpdateConfiguration(OperatingSystemType operatingSystem, WindowsProperties windows = default(WindowsProperties), LinuxProperties linux = default(LinuxProperties), System.TimeSpan? duration = default(System.TimeSpan?), System.Collections.Generic.IList<string> azureVirtualMachines = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> nonAzureComputerNames = default(System.Collections.Generic.IList<string>), TargetProperties targets = default(TargetProperties))

        {
            this.OperatingSystem = operatingSystem;
            this.Windows = windows;
            this.Linux = linux;
            this.Duration = duration;
            this.AzureVirtualMachines = azureVirtualMachines;
            this.NonAzureComputerNames = nonAzureComputerNames;
            this.Targets = targets;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets operating system of target machines Possible values include: &#39;Windows&#39;, &#39;Linux&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operatingSystem")]
        public OperatingSystemType OperatingSystem {get; set; }

        /// <summary>
        /// Gets or sets windows specific update configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "windows")]
        public WindowsProperties Windows {get; set; }

        /// <summary>
        /// Gets or sets linux specific update configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "linux")]
        public LinuxProperties Linux {get; set; }

        /// <summary>
        /// Gets or sets maximum time allowed for the software update configuration
        /// run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per
        /// ISO8601
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "duration")]
        public System.TimeSpan? Duration {get; set; }

        /// <summary>
        /// Gets or sets list of azure resource Ids for azure virtual machines targeted
        /// by the software update configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "azureVirtualMachines")]
        public System.Collections.Generic.IList<string> AzureVirtualMachines {get; set; }

        /// <summary>
        /// Gets or sets list of names of non-azure machines targeted by the software
        /// update configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nonAzureComputerNames")]
        public System.Collections.Generic.IList<string> NonAzureComputerNames {get; set; }

        /// <summary>
        /// Gets or sets group targets for the software update configuration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targets")]
        public TargetProperties Targets {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {






        }
    }
}