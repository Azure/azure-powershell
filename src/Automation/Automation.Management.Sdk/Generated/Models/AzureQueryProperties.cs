// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Azure query for the update configuration.
    /// </summary>
    public partial class AzureQueryProperties
    {
        /// <summary>
        /// Initializes a new instance of the AzureQueryProperties class.
        /// </summary>
        public AzureQueryProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureQueryProperties class.
        /// </summary>

        /// <param name="scope">List of Subscription or Resource Group ARM Ids.
        /// </param>

        /// <param name="locations">List of locations to scope the query to.
        /// </param>

        /// <param name="tagSettings">Tag settings for the VM.
        /// </param>
        public AzureQueryProperties(System.Collections.Generic.IList<string> scope = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> locations = default(System.Collections.Generic.IList<string>), TagSettingsProperties tagSettings = default(TagSettingsProperties))

        {
            this.Scope = scope;
            this.Locations = locations;
            this.TagSettings = tagSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of Subscription or Resource Group ARM Ids.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scope")]
        public System.Collections.Generic.IList<string> Scope {get; set; }

        /// <summary>
        /// Gets or sets list of locations to scope the query to.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<string> Locations {get; set; }

        /// <summary>
        /// Gets or sets tag settings for the VM.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tagSettings")]
        public TagSettingsProperties TagSettings {get; set; }
    }
}