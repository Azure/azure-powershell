// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Definition of the statistic.
    /// </summary>
    public partial class Statistics
    {
        /// <summary>
        /// Initializes a new instance of the Statistics class.
        /// </summary>
        public Statistics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Statistics class.
        /// </summary>

        /// <param name="counterProperty">Gets the property value of the statistic.
        /// </param>

        /// <param name="counterValue">Gets the value of the statistic.
        /// </param>

        /// <param name="startTime">Gets the startTime of the statistic.
        /// </param>

        /// <param name="endTime">Gets the endTime of the statistic.
        /// </param>

        /// <param name="id">Gets the id.
        /// </param>
        public Statistics(string counterProperty = default(string), long? counterValue = default(long?), System.DateTimeOffset startTime = default(System.DateTimeOffset), System.DateTimeOffset? endTime = default(System.DateTimeOffset?), string id = default(string))

        {
            this.CounterProperty = counterProperty;
            this.CounterValue = counterValue;
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets gets the property value of the statistic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "counterProperty")]
        public string CounterProperty {get; private set; }

        /// <summary>
        /// Gets gets the value of the statistic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "counterValue")]
        public long? CounterValue {get; private set; }

        /// <summary>
        /// Gets gets the startTime of the statistic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTimeOffset StartTime {get; private set; }

        /// <summary>
        /// Gets gets the endTime of the statistic.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endTime")]
        public System.DateTimeOffset? EndTime {get; private set; }

        /// <summary>
        /// Gets gets the id.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }
    }
}