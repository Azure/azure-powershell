// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Automation.Models
{
    using System.Linq;

    /// <summary>
    /// Definition of schedule parameters.
    /// </summary>
    public partial class ScheduleProperties
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleProperties class.
        /// </summary>
        public ScheduleProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduleProperties class.
        /// </summary>

        /// <param name="startTime">Gets or sets the start time of the schedule.
        /// </param>

        /// <param name="startTimeOffsetMinutes">Gets the start time&#39;s offset in minutes.
        /// </param>

        /// <param name="expiryTime">Gets or sets the end time of the schedule.
        /// </param>

        /// <param name="expiryTimeOffsetMinutes">Gets or sets the expiry time&#39;s offset in minutes.
        /// </param>

        /// <param name="isEnabled">Gets or sets a value indicating whether this schedule is enabled.
        /// </param>

        /// <param name="nextRun">Gets or sets the next run time of the schedule.
        /// </param>

        /// <param name="nextRunOffsetMinutes">Gets or sets the next run time&#39;s offset in minutes.
        /// </param>

        /// <param name="interval">Gets or sets the interval of the schedule.
        /// </param>

        /// <param name="frequency">Gets or sets the frequency of the schedule.
        /// Possible values include: &#39;OneTime&#39;, &#39;Day&#39;, &#39;Hour&#39;, &#39;Week&#39;, &#39;Month&#39;,
        /// &#39;Minute&#39;</param>

        /// <param name="timeZone">Gets or sets the time zone of the schedule.
        /// </param>

        /// <param name="advancedSchedule">Gets or sets the advanced schedule.
        /// </param>

        /// <param name="creationTime">Gets or sets the creation time.
        /// </param>

        /// <param name="lastModifiedTime">Gets or sets the last modified time.
        /// </param>

        /// <param name="description">Gets or sets the description.
        /// </param>
        public ScheduleProperties(System.DateTimeOffset startTime = default(System.DateTimeOffset), double startTimeOffsetMinutes = default(double), System.DateTimeOffset? expiryTime = default(System.DateTimeOffset?), double expiryTimeOffsetMinutes = default(double), bool? isEnabled = default(bool?), System.DateTimeOffset? nextRun = default(System.DateTimeOffset?), double nextRunOffsetMinutes = default(double), object interval = default(object), string frequency = default(string), string timeZone = default(string), AdvancedSchedule advancedSchedule = default(AdvancedSchedule), System.DateTimeOffset creationTime = default(System.DateTimeOffset), System.DateTimeOffset lastModifiedTime = default(System.DateTimeOffset), string description = default(string))

        {
            this.StartTime = startTime;
            this.StartTimeOffsetMinutes = startTimeOffsetMinutes;
            this.ExpiryTime = expiryTime;
            this.ExpiryTimeOffsetMinutes = expiryTimeOffsetMinutes;
            this.IsEnabled = isEnabled;
            this.NextRun = nextRun;
            this.NextRunOffsetMinutes = nextRunOffsetMinutes;
            this.Interval = interval;
            this.Frequency = frequency;
            this.TimeZone = timeZone;
            this.AdvancedSchedule = advancedSchedule;
            this.CreationTime = creationTime;
            this.LastModifiedTime = lastModifiedTime;
            this.Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the start time of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTime")]
        public System.DateTimeOffset StartTime {get; set; }

        /// <summary>
        /// Gets gets the start time&#39;s offset in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startTimeOffsetMinutes")]
        public double StartTimeOffsetMinutes {get; private set; }

        /// <summary>
        /// Gets or sets gets or sets the end time of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "expiryTime")]
        public System.DateTimeOffset? ExpiryTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the expiry time&#39;s offset in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "expiryTimeOffsetMinutes")]
        public double ExpiryTimeOffsetMinutes {get; set; }

        /// <summary>
        /// Gets or sets gets or sets a value indicating whether this schedule is
        /// enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the next run time of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextRun")]
        public System.DateTimeOffset? NextRun {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the next run time&#39;s offset in minutes.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nextRunOffsetMinutes")]
        public double NextRunOffsetMinutes {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the interval of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "interval")]
        public object Interval {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the frequency of the schedule. Possible values include: &#39;OneTime&#39;, &#39;Day&#39;, &#39;Hour&#39;, &#39;Week&#39;, &#39;Month&#39;, &#39;Minute&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frequency")]
        public string Frequency {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the time zone of the schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeZone")]
        public string TimeZone {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the advanced schedule.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "advancedSchedule")]
        public AdvancedSchedule AdvancedSchedule {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the creation time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "creationTime")]
        public System.DateTimeOffset CreationTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the last modified time.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset LastModifiedTime {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; set; }
    }
}