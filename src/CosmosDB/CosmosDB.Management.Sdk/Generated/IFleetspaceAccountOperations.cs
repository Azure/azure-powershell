// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// FleetspaceAccountOperations operations.
    /// </summary>
    public partial interface IFleetspaceAccountOperations
    {
        /// <summary>
        /// Lists all the fleetspaces accounts  under a fleetspace.
        /// </summary>
        /// <remarks>
        /// Lists all the fleetspaces accounts  under a fleetspace.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<FleetspaceAccountResource>>> ListWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB fleetspace account
        /// under a fleetspace
        /// </summary>
        /// <remarks>
        /// Retrieves the properties of an existing Azure Cosmos DB fleetspace account
        /// under a fleetspace
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='fleetspaceAccountName'>
        /// Cosmos DB fleetspace account name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FleetspaceAccountResource>> GetWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, string fleetspaceAccountName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates an Azure Cosmos DB fleetspace account under a fleetspace.
        /// </summary>
        /// <remarks>
        /// Creates an Azure Cosmos DB fleetspace account under a fleetspace.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='fleetspaceAccountName'>
        /// Cosmos DB fleetspace account name.
        /// </param>
        /// <param name='body'>
        /// The parameters to provide for the current fleetspace account.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FleetspaceAccountResource>> CreateWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, string fleetspaceAccountName, FleetspaceAccountResource body, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
        /// </summary>
        /// <remarks>
        /// Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='fleetspaceAccountName'>
        /// Cosmos DB fleetspace account name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<FleetspaceAccountDeleteHeaders>> DeleteWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, string fleetspaceAccountName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Creates an Azure Cosmos DB fleetspace account under a fleetspace.
        /// </summary>
        /// <remarks>
        /// Creates an Azure Cosmos DB fleetspace account under a fleetspace.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='fleetspaceAccountName'>
        /// Cosmos DB fleetspace account name.
        /// </param>
        /// <param name='body'>
        /// The parameters to provide for the current fleetspace account.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<FleetspaceAccountResource>> BeginCreateWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, string fleetspaceAccountName, FleetspaceAccountResource body, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
        /// </summary>
        /// <remarks>
        /// Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetspaceName'>
        /// Cosmos DB fleetspace name. Needs to be unique under a fleet.
        /// </param>
        /// <param name='fleetspaceAccountName'>
        /// Cosmos DB fleetspace account name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationHeaderResponse<FleetspaceAccountDeleteHeaders>> BeginDeleteWithHttpMessagesAsync(string resourceGroupName, string fleetName, string fleetspaceName, string fleetspaceAccountName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Lists all the fleetspaces accounts  under a fleetspace.
        /// </summary>
        /// <remarks>
        /// Lists all the fleetspaces accounts  under a fleetspace.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<FleetspaceAccountResource>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}