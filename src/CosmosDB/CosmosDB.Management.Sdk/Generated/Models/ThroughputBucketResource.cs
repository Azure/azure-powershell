// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Cosmos DB throughput bucket object
    /// </summary>
    public partial class ThroughputBucketResource
    {
        /// <summary>
        /// Initializes a new instance of the ThroughputBucketResource class.
        /// </summary>
        public ThroughputBucketResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ThroughputBucketResource class.
        /// </summary>

        /// <param name="id">Represents the throughput bucket id
        /// </param>

        /// <param name="maxThroughputPercentage">Represents maximum percentage throughput that can be used by the bucket
        /// </param>
        public ThroughputBucketResource(int id, int maxThroughputPercentage)

        {
            this.Id = id;
            this.MaxThroughputPercentage = maxThroughputPercentage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets represents the throughput bucket id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public int Id {get; set; }

        /// <summary>
        /// Gets or sets represents maximum percentage throughput that can be used by
        /// the bucket
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maxThroughputPercentage")]
        public int MaxThroughputPercentage {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}