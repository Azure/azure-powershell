// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The indexes for the path.
    /// </summary>
    public partial class Indexes
    {
        /// <summary>
        /// Initializes a new instance of the Indexes class.
        /// </summary>
        public Indexes()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Indexes class.
        /// </summary>

        /// <param name="dataType">The datatype for which the indexing behavior is applied to.
        /// Possible values include: &#39;String&#39;, &#39;Number&#39;, &#39;Point&#39;, &#39;Polygon&#39;,
        /// &#39;LineString&#39;, &#39;MultiPolygon&#39;</param>

        /// <param name="precision">The precision of the index. -1 is maximum precision.
        /// </param>

        /// <param name="kind">Indicates the type of index.
        /// Possible values include: &#39;Hash&#39;, &#39;Range&#39;, &#39;Spatial&#39;</param>
        public Indexes(string dataType = default(string), int? precision = default(int?), string kind = default(string))

        {
            this.DataType = dataType;
            this.Precision = precision;
            this.Kind = kind;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the datatype for which the indexing behavior is applied to. Possible values include: &#39;String&#39;, &#39;Number&#39;, &#39;Point&#39;, &#39;Polygon&#39;, &#39;LineString&#39;, &#39;MultiPolygon&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataType")]
        public string DataType {get; set; }

        /// <summary>
        /// Gets or sets the precision of the index. -1 is maximum precision.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "precision")]
        public int? Precision {get; set; }

        /// <summary>
        /// Gets or sets indicates the type of index. Possible values include: &#39;Hash&#39;, &#39;Range&#39;, &#39;Spatial&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; set; }
    }
}