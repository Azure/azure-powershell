// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The transition state information related capacity mode change with update
    /// request.
    /// </summary>
    public partial class CapacityModeChangeTransitionState
    {
        /// <summary>
        /// Initializes a new instance of the CapacityModeChangeTransitionState class.
        /// </summary>
        public CapacityModeChangeTransitionState()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CapacityModeChangeTransitionState class.
        /// </summary>

        /// <param name="capacityModeTransitionStatus">The transition status of capacity mode.
        /// Possible values include: &#39;Invalid&#39;, &#39;Initialized&#39;, &#39;InProgress&#39;,
        /// &#39;Completed&#39;, &#39;Failed&#39;</param>

        /// <param name="currentCapacityMode">Indicates the current capacity mode of the account.
        /// Possible values include: &#39;None&#39;, &#39;Provisioned&#39;, &#39;Serverless&#39;</param>

        /// <param name="previousCapacityMode">Indicates the previous capacity mode of the account before successful
        /// transition.
        /// Possible values include: &#39;None&#39;, &#39;Provisioned&#39;, &#39;Serverless&#39;</param>

        /// <param name="capacityModeTransitionBeginTimestamp">Begin time in UTC of the capacity mode change.
        /// </param>

        /// <param name="capacityModeTransitionEndTimestamp">End time in UTC of the capacity mode change.
        /// </param>

        /// <param name="capacityModeLastSuccessfulTransitionEndTimestamp">End time in UTC of the last successful capacity mode change.
        /// </param>
        public CapacityModeChangeTransitionState(string capacityModeTransitionStatus = default(string), string currentCapacityMode = default(string), string previousCapacityMode = default(string), System.DateTime? capacityModeTransitionBeginTimestamp = default(System.DateTime?), System.DateTime? capacityModeTransitionEndTimestamp = default(System.DateTime?), System.DateTime? capacityModeLastSuccessfulTransitionEndTimestamp = default(System.DateTime?))

        {
            this.CapacityModeTransitionStatus = capacityModeTransitionStatus;
            this.CurrentCapacityMode = currentCapacityMode;
            this.PreviousCapacityMode = previousCapacityMode;
            this.CapacityModeTransitionBeginTimestamp = capacityModeTransitionBeginTimestamp;
            this.CapacityModeTransitionEndTimestamp = capacityModeTransitionEndTimestamp;
            this.CapacityModeLastSuccessfulTransitionEndTimestamp = capacityModeLastSuccessfulTransitionEndTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the transition status of capacity mode. Possible values include: &#39;Invalid&#39;, &#39;Initialized&#39;, &#39;InProgress&#39;, &#39;Completed&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityModeTransitionStatus")]
        public string CapacityModeTransitionStatus {get; set; }

        /// <summary>
        /// Gets or sets indicates the current capacity mode of the account. Possible values include: &#39;None&#39;, &#39;Provisioned&#39;, &#39;Serverless&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "currentCapacityMode")]
        public string CurrentCapacityMode {get; set; }

        /// <summary>
        /// Gets or sets indicates the previous capacity mode of the account before
        /// successful transition. Possible values include: &#39;None&#39;, &#39;Provisioned&#39;, &#39;Serverless&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "previousCapacityMode")]
        public string PreviousCapacityMode {get; set; }

        /// <summary>
        /// Gets begin time in UTC of the capacity mode change.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityModeTransitionBeginTimestamp")]
        public System.DateTime? CapacityModeTransitionBeginTimestamp {get; private set; }

        /// <summary>
        /// Gets end time in UTC of the capacity mode change.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityModeTransitionEndTimestamp")]
        public System.DateTime? CapacityModeTransitionEndTimestamp {get; private set; }

        /// <summary>
        /// Gets end time in UTC of the last successful capacity mode change.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityModeLastSuccessfulTransitionEndTimestamp")]
        public System.DateTime? CapacityModeLastSuccessfulTransitionEndTimestamp {get; private set; }
    }
}