// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Properties in ServiceResourceCreateUpdateParameters.
    /// </summary>
    [Newtonsoft.Json.JsonObject("ServiceResourceCreateUpdateProperties")]
    public partial class ServiceResourceCreateUpdateProperties
    {
        /// <summary>
        /// Initializes a new instance of the ServiceResourceCreateUpdateProperties class.
        /// </summary>
        public ServiceResourceCreateUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceResourceCreateUpdateProperties class.
        /// </summary>

        /// <param name="instanceSize">Instance type for the service.
        /// Possible values include: &#39;Cosmos.D4s&#39;, &#39;Cosmos.D8s&#39;, &#39;Cosmos.D16s&#39;</param>

        /// <param name="instanceCount">Instance count for the service.
        /// </param>
        public ServiceResourceCreateUpdateProperties(string instanceSize = default(string), int? instanceCount = default(int?))

        {
            this.InstanceSize = instanceSize;
            this.InstanceCount = instanceCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets instance type for the service. Possible values include: &#39;Cosmos.D4s&#39;, &#39;Cosmos.D8s&#39;, &#39;Cosmos.D16s&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceSize")]
        public string InstanceSize {get; set; }

        /// <summary>
        /// Gets or sets instance count for the service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceCount")]
        public int? InstanceCount {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.InstanceCount != null)
            {
                if (this.InstanceCount < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.InclusiveMinimum, "InstanceCount", 0);
                }
            }
        }
    }
}