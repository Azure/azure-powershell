// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The definition of a metric.
    /// </summary>
    public partial class MetricDefinition
    {
        /// <summary>
        /// Initializes a new instance of the MetricDefinition class.
        /// </summary>
        public MetricDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MetricDefinition class.
        /// </summary>

        /// <param name="metricAvailabilities">The list of metric availabilities for the account.
        /// </param>

        /// <param name="primaryAggregationType">The primary aggregation type of the metric.
        /// Possible values include: &#39;None&#39;, &#39;Average&#39;, &#39;Total&#39;, &#39;Minimum&#39;, &#39;Maximum&#39;,
        /// &#39;Last&#39;</param>

        /// <param name="unit">The unit of the metric.
        /// Possible values include: &#39;Count&#39;, &#39;Bytes&#39;, &#39;Seconds&#39;, &#39;Percent&#39;,
        /// &#39;CountPerSecond&#39;, &#39;BytesPerSecond&#39;, &#39;Milliseconds&#39;</param>

        /// <param name="resourceUri">The resource uri of the database.
        /// </param>

        /// <param name="name">The name information for the metric.
        /// </param>
        public MetricDefinition(System.Collections.Generic.IList<MetricAvailability> metricAvailabilities = default(System.Collections.Generic.IList<MetricAvailability>), string primaryAggregationType = default(string), string unit = default(string), string resourceUri = default(string), MetricName name = default(MetricName))

        {
            this.MetricAvailabilities = metricAvailabilities;
            this.PrimaryAggregationType = primaryAggregationType;
            this.Unit = unit;
            this.ResourceUri = resourceUri;
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the list of metric availabilities for the account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "metricAvailabilities")]
        public System.Collections.Generic.IList<MetricAvailability> MetricAvailabilities {get; private set; }

        /// <summary>
        /// Gets the primary aggregation type of the metric. Possible values include: &#39;None&#39;, &#39;Average&#39;, &#39;Total&#39;, &#39;Minimum&#39;, &#39;Maximum&#39;, &#39;Last&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "primaryAggregationType")]
        public string PrimaryAggregationType {get; private set; }

        /// <summary>
        /// Gets the unit of the metric. Possible values include: &#39;Count&#39;, &#39;Bytes&#39;, &#39;Seconds&#39;, &#39;Percent&#39;, &#39;CountPerSecond&#39;, &#39;BytesPerSecond&#39;, &#39;Milliseconds&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unit")]
        public string Unit {get; private set; }

        /// <summary>
        /// Gets the resource uri of the database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceUri")]
        public string ResourceUri {get; private set; }

        /// <summary>
        /// Gets the name information for the metric.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public MetricName Name {get; private set; }
    }
}