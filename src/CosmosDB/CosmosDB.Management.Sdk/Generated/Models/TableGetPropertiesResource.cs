// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    public partial class TableGetPropertiesResource
    {
        /// <summary>
        /// Initializes a new instance of the TableGetPropertiesResource class.
        /// </summary>
        public TableGetPropertiesResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TableGetPropertiesResource class.
        /// </summary>

        /// <param name="id">Name of the Cosmos DB table
        /// </param>

        /// <param name="restoreParameters">Parameters to indicate the information about the restore
        /// </param>

        /// <param name="createMode">Enum to indicate the mode of resource creation.
        /// Possible values include: &#39;Default&#39;, &#39;Restore&#39;</param>

        /// <param name="rid">A system generated property. A unique identifier.
        /// </param>

        /// <param name="ts">A system generated property that denotes the last updated timestamp of the
        /// resource.
        /// </param>

        /// <param name="etag">A system generated property representing the resource etag required for
        /// optimistic concurrency control.
        /// </param>
        public TableGetPropertiesResource(string id, ResourceRestoreParameters restoreParameters = default(ResourceRestoreParameters), string createMode = default(string), string rid = default(string), double? ts = default(double?), string etag = default(string))

        {
            this.Id = id;
            this.RestoreParameters = restoreParameters;
            this.CreateMode = createMode;
            this.Rid = rid;
            this.Ts = ts;
            this.Etag = etag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the Cosmos DB table
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; set; }

        /// <summary>
        /// Gets or sets parameters to indicate the information about the restore
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoreParameters")]
        public ResourceRestoreParameters RestoreParameters {get; set; }

        /// <summary>
        /// Gets or sets enum to indicate the mode of resource creation. Possible values include: &#39;Default&#39;, &#39;Restore&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createMode")]
        public string CreateMode {get; set; }

        /// <summary>
        /// Gets a system generated property. A unique identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "_rid")]
        public string Rid {get; private set; }

        /// <summary>
        /// Gets a system generated property that denotes the last updated timestamp of
        /// the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "_ts")]
        public double? Ts {get; private set; }

        /// <summary>
        /// Gets a system generated property representing the resource etag required
        /// for optimistic concurrency control.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "_etag")]
        public string Etag {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Id == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Id");
            }





        }
    }
}