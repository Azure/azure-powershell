// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.CosmosDB
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for FleetAnalyticsOperations
    /// </summary>
    public static partial class FleetAnalyticsOperationsExtensions
    {
        /// <summary>
        /// Lists all the FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<FleetAnalyticsResource> List(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName)
        {
                return ((IFleetAnalyticsOperations)operations).ListAsync(resourceGroupName, fleetName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<FleetAnalyticsResource>> ListAsync(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, fleetName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics
        /// under a fleet
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        public static FleetAnalyticsResource Get(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName)
        {
                return ((IFleetAnalyticsOperations)operations).GetAsync(resourceGroupName, fleetName, fleetAnalyticsName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics
        /// under a fleet
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<FleetAnalyticsResource> GetAsync(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, fleetName, fleetAnalyticsName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates an Azure Cosmos DB FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        public static FleetAnalyticsResource Create(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName, FleetAnalyticsResource body)
        {
                return ((IFleetAnalyticsOperations)operations).CreateAsync(resourceGroupName, fleetName, fleetAnalyticsName, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates an Azure Cosmos DB FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<FleetAnalyticsResource> CreateAsync(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName, FleetAnalyticsResource body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, fleetName, fleetAnalyticsName, body, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes an existing Azure Cosmos DB FleetAnalytics.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        public static FleetAnalyticsDeleteHeaders Delete(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName)
        {
                return ((IFleetAnalyticsOperations)operations).DeleteAsync(resourceGroupName, fleetName, fleetAnalyticsName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes an existing Azure Cosmos DB FleetAnalytics.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<FleetAnalyticsDeleteHeaders> DeleteAsync(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, fleetName, fleetAnalyticsName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Headers;
            }
        }
        /// <summary>
        /// Deletes an existing Azure Cosmos DB FleetAnalytics.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        public static FleetAnalyticsDeleteHeaders BeginDelete(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName)
        {
                return ((IFleetAnalyticsOperations)operations).BeginDeleteAsync(resourceGroupName, fleetName, fleetAnalyticsName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes an existing Azure Cosmos DB FleetAnalytics.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='fleetName'>
        /// Cosmos DB fleet name. Needs to be unique under a subscription.
        /// </param>
        /// <param name='fleetAnalyticsName'>
        /// Cosmos DB fleetAnalytics name.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<FleetAnalyticsDeleteHeaders> BeginDeleteAsync(this IFleetAnalyticsOperations operations, string resourceGroupName, string fleetName, string fleetAnalyticsName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, fleetName, fleetAnalyticsName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Headers;
            }
        }
        /// <summary>
        /// Lists all the FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<FleetAnalyticsResource> ListNext(this IFleetAnalyticsOperations operations, string nextPageLink)
        {
                return ((IFleetAnalyticsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the FleetAnalytics under a fleet.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<FleetAnalyticsResource>> ListNextAsync(this IFleetAnalyticsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
