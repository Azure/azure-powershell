// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// A CosmosDB Cassandra API data source/sink
    /// </summary>
    [Newtonsoft.Json.JsonObject("CosmosDBCassandra")]
    public partial class CosmosCassandraDataTransferDataSourceSink : BaseCosmosDataTransferDataSourceSink
    {
        /// <summary>
        /// Initializes a new instance of the CosmosCassandraDataTransferDataSourceSink class.
        /// </summary>
        public CosmosCassandraDataTransferDataSourceSink()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CosmosCassandraDataTransferDataSourceSink class.
        /// </summary>

        /// <param name="remoteAccountName">
        /// </param>

        /// <param name="keyspaceName">
        /// </param>

        /// <param name="tableName">
        /// </param>
        public CosmosCassandraDataTransferDataSourceSink(string keyspaceName, string tableName, string remoteAccountName = default(string))

        : base(remoteAccountName)
        {
            this.KeyspaceName = keyspaceName;
            this.TableName = tableName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "keyspaceName")]
        public string KeyspaceName {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tableName")]
        public string TableName {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.KeyspaceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "KeyspaceName");
            }
            if (this.TableName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "TableName");
            }


        }
    }
}