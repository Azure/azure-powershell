// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The resource of an Azure Cosmos DB Gremlin database event
    /// </summary>
    public partial class RestorableGremlinDatabasePropertiesResource
    {
        /// <summary>
        /// Initializes a new instance of the RestorableGremlinDatabasePropertiesResource class.
        /// </summary>
        public RestorableGremlinDatabasePropertiesResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RestorableGremlinDatabasePropertiesResource class.
        /// </summary>

        /// <param name="rid">A system generated property. A unique identifier.
        /// </param>

        /// <param name="operationType">The operation type of this database event.
        /// Possible values include: &#39;Create&#39;, &#39;Replace&#39;, &#39;Delete&#39;, &#39;Recreate&#39;,
        /// &#39;SystemOperation&#39;</param>

        /// <param name="canUndelete">A state of this database to identify if this database is restorable in same
        /// account.
        /// </param>

        /// <param name="canUndeleteReason">The reason why this database can not be restored in same account.
        /// </param>

        /// <param name="eventTimestamp">The time when this database event happened.
        /// </param>

        /// <param name="ownerId">The name of this Gremlin database.
        /// </param>

        /// <param name="ownerResourceId">The resource ID of this Gremlin database.
        /// </param>
        public RestorableGremlinDatabasePropertiesResource(string rid = default(string), string operationType = default(string), string canUndelete = default(string), string canUndeleteReason = default(string), string eventTimestamp = default(string), string ownerId = default(string), string ownerResourceId = default(string))

        {
            this.Rid = rid;
            this.OperationType = operationType;
            this.CanUndelete = canUndelete;
            this.CanUndeleteReason = canUndeleteReason;
            this.EventTimestamp = eventTimestamp;
            this.OwnerId = ownerId;
            this.OwnerResourceId = ownerResourceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets a system generated property. A unique identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "_rid")]
        public string Rid {get; private set; }

        /// <summary>
        /// Gets the operation type of this database event. Possible values include: &#39;Create&#39;, &#39;Replace&#39;, &#39;Delete&#39;, &#39;Recreate&#39;, &#39;SystemOperation&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "operationType")]
        public string OperationType {get; private set; }

        /// <summary>
        /// Gets a state of this database to identify if this database is restorable in
        /// same account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "canUndelete")]
        public string CanUndelete {get; private set; }

        /// <summary>
        /// Gets the reason why this database can not be restored in same account.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "canUndeleteReason")]
        public string CanUndeleteReason {get; private set; }

        /// <summary>
        /// Gets the time when this database event happened.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eventTimestamp")]
        public string EventTimestamp {get; private set; }

        /// <summary>
        /// Gets the name of this Gremlin database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ownerId")]
        public string OwnerId {get; private set; }

        /// <summary>
        /// Gets the resource ID of this Gremlin database.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ownerResourceId")]
        public string OwnerResourceId {get; private set; }
    }
}