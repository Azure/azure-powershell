// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Materialized View definition for the container.
    /// </summary>
    public partial class MaterializedViewDefinition
    {
        /// <summary>
        /// Initializes a new instance of the MaterializedViewDefinition class.
        /// </summary>
        public MaterializedViewDefinition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MaterializedViewDefinition class.
        /// </summary>

        /// <param name="sourceCollectionRid">An unique identifier for the source collection. This is a system generated
        /// property.
        /// </param>

        /// <param name="sourceCollectionId">The name of the source container on which the Materialized View will be
        /// created.
        /// </param>

        /// <param name="definition">The definition should be an SQL query which would be used to fetch data
        /// from the source container to populate into the Materialized View container.
        /// </param>
        public MaterializedViewDefinition(string sourceCollectionId, string definition, string sourceCollectionRid = default(string))

        {
            this.SourceCollectionRid = sourceCollectionRid;
            this.SourceCollectionId = sourceCollectionId;
            this.Definition = definition;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets an unique identifier for the source collection. This is a system
        /// generated property.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceCollectionRid")]
        public string SourceCollectionRid {get; private set; }

        /// <summary>
        /// Gets or sets the name of the source container on which the Materialized
        /// View will be created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceCollectionId")]
        public string SourceCollectionId {get; set; }

        /// <summary>
        /// Gets or sets the definition should be an SQL query which would be used to
        /// fetch data from the source container to populate into the Materialized View
        /// container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "definition")]
        public string Definition {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.SourceCollectionId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SourceCollectionId");
            }
            if (this.Definition == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Definition");
            }



        }
    }
}