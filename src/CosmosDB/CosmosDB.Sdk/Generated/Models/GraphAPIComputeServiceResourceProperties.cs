// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for GraphAPIComputeServiceResource.
    /// </summary>
    [Newtonsoft.Json.JsonObject("GraphAPICompute")]
    public partial class GraphAPIComputeServiceResourceProperties : ServiceResourceProperties
    {
        /// <summary>
        /// Initializes a new instance of the GraphAPIComputeServiceResourceProperties class.
        /// </summary>
        public GraphAPIComputeServiceResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GraphAPIComputeServiceResourceProperties class.
        /// </summary>

        /// <param name="additionalProperties">Services response resource.
        /// </param>

        /// <param name="creationTime">Time of the last state change (ISO-8601 format).
        /// </param>

        /// <param name="instanceSize">Instance type for the service.
        /// Possible values include: 'Cosmos.D4s', 'Cosmos.D8s', 'Cosmos.D16s'</param>

        /// <param name="instanceCount">Instance count for the service.
        /// </param>

        /// <param name="status">Describes the status of a service.
        /// Possible values include: 'Creating', 'Running', 'Updating', 'Deleting',
        /// 'Error', 'Stopped'</param>

        /// <param name="graphApiComputeEndpoint">GraphAPICompute endpoint for the service.
        /// </param>

        /// <param name="locations">An array that contains all of the locations for the service.
        /// </param>
        public GraphAPIComputeServiceResourceProperties(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), System.DateTime? creationTime = default(System.DateTime?), string instanceSize = default(string), int? instanceCount = default(int?), string status = default(string), string graphApiComputeEndpoint = default(string), System.Collections.Generic.IList<GraphAPIComputeRegionalServiceResource> locations = default(System.Collections.Generic.IList<GraphAPIComputeRegionalServiceResource>))

        : base(additionalProperties, creationTime, instanceSize, instanceCount, status)
        {
            this.GraphApiComputeEndpoint = graphApiComputeEndpoint;
            this.Locations = locations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets graphAPICompute endpoint for the service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "graphApiComputeEndpoint")]
        public string GraphApiComputeEndpoint {get; set; }

        /// <summary>
        /// Gets an array that contains all of the locations for the service.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<GraphAPIComputeRegionalServiceResource> Locations {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();


        }
    }
}