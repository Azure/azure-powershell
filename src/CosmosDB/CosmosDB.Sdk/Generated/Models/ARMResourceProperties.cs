// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The core properties of ARM resources.
    /// </summary>
    public partial class ARMResourceProperties : Microsoft.Rest.Azure.IResource
    {
        /// <summary>
        /// Initializes a new instance of the ARMResourceProperties class.
        /// </summary>
        public ARMResourceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ARMResourceProperties class.
        /// </summary>

        /// <param name="id">The unique resource identifier of the ARM resource.
        /// </param>

        /// <param name="name">The name of the ARM resource.
        /// </param>

        /// <param name="type">The type of Azure resource.
        /// </param>

        /// <param name="location">The location of the resource group to which the resource belongs.
        /// </param>

        /// <param name="tags">Tags are a list of key-value pairs that describe the resource. These tags
        /// can be used in viewing and grouping this resource (across resource groups).
        /// A maximum of 15 tags can be provided for a resource. Each tag must have a
        /// key no greater than 128 characters and value no greater than 256
        /// characters. For example, the default experience for a template type is set
        /// with &#34;defaultExperience&#34;: &#34;Cassandra&#34;. Current &#34;defaultExperience&#34; values
        /// also include &#34;Table&#34;, &#34;Graph&#34;, &#34;DocumentDB&#34;, and &#34;MongoDB&#34;.
        /// </param>
        public ARMResourceProperties(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Location = location;
            this.Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the unique resource identifier of the ARM resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets the name of the ARM resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the type of Azure resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets the location of the resource group to which the resource
        /// belongs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; set; }

        /// <summary>
        /// Gets or sets tags are a list of key-value pairs that describe the resource.
        /// These tags can be used in viewing and grouping this resource (across
        /// resource groups). A maximum of 15 tags can be provided for a resource. Each
        /// tag must have a key no greater than 128 characters and value no greater
        /// than 256 characters. For example, the default experience for a template
        /// type is set with &#34;defaultExperience&#34;: &#34;Cassandra&#34;. Current
        /// &#34;defaultExperience&#34; values also include &#34;Table&#34;, &#34;Graph&#34;, &#34;DocumentDB&#34;, and
        /// &#34;MongoDB&#34;.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.IDictionary<string, string> Tags {get; set; }
    }
}