// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    public partial class ClientEncryptionPolicy : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("includedPaths");
            writer.WriteStartArray();
            foreach (var item in IncludedPaths)
            {
                writer.WriteObjectValue(item);
            }
            writer.WriteEndArray();
            if (Optional.IsDefined(PolicyFormatVersion))
            {
                writer.WritePropertyName("policyFormatVersion");
                writer.WriteNumberValue(PolicyFormatVersion.Value);
            }
            writer.WriteEndObject();
        }

        internal static ClientEncryptionPolicy DeserializeClientEncryptionPolicy(JsonElement element)
        {
            IList<ClientEncryptionIncludedPath> includedPaths = default;
            Optional<int> policyFormatVersion = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("includedPaths"))
                {
                    List<ClientEncryptionIncludedPath> array = new List<ClientEncryptionIncludedPath>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ClientEncryptionIncludedPath.DeserializeClientEncryptionIncludedPath(item));
                    }
                    includedPaths = array;
                    continue;
                }
                if (property.NameEquals("policyFormatVersion"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    policyFormatVersion = property.Value.GetInt32();
                    continue;
                }
            }
            return new ClientEncryptionPolicy(includedPaths, Optional.ToNullable(policyFormatVersion));
        }
    }
}
