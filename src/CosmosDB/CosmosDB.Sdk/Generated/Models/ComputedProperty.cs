// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// The definition of a computed property
    /// </summary>
    public partial class ComputedProperty
    {
        /// <summary>
        /// Initializes a new instance of the ComputedProperty class.
        /// </summary>
        public ComputedProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComputedProperty class.
        /// </summary>

        /// <param name="name">The name of a computed property, for example - &#34;cp_lowerName&#34;
        /// </param>

        /// <param name="query">The query that evaluates the value for computed property, for example -
        /// &#34;SELECT VALUE LOWER(c.name) FROM c&#34;
        /// </param>
        public ComputedProperty(string name = default(string), string query = default(string))

        {
            this.Name = name;
            this.Query = query;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the name of a computed property, for example - &#34;cp_lowerName&#34;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the query that evaluates the value for computed property, for
        /// example - &#34;SELECT VALUE LOWER(c.name) FROM c&#34;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "query")]
        public string Query {get; set; }
    }
}