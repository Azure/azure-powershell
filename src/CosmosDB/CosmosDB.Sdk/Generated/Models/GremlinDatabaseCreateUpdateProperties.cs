// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Properties to create and update Azure Cosmos DB Gremlin database.
    /// </summary>
    public partial class GremlinDatabaseCreateUpdateProperties
    {
        /// <summary>
        /// Initializes a new instance of the GremlinDatabaseCreateUpdateProperties class.
        /// </summary>
        public GremlinDatabaseCreateUpdateProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GremlinDatabaseCreateUpdateProperties class.
        /// </summary>

        /// <param name="resource">The standard JSON format of a Gremlin database
        /// </param>

        /// <param name="options">A key-value pair of options to be applied for the request. This corresponds
        /// to the headers sent with the request.
        /// </param>
        public GremlinDatabaseCreateUpdateProperties(GremlinDatabaseResource resource, CreateUpdateOptions options = default(CreateUpdateOptions))

        {
            this.Resource = resource;
            this.Options = options;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the standard JSON format of a Gremlin database
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resource")]
        public GremlinDatabaseResource Resource {get; set; }

        /// <summary>
        /// Gets or sets a key-value pair of options to be applied for the request.
        /// This corresponds to the headers sent with the request.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "options")]
        public CreateUpdateOptions Options {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Resource == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Resource");
            }
            if (this.Resource != null)
            {
                this.Resource.Validate();
            }

        }
    }
}