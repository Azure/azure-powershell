// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// A restorable backup of a Cassandra cluster.
    /// </summary>
    public partial class BackupResource
    {
        /// <summary>
        /// Initializes a new instance of the BackupResource class.
        /// </summary>
        public BackupResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackupResource class.
        /// </summary>

        /// <param name="backupId">The unique identifier of backup.
        /// </param>

        /// <param name="backupState">The current state of the backup.
        /// Possible values include: &#39;Initiated&#39;, &#39;InProgress&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;</param>

        /// <param name="backupStartTimestamp">The time at which the backup process begins.
        /// </param>

        /// <param name="backupStopTimestamp">The time at which the backup process ends.
        /// </param>

        /// <param name="backupExpiryTimestamp">The time at which the backup will expire.
        /// </param>
        public BackupResource(string backupId = default(string), string backupState = default(string), System.DateTime? backupStartTimestamp = default(System.DateTime?), System.DateTime? backupStopTimestamp = default(System.DateTime?), System.DateTime? backupExpiryTimestamp = default(System.DateTime?))

        {
            this.BackupId = backupId;
            this.BackupState = backupState;
            this.BackupStartTimestamp = backupStartTimestamp;
            this.BackupStopTimestamp = backupStopTimestamp;
            this.BackupExpiryTimestamp = backupExpiryTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the unique identifier of backup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupId")]
        public string BackupId {get; set; }

        /// <summary>
        /// Gets or sets the current state of the backup. Possible values include: &#39;Initiated&#39;, &#39;InProgress&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupState")]
        public string BackupState {get; set; }

        /// <summary>
        /// Gets or sets the time at which the backup process begins.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupStartTimestamp")]
        public System.DateTime? BackupStartTimestamp {get; set; }

        /// <summary>
        /// Gets or sets the time at which the backup process ends.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupStopTimestamp")]
        public System.DateTime? BackupStopTimestamp {get; set; }

        /// <summary>
        /// Gets or sets the time at which the backup will expire.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupExpiryTimestamp")]
        public System.DateTime? BackupExpiryTimestamp {get; set; }
    }
}