// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a managed Cassandra cluster public status.
    /// </summary>
    public partial class CassandraClusterPublicStatus
    {
        /// <summary>
        /// Initializes a new instance of the CassandraClusterPublicStatus class.
        /// </summary>
        public CassandraClusterPublicStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CassandraClusterPublicStatus class.
        /// </summary>

        /// <param name="eTag">
        /// </param>

        /// <param name="reaperStatus">
        /// </param>

        /// <param name="connectionErrors">List relevant information about any connection errors to the Datacenters.
        /// </param>

        /// <param name="errors">List relevant information about any errors about cluster, data center and
        /// connection error.
        /// </param>

        /// <param name="dataCenters">List of the status of each datacenter in this cluster.
        /// </param>
        public CassandraClusterPublicStatus(string eTag = default(string), ManagedCassandraReaperStatus reaperStatus = default(ManagedCassandraReaperStatus), System.Collections.Generic.IList<ConnectionError> connectionErrors = default(System.Collections.Generic.IList<ConnectionError>), System.Collections.Generic.IList<CassandraError> errors = default(System.Collections.Generic.IList<CassandraError>), System.Collections.Generic.IList<CassandraClusterPublicStatusDataCentersItem> dataCenters = default(System.Collections.Generic.IList<CassandraClusterPublicStatusDataCentersItem>))

        {
            this.ETag = eTag;
            this.ReaperStatus = reaperStatus;
            this.ConnectionErrors = connectionErrors;
            this.Errors = errors;
            this.DataCenters = dataCenters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "eTag")]
        public string ETag {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reaperStatus")]
        public ManagedCassandraReaperStatus ReaperStatus {get; set; }

        /// <summary>
        /// Gets or sets list relevant information about any connection errors to the
        /// Datacenters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionErrors")]
        public System.Collections.Generic.IList<ConnectionError> ConnectionErrors {get; set; }

        /// <summary>
        /// Gets or sets list relevant information about any errors about cluster, data
        /// center and connection error.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errors")]
        public System.Collections.Generic.IList<CassandraError> Errors {get; set; }

        /// <summary>
        /// Gets or sets list of the status of each datacenter in this cluster.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataCenters")]
        public System.Collections.Generic.IList<CassandraClusterPublicStatusDataCentersItem> DataCenters {get; set; }
    }
}