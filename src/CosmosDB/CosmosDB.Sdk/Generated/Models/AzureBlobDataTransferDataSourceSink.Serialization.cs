// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Microsoft.Azure.Management.CosmosDB.Models
{
    public partial class AzureBlobDataTransferDataSourceSink : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("containerName");
            writer.WriteStringValue(ContainerName);
            if (Optional.IsDefined(EndpointUri))
            {
                writer.WritePropertyName("endpointUrl");
                writer.WriteStringValue(EndpointUri);
            }
            writer.WritePropertyName("component");
            writer.WriteStringValue(Component.ToString());
            writer.WriteEndObject();
        }

        internal static AzureBlobDataTransferDataSourceSink DeserializeAzureBlobDataTransferDataSourceSink(JsonElement element)
        {
            string containerName = default;
            Optional<string> endpointUrl = default;
            DataTransferComponent component = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("containerName"))
                {
                    containerName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("endpointUrl"))
                {
                    endpointUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("component"))
                {
                    component = new DataTransferComponent(property.Value.GetString());
                    continue;
                }
            }
            return new AzureBlobDataTransferDataSourceSink(component, containerName, endpointUrl.Value);
        }
    }
}
