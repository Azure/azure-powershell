// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.CosmosDB
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for RestorableDatabaseAccountsOperations
    /// </summary>
    public static partial class RestorableDatabaseAccountsOperationsExtensions
    {
        /// <summary>
        /// Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region.  This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Cosmos DB region, with spaces between words and each word capitalized.
        /// </param>
        public static System.Collections.Generic.IEnumerable<RestorableDatabaseAccountGetResult> ListByLocation(this IRestorableDatabaseAccountsOperations operations, string location)
        {
                return ((IRestorableDatabaseAccountsOperations)operations).ListByLocationAsync(location).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region.  This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Cosmos DB region, with spaces between words and each word capitalized.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<RestorableDatabaseAccountGetResult>> ListByLocationAsync(this IRestorableDatabaseAccountsOperations operations, string location, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByLocationWithHttpMessagesAsync(location, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static System.Collections.Generic.IEnumerable<RestorableDatabaseAccountGetResult> List(this IRestorableDatabaseAccountsOperations operations)
        {
                return ((IRestorableDatabaseAccountsOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<RestorableDatabaseAccountGetResult>> ListAsync(this IRestorableDatabaseAccountsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB restorable database account.  This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Cosmos DB region, with spaces between words and each word capitalized.
        /// </param>
        /// <param name='instanceId'>
        /// The instanceId GUID of a restorable database account.
        /// </param>
        public static RestorableDatabaseAccountGetResult GetByLocation(this IRestorableDatabaseAccountsOperations operations, string location, string instanceId)
        {
                return ((IRestorableDatabaseAccountsOperations)operations).GetByLocationAsync(location, instanceId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves the properties of an existing Azure Cosmos DB restorable database account.  This call requires &#39;Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*&#39; permission.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Cosmos DB region, with spaces between words and each word capitalized.
        /// </param>
        /// <param name='instanceId'>
        /// The instanceId GUID of a restorable database account.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RestorableDatabaseAccountGetResult> GetByLocationAsync(this IRestorableDatabaseAccountsOperations operations, string location, string instanceId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByLocationWithHttpMessagesAsync(location, instanceId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
