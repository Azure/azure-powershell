
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for StorageDiscoveryScope.
.Description
Create an in-memory object for StorageDiscoveryScope.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.Models.StorageDiscoveryScope
.Link
https://learn.microsoft.com/powershell/module/Az.StorageDiscovery/new-azstoragediscoveryscopeobject
#>
function New-AzStorageDiscoveryScopeObject {
    [Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.ModelCmdletAttribute()]
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.Models.StorageDiscoveryScope')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(Mandatory, HelpMessage="Display name of the collection.")]
        [string]
        $DisplayName,
        [Parameter(Mandatory, HelpMessage="Resource types for the collection.")]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.PSArgumentCompleterAttribute("Microsoft.Storage/storageAccounts")]
        [string[]]
        $ResourceType,
        [Parameter(HelpMessage="Resource tags.")]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.Models.IStorageDiscoveryScopeTags]
        $Tag,
        [Parameter(HelpMessage="The storage account tags keys to filter.")]
        [string[]]
        $TagKeysOnly
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.StorageDiscovery.Models.StorageDiscoveryScope]::New()

        if ($PSBoundParameters.ContainsKey('DisplayName')) {
            $Object.DisplayName = $DisplayName
        }
        if ($PSBoundParameters.ContainsKey('ResourceType')) {
            $Object.ResourceType = $ResourceType
        }
        if ($PSBoundParameters.ContainsKey('Tag')) {
            $Object.Tag = $Tag
        }
        if ($PSBoundParameters.ContainsKey('TagKeysOnly')) {
            $Object.TagKeysOnly = $TagKeysOnly
        }
        return $Object
    }
}

