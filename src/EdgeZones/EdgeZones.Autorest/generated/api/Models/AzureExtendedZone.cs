// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.684)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Extensions;

    /// <summary>An AzureExtendedZone resource</summary>
    public partial class AzureExtendedZone :
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZone,
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneInternal,
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IProxyResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.ProxyResource();

        /// <summary>AzureExtendedZone displayName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).DisplayName = value ?? null; }

        /// <summary>AzureExtendedZone geography</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string Geography { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Geography; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Geography = value ?? null; }

        /// <summary>AzureExtendedZone geographyGroup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string GeographyGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).GeographyGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).GeographyGroup = value ?? null; }

        /// <summary>AzureExtendedZone homeLocation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string HomeLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).HomeLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).HomeLocation = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Id; }

        /// <summary>AzureExtendedZone latitude</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string Latitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Latitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Latitude = value ?? null; }

        /// <summary>AzureExtendedZone longitude</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string Longitude { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Longitude; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).Longitude = value ?? null; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Name; }

        /// <summary>Backing field for <see cref="Properties" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneProperties _properties;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneProperties Properties { get => (this._properties = this._properties ?? new Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.AzureExtendedZoneProperties()); set => this._properties = value; }

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).ProvisioningState; }

        /// <summary>AzureExtendedZone regionCategory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string RegionCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionCategory = value ?? null; }

        /// <summary>AzureExtendedZone regionType</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string RegionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionType = value ?? null; }

        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string RegionalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionalDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegionalDisplayName = value ?? null; }

        /// <summary>AzureExtendedZone registration approved or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inlined)]
        public string RegistrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegistrationState; }

        /// <summary>Internal Acessors for Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneProperties Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneInternal.Properties { get => (this._properties = this._properties ?? new Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.AzureExtendedZoneProperties()); set { {_properties = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).ProvisioningState = value; }

        /// <summary>Internal Acessors for RegistrationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneInternal.RegistrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegistrationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZonePropertiesInternal)Properties).RegistrationState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.ISystemData Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Type = value; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataCreatedByType = value ?? null; }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).SystemDataLastModifiedByType = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Origin(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="AzureExtendedZone" /> instance.</summary>
        public AzureExtendedZone()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// An AzureExtendedZone resource
    public partial interface IAzureExtendedZone :
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IProxyResource
    {
        /// <summary>AzureExtendedZone displayName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone displayName",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>AzureExtendedZone geography</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone geography",
        SerializedName = @"geography",
        PossibleTypes = new [] { typeof(string) })]
        string Geography { get; set; }
        /// <summary>AzureExtendedZone geographyGroup</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone geographyGroup",
        SerializedName = @"geographyGroup",
        PossibleTypes = new [] { typeof(string) })]
        string GeographyGroup { get; set; }
        /// <summary>AzureExtendedZone homeLocation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone homeLocation",
        SerializedName = @"homeLocation",
        PossibleTypes = new [] { typeof(string) })]
        string HomeLocation { get; set; }
        /// <summary>AzureExtendedZone latitude</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone latitude",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(string) })]
        string Latitude { get; set; }
        /// <summary>AzureExtendedZone longitude</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone longitude",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(string) })]
        string Longitude { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>AzureExtendedZone regionCategory</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone regionCategory",
        SerializedName = @"regionCategory",
        PossibleTypes = new [] { typeof(string) })]
        string RegionCategory { get; set; }
        /// <summary>AzureExtendedZone regionType</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone regionType",
        SerializedName = @"regionType",
        PossibleTypes = new [] { typeof(string) })]
        string RegionType { get; set; }
        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = false,
        Description = @"AzureExtendedZone regionalDisplayName",
        SerializedName = @"regionalDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionalDisplayName { get; set; }
        /// <summary>AzureExtendedZone registration approved or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"AzureExtendedZone registration approved or not",
        SerializedName = @"registrationState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PSArgumentCompleterAttribute("NotRegistered", "PendingRegister", "Registered", "PendingUnregister")]
        string RegistrationState { get;  }

    }
    /// An AzureExtendedZone resource
    internal partial interface IAzureExtendedZoneInternal :
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IProxyResourceInternal
    {
        /// <summary>AzureExtendedZone displayName</summary>
        string DisplayName { get; set; }
        /// <summary>AzureExtendedZone geography</summary>
        string Geography { get; set; }
        /// <summary>AzureExtendedZone geographyGroup</summary>
        string GeographyGroup { get; set; }
        /// <summary>AzureExtendedZone homeLocation</summary>
        string HomeLocation { get; set; }
        /// <summary>AzureExtendedZone latitude</summary>
        string Latitude { get; set; }
        /// <summary>AzureExtendedZone longitude</summary>
        string Longitude { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.Models.IAzureExtendedZoneProperties Properties { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>AzureExtendedZone regionCategory</summary>
        string RegionCategory { get; set; }
        /// <summary>AzureExtendedZone regionType</summary>
        string RegionType { get; set; }
        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        string RegionalDisplayName { get; set; }
        /// <summary>AzureExtendedZone registration approved or not</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.AzureExtendedZone.PSArgumentCompleterAttribute("NotRegistered", "PendingRegister", "Registered", "PendingUnregister")]
        string RegistrationState { get; set; }

    }
}