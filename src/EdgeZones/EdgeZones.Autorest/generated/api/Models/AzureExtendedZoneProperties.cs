// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.684)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>The properties of an AzureExtendedZone Resource</summary>
    public partial class AzureExtendedZoneProperties :
        Sample.API.Models.IAzureExtendedZoneProperties,
        Sample.API.Models.IAzureExtendedZonePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>AzureExtendedZone displayName</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Geography" /> property.</summary>
        private string _geography;

        /// <summary>AzureExtendedZone geography</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Geography { get => this._geography; set => this._geography = value; }

        /// <summary>Backing field for <see cref="GeographyGroup" /> property.</summary>
        private string _geographyGroup;

        /// <summary>AzureExtendedZone geographyGroup</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string GeographyGroup { get => this._geographyGroup; set => this._geographyGroup = value; }

        /// <summary>Backing field for <see cref="HomeLocation" /> property.</summary>
        private string _homeLocation;

        /// <summary>AzureExtendedZone homeLocation</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string HomeLocation { get => this._homeLocation; set => this._homeLocation = value; }

        /// <summary>Backing field for <see cref="Latitude" /> property.</summary>
        private string _latitude;

        /// <summary>AzureExtendedZone latitude</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Latitude { get => this._latitude; set => this._latitude = value; }

        /// <summary>Backing field for <see cref="Longitude" /> property.</summary>
        private string _longitude;

        /// <summary>AzureExtendedZone longitude</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string Longitude { get => this._longitude; set => this._longitude = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RegionCategory" /> property.</summary>
        private string _regionCategory;

        /// <summary>AzureExtendedZone regionCategory</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string RegionCategory { get => this._regionCategory; set => this._regionCategory = value; }

        /// <summary>Backing field for <see cref="RegionType" /> property.</summary>
        private string _regionType;

        /// <summary>AzureExtendedZone regionType</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string RegionType { get => this._regionType; set => this._regionType = value; }

        /// <summary>Backing field for <see cref="RegionalDisplayName" /> property.</summary>
        private string _regionalDisplayName;

        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string RegionalDisplayName { get => this._regionalDisplayName; set => this._regionalDisplayName = value; }

        /// <summary>Backing field for <see cref="RegistrationState" /> property.</summary>
        private string _registrationState;

        /// <summary>AzureExtendedZone registration approved or not</summary>
        [Sample.API.Origin(Sample.API.PropertyOrigin.Owned)]
        public string RegistrationState { get => this._registrationState; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Sample.API.Models.IAzureExtendedZonePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for RegistrationState</summary>
        string Sample.API.Models.IAzureExtendedZonePropertiesInternal.RegistrationState { get => this._registrationState; set { {_registrationState = value;} } }

        /// <summary>Creates an new <see cref="AzureExtendedZoneProperties" /> instance.</summary>
        public AzureExtendedZoneProperties()
        {

        }
    }
    /// The properties of an AzureExtendedZone Resource
    public partial interface IAzureExtendedZoneProperties :
        Sample.API.Runtime.IJsonSerializable
    {
        /// <summary>AzureExtendedZone displayName</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone displayName",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>AzureExtendedZone geography</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone geography",
        SerializedName = @"geography",
        PossibleTypes = new [] { typeof(string) })]
        string Geography { get; set; }
        /// <summary>AzureExtendedZone geographyGroup</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone geographyGroup",
        SerializedName = @"geographyGroup",
        PossibleTypes = new [] { typeof(string) })]
        string GeographyGroup { get; set; }
        /// <summary>AzureExtendedZone homeLocation</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone homeLocation",
        SerializedName = @"homeLocation",
        PossibleTypes = new [] { typeof(string) })]
        string HomeLocation { get; set; }
        /// <summary>AzureExtendedZone latitude</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone latitude",
        SerializedName = @"latitude",
        PossibleTypes = new [] { typeof(string) })]
        string Latitude { get; set; }
        /// <summary>AzureExtendedZone longitude</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone longitude",
        SerializedName = @"longitude",
        PossibleTypes = new [] { typeof(string) })]
        string Longitude { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get;  }
        /// <summary>AzureExtendedZone regionCategory</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone regionCategory",
        SerializedName = @"regionCategory",
        PossibleTypes = new [] { typeof(string) })]
        string RegionCategory { get; set; }
        /// <summary>AzureExtendedZone regionType</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone regionType",
        SerializedName = @"regionType",
        PossibleTypes = new [] { typeof(string) })]
        string RegionType { get; set; }
        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        [Sample.API.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"AzureExtendedZone regionalDisplayName",
        SerializedName = @"regionalDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string RegionalDisplayName { get; set; }
        /// <summary>AzureExtendedZone registration approved or not</summary>
        [Sample.API.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"AzureExtendedZone registration approved or not",
        SerializedName = @"registrationState",
        PossibleTypes = new [] { typeof(string) })]
        [global::Sample.API.PSArgumentCompleterAttribute("NotRegistered", "PendingRegister", "Registered", "PendingUnregister")]
        string RegistrationState { get;  }

    }
    /// The properties of an AzureExtendedZone Resource
    internal partial interface IAzureExtendedZonePropertiesInternal

    {
        /// <summary>AzureExtendedZone displayName</summary>
        string DisplayName { get; set; }
        /// <summary>AzureExtendedZone geography</summary>
        string Geography { get; set; }
        /// <summary>AzureExtendedZone geographyGroup</summary>
        string GeographyGroup { get; set; }
        /// <summary>AzureExtendedZone homeLocation</summary>
        string HomeLocation { get; set; }
        /// <summary>AzureExtendedZone latitude</summary>
        string Latitude { get; set; }
        /// <summary>AzureExtendedZone longitude</summary>
        string Longitude { get; set; }
        /// <summary>The status of the last operation.</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("Succeeded", "Failed", "Canceled", "Provisioning", "Updating", "Deleting", "Accepted")]
        string ProvisioningState { get; set; }
        /// <summary>AzureExtendedZone regionCategory</summary>
        string RegionCategory { get; set; }
        /// <summary>AzureExtendedZone regionType</summary>
        string RegionType { get; set; }
        /// <summary>AzureExtendedZone regionalDisplayName</summary>
        string RegionalDisplayName { get; set; }
        /// <summary>AzureExtendedZone registration approved or not</summary>
        [global::Sample.API.PSArgumentCompleterAttribute("NotRegistered", "PendingRegister", "Registered", "PendingUnregister")]
        string RegistrationState { get; set; }

    }
}