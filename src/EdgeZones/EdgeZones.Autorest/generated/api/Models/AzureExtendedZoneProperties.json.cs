// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.2, generator: @autorest/powershell@4.0.684)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Sample.API.Models
{
    using static Sample.API.Runtime.Extensions;

    /// <summary>The properties of an AzureExtendedZone Resource</summary>
    public partial class AzureExtendedZoneProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Sample.API.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Sample.API.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Sample.API.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Sample.API.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Sample.API.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Sample.API.Runtime.Json.JsonObject into a new instance of <see cref="AzureExtendedZoneProperties" />.
        /// </summary>
        /// <param name="json">A Sample.API.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AzureExtendedZoneProperties(Sample.API.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_provisioningState = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)_provisioningState;}
            {_registrationState = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("registrationState"), out var __jsonRegistrationState) ? (string)__jsonRegistrationState : (string)_registrationState;}
            {_displayName = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)_displayName;}
            {_regionalDisplayName = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("regionalDisplayName"), out var __jsonRegionalDisplayName) ? (string)__jsonRegionalDisplayName : (string)_regionalDisplayName;}
            {_regionType = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("regionType"), out var __jsonRegionType) ? (string)__jsonRegionType : (string)_regionType;}
            {_regionCategory = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("regionCategory"), out var __jsonRegionCategory) ? (string)__jsonRegionCategory : (string)_regionCategory;}
            {_geography = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("geography"), out var __jsonGeography) ? (string)__jsonGeography : (string)_geography;}
            {_geographyGroup = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("geographyGroup"), out var __jsonGeographyGroup) ? (string)__jsonGeographyGroup : (string)_geographyGroup;}
            {_longitude = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("longitude"), out var __jsonLongitude) ? (string)__jsonLongitude : (string)_longitude;}
            {_latitude = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("latitude"), out var __jsonLatitude) ? (string)__jsonLatitude : (string)_latitude;}
            {_homeLocation = If( json?.PropertyT<Sample.API.Runtime.Json.JsonString>("homeLocation"), out var __jsonHomeLocation) ? (string)__jsonHomeLocation : (string)_homeLocation;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Sample.API.Runtime.Json.JsonNode"/> into an instance of Sample.API.Models.IAzureExtendedZoneProperties.
        /// </summary>
        /// <param name="node">a <see cref="Sample.API.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>an instance of Sample.API.Models.IAzureExtendedZoneProperties.</returns>
        public static Sample.API.Models.IAzureExtendedZoneProperties FromJson(Sample.API.Runtime.Json.JsonNode node)
        {
            return node is Sample.API.Runtime.Json.JsonObject json ? new AzureExtendedZoneProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AzureExtendedZoneProperties" /> into a <see cref="Sample.API.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Sample.API.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Sample.API.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AzureExtendedZoneProperties" /> as a <see cref="Sample.API.Runtime.Json.JsonNode" />.
        /// </returns>
        public Sample.API.Runtime.Json.JsonNode ToJson(Sample.API.Runtime.Json.JsonObject container, Sample.API.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Sample.API.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Sample.API.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            if (serializationMode.HasFlag(Sample.API.Runtime.SerializationMode.IncludeRead))
            {
                AddIf( null != (((object)this._registrationState)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._registrationState.ToString()) : null, "registrationState" ,container.Add );
            }
            AddIf( null != (((object)this._displayName)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            AddIf( null != (((object)this._regionalDisplayName)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._regionalDisplayName.ToString()) : null, "regionalDisplayName" ,container.Add );
            AddIf( null != (((object)this._regionType)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._regionType.ToString()) : null, "regionType" ,container.Add );
            AddIf( null != (((object)this._regionCategory)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._regionCategory.ToString()) : null, "regionCategory" ,container.Add );
            AddIf( null != (((object)this._geography)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._geography.ToString()) : null, "geography" ,container.Add );
            AddIf( null != (((object)this._geographyGroup)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._geographyGroup.ToString()) : null, "geographyGroup" ,container.Add );
            AddIf( null != (((object)this._longitude)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._longitude.ToString()) : null, "longitude" ,container.Add );
            AddIf( null != (((object)this._latitude)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._latitude.ToString()) : null, "latitude" ,container.Add );
            AddIf( null != (((object)this._homeLocation)?.ToString()) ? (Sample.API.Runtime.Json.JsonNode) new Sample.API.Runtime.Json.JsonString(this._homeLocation.ToString()) : null, "homeLocation" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}