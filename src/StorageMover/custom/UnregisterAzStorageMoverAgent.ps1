
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Deletes an agent resource.
.Description
Deletes an agent resource.
.Example
Unregister-AzStorageMoverAgent -ResourceGroupName myResourceGroup -StorageMoverName myStorageMover -Name myAgent

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Models.IStorageMoverIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT<IStorageMoverIdentity>: Identity Parameter
  [AgentName<String>]: The name of the agent resource.
  [EndpointName<String>]: The name of the endpoint resource.
  [Id<String>]: Resource identity path
  [JobDefinitionName<String>]: The name of the job definition resource.
  [JobRunName<String>]: The name of the job run.
  [ProjectName<String>]: The name of the project resource.
  [ResourceGroupName<String>]: The name of the resource group. The name is case insensitive.
  [StorageMoverName<String>]: The name of the Storage Mover resource.
  [SubscriptionId<String>]: The ID of the target subscription.
.Link
https://docs.microsoft.com/powershell/module/az.storagemover/remove-azstoragemoveragent
#>
function Unregister-AzStorageMoverAgent {
    [OutputType([System.Boolean])]
    [CmdletBinding(DefaultParameterSetName = 'Delete', PositionalBinding =$false, SupportsShouldProcess, ConfirmImpact = 'Medium')]
    param(
    [Parameter(ParameterSetName = 'Delete', Mandatory)]
    [Alias('AgentName')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Path')]
    [System.String]
    # The name of the agent resource.
    ${Name},

    [Parameter(ParameterSetName = 'Delete', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(ParameterSetName = 'Delete', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Path')]
    [System.String]
    # The name of the Storage Mover resource.
    ${StorageMoverName},

    [Parameter(ParameterSetName = 'Delete')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Runtime.DefaultInfo(Script = '(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    ${SubscriptionId},

    [Parameter(ParameterSetName = 'DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Models.IStorageMoverIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${Force},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.StorageMover.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

    process {
        Write-Warning("Deleting this agent will stop ongoing migrations on this agent. Job definitions that reference this agent can’t be started until their agent reference is updated to a working agent. Registering this agent again will result in a new identity and not fix existing job definitions. Note that the Azure ARC trust is not broken. The Hybrid Compute resource must be manually removed to invalidate the agent identity that may still be allowed access to target storage containers.")
        if ($PSCmdlet.ShouldProcess("Call remote \'AgentsDelete\' operation\") -and ($Force -or $PSCmdlet.ShouldContinue("Delete this storage mover agent?", "Confirm")))
        {
            if ($PSBoundParameters.ContainsKey("Force")) {
                $null = $PSBoundParameters.Remove("Force")
            }
            Az.StorageMover.internal\Remove-AzStorageMoverAgent @PSBoundParameters
        }
    }
}
