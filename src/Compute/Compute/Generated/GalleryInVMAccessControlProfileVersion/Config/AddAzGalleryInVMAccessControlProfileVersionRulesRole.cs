//
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Warning: This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure.Commands.Common.Authentication;
using Microsoft.Azure.Commands.Common.Authentication.Abstractions;
using Microsoft.Azure.Commands.Common.Strategies;
using Microsoft.Azure.Commands.Compute.Automation.Models;
using Microsoft.Azure.Commands.ResourceManager.Common.ArgumentCompleters;
using Microsoft.Azure.Management.Compute;
using Microsoft.Azure.Management.Compute.Models;
using Microsoft.Azure.Management.ResourceGraph;
using Microsoft.Azure.Management.ResourceGraph.Models;
using Microsoft.WindowsAzure.Commands.Utilities.Common;
using Newtonsoft.Json;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Compute.Automation
{
    [Cmdlet(VerbsCommon.Add, ResourceManager.Common.AzureRMConstants.AzureRMPrefix + "GalleryInVMAccessControlProfileVersionRulesRole")]
    [OutputType(typeof(PSGalleryInVMAccessControlProfileVersion))]
    public partial class AddAzureRmAzGalleryInVMAccessControlProfileVersionRulesRole : ComputeAutomationBaseCmdlet
    {
        [Parameter(
            Mandatory = true,
            ValueFromPipeline = true,
            HelpMessage = "PSGalleryInVmAccessControlProfileVersion object created from New-AzGalleryInVMAccessControlProfileVersionConfig.")]
        public PSGalleryInVMAccessControlProfileVersion GalleryInVmAccessControlProfileVersion { get; set; }

        [Alias("Name")]
        [Parameter(
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The name of the role.")]
        public string RoleName { get; set; }

        [Parameter(
            Mandatory = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "A list of privileges needed by this role.")]
        public string[] Privilege { get; set; }

        public override void ExecuteCmdlet()
        {
            PSGalleryInVMAccessControlProfileVersion galleryInVMAccessControlProfileVersion = this.GalleryInVmAccessControlProfileVersion;
            if (galleryInVMAccessControlProfileVersion.Rules == null)
            {
                galleryInVMAccessControlProfileVersion.Rules = new AccessControlRules();
            }
            if (galleryInVMAccessControlProfileVersion.Rules.Roles == null)
            {
                galleryInVMAccessControlProfileVersion.Rules.Roles = new List<AccessControlRulesRole>();
            }

            AccessControlRulesRole role = new AccessControlRulesRole
            {
                Name = this.RoleName,
                Privileges = this.Privilege
            };

            galleryInVMAccessControlProfileVersion.Rules.Roles.Add(role);
            WriteObject(galleryInVMAccessControlProfileVersion);
        }
    }
}