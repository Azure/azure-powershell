// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GalleryInVMAccessControlProfileVersionsOperations.
    /// </summary>
    public static partial class GalleryInVMAccessControlProfileVersionsOperationsExtensions
    {
            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be created.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile version operation.
            /// </param>
            public static GalleryInVMAccessControlProfileVersion CreateOrUpdate(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersion galleryInVMAccessControlProfileVersion)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be created.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile version operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersion> CreateOrUpdateAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersion galleryInVMAccessControlProfileVersion, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be updated.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile version
            /// operation.
            /// </param>
            public static GalleryInVMAccessControlProfileVersion Update(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersionUpdate galleryInVMAccessControlProfileVersion)
            {
                return operations.UpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be updated.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile version
            /// operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersion> UpdateAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersionUpdate galleryInVMAccessControlProfileVersion, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves information about a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be retrieved.
            /// </param>
            public static GalleryInVMAccessControlProfileVersion Get(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName)
            {
                return operations.GetAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves information about a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be retrieved.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersion> GetAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be deleted.
            /// </param>
            public static GalleryInVMAccessControlProfileVersionsDeleteHeaders Delete(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName)
            {
                return operations.DeleteAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersionsDeleteHeaders> DeleteAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// List gallery inVMAccessControlProfile versions in a gallery
            /// inVMAccessControlProfile
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile from which the
            /// inVMAccessControlProfile versions are to be listed.
            /// </param>
            public static IPage<GalleryInVMAccessControlProfileVersion> ListByGalleryInVMAccessControlProfile(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName)
            {
                return operations.ListByGalleryInVMAccessControlProfileAsync(resourceGroupName, galleryName, inVMAccessControlProfileName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List gallery inVMAccessControlProfile versions in a gallery
            /// inVMAccessControlProfile
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile from which the
            /// inVMAccessControlProfile versions are to be listed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GalleryInVMAccessControlProfileVersion>> ListByGalleryInVMAccessControlProfileAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByGalleryInVMAccessControlProfileWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be created.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile version operation.
            /// </param>
            public static GalleryInVMAccessControlProfileVersion BeginCreateOrUpdate(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersion galleryInVMAccessControlProfileVersion)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be created.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile version operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersion> BeginCreateOrUpdateAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersion galleryInVMAccessControlProfileVersion, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be updated.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile version
            /// operation.
            /// </param>
            public static GalleryInVMAccessControlProfileVersion BeginUpdate(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersionUpdate galleryInVMAccessControlProfileVersion)
            {
                return operations.BeginUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be updated.
            /// Needs to follow semantic version name pattern: The allowed characters are
            /// digit and period. Digits must be within the range of a 32-bit integer.
            /// Format: &lt;MajorVersion&gt;.&lt;MinorVersion&gt;.&lt;Patch&gt;
            /// </param>
            /// <param name='galleryInVMAccessControlProfileVersion'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile version
            /// operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersion> BeginUpdateAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, GalleryInVMAccessControlProfileVersionUpdate galleryInVMAccessControlProfileVersion, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, galleryInVMAccessControlProfileVersion, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be deleted.
            /// </param>
            public static GalleryInVMAccessControlProfileVersionsDeleteHeaders BeginDelete(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile version.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the inVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile in which the
            /// inVMAccessControlProfile version resides.
            /// </param>
            /// <param name='inVMAccessControlProfileVersionName'>
            /// The name of the gallery inVMAccessControlProfile version to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfileVersionsDeleteHeaders> BeginDeleteAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, string inVMAccessControlProfileVersionName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, inVMAccessControlProfileVersionName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// List gallery inVMAccessControlProfile versions in a gallery
            /// inVMAccessControlProfile
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GalleryInVMAccessControlProfileVersion> ListByGalleryInVMAccessControlProfileNext(this IGalleryInVMAccessControlProfileVersionsOperations operations, string nextPageLink)
            {
                return operations.ListByGalleryInVMAccessControlProfileNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List gallery inVMAccessControlProfile versions in a gallery
            /// inVMAccessControlProfile
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GalleryInVMAccessControlProfileVersion>> ListByGalleryInVMAccessControlProfileNextAsync(this IGalleryInVMAccessControlProfileVersionsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByGalleryInVMAccessControlProfileNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
