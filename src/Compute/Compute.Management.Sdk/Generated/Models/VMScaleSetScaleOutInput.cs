// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The input for ScaleOut
    /// </summary>
    public partial class VMScaleSetScaleOutInput
    {
        /// <summary>
        /// Initializes a new instance of the VMScaleSetScaleOutInput class.
        /// </summary>
        public VMScaleSetScaleOutInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VMScaleSetScaleOutInput class.
        /// </summary>
        /// <param name="capacity">Specifies the number of virtual machines in
        /// the scale set.</param>
        /// <param name="properties">The input properties for ScaleOut</param>
        public VMScaleSetScaleOutInput(long capacity, VMScaleSetScaleOutInputProperties properties = default(VMScaleSetScaleOutInputProperties))
        {
            Capacity = capacity;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the number of virtual machines in the scale
        /// set.
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public long Capacity { get; set; }

        /// <summary>
        /// Gets or sets the input properties for ScaleOut
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public VMScaleSetScaleOutInputProperties Properties { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
