// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AvailablePatchSummary
    {
        /// <summary>
        /// Initializes a new instance of the AvailablePatchSummary class.
        /// </summary>
        public AvailablePatchSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailablePatchSummary class.
        /// </summary>
        /// <param name="status">Possible values include: 'Unknown',
        /// 'InProgress', 'Failed', 'Succeeded',
        /// 'CompletedWithWarnings'</param>
        public AvailablePatchSummary(string status = default(string), string assessmentActivityId = default(string), bool? rebootPending = default(bool?), int? criticalAndSecurityPatchCount = default(int?), int? otherPatchCount = default(int?), System.DateTime? startTime = default(System.DateTime?), System.DateTime? lastModifiedTime = default(System.DateTime?), ApiError error = default(ApiError))
        {
            Status = status;
            AssessmentActivityId = assessmentActivityId;
            RebootPending = rebootPending;
            CriticalAndSecurityPatchCount = criticalAndSecurityPatchCount;
            OtherPatchCount = otherPatchCount;
            StartTime = startTime;
            LastModifiedTime = lastModifiedTime;
            Error = error;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets possible values include: 'Unknown', 'InProgress', 'Failed',
        /// 'Succeeded', 'CompletedWithWarnings'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assessmentActivityId")]
        public string AssessmentActivityId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rebootPending")]
        public bool? RebootPending { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "criticalAndSecurityPatchCount")]
        public int? CriticalAndSecurityPatchCount { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "otherPatchCount")]
        public int? OtherPatchCount { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTime? LastModifiedTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ApiError Error { get; private set; }

    }
}
