// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class VirtualMachineSoftwarePatchProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineSoftwarePatchProperties class.
        /// </summary>
        public VirtualMachineSoftwarePatchProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// VirtualMachineSoftwarePatchProperties class.
        /// </summary>
        /// <param name="rebootBehavior">Possible values include: 'Unknown',
        /// 'NeverReboots', 'AlwaysRequiresReboot', 'CanRequestReboot'</param>
        /// <param name="assessmentState">Possible values include: 'Unknown',
        /// 'Available'</param>
        public VirtualMachineSoftwarePatchProperties(string patchId = default(string), string name = default(string), string version = default(string), string kbId = default(string), IList<string> classifications = default(IList<string>), string rebootBehavior = default(string), string activityId = default(string), System.DateTime? publishedDate = default(System.DateTime?), System.DateTime? lastModifiedDateTime = default(System.DateTime?), string assessmentState = default(string))
        {
            PatchId = patchId;
            Name = name;
            Version = version;
            KbId = kbId;
            Classifications = classifications;
            RebootBehavior = rebootBehavior;
            ActivityId = activityId;
            PublishedDate = publishedDate;
            LastModifiedDateTime = lastModifiedDateTime;
            AssessmentState = assessmentState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "patchId")]
        public string PatchId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kbId")]
        public string KbId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classifications")]
        public IList<string> Classifications { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'NeverReboots',
        /// 'AlwaysRequiresReboot', 'CanRequestReboot'
        /// </summary>
        [JsonProperty(PropertyName = "rebootBehavior")]
        public string RebootBehavior { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activityId")]
        public string ActivityId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publishedDate")]
        public System.DateTime? PublishedDate { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastModifiedDateTime")]
        public System.DateTime? LastModifiedDateTime { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Available'
        /// </summary>
        [JsonProperty(PropertyName = "assessmentState")]
        public string AssessmentState { get; private set; }

    }
}
