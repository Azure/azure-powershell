// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SshPublicKeyGenerateKeyPairResult
    {
        /// <summary>
        /// Initializes a new instance of the SshPublicKeyGenerateKeyPairResult
        /// class.
        /// </summary>
        public SshPublicKeyGenerateKeyPairResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SshPublicKeyGenerateKeyPairResult
        /// class.
        /// </summary>
        public SshPublicKeyGenerateKeyPairResult(string privateKey, string publicKey, string id)
        {
            PrivateKey = privateKey;
            PublicKey = publicKey;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "privateKey")]
        public string PrivateKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publicKey")]
        public string PublicKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PrivateKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PrivateKey");
            }
            if (PublicKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PublicKey");
            }
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
