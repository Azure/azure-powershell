// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class UpgradePolicy
    {
        /// <summary>
        /// Initializes a new instance of the UpgradePolicy class.
        /// </summary>
        public UpgradePolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpgradePolicy class.
        /// </summary>
        /// <param name="mode">Possible values include: 'Automatic', 'Manual',
        /// 'Rolling'</param>
        public UpgradePolicy(UpgradeMode? mode = default(UpgradeMode?), RollingUpgradePolicy rollingUpgradePolicy = default(RollingUpgradePolicy), AutomaticOSUpgradePolicy automaticOSUpgradePolicy = default(AutomaticOSUpgradePolicy))
        {
            Mode = mode;
            RollingUpgradePolicy = rollingUpgradePolicy;
            AutomaticOSUpgradePolicy = automaticOSUpgradePolicy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Automatic', 'Manual',
        /// 'Rolling'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public UpgradeMode? Mode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rollingUpgradePolicy")]
        public RollingUpgradePolicy RollingUpgradePolicy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "automaticOSUpgradePolicy")]
        public AutomaticOSUpgradePolicy AutomaticOSUpgradePolicy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RollingUpgradePolicy != null)
            {
                RollingUpgradePolicy.Validate();
            }
        }
    }
}
