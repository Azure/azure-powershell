// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Specifies information about the Community Gallery that you want to
    /// create or update.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class CommunityGallery : PirCommunityGalleryResource
    {
        /// <summary>
        /// Initializes a new instance of the CommunityGallery class.
        /// </summary>
        public CommunityGallery()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommunityGallery class.
        /// </summary>
        /// <param name="name">Resource name</param>
        /// <param name="location">Resource location</param>
        /// <param name="type">Resource type</param>
        /// <param name="uniqueId">The unique id of this community
        /// gallery.</param>
        public CommunityGallery(string name = default(string), string location = default(string), string type = default(string), string uniqueId = default(string), string disclaimer = default(string), IDictionary<string, string> artifactTags = default(IDictionary<string, string>), CommunityGalleryMetadata communityMetadata = default(CommunityGalleryMetadata))
            : base(name, location, type, uniqueId)
        {
            Disclaimer = disclaimer;
            ArtifactTags = artifactTags;
            CommunityMetadata = communityMetadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.disclaimer")]
        public string Disclaimer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.artifactTags")]
        public IDictionary<string, string> ArtifactTags { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.communityMetadata")]
        public CommunityGalleryMetadata CommunityMetadata { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CommunityMetadata != null)
            {
                CommunityMetadata.Validate();
            }
        }
    }
}
