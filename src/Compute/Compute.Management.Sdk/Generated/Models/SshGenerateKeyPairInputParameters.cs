// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters for GenerateSshKeyPair.
    /// </summary>
    public partial class SshGenerateKeyPairInputParameters
    {
        /// <summary>
        /// Initializes a new instance of the SshGenerateKeyPairInputParameters
        /// class.
        /// </summary>
        public SshGenerateKeyPairInputParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SshGenerateKeyPairInputParameters
        /// class.
        /// </summary>
        /// <param name="encryptionType">The encryption type of the SSH keys to
        /// be generated. See SshEncryptionTypes for possible set of values. If
        /// not provided, will default to RSA. Possible values include: 'RSA',
        /// 'Ed25519'</param>
        public SshGenerateKeyPairInputParameters(string encryptionType = default(string))
        {
            EncryptionType = encryptionType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the encryption type of the SSH keys to be generated.
        /// See SshEncryptionTypes for possible set of values. If not provided,
        /// will default to RSA. Possible values include: 'RSA', 'Ed25519'
        /// </summary>
        [JsonProperty(PropertyName = "encryptionType")]
        public string EncryptionType { get; set; }

    }
}
