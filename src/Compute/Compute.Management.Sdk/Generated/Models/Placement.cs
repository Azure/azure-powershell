// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes the user-defined constraints for virtual machine hardware
    /// placement.
    /// </summary>
    public partial class Placement
    {
        /// <summary>
        /// Initializes a new instance of the Placement class.
        /// </summary>
        public Placement()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Placement class.
        /// </summary>
        /// <param name="zonePlacementPolicy">Specifies the policy for virtual
        /// machine's placement in availability zone. Possible values are:
        /// **Any** - An availability zone will be automatically picked by
        /// system as part of virtual machine creation. Possible values
        /// include: 'Any'</param>
        /// <param name="includeZones">This property supplements the
        /// 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to
        /// 'Any', availability zone selected by the system must be present in
        /// the list of availability zones passed with 'includeZones'. If
        /// 'includeZones' is not provided, all availability zones in region
        /// will be considered for selection.</param>
        /// <param name="excludeZones">This property supplements the
        /// 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to
        /// 'Any', availability zone selected by the system must not be present
        /// in the list of availability zones passed with 'excludeZones'. If
        /// 'excludeZones' is not provided, all availability zones in region
        /// will be considered for selection.</param>
        public Placement(string zonePlacementPolicy = default(string), IList<string> includeZones = default(IList<string>), IList<string> excludeZones = default(IList<string>))
        {
            ZonePlacementPolicy = zonePlacementPolicy;
            IncludeZones = includeZones;
            ExcludeZones = excludeZones;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies the policy for virtual machine's placement
        /// in availability zone. Possible values are: **Any** - An
        /// availability zone will be automatically picked by system as part of
        /// virtual machine creation. Possible values include: 'Any'
        /// </summary>
        [JsonProperty(PropertyName = "zonePlacementPolicy")]
        public string ZonePlacementPolicy { get; set; }

        /// <summary>
        /// Gets or sets this property supplements the 'zonePlacementPolicy'
        /// property. If 'zonePlacementPolicy' is set to 'Any', availability
        /// zone selected by the system must be present in the list of
        /// availability zones passed with 'includeZones'. If 'includeZones' is
        /// not provided, all availability zones in region will be considered
        /// for selection.
        /// </summary>
        [JsonProperty(PropertyName = "includeZones")]
        public IList<string> IncludeZones { get; set; }

        /// <summary>
        /// Gets or sets this property supplements the 'zonePlacementPolicy'
        /// property. If 'zonePlacementPolicy' is set to 'Any', availability
        /// zone selected by the system must not be present in the list of
        /// availability zones passed with 'excludeZones'. If 'excludeZones' is
        /// not provided, all availability zones in region will be considered
        /// for selection.
        /// </summary>
        [JsonProperty(PropertyName = "excludeZones")]
        public IList<string> ExcludeZones { get; set; }

    }
}
