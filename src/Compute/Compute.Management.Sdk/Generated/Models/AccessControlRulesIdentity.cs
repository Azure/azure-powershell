// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AccessControlRulesIdentity
    {
        /// <summary>
        /// Initializes a new instance of the AccessControlRulesIdentity class.
        /// </summary>
        public AccessControlRulesIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccessControlRulesIdentity class.
        /// </summary>
        public AccessControlRulesIdentity(string name, string userName = default(string), string groupName = default(string), string exePath = default(string), string processName = default(string))
        {
            Name = name;
            UserName = userName;
            GroupName = groupName;
            ExePath = exePath;
            ProcessName = processName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "groupName")]
        public string GroupName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exePath")]
        public string ExePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processName")]
        public string ProcessName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
