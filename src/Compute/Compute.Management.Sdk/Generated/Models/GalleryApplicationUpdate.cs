// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Rest.Serialization.JsonTransformation]
    public partial class GalleryApplicationUpdate : UpdateResourceDefinition
    {
        /// <summary>
        /// Initializes a new instance of the GalleryApplicationUpdate class.
        /// </summary>
        public GalleryApplicationUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryApplicationUpdate class.
        /// </summary>
        /// <param name="supportedOSType">Possible values include: 'Windows',
        /// 'Linux'</param>
        public GalleryApplicationUpdate(OperatingSystemTypes supportedOSType, string id = default(string), string name = default(string), string type = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), string eula = default(string), string privacyStatementUri = default(string), string releaseNoteUri = default(string), System.DateTime? endOfLifeDate = default(System.DateTime?), IList<GalleryApplicationCustomAction> customActions = default(IList<GalleryApplicationCustomAction>))
            : base(id, name, type, tags)
        {
            Eula = eula;
            PrivacyStatementUri = privacyStatementUri;
            ReleaseNoteUri = releaseNoteUri;
            EndOfLifeDate = endOfLifeDate;
            SupportedOSType = supportedOSType;
            CustomActions = customActions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.eula")]
        public string Eula { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.privacyStatementUri")]
        public string PrivacyStatementUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.releaseNoteUri")]
        public string ReleaseNoteUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.endOfLifeDate")]
        public System.DateTime? EndOfLifeDate { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportedOSType")]
        public OperatingSystemTypes SupportedOSType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.customActions")]
        public IList<GalleryApplicationCustomAction> CustomActions { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CustomActions != null)
            {
                foreach (var element in CustomActions)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
