// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CreationData
    {
        /// <summary>
        /// Initializes a new instance of the CreationData class.
        /// </summary>
        public CreationData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreationData class.
        /// </summary>
        /// <param name="createOption">Possible values include: 'Empty',
        /// 'Attach', 'FromImage', 'Import', 'Copy', 'Restore', 'Upload',
        /// 'CopyStart', 'ImportSecure', 'UploadPreparedSecure',
        /// 'CopyFromSanSnapshot'</param>
        /// <param name="provisionedBandwidthCopySpeed">Possible values
        /// include: 'None', 'Enhanced'</param>
        public CreationData(string createOption, string storageAccountId = default(string), ImageDiskReference imageReference = default(ImageDiskReference), ImageDiskReference galleryImageReference = default(ImageDiskReference), string sourceUri = default(string), string sourceResourceId = default(string), string sourceUniqueId = default(string), long? uploadSizeBytes = default(long?), int? logicalSectorSize = default(int?), string securityDataUri = default(string), bool? performancePlus = default(bool?), string elasticSanResourceId = default(string), string provisionedBandwidthCopySpeed = default(string))
        {
            CreateOption = createOption;
            StorageAccountId = storageAccountId;
            ImageReference = imageReference;
            GalleryImageReference = galleryImageReference;
            SourceUri = sourceUri;
            SourceResourceId = sourceResourceId;
            SourceUniqueId = sourceUniqueId;
            UploadSizeBytes = uploadSizeBytes;
            LogicalSectorSize = logicalSectorSize;
            SecurityDataUri = securityDataUri;
            PerformancePlus = performancePlus;
            ElasticSanResourceId = elasticSanResourceId;
            ProvisionedBandwidthCopySpeed = provisionedBandwidthCopySpeed;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Empty', 'Attach',
        /// 'FromImage', 'Import', 'Copy', 'Restore', 'Upload', 'CopyStart',
        /// 'ImportSecure', 'UploadPreparedSecure', 'CopyFromSanSnapshot'
        /// </summary>
        [JsonProperty(PropertyName = "createOption")]
        public string CreateOption { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "storageAccountId")]
        public string StorageAccountId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "imageReference")]
        public ImageDiskReference ImageReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "galleryImageReference")]
        public ImageDiskReference GalleryImageReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceUri")]
        public string SourceUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceResourceId")]
        public string SourceResourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceUniqueId")]
        public string SourceUniqueId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploadSizeBytes")]
        public long? UploadSizeBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logicalSectorSize")]
        public int? LogicalSectorSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "securityDataUri")]
        public string SecurityDataUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "performancePlus")]
        public bool? PerformancePlus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "elasticSanResourceId")]
        public string ElasticSanResourceId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Enhanced'
        /// </summary>
        [JsonProperty(PropertyName = "provisionedBandwidthCopySpeed")]
        public string ProvisionedBandwidthCopySpeed { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CreateOption == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreateOption");
            }
        }
    }
}
