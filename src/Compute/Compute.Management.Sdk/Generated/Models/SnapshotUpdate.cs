// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Snapshot update resource.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SnapshotUpdate
    {
        /// <summary>
        /// Initializes a new instance of the SnapshotUpdate class.
        /// </summary>
        public SnapshotUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SnapshotUpdate class.
        /// </summary>
        /// <param name="osType">the Operating System type. Possible values
        /// include: 'Windows', 'Linux'</param>
        /// <param name="diskSizeGB">If creationData.createOption is Empty,
        /// this field is mandatory and it indicates the size of the disk to
        /// create. If this field is present for updates or creation with other
        /// options, it indicates a resize. Resizes are only allowed if the
        /// disk is not attached to a running VM, and can only increase the
        /// disk's size.</param>
        /// <param name="encryptionSettingsCollection">Encryption settings
        /// collection used be Azure Disk Encryption, can contain multiple
        /// encryption settings per disk or snapshot.</param>
        /// <param name="encryption">Encryption property can be used to encrypt
        /// data at rest with customer managed keys or platform managed
        /// keys.</param>
        /// <param name="networkAccessPolicy">Policy for accessing the disk via
        /// network. Possible values include: 'AllowAll', 'AllowPrivate',
        /// 'DenyAll'</param>
        /// <param name="diskAccessId">ARM id of the DiskAccess resource for
        /// using private endpoints on disks.</param>
        /// <param name="supportsHibernation">Indicates the OS on a snapshot
        /// supports hibernation.</param>
        /// <param name="publicNetworkAccess">Policy for controlling export on
        /// the disk. Possible values include: 'Enabled', 'Disabled'</param>
        /// <param name="dataAccessAuthMode">Additional authentication
        /// requirements when exporting or uploading to a disk or snapshot.
        /// Possible values include: 'AzureActiveDirectory', 'None'</param>
        /// <param name="supportedCapabilities">List of supported capabilities
        /// for the image from which the OS disk was created.</param>
        /// <param name="snapshotAccessState">The state of snapshot which
        /// determines the access availability of the snapshot. Possible values
        /// include: 'Unknown', 'Pending', 'Available', 'InstantAccess',
        /// 'AvailableWithInstantAccess'</param>
        /// <param name="tags">Resource tags</param>
        /// <param name="sku">The snapshots sku name. Can be Standard_LRS,
        /// Premium_LRS, or Standard_ZRS. This is an optional parameter for
        /// incremental snapshot and the default behavior is the SKU will be
        /// set to the same sku as the previous snapshot</param>
        public SnapshotUpdate(OperatingSystemTypes? osType = default(OperatingSystemTypes?), int? diskSizeGB = default(int?), EncryptionSettingsCollection encryptionSettingsCollection = default(EncryptionSettingsCollection), Encryption encryption = default(Encryption), string networkAccessPolicy = default(string), string diskAccessId = default(string), bool? supportsHibernation = default(bool?), string publicNetworkAccess = default(string), string dataAccessAuthMode = default(string), SupportedCapabilities supportedCapabilities = default(SupportedCapabilities), string snapshotAccessState = default(string), IDictionary<string, string> tags = default(IDictionary<string, string>), SnapshotSku sku = default(SnapshotSku))
        {
            OsType = osType;
            DiskSizeGB = diskSizeGB;
            EncryptionSettingsCollection = encryptionSettingsCollection;
            Encryption = encryption;
            NetworkAccessPolicy = networkAccessPolicy;
            DiskAccessId = diskAccessId;
            SupportsHibernation = supportsHibernation;
            PublicNetworkAccess = publicNetworkAccess;
            DataAccessAuthMode = dataAccessAuthMode;
            SupportedCapabilities = supportedCapabilities;
            SnapshotAccessState = snapshotAccessState;
            Tags = tags;
            Sku = sku;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Operating System type. Possible values include:
        /// 'Windows', 'Linux'
        /// </summary>
        [JsonProperty(PropertyName = "properties.osType")]
        public OperatingSystemTypes? OsType { get; set; }

        /// <summary>
        /// Gets or sets if creationData.createOption is Empty, this field is
        /// mandatory and it indicates the size of the disk to create. If this
        /// field is present for updates or creation with other options, it
        /// indicates a resize. Resizes are only allowed if the disk is not
        /// attached to a running VM, and can only increase the disk's size.
        /// </summary>
        [JsonProperty(PropertyName = "properties.diskSizeGB")]
        public int? DiskSizeGB { get; set; }

        /// <summary>
        /// Gets or sets encryption settings collection used be Azure Disk
        /// Encryption, can contain multiple encryption settings per disk or
        /// snapshot.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryptionSettingsCollection")]
        public EncryptionSettingsCollection EncryptionSettingsCollection { get; set; }

        /// <summary>
        /// Gets or sets encryption property can be used to encrypt data at
        /// rest with customer managed keys or platform managed keys.
        /// </summary>
        [JsonProperty(PropertyName = "properties.encryption")]
        public Encryption Encryption { get; set; }

        /// <summary>
        /// Gets or sets policy for accessing the disk via network. Possible
        /// values include: 'AllowAll', 'AllowPrivate', 'DenyAll'
        /// </summary>
        [JsonProperty(PropertyName = "properties.networkAccessPolicy")]
        public string NetworkAccessPolicy { get; set; }

        /// <summary>
        /// Gets or sets ARM id of the DiskAccess resource for using private
        /// endpoints on disks.
        /// </summary>
        [JsonProperty(PropertyName = "properties.diskAccessId")]
        public string DiskAccessId { get; set; }

        /// <summary>
        /// Gets or sets indicates the OS on a snapshot supports hibernation.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportsHibernation")]
        public bool? SupportsHibernation { get; set; }

        /// <summary>
        /// Gets or sets policy for controlling export on the disk. Possible
        /// values include: 'Enabled', 'Disabled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.publicNetworkAccess")]
        public string PublicNetworkAccess { get; set; }

        /// <summary>
        /// Gets or sets additional authentication requirements when exporting
        /// or uploading to a disk or snapshot. Possible values include:
        /// 'AzureActiveDirectory', 'None'
        /// </summary>
        [JsonProperty(PropertyName = "properties.dataAccessAuthMode")]
        public string DataAccessAuthMode { get; set; }

        /// <summary>
        /// Gets or sets list of supported capabilities for the image from
        /// which the OS disk was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.supportedCapabilities")]
        public SupportedCapabilities SupportedCapabilities { get; set; }

        /// <summary>
        /// Gets the state of snapshot which determines the access availability
        /// of the snapshot. Possible values include: 'Unknown', 'Pending',
        /// 'Available', 'InstantAccess', 'AvailableWithInstantAccess'
        /// </summary>
        [JsonProperty(PropertyName = "properties.snapshotAccessState")]
        public string SnapshotAccessState { get; private set; }

        /// <summary>
        /// Gets or sets resource tags
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IDictionary<string, string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the snapshots sku name. Can be Standard_LRS,
        /// Premium_LRS, or Standard_ZRS. This is an optional parameter for
        /// incremental snapshot and the default behavior is the SKU will be
        /// set to the same sku as the previous snapshot
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public SnapshotSku Sku { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EncryptionSettingsCollection != null)
            {
                EncryptionSettingsCollection.Validate();
            }
        }
    }
}
