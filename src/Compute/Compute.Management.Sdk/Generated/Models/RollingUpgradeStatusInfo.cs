// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Rest.Serialization.JsonTransformation]
    public partial class RollingUpgradeStatusInfo : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the RollingUpgradeStatusInfo class.
        /// </summary>
        public RollingUpgradeStatusInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RollingUpgradeStatusInfo class.
        /// </summary>
        public RollingUpgradeStatusInfo(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), RollingUpgradePolicy policy = default(RollingUpgradePolicy), RollingUpgradeRunningStatus runningStatus = default(RollingUpgradeRunningStatus), RollingUpgradeProgressInfo progress = default(RollingUpgradeProgressInfo), ApiError error = default(ApiError))
            : base(location, id, name, type, systemData, tags)
        {
            Policy = policy;
            RunningStatus = runningStatus;
            Progress = progress;
            Error = error;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.policy")]
        public RollingUpgradePolicy Policy { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.runningStatus")]
        public RollingUpgradeRunningStatus RunningStatus { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.progress")]
        public RollingUpgradeProgressInfo Progress { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.error")]
        public ApiError Error { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Policy != null)
            {
                Policy.Validate();
            }
        }
    }
}
