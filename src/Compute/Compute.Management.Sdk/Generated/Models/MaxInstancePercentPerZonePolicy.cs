// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The configuration parameters used to limit the number of virtual
    /// machines per availability zone in the virtual machine scale set.
    /// </summary>
    public partial class MaxInstancePercentPerZonePolicy
    {
        /// <summary>
        /// Initializes a new instance of the MaxInstancePercentPerZonePolicy
        /// class.
        /// </summary>
        public MaxInstancePercentPerZonePolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MaxInstancePercentPerZonePolicy
        /// class.
        /// </summary>
        /// <param name="enabled">Specifies whether
        /// maxInstancePercentPerZonePolicy should be enabled on the virtual
        /// machine scale set.</param>
        /// <param name="value">Limit on the number of instances in each zone
        /// as a percentage of the total capacity of the virtual machine scale
        /// set.</param>
        public MaxInstancePercentPerZonePolicy(bool? enabled = default(bool?), int? value = default(int?))
        {
            Enabled = enabled;
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets specifies whether maxInstancePercentPerZonePolicy
        /// should be enabled on the virtual machine scale set.
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets limit on the number of instances in each zone as a
        /// percentage of the total capacity of the virtual machine scale set.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public int? Value { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Value != null)
            {
                if (Value > 100)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "Value", 100);
                }
            }
        }
    }
}
