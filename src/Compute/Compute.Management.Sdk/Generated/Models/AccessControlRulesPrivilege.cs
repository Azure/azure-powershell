// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The properties of an Access Control Rule Privilege.
    /// </summary>
    public partial class AccessControlRulesPrivilege
    {
        /// <summary>
        /// Initializes a new instance of the AccessControlRulesPrivilege
        /// class.
        /// </summary>
        public AccessControlRulesPrivilege()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccessControlRulesPrivilege
        /// class.
        /// </summary>
        /// <param name="name">The name of the privilege.</param>
        /// <param name="path">The HTTP path corresponding to the
        /// privilege.</param>
        /// <param name="queryParameters">The query parameters to match in the
        /// path.</param>
        public AccessControlRulesPrivilege(string name, string path, IDictionary<string, string> queryParameters = default(IDictionary<string, string>))
        {
            Name = name;
            Path = path;
            QueryParameters = queryParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the privilege.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the HTTP path corresponding to the privilege.
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets the query parameters to match in the path.
        /// </summary>
        [JsonProperty(PropertyName = "queryParameters")]
        public IDictionary<string, string> QueryParameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Path == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Path");
            }
        }
    }
}
