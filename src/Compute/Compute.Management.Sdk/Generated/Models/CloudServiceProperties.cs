// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CloudServiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the CloudServiceProperties class.
        /// </summary>
        public CloudServiceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CloudServiceProperties class.
        /// </summary>
        /// <param name="upgradeMode">Possible values include: 'Auto',
        /// 'Manual', 'Simultaneous'</param>
        public CloudServiceProperties(string packageUrl = default(string), string configuration = default(string), string configurationUrl = default(string), bool? startCloudService = default(bool?), bool? allowModelOverride = default(bool?), string upgradeMode = default(string), CloudServiceRoleProfile roleProfile = default(CloudServiceRoleProfile), CloudServiceOsProfile osProfile = default(CloudServiceOsProfile), CloudServiceNetworkProfile networkProfile = default(CloudServiceNetworkProfile), CloudServiceExtensionProfile extensionProfile = default(CloudServiceExtensionProfile), string provisioningState = default(string), string uniqueId = default(string))
        {
            PackageUrl = packageUrl;
            Configuration = configuration;
            ConfigurationUrl = configurationUrl;
            StartCloudService = startCloudService;
            AllowModelOverride = allowModelOverride;
            UpgradeMode = upgradeMode;
            RoleProfile = roleProfile;
            OsProfile = osProfile;
            NetworkProfile = networkProfile;
            ExtensionProfile = extensionProfile;
            ProvisioningState = provisioningState;
            UniqueId = uniqueId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "packageUrl")]
        public string PackageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public string Configuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "configurationUrl")]
        public string ConfigurationUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startCloudService")]
        public bool? StartCloudService { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowModelOverride")]
        public bool? AllowModelOverride { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Auto', 'Manual',
        /// 'Simultaneous'
        /// </summary>
        [JsonProperty(PropertyName = "upgradeMode")]
        public string UpgradeMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roleProfile")]
        public CloudServiceRoleProfile RoleProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "osProfile")]
        public CloudServiceOsProfile OsProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "networkProfile")]
        public CloudServiceNetworkProfile NetworkProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extensionProfile")]
        public CloudServiceExtensionProfile ExtensionProfile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uniqueId")]
        public string UniqueId { get; private set; }

    }
}
