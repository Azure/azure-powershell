// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SoftDeletedResourceOperations.
    /// </summary>
    public static partial class SoftDeletedResourceOperationsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='galleryName'>
            /// </param>
            /// <param name='artifactType'>
            /// </param>
            /// <param name='artifactName'>
            /// </param>
            public static IPage<GallerySoftDeletedResource> ListByArtifactName(this ISoftDeletedResourceOperations operations, string resourceGroupName, string galleryName, string artifactType, string artifactName)
            {
                return operations.ListByArtifactNameAsync(resourceGroupName, galleryName, artifactType, artifactName).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='galleryName'>
            /// </param>
            /// <param name='artifactType'>
            /// </param>
            /// <param name='artifactName'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GallerySoftDeletedResource>> ListByArtifactNameAsync(this ISoftDeletedResourceOperations operations, string resourceGroupName, string galleryName, string artifactType, string artifactName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByArtifactNameWithHttpMessagesAsync(resourceGroupName, galleryName, artifactType, artifactName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GallerySoftDeletedResource> ListByArtifactNameNext(this ISoftDeletedResourceOperations operations, string nextPageLink)
            {
                return operations.ListByArtifactNameNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GallerySoftDeletedResource>> ListByArtifactNameNextAsync(this ISoftDeletedResourceOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByArtifactNameNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
