// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Compute
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GalleryInVMAccessControlProfilesOperations.
    /// </summary>
    public static partial class GalleryInVMAccessControlProfilesOperationsExtensions
    {
            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be created or updated.
            /// The allowed characters are alphabets and numbers with dots, dashes, and
            /// periods allowed in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile operation.
            /// </param>
            public static GalleryInVMAccessControlProfile CreateOrUpdate(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfile galleryInVMAccessControlProfile)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be created or updated.
            /// The allowed characters are alphabets and numbers with dots, dashes, and
            /// periods allowed in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfile> CreateOrUpdateAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfile galleryInVMAccessControlProfile, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be updated. The allowed
            /// characters are alphabets and numbers with dots, dashes, and periods allowed
            /// in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile
            /// operation.
            /// </param>
            public static GalleryInVMAccessControlProfile Update(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfileUpdate galleryInVMAccessControlProfile)
            {
                return operations.UpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be updated. The allowed
            /// characters are alphabets and numbers with dots, dashes, and periods allowed
            /// in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile
            /// operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfile> UpdateAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfileUpdate galleryInVMAccessControlProfile, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Retrieves information about a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery from which the
            /// InVMAccessControlProfiles are to be retrieved.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be retrieved.
            /// </param>
            public static GalleryInVMAccessControlProfile Get(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName)
            {
                return operations.GetAsync(resourceGroupName, galleryName, inVMAccessControlProfileName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retrieves information about a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery from which the
            /// InVMAccessControlProfiles are to be retrieved.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be retrieved.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfile> GetAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// he name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be deleted.
            /// </param>
            public static GalleryInVMAccessControlProfilesDeleteHeaders Delete(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName)
            {
                return operations.DeleteAsync(resourceGroupName, galleryName, inVMAccessControlProfileName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// he name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfilesDeleteHeaders> DeleteAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// List gallery inVMAccessControlProfiles in a gallery.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery from which the
            /// InVMAccessControlProfiles are to be listed.
            /// </param>
            public static IPage<GalleryInVMAccessControlProfile> ListByGallery(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName)
            {
                return operations.ListByGalleryAsync(resourceGroupName, galleryName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List gallery inVMAccessControlProfiles in a gallery.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery from which the
            /// InVMAccessControlProfiles are to be listed.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GalleryInVMAccessControlProfile>> ListByGalleryAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByGalleryWithHttpMessagesAsync(resourceGroupName, galleryName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be created or updated.
            /// The allowed characters are alphabets and numbers with dots, dashes, and
            /// periods allowed in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile operation.
            /// </param>
            public static GalleryInVMAccessControlProfile BeginCreateOrUpdate(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfile galleryInVMAccessControlProfile)
            {
                return operations.BeginCreateOrUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be created.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be created or updated.
            /// The allowed characters are alphabets and numbers with dots, dashes, and
            /// periods allowed in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the create or update gallery
            /// inVMAccessControlProfile operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfile> BeginCreateOrUpdateAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfile galleryInVMAccessControlProfile, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateOrUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be updated. The allowed
            /// characters are alphabets and numbers with dots, dashes, and periods allowed
            /// in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile
            /// operation.
            /// </param>
            public static GalleryInVMAccessControlProfile BeginUpdate(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfileUpdate galleryInVMAccessControlProfile)
            {
                return operations.BeginUpdateAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// The name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// is to be updated.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be updated. The allowed
            /// characters are alphabets and numbers with dots, dashes, and periods allowed
            /// in the middle. The maximum length is 80 characters.
            /// </param>
            /// <param name='galleryInVMAccessControlProfile'>
            /// Parameters supplied to the update gallery inVMAccessControlProfile
            /// operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfile> BeginUpdateAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, GalleryInVMAccessControlProfileUpdate galleryInVMAccessControlProfile, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, galleryInVMAccessControlProfile, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// he name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be deleted.
            /// </param>
            public static GalleryInVMAccessControlProfilesDeleteHeaders BeginDelete(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName)
            {
                return operations.BeginDeleteAsync(resourceGroupName, galleryName, inVMAccessControlProfileName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete a gallery inVMAccessControlProfile.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='galleryName'>
            /// he name of the Shared Image Gallery in which the InVMAccessControlProfile
            /// resides.
            /// </param>
            /// <param name='inVMAccessControlProfileName'>
            /// The name of the gallery inVMAccessControlProfile to be deleted.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<GalleryInVMAccessControlProfilesDeleteHeaders> BeginDeleteAsync(this IGalleryInVMAccessControlProfilesOperations operations, string resourceGroupName, string galleryName, string inVMAccessControlProfileName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, galleryName, inVMAccessControlProfileName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Headers;
                }
            }

            /// <summary>
            /// List gallery inVMAccessControlProfiles in a gallery.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<GalleryInVMAccessControlProfile> ListByGalleryNext(this IGalleryInVMAccessControlProfilesOperations operations, string nextPageLink)
            {
                return operations.ListByGalleryNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// List gallery inVMAccessControlProfiles in a gallery.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<GalleryInVMAccessControlProfile>> ListByGalleryNextAsync(this IGalleryInVMAccessControlProfilesOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByGalleryNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
