// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103
{
    using Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.PowerShell;

    /// <summary>
    /// Specifies information about the Shared Image Gallery that you want to create or update.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(GalleryTypeConverter))]
    public partial class Gallery
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.Gallery"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGallery" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGallery DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Gallery(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.Gallery"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGallery" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGallery DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Gallery(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Gallery" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Gallery" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGallery FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.Gallery"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Gallery(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharingProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfile = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfile) content.GetValueForProperty("SharingProfile",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfile, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharingStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatus = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingStatus) content.GetValueForProperty("SharingStatus",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatus, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Identifier = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryIdentifier) content.GetValueForProperty("Identifier",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Identifier, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryIdentifierTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeletePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicy = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISoftDeletePolicy) content.GetValueForProperty("SoftDeletePolicy",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicy, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SoftDeletePolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState.CreateFrom);
            }
            if (content.Contains("SharingProfileGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileGroup = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfileGroup[]) content.GetValueForProperty("SharingProfileGroup",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfileGroup>(__y, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingProfileGroupTypeConverter.ConvertFrom));
            }
            if (content.Contains("SharingStatusSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusSummary = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalSharingStatus[]) content.GetValueForProperty("SharingStatusSummary",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusSummary, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalSharingStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.RegionalSharingStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentifierUniqueName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).IdentifierUniqueName = (string) content.GetValueForProperty("IdentifierUniqueName",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).IdentifierUniqueName, global::System.Convert.ToString);
            }
            if (content.Contains("SharingProfilePermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfilePermission = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GallerySharingPermissionTypes?) content.GetValueForProperty("SharingProfilePermission",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfilePermission, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GallerySharingPermissionTypes.CreateFrom);
            }
            if (content.Contains("SharingProfileCommunityGalleryInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileCommunityGalleryInfo = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny) content.GetValueForProperty("SharingProfileCommunityGalleryInfo",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileCommunityGalleryInfo, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeletePolicyIsSoftDeleteEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicyIsSoftDeleteEnabled = (bool?) content.GetValueForProperty("SoftDeletePolicyIsSoftDeleteEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicyIsSoftDeleteEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SharingStatusAggregatedState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusAggregatedState = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SharingState?) content.GetValueForProperty("SharingStatusAggregatedState",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusAggregatedState, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SharingState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.Gallery"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Gallery(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.ResourceTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharingProfile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfile = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfile) content.GetValueForProperty("SharingProfile",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfile, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingProfileTypeConverter.ConvertFrom);
            }
            if (content.Contains("SharingStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatus = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingStatus) content.GetValueForProperty("SharingStatus",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatus, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identifier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Identifier = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryIdentifier) content.GetValueForProperty("Identifier",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Identifier, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryIdentifierTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeletePolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicy = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISoftDeletePolicy) content.GetValueForProperty("SoftDeletePolicy",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicy, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SoftDeletePolicyTypeConverter.ConvertFrom);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryProvisioningState.CreateFrom);
            }
            if (content.Contains("SharingProfileGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileGroup = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfileGroup[]) content.GetValueForProperty("SharingProfileGroup",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileGroup, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.ISharingProfileGroup>(__y, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.SharingProfileGroupTypeConverter.ConvertFrom));
            }
            if (content.Contains("SharingStatusSummary"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusSummary = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalSharingStatus[]) content.GetValueForProperty("SharingStatusSummary",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusSummary, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IRegionalSharingStatus>(__y, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.RegionalSharingStatusTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentifierUniqueName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).IdentifierUniqueName = (string) content.GetValueForProperty("IdentifierUniqueName",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).IdentifierUniqueName, global::System.Convert.ToString);
            }
            if (content.Contains("SharingProfilePermission"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfilePermission = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GallerySharingPermissionTypes?) content.GetValueForProperty("SharingProfilePermission",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfilePermission, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GallerySharingPermissionTypes.CreateFrom);
            }
            if (content.Contains("SharingProfileCommunityGalleryInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileCommunityGalleryInfo = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.IAny) content.GetValueForProperty("SharingProfileCommunityGalleryInfo",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingProfileCommunityGalleryInfo, Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("SoftDeletePolicyIsSoftDeleteEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicyIsSoftDeleteEnabled = (bool?) content.GetValueForProperty("SoftDeletePolicyIsSoftDeleteEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SoftDeletePolicyIsSoftDeleteEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SharingStatusAggregatedState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusAggregatedState = (Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SharingState?) content.GetValueForProperty("SharingStatusAggregatedState",((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryInternal)this).SharingStatusAggregatedState, Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.SharingState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Specifies information about the Shared Image Gallery that you want to create or update.
    [System.ComponentModel.TypeConverter(typeof(GalleryTypeConverter))]
    public partial interface IGallery

    {

    }
}