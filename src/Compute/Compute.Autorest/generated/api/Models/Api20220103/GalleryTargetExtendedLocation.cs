// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    public partial class GalleryTargetExtendedLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocation,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocationInternal
    {

        /// <summary>Backing field for <see cref="Encryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImages _encryption;

        /// <summary>
        /// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImages Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.EncryptionImages()); set => this._encryption = value; }

        /// <summary>A list of encryption specifications for data disk images.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IDataDiskImageEncryption[] EncryptionDataDiskImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).DataDiskImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).DataDiskImage = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ExtendedLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocation _extendedLocation;

        /// <summary>The name of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocation ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryExtendedLocation()); set => this._extendedLocation = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ExtendedLocationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocationInternal)ExtendedLocation).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocationInternal)ExtendedLocation).Name = value ?? null; }

        /// <summary>Backing field for <see cref="ExtendedLocationReplicaCount" /> property.</summary>
        private int? _extendedLocationReplicaCount;

        /// <summary>
        /// The number of replicas of the Image Version to be created per extended location. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? ExtendedLocationReplicaCount { get => this._extendedLocationReplicaCount; set => this._extendedLocationReplicaCount = value; }

        /// <summary>It is type of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryExtendedLocationType? ExtendedLocationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocationInternal)ExtendedLocation).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocationInternal)ExtendedLocation).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryExtendedLocationType)""); }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImages Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocationInternal.Encryption { get => (this._encryption = this._encryption ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.EncryptionImages()); set { {_encryption = value;} } }

        /// <summary>Internal Acessors for EncryptionOSDiskImage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IOSDiskImageEncryption Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocationInternal.EncryptionOSDiskImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImage = value; }

        /// <summary>Internal Acessors for ExtendedLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocation Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocationInternal.ExtendedLocation { get => (this._extendedLocation = this._extendedLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.GalleryExtendedLocation()); set { {_extendedLocation = value;} } }

        /// <summary>Internal Acessors for OSDiskImageSecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IOSDiskImageSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryTargetExtendedLocationInternal.OSDiskImageSecurityProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImageSecurityProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImageSecurityProfile = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>A relative URI containing the resource ID of the disk encryption set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string OSDiskImageDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImageDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).OSDiskImageDiskEncryptionSetId = value ?? null; }

        /// <summary>confidential VM encryption types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ConfidentialVMEncryptionType? SecurityProfileConfidentialVMEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).SecurityProfileConfidentialVMEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).SecurityProfileConfidentialVMEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ConfidentialVMEncryptionType)""); }

        /// <summary>secure VM disk encryption set id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SecurityProfileSecureVMDiskEncryptionSetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).SecurityProfileSecureVMDiskEncryptionSetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImagesInternal)Encryption).SecurityProfileSecureVMDiskEncryptionSetId = value ?? null; }

        /// <summary>Backing field for <see cref="StorageAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? _storageAccountType;

        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? StorageAccountType { get => this._storageAccountType; set => this._storageAccountType = value; }

        /// <summary>Creates an new <see cref="GalleryTargetExtendedLocation" /> instance.</summary>
        public GalleryTargetExtendedLocation()
        {

        }
    }
    public partial interface IGalleryTargetExtendedLocation :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>A list of encryption specifications for data disk images.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of encryption specifications for data disk images.",
        SerializedName = @"dataDiskImages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IDataDiskImageEncryption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IDataDiskImageEncryption[] EncryptionDataDiskImage { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedLocationName { get; set; }
        /// <summary>
        /// The number of replicas of the Image Version to be created per extended location. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of replicas of the Image Version to be created per extended location. This property is updatable.",
        SerializedName = @"extendedLocationReplicaCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ExtendedLocationReplicaCount { get; set; }
        /// <summary>It is type of the extended location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"It is type of the extended location.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryExtendedLocationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryExtendedLocationType? ExtendedLocationType { get; set; }
        /// <summary>The name of the region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the region.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>A relative URI containing the resource ID of the disk encryption set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A relative URI containing the resource ID of the disk encryption set.",
        SerializedName = @"diskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string OSDiskImageDiskEncryptionSetId { get; set; }
        /// <summary>confidential VM encryption types</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"confidential VM encryption types",
        SerializedName = @"confidentialVMEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ConfidentialVMEncryptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ConfidentialVMEncryptionType? SecurityProfileConfidentialVMEncryptionType { get; set; }
        /// <summary>secure VM disk encryption set id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"secure VM disk encryption set id",
        SerializedName = @"secureVMDiskEncryptionSetId",
        PossibleTypes = new [] { typeof(string) })]
        string SecurityProfileSecureVMDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the storage account type to be used to store the image. This property is not updatable.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? StorageAccountType { get; set; }

    }
    internal partial interface IGalleryTargetExtendedLocationInternal

    {
        /// <summary>
        /// Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IEncryptionImages Encryption { get; set; }
        /// <summary>A list of encryption specifications for data disk images.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IDataDiskImageEncryption[] EncryptionDataDiskImage { get; set; }
        /// <summary>Contains encryption settings for an OS disk image.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IOSDiskImageEncryption EncryptionOSDiskImage { get; set; }
        /// <summary>The name of the extended location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IGalleryExtendedLocation ExtendedLocation { get; set; }

        string ExtendedLocationName { get; set; }
        /// <summary>
        /// The number of replicas of the Image Version to be created per extended location. This property is updatable.
        /// </summary>
        int? ExtendedLocationReplicaCount { get; set; }
        /// <summary>It is type of the extended location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.GalleryExtendedLocationType? ExtendedLocationType { get; set; }
        /// <summary>The name of the region.</summary>
        string Name { get; set; }
        /// <summary>A relative URI containing the resource ID of the disk encryption set.</summary>
        string OSDiskImageDiskEncryptionSetId { get; set; }
        /// <summary>This property specifies the security profile of an OS disk image.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20220103.IOSDiskImageSecurityProfile OSDiskImageSecurityProfile { get; set; }
        /// <summary>confidential VM encryption types</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ConfidentialVMEncryptionType? SecurityProfileConfidentialVMEncryptionType { get; set; }
        /// <summary>secure VM disk encryption set id</summary>
        string SecurityProfileSecureVMDiskEncryptionSetId { get; set; }
        /// <summary>
        /// Specifies the storage account type to be used to store the image. This property is not updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.StorageAccountType? StorageAccountType { get; set; }

    }
}