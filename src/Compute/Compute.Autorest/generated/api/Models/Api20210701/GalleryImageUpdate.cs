// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>
    /// Specifies information about the gallery image definition that you want to update.
    /// </summary>
    public partial class GalleryImageUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinition"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinition __updateResourceDefinition = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.UpdateResourceDefinition();

        /// <summary>
        /// The description of this gallery image definition resource. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Description = value ?? null; }

        /// <summary>A list of disk types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string[] DisallowedDiskType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).DisallowedDiskType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).DisallowedDiskType = value ?? null /* arrayOf */; }

        /// <summary>
        /// The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndOfLifeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).EndOfLifeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).EndOfLifeDate = value ?? default(global::System.DateTime); }

        /// <summary>The Eula agreement for the gallery image definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string Eula { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Eula; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Eula = value ?? null; }

        /// <summary>A list of gallery image features.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageFeature[] Feature { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Feature; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Feature = value ?? null /* arrayOf */; }

        /// <summary>The hypervisor generation of the Virtual Machine. Applicable to OS disks only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGeneration? HyperVGeneration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).HyperVGeneration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).HyperVGeneration = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGeneration)""); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Id; }

        /// <summary>The name of the gallery image definition offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string IdentifierOffer { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierOffer; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierOffer = value ?? null; }

        /// <summary>The name of the gallery image definition publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string IdentifierPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierPublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierPublisher = value ?? null; }

        /// <summary>The name of the gallery image definition SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string IdentifierSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierSku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).IdentifierSku = value ?? null; }

        /// <summary>The maximum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? MemoryMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).MemoryMax; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).MemoryMax = value ?? default(int); }

        /// <summary>The minimum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? MemoryMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).MemoryMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).MemoryMin = value ?? default(int); }

        /// <summary>Internal Acessors for Disallowed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IDisallowed Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.Disallowed { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Disallowed; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Disallowed = value; }

        /// <summary>Internal Acessors for Identifier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageIdentifier Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.Identifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Identifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Identifier = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.GalleryImageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for PurchasePlan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IImagePurchasePlan Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.PurchasePlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlan = value; }

        /// <summary>Internal Acessors for Recommended</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRecommendedMachineConfiguration Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.Recommended { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Recommended; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).Recommended = value; }

        /// <summary>Internal Acessors for RecommendedMemory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceRange Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.RecommendedMemory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).RecommendedMemory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).RecommendedMemory = value; }

        /// <summary>Internal Acessors for RecommendedVCpUs</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceRange Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageUpdateInternal.RecommendedVCpUs { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).RecommendedVCpUs; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).RecommendedVCpUs = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Type = value; }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Name; }

        /// <summary>
        /// This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemStateTypes? OSState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).OSState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).OSState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemStateTypes)""); }

        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed
        /// image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).OSType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).OSType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes)""); }

        /// <summary>The privacy statement uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PrivacyStatementUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PrivacyStatementUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PrivacyStatementUri = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageProperties _property;

        /// <summary>Describes the properties of a gallery image definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.GalleryImageProperties()); set => this._property = value; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).ProvisioningState; }

        /// <summary>The plan ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PurchasePlanName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanName = value ?? null; }

        /// <summary>The product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PurchasePlanProduct { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanProduct; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanProduct = value ?? null; }

        /// <summary>The publisher ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string PurchasePlanPublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanPublisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).PurchasePlanPublisher = value ?? null; }

        /// <summary>The release note uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ReleaseNoteUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).ReleaseNoteUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).ReleaseNoteUri = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Tag = value ?? null /* model class */; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal)__updateResourceDefinition).Type; }

        /// <summary>The maximum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VCpUsMax { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).VCpUsMax; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).VCpUsMax = value ?? default(int); }

        /// <summary>The minimum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? VCpUsMin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).VCpUsMin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImagePropertiesInternal)Property).VCpUsMin = value ?? default(int); }

        /// <summary>Creates an new <see cref="GalleryImageUpdate" /> instance.</summary>
        public GalleryImageUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__updateResourceDefinition), __updateResourceDefinition);
            await eventListener.AssertObjectIsValid(nameof(__updateResourceDefinition), __updateResourceDefinition);
        }
    }
    /// Specifies information about the gallery image definition that you want to update.
    public partial interface IGalleryImageUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinition
    {
        /// <summary>
        /// The description of this gallery image definition resource. This property is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of this gallery image definition resource. This property is updatable.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>A list of disk types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of disk types.",
        SerializedName = @"diskTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] DisallowedDiskType { get; set; }
        /// <summary>
        /// The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndOfLifeDate { get; set; }
        /// <summary>The Eula agreement for the gallery image definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Eula agreement for the gallery image definition.",
        SerializedName = @"eula",
        PossibleTypes = new [] { typeof(string) })]
        string Eula { get; set; }
        /// <summary>A list of gallery image features.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A list of gallery image features.",
        SerializedName = @"features",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageFeature) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageFeature[] Feature { get; set; }
        /// <summary>The hypervisor generation of the Virtual Machine. Applicable to OS disks only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hypervisor generation of the Virtual Machine. Applicable to OS disks only.",
        SerializedName = @"hyperVGeneration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGeneration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGeneration? HyperVGeneration { get; set; }
        /// <summary>The name of the gallery image definition offer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the gallery image definition offer.",
        SerializedName = @"offer",
        PossibleTypes = new [] { typeof(string) })]
        string IdentifierOffer { get; set; }
        /// <summary>The name of the gallery image definition publisher.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the gallery image definition publisher.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string IdentifierPublisher { get; set; }
        /// <summary>The name of the gallery image definition SKU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the gallery image definition SKU.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string IdentifierSku { get; set; }
        /// <summary>The maximum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of the resource.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? MemoryMax { get; set; }
        /// <summary>The minimum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of the resource.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? MemoryMin { get; set; }
        /// <summary>
        /// This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.",
        SerializedName = @"osState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemStateTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemStateTypes? OSState { get; set; }
        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed
        /// image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**",
        SerializedName = @"osType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get; set; }
        /// <summary>The privacy statement uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The privacy statement uri.",
        SerializedName = @"privacyStatementUri",
        PossibleTypes = new [] { typeof(string) })]
        string PrivacyStatementUri { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The plan ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The plan ID.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePlanName { get; set; }
        /// <summary>The product ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The product ID.",
        SerializedName = @"product",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePlanProduct { get; set; }
        /// <summary>The publisher ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher ID.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string PurchasePlanPublisher { get; set; }
        /// <summary>The release note uri.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The release note uri.",
        SerializedName = @"releaseNoteUri",
        PossibleTypes = new [] { typeof(string) })]
        string ReleaseNoteUri { get; set; }
        /// <summary>The maximum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of the resource.",
        SerializedName = @"max",
        PossibleTypes = new [] { typeof(int) })]
        int? VCpUsMax { get; set; }
        /// <summary>The minimum number of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum number of the resource.",
        SerializedName = @"min",
        PossibleTypes = new [] { typeof(int) })]
        int? VCpUsMin { get; set; }

    }
    /// Specifies information about the gallery image definition that you want to update.
    internal partial interface IGalleryImageUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceDefinitionInternal
    {
        /// <summary>
        /// The description of this gallery image definition resource. This property is updatable.
        /// </summary>
        string Description { get; set; }
        /// <summary>Describes the disallowed disk types.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IDisallowed Disallowed { get; set; }
        /// <summary>A list of disk types.</summary>
        string[] DisallowedDiskType { get; set; }
        /// <summary>
        /// The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property
        /// is updatable.
        /// </summary>
        global::System.DateTime? EndOfLifeDate { get; set; }
        /// <summary>The Eula agreement for the gallery image definition.</summary>
        string Eula { get; set; }
        /// <summary>A list of gallery image features.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageFeature[] Feature { get; set; }
        /// <summary>The hypervisor generation of the Virtual Machine. Applicable to OS disks only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.HyperVGeneration? HyperVGeneration { get; set; }
        /// <summary>This is the gallery image definition identifier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageIdentifier Identifier { get; set; }
        /// <summary>The name of the gallery image definition offer.</summary>
        string IdentifierOffer { get; set; }
        /// <summary>The name of the gallery image definition publisher.</summary>
        string IdentifierPublisher { get; set; }
        /// <summary>The name of the gallery image definition SKU.</summary>
        string IdentifierSku { get; set; }
        /// <summary>The maximum number of the resource.</summary>
        int? MemoryMax { get; set; }
        /// <summary>The minimum number of the resource.</summary>
        int? MemoryMin { get; set; }
        /// <summary>
        /// This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemStateTypes? OSState { get; set; }
        /// <summary>
        /// This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed
        /// image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.OperatingSystemTypes? OSType { get; set; }
        /// <summary>The privacy statement uri.</summary>
        string PrivacyStatementUri { get; set; }
        /// <summary>Describes the properties of a gallery image definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IGalleryImageProperties Property { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Describes the gallery image definition purchase plan. This is used by marketplace images.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IImagePurchasePlan PurchasePlan { get; set; }
        /// <summary>The plan ID.</summary>
        string PurchasePlanName { get; set; }
        /// <summary>The product ID.</summary>
        string PurchasePlanProduct { get; set; }
        /// <summary>The publisher ID.</summary>
        string PurchasePlanPublisher { get; set; }
        /// <summary>
        /// The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRecommendedMachineConfiguration Recommended { get; set; }
        /// <summary>Describes the resource range.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceRange RecommendedMemory { get; set; }
        /// <summary>Describes the resource range.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IResourceRange RecommendedVCpUs { get; set; }
        /// <summary>The release note uri.</summary>
        string ReleaseNoteUri { get; set; }
        /// <summary>The maximum number of the resource.</summary>
        int? VCpUsMax { get; set; }
        /// <summary>The minimum number of the resource.</summary>
        int? VCpUsMin { get; set; }

    }
}