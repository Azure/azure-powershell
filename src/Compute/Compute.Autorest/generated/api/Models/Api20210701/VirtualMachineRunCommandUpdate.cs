// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes a Virtual Machine run command.</summary>
    public partial class VirtualMachineRunCommandUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResource __updateResource = new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.UpdateResource();

        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public bool? AsyncExecution { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).AsyncExecution; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).AsyncExecution = value ?? default(bool); }

        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ErrorBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ErrorBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ErrorBlobUri = value ?? null; }

        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewEndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewEndTime = value ?? default(global::System.DateTime); }

        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewError = value ?? null; }

        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionMessage = value ?? null; }

        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExecutionState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState)""); }

        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? InstanceViewExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewExitCode = value ?? default(int); }

        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewOutput { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewOutput; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewOutput = value ?? null; }

        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewStatuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceViewStatuses = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdateInternal.InstanceView { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceView; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).InstanceView = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandProperties Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdateInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandUpdateInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).Source = value; }

        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string OutputBlobUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).OutputBlobUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).OutputBlobUri = value ?? null; }

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).Parameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).Parameter = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandProperties _property;

        /// <summary>Describes the properties of a Virtual Machine run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandProperties()); set => this._property = value; }

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ProtectedParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ProtectedParameter = value ?? null /* arrayOf */; }

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string RunAsPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).RunAsPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).RunAsPassword = value ?? null; }

        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string RunAsUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).RunAsUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).RunAsUser = value ?? null; }

        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceCommandId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceCommandId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceCommandId = value ?? null; }

        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceScript { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceScript; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceScript = value ?? null; }

        /// <summary>Specifies the script download location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceScriptUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceScriptUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).SourceScriptUri = value ?? null; }

        /// <summary>Resource tags</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceInternal)__updateResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceInternal)__updateResource).Tag = value ?? null /* model class */; }

        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? TimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).TimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal)Property).TimeoutInSecond = value ?? default(int); }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__updateResource), __updateResource);
            await eventListener.AssertObjectIsValid(nameof(__updateResource), __updateResource);
        }

        /// <summary>Creates an new <see cref="VirtualMachineRunCommandUpdate" /> instance.</summary>
        public VirtualMachineRunCommandUpdate()
        {

        }
    }
    /// Describes a Virtual Machine run command.
    public partial interface IVirtualMachineRunCommandUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResource
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.",
        SerializedName = @"asyncExecution",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AsyncExecution { get; set; }
        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the Azure storage blob where script error stream will be uploaded.",
        SerializedName = @"errorBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobUri { get; set; }
        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script error stream.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Communicate script configuration errors or execution messages.",
        SerializedName = @"executionMessage",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script execution status.",
        SerializedName = @"executionState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exit code returned from script execution.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script output stream.",
        SerializedName = @"output",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get; set; }
        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the Azure storage blob where script output stream will be uploaded.",
        SerializedName = @"outputBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameters used by the script.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameters used by the script.",
        SerializedName = @"protectedParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the user account password on the VM when executing the run command.",
        SerializedName = @"runAsPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the user account on the VM when executing the run command.",
        SerializedName = @"runAsUser",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsUser { get; set; }
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a commandId of predefined built-in script.",
        SerializedName = @"commandId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script content to be executed on the VM.",
        SerializedName = @"script",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScript { get; set; }
        /// <summary>Specifies the script download location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script download location.",
        SerializedName = @"scriptUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timeout in seconds to execute the run command.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }

    }
    /// Describes a Virtual Machine run command.
    internal partial interface IVirtualMachineRunCommandUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IUpdateResourceInternal
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        bool? AsyncExecution { get; set; }
        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        string ErrorBlobUri { get; set; }
        /// <summary>The virtual machine run command instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView InstanceView { get; set; }
        /// <summary>Script end time.</summary>
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get; set; }
        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get; set; }
        /// <summary>Describes the properties of a Virtual Machine run command.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandProperties Property { get; set; }
        /// <summary>The parameters used by the script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        string RunAsUser { get; set; }
        /// <summary>The source of the run command script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource Source { get; set; }
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        string SourceScript { get; set; }
        /// <summary>Specifies the script download location.</summary>
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        int? TimeoutInSecond { get; set; }

    }
}