// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Describes the properties of a Virtual Machine run command.</summary>
    public partial class VirtualMachineRunCommandProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AsyncExecution" /> property.</summary>
        private bool? _asyncExecution;

        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? AsyncExecution { get => this._asyncExecution; set => this._asyncExecution = value; }

        /// <summary>Backing field for <see cref="ErrorBlobUri" /> property.</summary>
        private string _errorBlobUri;

        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ErrorBlobUri { get => this._errorBlobUri; set => this._errorBlobUri = value; }

        /// <summary>Backing field for <see cref="InstanceView" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView _instanceView;

        /// <summary>The virtual machine run command instance view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandInstanceView()); }

        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).EndTime = value ?? default(global::System.DateTime); }

        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Error; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Error = value ?? null; }

        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewExecutionMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExecutionMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExecutionMessage = value ?? null; }

        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExecutionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExecutionState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState)""); }

        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public int? InstanceViewExitCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExitCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).ExitCode = value ?? default(int); }

        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string InstanceViewOutput { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Output; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Output = value ?? null; }

        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public global::System.DateTime? InstanceViewStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Statuses; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceViewInternal)InstanceView).Statuses = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for InstanceView</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal.InstanceView { get => (this._instanceView = this._instanceView ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandInstanceView()); set { {_instanceView = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandPropertiesInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandScriptSource()); set { {_source = value;} } }

        /// <summary>Backing field for <see cref="OutputBlobUri" /> property.</summary>
        private string _outputBlobUri;

        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string OutputBlobUri { get => this._outputBlobUri; set => this._outputBlobUri = value; }

        /// <summary>Backing field for <see cref="Parameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] _parameter;

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get => this._parameter; set => this._parameter = value; }

        /// <summary>Backing field for <see cref="ProtectedParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] _protectedParameter;

        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get => this._protectedParameter; set => this._protectedParameter = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RunAsPassword" /> property.</summary>
        private string _runAsPassword;

        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string RunAsPassword { get => this._runAsPassword; set => this._runAsPassword = value; }

        /// <summary>Backing field for <see cref="RunAsUser" /> property.</summary>
        private string _runAsUser;

        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string RunAsUser { get => this._runAsUser; set => this._runAsUser = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource _source;

        /// <summary>The source of the run command script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.VirtualMachineRunCommandScriptSource()); set => this._source = value; }

        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceCommandId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).CommandId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).CommandId = value ?? null; }

        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceScript { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).Script; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).Script = value ?? null; }

        /// <summary>Specifies the script download location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Inlined)]
        public string SourceScriptUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).ScriptUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSourceInternal)Source).ScriptUri = value ?? null; }

        /// <summary>Backing field for <see cref="TimeoutInSecond" /> property.</summary>
        private int? _timeoutInSecond;

        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? TimeoutInSecond { get => this._timeoutInSecond; set => this._timeoutInSecond = value; }

        /// <summary>Creates an new <see cref="VirtualMachineRunCommandProperties" /> instance.</summary>
        public VirtualMachineRunCommandProperties()
        {

        }
    }
    /// Describes the properties of a Virtual Machine run command.
    public partial interface IVirtualMachineRunCommandProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.",
        SerializedName = @"asyncExecution",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AsyncExecution { get; set; }
        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the Azure storage blob where script error stream will be uploaded.",
        SerializedName = @"errorBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorBlobUri { get; set; }
        /// <summary>Script end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script error stream.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Communicate script configuration errors or execution messages.",
        SerializedName = @"executionMessage",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script execution status.",
        SerializedName = @"executionState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exit code returned from script execution.",
        SerializedName = @"exitCode",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script output stream.",
        SerializedName = @"output",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Script start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The resource status information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource status information.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get; set; }
        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the Azure storage blob where script output stream will be uploaded.",
        SerializedName = @"outputBlobUri",
        PossibleTypes = new [] { typeof(string) })]
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameters used by the script.",
        SerializedName = @"parameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The parameters used by the script.",
        SerializedName = @"protectedParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state, which only appears in the response.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the user account password on the VM when executing the run command.",
        SerializedName = @"runAsPassword",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the user account on the VM when executing the run command.",
        SerializedName = @"runAsUser",
        PossibleTypes = new [] { typeof(string) })]
        string RunAsUser { get; set; }
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies a commandId of predefined built-in script.",
        SerializedName = @"commandId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script content to be executed on the VM.",
        SerializedName = @"script",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScript { get; set; }
        /// <summary>Specifies the script download location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the script download location.",
        SerializedName = @"scriptUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timeout in seconds to execute the run command.",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }

    }
    /// Describes the properties of a Virtual Machine run command.
    internal partial interface IVirtualMachineRunCommandPropertiesInternal

    {
        /// <summary>
        /// Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
        /// </summary>
        bool? AsyncExecution { get; set; }
        /// <summary>Specifies the Azure storage blob where script error stream will be uploaded.</summary>
        string ErrorBlobUri { get; set; }
        /// <summary>The virtual machine run command instance view.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandInstanceView InstanceView { get; set; }
        /// <summary>Script end time.</summary>
        global::System.DateTime? InstanceViewEndTime { get; set; }
        /// <summary>Script error stream.</summary>
        string InstanceViewError { get; set; }
        /// <summary>Communicate script configuration errors or execution messages.</summary>
        string InstanceViewExecutionMessage { get; set; }
        /// <summary>Script execution status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Support.ExecutionState? InstanceViewExecutionState { get; set; }
        /// <summary>Exit code returned from script execution.</summary>
        int? InstanceViewExitCode { get; set; }
        /// <summary>Script output stream.</summary>
        string InstanceViewOutput { get; set; }
        /// <summary>Script start time.</summary>
        global::System.DateTime? InstanceViewStartTime { get; set; }
        /// <summary>The resource status information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IInstanceViewStatus[] InstanceViewStatuses { get; set; }
        /// <summary>Specifies the Azure storage blob where script output stream will be uploaded.</summary>
        string OutputBlobUri { get; set; }
        /// <summary>The parameters used by the script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] Parameter { get; set; }
        /// <summary>The parameters used by the script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IRunCommandInputParameter[] ProtectedParameter { get; set; }
        /// <summary>The provisioning state, which only appears in the response.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Specifies the user account password on the VM when executing the run command.</summary>
        string RunAsPassword { get; set; }
        /// <summary>Specifies the user account on the VM when executing the run command.</summary>
        string RunAsUser { get; set; }
        /// <summary>The source of the run command script.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20210701.IVirtualMachineRunCommandScriptSource Source { get; set; }
        /// <summary>Specifies a commandId of predefined built-in script.</summary>
        string SourceCommandId { get; set; }
        /// <summary>Specifies the script content to be executed on the VM.</summary>
        string SourceScript { get; set; }
        /// <summary>Specifies the script download location.</summary>
        string SourceScriptUri { get; set; }
        /// <summary>The timeout in seconds to execute the run command.</summary>
        int? TimeoutInSecond { get; set; }

    }
}