// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>SpotPlacementRecommender API Input.</summary>
    public partial class SpotPlacementRecommenderInput :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.ISpotPlacementRecommenderInput,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.ISpotPlacementRecommenderInputInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private bool? _availabilityZone;

        /// <summary>Defines if the scope is zonal or regional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public bool? AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="DesiredCount" /> property.</summary>
        private int? _desiredCount;

        /// <summary>Desired instance count per region/zone based on the scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public int? DesiredCount { get => this._desiredCount; set => this._desiredCount = value; }

        /// <summary>Backing field for <see cref="DesiredLocation" /> property.</summary>
        private string[] _desiredLocation;

        /// <summary>The desired regions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string[] DesiredLocation { get => this._desiredLocation; set => this._desiredLocation = value; }

        /// <summary>Backing field for <see cref="DesiredSize" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IResourceSize[] _desiredSize;

        /// <summary>The desired resource SKUs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IResourceSize[] DesiredSize { get => this._desiredSize; set => this._desiredSize = value; }

        /// <summary>Creates an new <see cref="SpotPlacementRecommenderInput" /> instance.</summary>
        public SpotPlacementRecommenderInput()
        {

        }
    }
    /// SpotPlacementRecommender API Input.
    public partial interface ISpotPlacementRecommenderInput :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>Defines if the scope is zonal or regional.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines if the scope is zonal or regional.",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AvailabilityZone { get; set; }
        /// <summary>Desired instance count per region/zone based on the scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Desired instance count per region/zone based on the scope.",
        SerializedName = @"desiredCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DesiredCount { get; set; }
        /// <summary>The desired regions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired regions",
        SerializedName = @"desiredLocations",
        PossibleTypes = new [] { typeof(string) })]
        string[] DesiredLocation { get; set; }
        /// <summary>The desired resource SKUs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The desired resource SKUs.",
        SerializedName = @"desiredSizes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IResourceSize) })]
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IResourceSize[] DesiredSize { get; set; }

    }
    /// SpotPlacementRecommender API Input.
    internal partial interface ISpotPlacementRecommenderInputInternal

    {
        /// <summary>Defines if the scope is zonal or regional.</summary>
        bool? AvailabilityZone { get; set; }
        /// <summary>Desired instance count per region/zone based on the scope.</summary>
        int? DesiredCount { get; set; }
        /// <summary>The desired regions</summary>
        string[] DesiredLocation { get; set; }
        /// <summary>The desired resource SKUs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IResourceSize[] DesiredSize { get; set; }

    }
}