// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Extensions;

    /// <summary>Data used for requesting a Disk Inspection execution.</summary>
    public partial class RunDiskInspectionInput :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IRunDiskInspectionInput,
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Models.Api20240301Preview.IRunDiskInspectionInputInternal
    {

        /// <summary>Backing field for <see cref="Manifest" /> property.</summary>
        private string _manifest;

        /// <summary>Name of manifest in order to trigger Disk Inspection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string Manifest { get => this._manifest; set => this._manifest = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>Qualified ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="UploadSasUri" /> property.</summary>
        private string _uploadSasUri;

        /// <summary>SAS uri to the blob where results will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Origin(Microsoft.Azure.PowerShell.Cmdlets.Compute.PropertyOrigin.Owned)]
        public string UploadSasUri { get => this._uploadSasUri; set => this._uploadSasUri = value; }

        /// <summary>Creates an new <see cref="RunDiskInspectionInput" /> instance.</summary>
        public RunDiskInspectionInput()
        {

        }
    }
    /// Data used for requesting a Disk Inspection execution.
    public partial interface IRunDiskInspectionInput :
        Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.IJsonSerializable
    {
        /// <summary>Name of manifest in order to trigger Disk Inspection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of manifest in order to trigger Disk Inspection.",
        SerializedName = @"manifest",
        PossibleTypes = new [] { typeof(string) })]
        string Manifest { get; set; }
        /// <summary>Qualified ID of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Qualified ID of the resource.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>SAS uri to the blob where results will be uploaded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Compute.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"SAS uri to the blob where results will be uploaded.",
        SerializedName = @"uploadSasUri",
        PossibleTypes = new [] { typeof(string) })]
        string UploadSasUri { get; set; }

    }
    /// Data used for requesting a Disk Inspection execution.
    internal partial interface IRunDiskInspectionInputInternal

    {
        /// <summary>Name of manifest in order to trigger Disk Inspection.</summary>
        string Manifest { get; set; }
        /// <summary>Qualified ID of the resource.</summary>
        string ResourceId { get; set; }
        /// <summary>SAS uri to the blob where results will be uploaded.</summary>
        string UploadSasUri { get; set; }

    }
}