// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Cmdlets.Compute.Helpers.Storage.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// List of encryption scopes requested, and if paging is required, a URL
    /// to the next page of encryption scopes.
    /// </summary>
    public partial class EncryptionScopeListResult
    {
        /// <summary>
        /// Initializes a new instance of the EncryptionScopeListResult class.
        /// </summary>
        public EncryptionScopeListResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EncryptionScopeListResult class.
        /// </summary>
        /// <param name="value">List of encryption scopes requested.</param>
        /// <param name="nextLink">Request URL that can be used to query next
        /// page of encryption scopes. Returned when total number of requested
        /// encryption scopes exceeds the maximum page size.</param>
        public EncryptionScopeListResult(IList<EncryptionScope> value = default(IList<EncryptionScope>), string nextLink = default(string))
        {
            Value = value;
            NextLink = nextLink;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets list of encryption scopes requested.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public IList<EncryptionScope> Value { get; private set; }

        /// <summary>
        /// Gets request URL that can be used to query next page of encryption
        /// scopes. Returned when total number of requested encryption scopes
        /// exceeds the maximum page size.
        /// </summary>
        [JsonProperty(PropertyName = "nextLink")]
        public string NextLink { get; private set; }

    }
}
