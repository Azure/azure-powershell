// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties for a run.</summary>
    public partial class RunProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AgentConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties _agentConfiguration;

        /// <summary>The machine configuration of the run agent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties AgentConfiguration { get => (this._agentConfiguration = this._agentConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.AgentProperties()); set => this._agentConfiguration = value; }

        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? AgentConfigurationCpu { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentPropertiesInternal)AgentConfiguration).Cpu; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentPropertiesInternal)AgentConfiguration).Cpu = value ?? default(int); }

        /// <summary>Backing field for <see cref="AgentPoolName" /> property.</summary>
        private string _agentPoolName;

        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string AgentPoolName { get => this._agentPoolName; set => this._agentPoolName = value; }

        /// <summary>Backing field for <see cref="CreateTime" /> property.</summary>
        private global::System.DateTime? _createTime;

        /// <summary>The time the run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? CreateTime { get => this._createTime; set => this._createTime = value; }

        /// <summary>Backing field for <see cref="CustomRegistry" /> property.</summary>
        private string[] _customRegistry;

        /// <summary>The list of custom registries that were logged in during this run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] CustomRegistry { get => this._customRegistry; set => this._customRegistry = value; }

        /// <summary>Backing field for <see cref="FinishTime" /> property.</summary>
        private global::System.DateTime? _finishTime;

        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? FinishTime { get => this._finishTime; set => this._finishTime = value; }

        /// <summary>Backing field for <see cref="ImageUpdateTrigger" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger _imageUpdateTrigger;

        /// <summary>
        /// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger ImageUpdateTrigger { get => (this._imageUpdateTrigger = this._imageUpdateTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ImageUpdateTrigger()); set => this._imageUpdateTrigger = value; }

        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ImageUpdateTriggerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Id = value ?? null; }

        /// <summary>The list of image updates that caused the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Image; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Image = value ?? null /* arrayOf */; }

        /// <summary>The timestamp when the image update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImageUpdateTriggerTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Timestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTriggerInternal)ImageUpdateTrigger).Timestamp = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="IsArchiveEnabled" /> property.</summary>
        private bool? _isArchiveEnabled;

        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public bool? IsArchiveEnabled { get => this._isArchiveEnabled; set => this._isArchiveEnabled = value; }

        /// <summary>Backing field for <see cref="LastUpdatedTime" /> property.</summary>
        private global::System.DateTime? _lastUpdatedTime;

        /// <summary>The last updated time for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedTime { get => this._lastUpdatedTime; set => this._lastUpdatedTime = value; }

        /// <summary>Backing field for <see cref="LogArtifact" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor _logArtifact;

        /// <summary>The image description for the log artifact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor LogArtifact { get => (this._logArtifact = this._logArtifact ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ImageDescriptor()); }

        /// <summary>The sha256-based digest of the image manifest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactDigest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Digest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Digest = value ?? null; }

        /// <summary>The registry login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactRegistry { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Registry; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Registry = value ?? null; }

        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactRepository { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Repository; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Repository = value ?? null; }

        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string LogArtifactTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptorInternal)LogArtifact).Tag = value ?? null; }

        /// <summary>Internal Acessors for AgentConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.AgentConfiguration { get => (this._agentConfiguration = this._agentConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.AgentProperties()); set { {_agentConfiguration = value;} } }

        /// <summary>Internal Acessors for ImageUpdateTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.ImageUpdateTrigger { get => (this._imageUpdateTrigger = this._imageUpdateTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ImageUpdateTrigger()); set { {_imageUpdateTrigger = value;} } }

        /// <summary>Internal Acessors for LogArtifact</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.LogArtifact { get => (this._logArtifact = this._logArtifact ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ImageDescriptor()); set { {_logArtifact = value;} } }

        /// <summary>Internal Acessors for Platform</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.PlatformProperties()); set { {_platform = value;} } }

        /// <summary>Internal Acessors for RunErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.RunErrorMessage { get => this._runErrorMessage; set { {_runErrorMessage = value;} } }

        /// <summary>Internal Acessors for SourceTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.SourceTrigger { get => (this._sourceTrigger = this._sourceTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.SourceTriggerDescriptor()); set { {_sourceTrigger = value;} } }

        /// <summary>Internal Acessors for TimerTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunPropertiesInternal.TimerTrigger { get => (this._timerTrigger = this._timerTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.TimerTriggerDescriptor()); set { {_timerTrigger = value;} } }

        /// <summary>Backing field for <see cref="OutputImage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] _outputImage;

        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get => this._outputImage; set => this._outputImage = value; }

        /// <summary>Backing field for <see cref="Platform" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties _platform;

        /// <summary>The platform properties against which the run will happen.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties Platform { get => (this._platform = this._platform ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.PlatformProperties()); set => this._platform = value; }

        /// <summary>The OS architecture.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).Architecture; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).Architecture = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture)""); }

        /// <summary>The operating system type required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).OS; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).OS = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS)""); }

        /// <summary>Variant of the CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).Variant; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformPropertiesInternal)Platform).Variant = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant)""); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="RunErrorMessage" /> property.</summary>
        private string _runErrorMessage;

        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RunErrorMessage { get => this._runErrorMessage; }

        /// <summary>Backing field for <see cref="RunId" /> property.</summary>
        private string _runId;

        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RunId { get => this._runId; set => this._runId = value; }

        /// <summary>Backing field for <see cref="RunType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? _runType;

        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get => this._runType; set => this._runType = value; }

        /// <summary>Backing field for <see cref="SourceRegistryAuth" /> property.</summary>
        private string _sourceRegistryAuth;

        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string SourceRegistryAuth { get => this._sourceRegistryAuth; set => this._sourceRegistryAuth = value; }

        /// <summary>Backing field for <see cref="SourceTrigger" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor _sourceTrigger;

        /// <summary>The source trigger that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor SourceTrigger { get => (this._sourceTrigger = this._sourceTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.SourceTriggerDescriptor()); set => this._sourceTrigger = value; }

        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerBranchName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).BranchName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).BranchName = value ?? null; }

        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerCommitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).CommitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).CommitId = value ?? null; }

        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerEventType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).EventType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).EventType = value ?? null; }

        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).Id = value ?? null; }

        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerProviderType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).ProviderType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).ProviderType = value ?? null; }

        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerPullRequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).PullRequestId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).PullRequestId = value ?? null; }

        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceTriggerRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).RepositoryUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal)SourceTrigger).RepositoryUrl = value ?? null; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The time the run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? _status;

        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Task" /> property.</summary>
        private string _task;

        /// <summary>The task against which run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Task { get => this._task; set => this._task = value; }

        /// <summary>Backing field for <see cref="TimerTrigger" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor _timerTrigger;

        /// <summary>The timer trigger that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor TimerTrigger { get => (this._timerTrigger = this._timerTrigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.TimerTriggerDescriptor()); set => this._timerTrigger = value; }

        /// <summary>The timer trigger name that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TimerTriggerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptorInternal)TimerTrigger).TimerTriggerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptorInternal)TimerTrigger).TimerTriggerName = value ?? null; }

        /// <summary>The occurrence that triggered the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TimerTriggerScheduleOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptorInternal)TimerTrigger).ScheduleOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptorInternal)TimerTrigger).ScheduleOccurrence = value ?? null; }

        /// <summary>Backing field for <see cref="UpdateTriggerToken" /> property.</summary>
        private string _updateTriggerToken;

        /// <summary>The update trigger token passed for the Run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string UpdateTriggerToken { get => this._updateTriggerToken; set => this._updateTriggerToken = value; }

        /// <summary>Creates an new <see cref="RunProperties" /> instance.</summary>
        public RunProperties()
        {

        }
    }
    /// The properties for a run.
    public partial interface IRunProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The CPU configuration in terms of number of cores required for the run.",
        SerializedName = @"cpu",
        PossibleTypes = new [] { typeof(int) })]
        int? AgentConfigurationCpu { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The dedicated agent pool for the run.",
        SerializedName = @"agentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string AgentPoolName { get; set; }
        /// <summary>The time the run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run was scheduled.",
        SerializedName = @"createTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The list of custom registries that were logged in during this run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of custom registries that were logged in during this run.",
        SerializedName = @"customRegistries",
        PossibleTypes = new [] { typeof(string) })]
        string[] CustomRegistry { get; set; }
        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID of the trigger.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ImageUpdateTriggerId { get; set; }
        /// <summary>The list of image updates that caused the build.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of image updates that caused the build.",
        SerializedName = @"images",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get; set; }
        /// <summary>The timestamp when the image update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when the image update happened.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImageUpdateTriggerTimestamp { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether archiving is enabled or not.",
        SerializedName = @"isArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsArchiveEnabled { get; set; }
        /// <summary>The last updated time for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The last updated time for the run.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedTime { get; set; }
        /// <summary>The sha256-based digest of the image manifest.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The sha256-based digest of the image manifest.",
        SerializedName = @"digest",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactDigest { get; set; }
        /// <summary>The registry login server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The registry login server.",
        SerializedName = @"registry",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactRegistry { get; set; }
        /// <summary>The repository name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository name.",
        SerializedName = @"repository",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactRepository { get; set; }
        /// <summary>The tag name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tag name.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string LogArtifactTag { get; set; }
        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.",
        SerializedName = @"outputImages",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get; set; }
        /// <summary>The OS architecture.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS architecture.",
        SerializedName = @"architecture",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get; set; }
        /// <summary>The operating system type required for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operating system type required for the run.",
        SerializedName = @"os",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get; set; }
        /// <summary>Variant of the CPU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Variant of the CPU.",
        SerializedName = @"variant",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get; set; }
        /// <summary>The provisioning state of a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioning state of a run.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message received from backend systems after the run is scheduled.",
        SerializedName = @"runErrorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string RunErrorMessage { get;  }
        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the run.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get; set; }
        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of run.",
        SerializedName = @"runType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scope of the credentials that were used to login to the source registry during this run.",
        SerializedName = @"sourceRegistryAuth",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRegistryAuth { get; set; }
        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch name in the repository.",
        SerializedName = @"branchName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerBranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies a commit.",
        SerializedName = @"commitId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerCommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event type of the trigger.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerEventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID of the trigger.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerId { get; set; }
        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source control provider type.",
        SerializedName = @"providerType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies pull request.",
        SerializedName = @"pullRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerPullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository URL.",
        SerializedName = @"repositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string SourceTriggerRepositoryUrl { get; set; }
        /// <summary>The time the run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the run.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The task against which run was scheduled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The task against which run was scheduled.",
        SerializedName = @"task",
        PossibleTypes = new [] { typeof(string) })]
        string Task { get; set; }
        /// <summary>The timer trigger name that caused the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timer trigger name that caused the run.",
        SerializedName = @"timerTriggerName",
        PossibleTypes = new [] { typeof(string) })]
        string TimerTriggerName { get; set; }
        /// <summary>The occurrence that triggered the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The occurrence that triggered the run.",
        SerializedName = @"scheduleOccurrence",
        PossibleTypes = new [] { typeof(string) })]
        string TimerTriggerScheduleOccurrence { get; set; }
        /// <summary>The update trigger token passed for the Run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The update trigger token passed for the Run.",
        SerializedName = @"updateTriggerToken",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateTriggerToken { get; set; }

    }
    /// The properties for a run.
    internal partial interface IRunPropertiesInternal

    {
        /// <summary>The machine configuration of the run agent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IAgentProperties AgentConfiguration { get; set; }
        /// <summary>The CPU configuration in terms of number of cores required for the run.</summary>
        int? AgentConfigurationCpu { get; set; }
        /// <summary>The dedicated agent pool for the run.</summary>
        string AgentPoolName { get; set; }
        /// <summary>The time the run was scheduled.</summary>
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The list of custom registries that were logged in during this run.</summary>
        string[] CustomRegistry { get; set; }
        /// <summary>The time the run finished.</summary>
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>
        /// The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageUpdateTrigger ImageUpdateTrigger { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        string ImageUpdateTriggerId { get; set; }
        /// <summary>The list of image updates that caused the build.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] ImageUpdateTriggerImage { get; set; }
        /// <summary>The timestamp when the image update happened.</summary>
        global::System.DateTime? ImageUpdateTriggerTimestamp { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        bool? IsArchiveEnabled { get; set; }
        /// <summary>The last updated time for the run.</summary>
        global::System.DateTime? LastUpdatedTime { get; set; }
        /// <summary>The image description for the log artifact.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor LogArtifact { get; set; }
        /// <summary>The sha256-based digest of the image manifest.</summary>
        string LogArtifactDigest { get; set; }
        /// <summary>The registry login server.</summary>
        string LogArtifactRegistry { get; set; }
        /// <summary>The repository name.</summary>
        string LogArtifactRepository { get; set; }
        /// <summary>The tag name.</summary>
        string LogArtifactTag { get; set; }
        /// <summary>
        /// The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IImageDescriptor[] OutputImage { get; set; }
        /// <summary>The platform properties against which the run will happen.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IPlatformProperties Platform { get; set; }
        /// <summary>The OS architecture.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Architecture? PlatformArchitecture { get; set; }
        /// <summary>The operating system type required for the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.OS? PlatformOS { get; set; }
        /// <summary>Variant of the CPU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.Variant? PlatformVariant { get; set; }
        /// <summary>The provisioning state of a run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The error message received from backend systems after the run is scheduled.</summary>
        string RunErrorMessage { get; set; }
        /// <summary>The unique identifier for the run.</summary>
        string RunId { get; set; }
        /// <summary>The type of run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>
        /// The scope of the credentials that were used to login to the source registry during this run.
        /// </summary>
        string SourceRegistryAuth { get; set; }
        /// <summary>The source trigger that caused the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor SourceTrigger { get; set; }
        /// <summary>The branch name in the repository.</summary>
        string SourceTriggerBranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        string SourceTriggerCommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        string SourceTriggerEventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        string SourceTriggerId { get; set; }
        /// <summary>The source control provider type.</summary>
        string SourceTriggerProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        string SourceTriggerPullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        string SourceTriggerRepositoryUrl { get; set; }
        /// <summary>The time the run started.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The task against which run was scheduled.</summary>
        string Task { get; set; }
        /// <summary>The timer trigger that caused the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ITimerTriggerDescriptor TimerTrigger { get; set; }
        /// <summary>The timer trigger name that caused the run.</summary>
        string TimerTriggerName { get; set; }
        /// <summary>The occurrence that triggered the run.</summary>
        string TimerTriggerScheduleOccurrence { get; set; }
        /// <summary>The update trigger token passed for the Run.</summary>
        string UpdateTriggerToken { get; set; }

    }
}