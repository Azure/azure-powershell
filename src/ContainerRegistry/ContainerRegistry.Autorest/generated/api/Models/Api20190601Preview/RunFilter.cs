// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>Properties that are enabled for Odata querying on runs.</summary>
    public partial class RunFilter :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunFilter,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IRunFilterInternal
    {

        /// <summary>Backing field for <see cref="AgentPoolName" /> property.</summary>
        private string _agentPoolName;

        /// <summary>The name of the agent pool that the run corresponds to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string AgentPoolName { get => this._agentPoolName; set => this._agentPoolName = value; }

        /// <summary>Backing field for <see cref="CreateTime" /> property.</summary>
        private global::System.DateTime? _createTime;

        /// <summary>The create time for a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? CreateTime { get => this._createTime; set => this._createTime = value; }

        /// <summary>Backing field for <see cref="FinishTime" /> property.</summary>
        private global::System.DateTime? _finishTime;

        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? FinishTime { get => this._finishTime; set => this._finishTime = value; }

        /// <summary>Backing field for <see cref="IsArchiveEnabled" /> property.</summary>
        private bool? _isArchiveEnabled;

        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public bool? IsArchiveEnabled { get => this._isArchiveEnabled; set => this._isArchiveEnabled = value; }

        /// <summary>Backing field for <see cref="OutputImageManifest" /> property.</summary>
        private string _outputImageManifest;

        /// <summary>
        /// The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of
        /// build type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string OutputImageManifest { get => this._outputImageManifest; set => this._outputImageManifest = value; }

        /// <summary>Backing field for <see cref="RunId" /> property.</summary>
        private string _runId;

        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RunId { get => this._runId; set => this._runId = value; }

        /// <summary>Backing field for <see cref="RunType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? _runType;

        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get => this._runType; set => this._runType = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? _status;

        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TaskName" /> property.</summary>
        private string _taskName;

        /// <summary>The name of the task that the run corresponds to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TaskName { get => this._taskName; set => this._taskName = value; }

        /// <summary>Creates an new <see cref="RunFilter" /> instance.</summary>
        public RunFilter()
        {

        }
    }
    /// Properties that are enabled for Odata querying on runs.
    public partial interface IRunFilter :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The name of the agent pool that the run corresponds to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the agent pool that the run corresponds to.",
        SerializedName = @"agentPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string AgentPoolName { get; set; }
        /// <summary>The create time for a run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The create time for a run.",
        SerializedName = @"createTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The time the run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the run finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether archiving is enabled or not.",
        SerializedName = @"isArchiveEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsArchiveEnabled { get; set; }
        /// <summary>
        /// The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of
        /// build type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of
        build type.",
        SerializedName = @"outputImageManifests",
        PossibleTypes = new [] { typeof(string) })]
        string OutputImageManifest { get; set; }
        /// <summary>The unique identifier for the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier for the run.",
        SerializedName = @"runId",
        PossibleTypes = new [] { typeof(string) })]
        string RunId { get; set; }
        /// <summary>The type of run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of run.",
        SerializedName = @"runType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>The current status of the run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the run.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The name of the task that the run corresponds to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the task that the run corresponds to.",
        SerializedName = @"taskName",
        PossibleTypes = new [] { typeof(string) })]
        string TaskName { get; set; }

    }
    /// Properties that are enabled for Odata querying on runs.
    internal partial interface IRunFilterInternal

    {
        /// <summary>The name of the agent pool that the run corresponds to.</summary>
        string AgentPoolName { get; set; }
        /// <summary>The create time for a run.</summary>
        global::System.DateTime? CreateTime { get; set; }
        /// <summary>The time the run finished.</summary>
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>The value that indicates whether archiving is enabled or not.</summary>
        bool? IsArchiveEnabled { get; set; }
        /// <summary>
        /// The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of
        /// build type.
        /// </summary>
        string OutputImageManifest { get; set; }
        /// <summary>The unique identifier for the run.</summary>
        string RunId { get; set; }
        /// <summary>The type of run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunType? RunType { get; set; }
        /// <summary>The current status of the run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.RunStatus? Status { get; set; }
        /// <summary>The name of the task that the run corresponds to.</summary>
        string TaskName { get; set; }

    }
}