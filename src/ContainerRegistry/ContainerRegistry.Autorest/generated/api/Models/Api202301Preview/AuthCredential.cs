// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>Authentication credential stored for an upstream.</summary>
    public partial class AuthCredential :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IAuthCredential,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IAuthCredentialInternal
    {

        /// <summary>Backing field for <see cref="CredentialHealth" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealth _credentialHealth;

        /// <summary>This provides data pertaining to the health of the auth credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealth CredentialHealth { get => (this._credentialHealth = this._credentialHealth ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.CredentialHealth()); }

        /// <summary>Error code representing the health check error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string CredentialHealthErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).ErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).ErrorCode = value ?? null; }

        /// <summary>Descriptive message representing the health check error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string CredentialHealthErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).ErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).ErrorMessage = value ?? null; }

        /// <summary>The health status of credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialHealthStatus? CredentialHealthStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealthInternal)CredentialHealth).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialHealthStatus)""); }

        /// <summary>Internal Acessors for CredentialHealth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealth Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IAuthCredentialInternal.CredentialHealth { get => (this._credentialHealth = this._credentialHealth ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.CredentialHealth()); set { {_credentialHealth = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialName? _name;

        /// <summary>The name of the credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialName? Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="PasswordSecretIdentifier" /> property.</summary>
        private string _passwordSecretIdentifier;

        /// <summary>KeyVault Secret URI for accessing the password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string PasswordSecretIdentifier { get => this._passwordSecretIdentifier; set => this._passwordSecretIdentifier = value; }

        /// <summary>Backing field for <see cref="UsernameSecretIdentifier" /> property.</summary>
        private string _usernameSecretIdentifier;

        /// <summary>KeyVault Secret URI for accessing the username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string UsernameSecretIdentifier { get => this._usernameSecretIdentifier; set => this._usernameSecretIdentifier = value; }

        /// <summary>Creates an new <see cref="AuthCredential" /> instance.</summary>
        public AuthCredential()
        {

        }
    }
    /// Authentication credential stored for an upstream.
    public partial interface IAuthCredential :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>Error code representing the health check error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Error code representing the health check error.",
        SerializedName = @"errorCode",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialHealthErrorCode { get; set; }
        /// <summary>Descriptive message representing the health check error.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Descriptive message representing the health check error.",
        SerializedName = @"errorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialHealthErrorMessage { get; set; }
        /// <summary>The health status of credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The health status of credential.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialHealthStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialHealthStatus? CredentialHealthStatus { get; set; }
        /// <summary>The name of the credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the credential.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialName? Name { get; set; }
        /// <summary>KeyVault Secret URI for accessing the password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"KeyVault Secret URI for accessing the password.",
        SerializedName = @"passwordSecretIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string PasswordSecretIdentifier { get; set; }
        /// <summary>KeyVault Secret URI for accessing the username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"KeyVault Secret URI for accessing the username.",
        SerializedName = @"usernameSecretIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string UsernameSecretIdentifier { get; set; }

    }
    /// Authentication credential stored for an upstream.
    internal partial interface IAuthCredentialInternal

    {
        /// <summary>This provides data pertaining to the health of the auth credential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICredentialHealth CredentialHealth { get; set; }
        /// <summary>Error code representing the health check error.</summary>
        string CredentialHealthErrorCode { get; set; }
        /// <summary>Descriptive message representing the health check error.</summary>
        string CredentialHealthErrorMessage { get; set; }
        /// <summary>The health status of credential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialHealthStatus? CredentialHealthStatus { get; set; }
        /// <summary>The name of the credential.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CredentialName? Name { get; set; }
        /// <summary>KeyVault Secret URI for accessing the password.</summary>
        string PasswordSecretIdentifier { get; set; }
        /// <summary>KeyVault Secret URI for accessing the username.</summary>
        string UsernameSecretIdentifier { get; set; }

    }
}