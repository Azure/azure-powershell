// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The parameters for updating token properties.</summary>
    public partial class ConnectedRegistryUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ClientTokenId" /> property.</summary>
        private string[] _clientTokenId;

        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] ClientTokenId { get => this._clientTokenId; set => this._clientTokenId = value; }

        /// <summary>Backing field for <see cref="Logging" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties _logging;

        /// <summary>The logging properties of the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoggingProperties()); set => this._logging = value; }

        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).AuditLogStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).AuditLogStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus)""); }

        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).LogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingPropertiesInternal)Logging).LogLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel)""); }

        /// <summary>Internal Acessors for Logging</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryUpdatePropertiesInternal.Logging { get => (this._logging = this._logging ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.LoggingProperties()); set { {_logging = value;} } }

        /// <summary>Internal Acessors for SyncProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdateProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IConnectedRegistryUpdatePropertiesInternal.SyncProperty { get => (this._syncProperty = this._syncProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.SyncUpdateProperties()); set { {_syncProperty = value;} } }

        /// <summary>Backing field for <see cref="NotificationsList" /> property.</summary>
        private string[] _notificationsList;

        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] NotificationsList { get => this._notificationsList; set => this._notificationsList = value; }

        /// <summary>Backing field for <see cref="SyncProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdateProperties _syncProperty;

        /// <summary>The sync properties of the connected registry with its parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdateProperties SyncProperty { get => (this._syncProperty = this._syncProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.SyncUpdateProperties()); set => this._syncProperty = value; }

        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? SyncPropertyMessageTtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).MessageTtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).MessageTtl = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SyncPropertySchedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).Schedule = value ?? null; }

        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? SyncPropertySyncWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).SyncWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdatePropertiesInternal)SyncProperty).SyncWindow = value ?? default(global::System.TimeSpan); }

        /// <summary>Creates an new <see cref="ConnectedRegistryUpdateProperties" /> instance.</summary>
        public ConnectedRegistryUpdateProperties()
        {

        }
    }
    /// The parameters for updating token properties.
    public partial interface IConnectedRegistryUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of the ACR token resource IDs used to authenticate clients to the connected registry.",
        SerializedName = @"clientTokenIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ClientTokenId { get; set; }
        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether audit logs are enabled on the connected registry.",
        SerializedName = @"auditLogStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get; set; }
        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The verbosity of logs persisted on the connected registry.",
        SerializedName = @"logLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get; set; }
        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of notifications subscription information for the connected registry.",
        SerializedName = @"notificationsList",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationsList { get; set; }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"messageTtl",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SyncPropertyMessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cron expression indicating the schedule that the connected registry will sync with its parent.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string SyncPropertySchedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"syncWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SyncPropertySyncWindow { get; set; }

    }
    /// The parameters for updating token properties.
    internal partial interface IConnectedRegistryUpdatePropertiesInternal

    {
        /// <summary>
        /// The list of the ACR token resource IDs used to authenticate clients to the connected registry.
        /// </summary>
        string[] ClientTokenId { get; set; }
        /// <summary>The logging properties of the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ILoggingProperties Logging { get; set; }
        /// <summary>Indicates whether audit logs are enabled on the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AuditLogStatus? LoggingAuditLogStatus { get; set; }
        /// <summary>The verbosity of logs persisted on the connected registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LogLevel? LoggingLogLevel { get; set; }
        /// <summary>The list of notifications subscription information for the connected registry.</summary>
        string[] NotificationsList { get; set; }
        /// <summary>The sync properties of the connected registry with its parent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncUpdateProperties SyncProperty { get; set; }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        global::System.TimeSpan? SyncPropertyMessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        string SyncPropertySchedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        global::System.TimeSpan? SyncPropertySyncWindow { get; set; }

    }
}