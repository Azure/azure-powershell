// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The sync properties of the connected registry with its parent.</summary>
    public partial class SyncProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncPropertiesInternal
    {

        /// <summary>Backing field for <see cref="GatewayEndpoint" /> property.</summary>
        private string _gatewayEndpoint;

        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string GatewayEndpoint { get => this._gatewayEndpoint; }

        /// <summary>Backing field for <see cref="LastSyncTime" /> property.</summary>
        private global::System.DateTime? _lastSyncTime;

        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? LastSyncTime { get => this._lastSyncTime; }

        /// <summary>Backing field for <see cref="MessageTtl" /> property.</summary>
        private global::System.TimeSpan _messageTtl;

        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.TimeSpan MessageTtl { get => this._messageTtl; set => this._messageTtl = value; }

        /// <summary>Internal Acessors for GatewayEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncPropertiesInternal.GatewayEndpoint { get => this._gatewayEndpoint; set { {_gatewayEndpoint = value;} } }

        /// <summary>Internal Acessors for LastSyncTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISyncPropertiesInternal.LastSyncTime { get => this._lastSyncTime; set { {_lastSyncTime = value;} } }

        /// <summary>Backing field for <see cref="Schedule" /> property.</summary>
        private string _schedule;

        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Schedule { get => this._schedule; set => this._schedule = value; }

        /// <summary>Backing field for <see cref="SyncWindow" /> property.</summary>
        private global::System.TimeSpan? _syncWindow;

        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.TimeSpan? SyncWindow { get => this._syncWindow; set => this._syncWindow = value; }

        /// <summary>Backing field for <see cref="TokenId" /> property.</summary>
        private string _tokenId;

        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TokenId { get => this._tokenId; set => this._tokenId = value; }

        /// <summary>Creates an new <see cref="SyncProperties" /> instance.</summary>
        public SyncProperties()
        {

        }
    }
    /// The sync properties of the connected registry with its parent.
    public partial interface ISyncProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The gateway endpoint used by the connected registry to communicate with its parent.",
        SerializedName = @"gatewayEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string GatewayEndpoint { get;  }
        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The last time a sync occurred between the connected registry and its parent.",
        SerializedName = @"lastSyncTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastSyncTime { get;  }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"messageTtl",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan MessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cron expression indicating the schedule that the connected registry will sync with its parent.",
        SerializedName = @"schedule",
        PossibleTypes = new [] { typeof(string) })]
        string Schedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.",
        SerializedName = @"syncWindow",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? SyncWindow { get; set; }
        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.",
        SerializedName = @"tokenId",
        PossibleTypes = new [] { typeof(string) })]
        string TokenId { get; set; }

    }
    /// The sync properties of the connected registry with its parent.
    internal partial interface ISyncPropertiesInternal

    {
        /// <summary>
        /// The gateway endpoint used by the connected registry to communicate with its parent.
        /// </summary>
        string GatewayEndpoint { get; set; }
        /// <summary>The last time a sync occurred between the connected registry and its parent.</summary>
        global::System.DateTime? LastSyncTime { get; set; }
        /// <summary>
        /// The period of time for which a message is available to sync before it is expired. Specify the duration using the format
        /// P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
        /// </summary>
        global::System.TimeSpan MessageTtl { get; set; }
        /// <summary>
        /// The cron expression indicating the schedule that the connected registry will sync with its parent.
        /// </summary>
        string Schedule { get; set; }
        /// <summary>
        /// The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S
        /// as per ISO8601.
        /// </summary>
        global::System.TimeSpan? SyncWindow { get; set; }
        /// <summary>
        /// The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
        /// </summary>
        string TokenId { get; set; }

    }
}