// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties of an export pipeline.</summary>
    public partial class ExportPipelineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelinePropertiesInternal
    {

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelinePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Target</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelinePropertiesInternal.Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ExportPipelineTargetProperties()); set { {_target = value;} } }

        /// <summary>Backing field for <see cref="Option" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineOptions[] _option;

        /// <summary>The list of all options configured for the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineOptions[] Option { get => this._option; set => this._option = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the pipeline at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties _target;

        /// <summary>The target properties of the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ExportPipelineTargetProperties()); set => this._target = value; }

        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).KeyVaultUri = value ; }

        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Type = value ?? null; }

        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Uri = value ?? null; }

        /// <summary>Creates an new <see cref="ExportPipelineProperties" /> instance.</summary>
        public ExportPipelineProperties()
        {

        }
    }
    /// The properties of an export pipeline.
    public partial interface IExportPipelineProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The list of all options configured for the pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of all options configured for the pipeline.",
        SerializedName = @"options",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineOptions[] Option { get; set; }
        /// <summary>The provisioning state of the pipeline at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the pipeline at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"They key vault secret uri to obtain the target storage SAS token.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetKeyVaultUri { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of target for the export pipeline.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string TargetType { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target uri of the export pipeline.
        When 'AzureStorageBlob': ""https://accountName.blob.core.windows.net/containerName/blobName""
        When 'AzureStorageBlobContainer':  ""https://accountName.blob.core.windows.net/containerName""",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetUri { get; set; }

    }
    /// The properties of an export pipeline.
    internal partial interface IExportPipelinePropertiesInternal

    {
        /// <summary>The list of all options configured for the pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineOptions[] Option { get; set; }
        /// <summary>The provisioning state of the pipeline at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>The target properties of the export pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Target { get; set; }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        string TargetKeyVaultUri { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        string TargetType { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        string TargetUri { get; set; }

    }
}