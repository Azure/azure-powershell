// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The properties of a cache rule.</summary>
    public partial class CacheRuleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICacheRuleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICacheRulePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CreationDate" /> property.</summary>
        private global::System.DateTime? _creationDate;

        /// <summary>The creation date of the cache rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? CreationDate { get => this._creationDate; }

        /// <summary>Backing field for <see cref="CredentialSetResourceId" /> property.</summary>
        private string _credentialSetResourceId;

        /// <summary>
        /// The ARM resource ID of the credential store which is associated with the cache rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string CredentialSetResourceId { get => this._credentialSetResourceId; set => this._credentialSetResourceId = value; }

        /// <summary>Internal Acessors for CreationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICacheRulePropertiesInternal.CreationDate { get => this._creationDate; set { {_creationDate = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ICacheRulePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="SourceRepository" /> property.</summary>
        private string _sourceRepository;

        /// <summary>Source repository pulled from upstream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string SourceRepository { get => this._sourceRepository; set => this._sourceRepository = value; }

        /// <summary>Backing field for <see cref="TargetRepository" /> property.</summary>
        private string _targetRepository;

        /// <summary>
        /// Target repository specified in docker pull command.
        /// Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string TargetRepository { get => this._targetRepository; set => this._targetRepository = value; }

        /// <summary>Creates an new <see cref="CacheRuleProperties" /> instance.</summary>
        public CacheRuleProperties()
        {

        }
    }
    /// The properties of a cache rule.
    public partial interface ICacheRuleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The creation date of the cache rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the cache rule.",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationDate { get;  }
        /// <summary>
        /// The ARM resource ID of the credential store which is associated with the cache rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ARM resource ID of the credential store which is associated with the cache rule.",
        SerializedName = @"credentialSetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string CredentialSetResourceId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Source repository pulled from upstream.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source repository pulled from upstream.",
        SerializedName = @"sourceRepository",
        PossibleTypes = new [] { typeof(string) })]
        string SourceRepository { get; set; }
        /// <summary>
        /// Target repository specified in docker pull command.
        /// Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target repository specified in docker pull command.
        Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}",
        SerializedName = @"targetRepository",
        PossibleTypes = new [] { typeof(string) })]
        string TargetRepository { get; set; }

    }
    /// The properties of a cache rule.
    internal partial interface ICacheRulePropertiesInternal

    {
        /// <summary>The creation date of the cache rule.</summary>
        global::System.DateTime? CreationDate { get; set; }
        /// <summary>
        /// The ARM resource ID of the credential store which is associated with the cache rule.
        /// </summary>
        string CredentialSetResourceId { get; set; }
        /// <summary>Provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Source repository pulled from upstream.</summary>
        string SourceRepository { get; set; }
        /// <summary>
        /// Target repository specified in docker pull command.
        /// Eg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}
        /// </summary>
        string TargetRepository { get; set; }

    }
}