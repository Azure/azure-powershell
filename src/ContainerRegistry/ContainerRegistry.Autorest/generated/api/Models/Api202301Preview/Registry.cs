// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>An object that represents a container registry.</summary>
    public partial class Registry :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistry,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.Resource();

        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 5)]
        public bool? AdminUserEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AdminUserEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AdminUserEnabled = value ?? default(bool); }

        /// <summary>Enables registry-wide pull from unauthenticated clients.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public bool? AnonymousPullEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AnonymousPullEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AnonymousPullEnabled = value ?? default(bool); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AzureAdAuthenticationAsArmPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).AzureAdAuthenticationAsArmPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus)""); }

        /// <summary>The creation date of the container registry in ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 3)]
        public global::System.DateTime? CreationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).CreationDate; }

        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public bool? DataEndpointEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).DataEndpointEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).DataEndpointEnabled = value ?? default(bool); }

        /// <summary>List of host names that will serve data when dataEndpointEnabled is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string[] DataEndpointHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).DataEndpointHostName; }

        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).EncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).EncryptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus)""); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ExportPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ExportPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus)""); }

        /// <summary>The resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityProperties _identity;

        /// <summary>The identity of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IdentityProperties()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).PrincipalId = value ?? null; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).TenantId = value ?? null; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string KeyVaultPropertyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyIdentity = value ?? null; }

        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public bool? KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyKeyRotationEnabled; }

        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; }

        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyVersionedKeyIdentifier; }

        /// <summary>
        /// The location of the resource. This cannot be changed after the resource is created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Location = value ; }

        /// <summary>The URL that can be used to log into the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 2)]
        public string LoginServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).LoginServer; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for CreationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.CreationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).CreationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).CreationDate = value; }

        /// <summary>Internal Acessors for DataEndpointHostName</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.DataEndpointHostName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).DataEndpointHostName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).DataEndpointHostName = value; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionProperty Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).EncryptionKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).EncryptionKeyVaultProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyKeyRotationEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyKeyRotationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyKeyRotationEnabled = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyVersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).KeyVaultPropertyVersionedKeyIdentifier = value; }

        /// <summary>Internal Acessors for LoginServer</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.LoginServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).LoginServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).LoginServer = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.NetworkRuleSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSet = value; }

        /// <summary>Internal Acessors for Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPolicies Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Policy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Policy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Policy = value; }

        /// <summary>Internal Acessors for PolicyAzureAdAuthenticationAsArmPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IAzureAdAuthenticationAsArmPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicyAzureAdAuthenticationAsArmPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyAzureAdAuthenticationAsArmPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyAzureAdAuthenticationAsArmPolicy = value; }

        /// <summary>Internal Acessors for PolicyExportPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicyExportPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyExportPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyExportPolicy = value; }

        /// <summary>Internal Acessors for PolicyQuarantinePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IQuarantinePolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicyQuarantinePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyQuarantinePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyQuarantinePolicy = value; }

        /// <summary>Internal Acessors for PolicyRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicyRetentionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyRetentionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyRetentionPolicy = value; }

        /// <summary>Internal Acessors for PolicySoftDeletePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISoftDeletePolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicySoftDeletePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicySoftDeletePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicySoftDeletePolicy = value; }

        /// <summary>Internal Acessors for PolicyTrustPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITrustPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PolicyTrustPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyTrustPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PolicyTrustPolicy = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.RegistryProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for RetentionPolicyLastUpdatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyLastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyLastUpdatedTime = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISku Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISkuInternal)Sku).Tier = value; }

        /// <summary>Internal Acessors for SoftDeletePolicyLastUpdatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.SoftDeletePolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyLastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyLastUpdatedTime = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for StatusDisplayStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.StatusDisplayStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusDisplayStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusDisplayStatus = value; }

        /// <summary>Internal Acessors for StatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusMessage = value; }

        /// <summary>Internal Acessors for StatusTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryInternal.StatusTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusTimestamp = value; }

        /// <summary>The name of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Name; }

        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleBypassOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleBypassOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions)""); }

        /// <summary>The default action of allow or deny when no other rules match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSetDefaultAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSetDefaultAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction)""); }

        /// <summary>The IP ACL rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSetIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).NetworkRuleSetIPRule = value ?? null /* arrayOf */; }

        /// <summary>List of private endpoint connections for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryProperties _property;

        /// <summary>The properties of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.RegistryProperties()); set => this._property = value; }

        /// <summary>
        /// The provisioning state of the container registry at the time the operation was called.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 4)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess)""); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).QuarantinePolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).QuarantinePolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public int? RetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyDay = value ?? default(int); }

        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyLastUpdatedTime; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).RetentionPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISku _sku;

        /// <summary>The SKU of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.Sku()); set => this._sku = value; }

        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.FormatTable(Index = 1)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISkuInternal)Sku).Name = value ; }

        /// <summary>The SKU tier based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISkuInternal)Sku).Tier; }

        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyLastUpdatedTime; }

        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public int? SoftDeletePolicyRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyRetentionDay = value ?? default(int); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).SoftDeletePolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>The short label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string StatusDisplayStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusDisplayStatus; }

        /// <summary>The detailed message for the status, including alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string StatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusMessage; }

        /// <summary>The timestamp when the status was changed to the current value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? StatusTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).StatusTimestamp; }

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource modification (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.LastModifiedByType)""); }

        /// <summary>The tags of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Tag = value ?? null /* model class */; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).TrustPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).TrustPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).TrustPolicyType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).TrustPolicyType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType)""); }

        /// <summary>The type of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal)__resource).Type; }

        /// <summary>Whether or not zone redundancy is enabled for this container registry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ZoneRedundancy? ZoneRedundancy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ZoneRedundancy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryPropertiesInternal)Property).ZoneRedundancy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ZoneRedundancy)""); }

        /// <summary>Creates an new <see cref="Registry" /> instance.</summary>
        public Registry()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// An object that represents a container registry.
    public partial interface IRegistry :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResource
    {
        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the admin user is enabled.",
        SerializedName = @"adminUserEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdminUserEnabled { get; set; }
        /// <summary>Enables registry-wide pull from unauthenticated clients.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables registry-wide pull from unauthenticated clients.",
        SerializedName = @"anonymousPullEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AnonymousPullEnabled { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get; set; }
        /// <summary>The creation date of the container registry in ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The creation date of the container registry in ISO8601 format.",
        SerializedName = @"creationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationDate { get;  }
        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable a single data endpoint per region for serving data.",
        SerializedName = @"dataEndpointEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataEndpointEnabled { get; set; }
        /// <summary>List of host names that will serve data when dataEndpointEnabled is true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of host names that will serve data when dataEndpointEnabled is true.",
        SerializedName = @"dataEndpointHostNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] DataEndpointHostName { get;  }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not the encryption is enabled for container registry.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the resource. The user identity
        dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
            providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client id of the identity which will be used to access key vault.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key vault uri to access the encryption key.",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Auto key rotation status for a CMK enabled registry.",
        SerializedName = @"keyRotationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KeyVaultPropertyKeyRotationEnabled { get;  }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of the last successful key rotation.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified key identifier that includes the version of the key that is actually used for encryption.",
        SerializedName = @"versionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyVersionedKeyIdentifier { get;  }
        /// <summary>The URL that can be used to log into the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The URL that can be used to log into the container registry.",
        SerializedName = @"loginServer",
        PossibleTypes = new [] { typeof(string) })]
        string LoginServer { get;  }
        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to allow trusted Azure services to access a network restricted registry.",
        SerializedName = @"networkRuleBypassOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get; set; }
        /// <summary>The default action of allow or deny when no other rules match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default action of allow or deny when no other rules match.",
        SerializedName = @"defaultAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get; set; }
        /// <summary>The IP ACL rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP ACL rules.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>List of private endpoint connections for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections for a container registry.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>
        /// The provisioning state of the container registry at the time the operation was called.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the container registry at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for the container registry.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days to retain an untagged manifest after which it gets purged.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the policy was last updated.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get;  }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The SKU name of the container registry. Required for registry creation.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName SkuName { get; set; }
        /// <summary>The SKU tier based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The SKU tier based on the SKU name.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get;  }
        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the policy was last updated.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get;  }
        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days after which a soft-deleted item is permanently deleted.",
        SerializedName = @"retentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletePolicyRetentionDay { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get; set; }
        /// <summary>The short label for the status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The short label for the status.",
        SerializedName = @"displayStatus",
        PossibleTypes = new [] { typeof(string) })]
        string StatusDisplayStatus { get;  }
        /// <summary>The detailed message for the status, including alerts and error messages.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The detailed message for the status, including alerts and error messages.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get;  }
        /// <summary>The timestamp when the status was changed to the current value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the status was changed to the current value.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StatusTimestamp { get;  }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of trust policy.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }
        /// <summary>Whether or not zone redundancy is enabled for this container registry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not zone redundancy is enabled for this container registry",
        SerializedName = @"zoneRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ZoneRedundancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
    /// An object that represents a container registry.
    internal partial interface IRegistryInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IResourceInternal
    {
        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        bool? AdminUserEnabled { get; set; }
        /// <summary>Enables registry-wide pull from unauthenticated clients.</summary>
        bool? AnonymousPullEnabled { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get; set; }
        /// <summary>The creation date of the container registry in ISO8601 format.</summary>
        global::System.DateTime? CreationDate { get; set; }
        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        bool? DataEndpointEnabled { get; set; }
        /// <summary>List of host names that will serve data when dataEndpointEnabled is true.</summary>
        string[] DataEndpointHostName { get; set; }
        /// <summary>The encryption settings of container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionProperty Encryption { get; set; }
        /// <summary>Key vault properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The identity of the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityProperties Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        bool? KeyVaultPropertyKeyRotationEnabled { get; set; }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        string KeyVaultPropertyVersionedKeyIdentifier { get; set; }
        /// <summary>The URL that can be used to log into the container registry.</summary>
        string LoginServer { get; set; }
        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get; set; }
        /// <summary>The network rule set for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>The default action of allow or deny when no other rules match.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get; set; }
        /// <summary>The IP ACL rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>The policies for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPolicies Policy { get; set; }
        /// <summary>The policy for using ARM audience token for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IAzureAdAuthenticationAsArmPolicy PolicyAzureAdAuthenticationAsArmPolicy { get; set; }
        /// <summary>The export policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPolicy PolicyExportPolicy { get; set; }
        /// <summary>The quarantine policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IQuarantinePolicy PolicyQuarantinePolicy { get; set; }
        /// <summary>The retention policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRetentionPolicy PolicyRetentionPolicy { get; set; }
        /// <summary>The soft delete policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISoftDeletePolicy PolicySoftDeletePolicy { get; set; }
        /// <summary>The content trust policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ITrustPolicy PolicyTrustPolicy { get; set; }
        /// <summary>List of private endpoint connections for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The properties of the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IRegistryProperties Property { get; set; }
        /// <summary>
        /// The provisioning state of the container registry at the time the operation was called.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The SKU of the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISku Sku { get; set; }
        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName SkuName { get; set; }
        /// <summary>The SKU tier based on the SKU name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get; set; }
        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        int? SoftDeletePolicyRetentionDay { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get; set; }
        /// <summary>The status of the container registry at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IStatus Status { get; set; }
        /// <summary>The short label for the status.</summary>
        string StatusDisplayStatus { get; set; }
        /// <summary>The detailed message for the status, including alerts and error messages.</summary>
        string StatusMessage { get; set; }
        /// <summary>The timestamp when the status was changed to the current value.</summary>
        global::System.DateTime? StatusTimestamp { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }
        /// <summary>Whether or not zone redundancy is enabled for this container registry</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ZoneRedundancy? ZoneRedundancy { get; set; }

    }
}