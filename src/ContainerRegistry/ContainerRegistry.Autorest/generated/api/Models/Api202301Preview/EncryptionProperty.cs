// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    public partial class EncryptionProperty :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionProperty,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionPropertyInternal
    {

        /// <summary>Backing field for <see cref="KeyVaultProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties _keyVaultProperty;

        /// <summary>Key vault properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.KeyVaultProperties()); set => this._keyVaultProperty = value; }

        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).Identity = value ?? null; }

        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyIdentifier = value ?? null; }

        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyRotationEnabled; }

        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp; }

        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).VersionedKeyIdentifier; }

        /// <summary>Internal Acessors for KeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionPropertyInternal.KeyVaultProperty { get => (this._keyVaultProperty = this._keyVaultProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.KeyVaultProperties()); set { {_keyVaultProperty = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyKeyRotationEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionPropertyInternal.KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyRotationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).KeyRotationEnabled = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionPropertyInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).LastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IEncryptionPropertyInternal.KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).VersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultPropertiesInternal)KeyVaultProperty).VersionedKeyIdentifier = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? _status;

        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="EncryptionProperty" /> instance.</summary>
        public EncryptionProperty()
        {

        }
    }
    public partial interface IEncryptionProperty :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client id of the identity which will be used to access key vault.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key vault uri to access the encryption key.",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Auto key rotation status for a CMK enabled registry.",
        SerializedName = @"keyRotationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KeyVaultPropertyKeyRotationEnabled { get;  }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of the last successful key rotation.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified key identifier that includes the version of the key that is actually used for encryption.",
        SerializedName = @"versionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyVersionedKeyIdentifier { get;  }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not the encryption is enabled for container registry.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? Status { get; set; }

    }
    internal partial interface IEncryptionPropertyInternal

    {
        /// <summary>Key vault properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IKeyVaultProperties KeyVaultProperty { get; set; }
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        bool? KeyVaultPropertyKeyRotationEnabled { get; set; }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        string KeyVaultPropertyVersionedKeyIdentifier { get; set; }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? Status { get; set; }

    }
}