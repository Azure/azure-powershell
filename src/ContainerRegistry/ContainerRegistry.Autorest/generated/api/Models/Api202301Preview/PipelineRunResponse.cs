// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The response properties returned for a pipeline run.</summary>
    public partial class PipelineRunResponse :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponse,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal
    {

        /// <summary>Backing field for <see cref="CatalogDigest" /> property.</summary>
        private string _catalogDigest;

        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string CatalogDigest { get => this._catalogDigest; set => this._catalogDigest = value; }

        /// <summary>Backing field for <see cref="FinishTime" /> property.</summary>
        private global::System.DateTime? _finishTime;

        /// <summary>The time the pipeline run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? FinishTime { get => this._finishTime; set => this._finishTime = value; }

        /// <summary>Backing field for <see cref="ImportedArtifact" /> property.</summary>
        private string[] _importedArtifact;

        /// <summary>The artifacts imported in the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string[] ImportedArtifact { get => this._importedArtifact; set => this._importedArtifact = value; }

        /// <summary>Internal Acessors for Progress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal.Progress { get => (this._progress = this._progress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ProgressProperties()); set { {_progress = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ImportPipelineSourceProperties()); set { {_source = value;} } }

        /// <summary>Internal Acessors for Target</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal.Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ExportPipelineTargetProperties()); set { {_target = value;} } }

        /// <summary>Internal Acessors for Trigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal.Trigger { get => (this._trigger = this._trigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.PipelineTriggerDescriptor()); set { {_trigger = value;} } }

        /// <summary>Internal Acessors for TriggerSourceTrigger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineSourceTriggerDescriptor Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineRunResponseInternal.TriggerSourceTrigger { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptorInternal)Trigger).SourceTrigger; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptorInternal)Trigger).SourceTrigger = value; }

        /// <summary>Backing field for <see cref="PipelineRunErrorMessage" /> property.</summary>
        private string _pipelineRunErrorMessage;

        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string PipelineRunErrorMessage { get => this._pipelineRunErrorMessage; set => this._pipelineRunErrorMessage = value; }

        /// <summary>Backing field for <see cref="Progress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties _progress;

        /// <summary>The current progress of the copy operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties Progress { get => (this._progress = this._progress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ProgressProperties()); set => this._progress = value; }

        /// <summary>The percentage complete of the copy operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string ProgressPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressPropertiesInternal)Progress).Percentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressPropertiesInternal)Progress).Percentage = value ?? null; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties _source;

        /// <summary>The source of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ImportPipelineSourceProperties()); set => this._source = value; }

        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).KeyVaultUri = value ?? null; }

        /// <summary>The timestamp when the source update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? SourceTriggerTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptorInternal)Trigger).SourceTriggerTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptorInternal)Trigger).SourceTriggerTimestamp = value ?? default(global::System.DateTime); }

        /// <summary>The type of source for the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType)""); }

        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string SourceUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourcePropertiesInternal)Source).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The time the pipeline run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>The current status of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="Target" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties _target;

        /// <summary>The target of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Target { get => (this._target = this._target ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ExportPipelineTargetProperties()); set => this._target = value; }

        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).KeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).KeyVaultUri = value ?? null; }

        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Type = value ?? null; }

        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string TargetUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Uri; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetPropertiesInternal)Target).Uri = value ?? null; }

        /// <summary>Backing field for <see cref="Trigger" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor _trigger;

        /// <summary>The trigger that caused the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor Trigger { get => (this._trigger = this._trigger ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.PipelineTriggerDescriptor()); set => this._trigger = value; }

        /// <summary>Creates an new <see cref="PipelineRunResponse" /> instance.</summary>
        public PipelineRunResponse()
        {

        }
    }
    /// The response properties returned for a pipeline run.
    public partial interface IPipelineRunResponse :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The digest of the tar used to transfer the artifacts.",
        SerializedName = @"catalogDigest",
        PossibleTypes = new [] { typeof(string) })]
        string CatalogDigest { get; set; }
        /// <summary>The time the pipeline run finished.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the pipeline run finished.",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>The artifacts imported in the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The artifacts imported in the pipeline run.",
        SerializedName = @"importedArtifacts",
        PossibleTypes = new [] { typeof(string) })]
        string[] ImportedArtifact { get; set; }
        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The detailed error message for the pipeline run in the case of failure.",
        SerializedName = @"pipelineRunErrorMessage",
        PossibleTypes = new [] { typeof(string) })]
        string PipelineRunErrorMessage { get; set; }
        /// <summary>The percentage complete of the copy operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage complete of the copy operation.",
        SerializedName = @"percentage",
        PossibleTypes = new [] { typeof(string) })]
        string ProgressPercentage { get; set; }
        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"They key vault secret uri to obtain the source storage SAS token.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceKeyVaultUri { get; set; }
        /// <summary>The timestamp when the source update happened.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp when the source update happened.",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SourceTriggerTimestamp { get; set; }
        /// <summary>The type of source for the import pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of source for the import pipeline.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? SourceType { get; set; }
        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source uri of the import pipeline.
        When 'AzureStorageBlob': ""https://accountName.blob.core.windows.net/containerName/blobName""
        When 'AzureStorageBlobContainer': ""https://accountName.blob.core.windows.net/containerName""",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string SourceUri { get; set; }
        /// <summary>The time the pipeline run started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the pipeline run started.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the pipeline run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current status of the pipeline run.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"They key vault secret uri to obtain the target storage SAS token.",
        SerializedName = @"keyVaultUri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetKeyVaultUri { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of target for the export pipeline.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string TargetType { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target uri of the export pipeline.
        When 'AzureStorageBlob': ""https://accountName.blob.core.windows.net/containerName/blobName""
        When 'AzureStorageBlobContainer':  ""https://accountName.blob.core.windows.net/containerName""",
        SerializedName = @"uri",
        PossibleTypes = new [] { typeof(string) })]
        string TargetUri { get; set; }

    }
    /// The response properties returned for a pipeline run.
    internal partial interface IPipelineRunResponseInternal

    {
        /// <summary>The digest of the tar used to transfer the artifacts.</summary>
        string CatalogDigest { get; set; }
        /// <summary>The time the pipeline run finished.</summary>
        global::System.DateTime? FinishTime { get; set; }
        /// <summary>The artifacts imported in the pipeline run.</summary>
        string[] ImportedArtifact { get; set; }
        /// <summary>The detailed error message for the pipeline run in the case of failure.</summary>
        string PipelineRunErrorMessage { get; set; }
        /// <summary>The current progress of the copy operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IProgressProperties Progress { get; set; }
        /// <summary>The percentage complete of the copy operation.</summary>
        string ProgressPercentage { get; set; }
        /// <summary>The source of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IImportPipelineSourceProperties Source { get; set; }
        /// <summary>They key vault secret uri to obtain the source storage SAS token.</summary>
        string SourceKeyVaultUri { get; set; }
        /// <summary>The timestamp when the source update happened.</summary>
        global::System.DateTime? SourceTriggerTimestamp { get; set; }
        /// <summary>The type of source for the import pipeline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PipelineSourceType? SourceType { get; set; }
        /// <summary>
        /// The source uri of the import pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        string SourceUri { get; set; }
        /// <summary>The time the pipeline run started.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The current status of the pipeline run.</summary>
        string Status { get; set; }
        /// <summary>The target of the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IExportPipelineTargetProperties Target { get; set; }
        /// <summary>They key vault secret uri to obtain the target storage SAS token.</summary>
        string TargetKeyVaultUri { get; set; }
        /// <summary>The type of target for the export pipeline.</summary>
        string TargetType { get; set; }
        /// <summary>
        /// The target uri of the export pipeline.
        /// When 'AzureStorageBlob': "https://accountName.blob.core.windows.net/containerName/blobName"
        /// When 'AzureStorageBlobContainer': "https://accountName.blob.core.windows.net/containerName"
        /// </summary>
        string TargetUri { get; set; }
        /// <summary>The trigger that caused the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineTriggerDescriptor Trigger { get; set; }
        /// <summary>The source trigger that caused the pipeline run.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.IPipelineSourceTriggerDescriptor TriggerSourceTrigger { get; set; }

    }
}