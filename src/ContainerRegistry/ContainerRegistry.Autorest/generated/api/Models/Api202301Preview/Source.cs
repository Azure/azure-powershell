// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>
    /// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates
    /// it.
    /// </summary>
    public partial class Source :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISource,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api202301Preview.ISourceInternal
    {

        /// <summary>Backing field for <see cref="Addr" /> property.</summary>
        private string _addr;

        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Addr { get => this._addr; set => this._addr = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        /// <summary>The running instance of an application. Changes after each restart.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Creates an new <see cref="Source" /> instance.</summary>
        public Source()
        {

        }
    }
    /// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates
    /// it.
    public partial interface ISource :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.",
        SerializedName = @"addr",
        PossibleTypes = new [] { typeof(string) })]
        string Addr { get; set; }
        /// <summary>The running instance of an application. Changes after each restart.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The running instance of an application. Changes after each restart.",
        SerializedName = @"instanceID",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }

    }
    /// The registry node that generated the event. Put differently, while the actor initiates the event, the source generates
    /// it.
    internal partial interface ISourceInternal

    {
        /// <summary>
        /// The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname()
        /// along with the running port.
        /// </summary>
        string Addr { get; set; }
        /// <summary>The running instance of an application. Changes after each restart.</summary>
        string InstanceId { get; set; }

    }
}