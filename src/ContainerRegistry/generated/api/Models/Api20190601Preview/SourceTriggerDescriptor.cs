// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The source trigger that caused a run.</summary>
    public partial class SourceTriggerDescriptor :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptor,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20190601Preview.ISourceTriggerDescriptorInternal
    {

        /// <summary>Backing field for <see cref="BranchName" /> property.</summary>
        private string _branchName;

        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string BranchName { get => this._branchName; set => this._branchName = value; }

        /// <summary>Backing field for <see cref="CommitId" /> property.</summary>
        private string _commitId;

        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string CommitId { get => this._commitId; set => this._commitId = value; }

        /// <summary>Backing field for <see cref="EventType" /> property.</summary>
        private string _eventType;

        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string EventType { get => this._eventType; set => this._eventType = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="ProviderType" /> property.</summary>
        private string _providerType;

        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string ProviderType { get => this._providerType; set => this._providerType = value; }

        /// <summary>Backing field for <see cref="PullRequestId" /> property.</summary>
        private string _pullRequestId;

        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string PullRequestId { get => this._pullRequestId; set => this._pullRequestId = value; }

        /// <summary>Backing field for <see cref="RepositoryUrl" /> property.</summary>
        private string _repositoryUrl;

        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public string RepositoryUrl { get => this._repositoryUrl; set => this._repositoryUrl = value; }

        /// <summary>Creates an new <see cref="SourceTriggerDescriptor" /> instance.</summary>
        public SourceTriggerDescriptor()
        {

        }
    }
    /// The source trigger that caused a run.
    public partial interface ISourceTriggerDescriptor :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The branch name in the repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The branch name in the repository.",
        SerializedName = @"branchName",
        PossibleTypes = new [] { typeof(string) })]
        string BranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies a commit.",
        SerializedName = @"commitId",
        PossibleTypes = new [] { typeof(string) })]
        string CommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The event type of the trigger.",
        SerializedName = @"eventType",
        PossibleTypes = new [] { typeof(string) })]
        string EventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID of the trigger.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The source control provider type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source control provider type.",
        SerializedName = @"providerType",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique ID that identifies pull request.",
        SerializedName = @"pullRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string PullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repository URL.",
        SerializedName = @"repositoryUrl",
        PossibleTypes = new [] { typeof(string) })]
        string RepositoryUrl { get; set; }

    }
    /// The source trigger that caused a run.
    internal partial interface ISourceTriggerDescriptorInternal

    {
        /// <summary>The branch name in the repository.</summary>
        string BranchName { get; set; }
        /// <summary>The unique ID that identifies a commit.</summary>
        string CommitId { get; set; }
        /// <summary>The event type of the trigger.</summary>
        string EventType { get; set; }
        /// <summary>The unique ID of the trigger.</summary>
        string Id { get; set; }
        /// <summary>The source control provider type.</summary>
        string ProviderType { get; set; }
        /// <summary>The unique ID that identifies pull request.</summary>
        string PullRequestId { get; set; }
        /// <summary>The repository URL.</summary>
        string RepositoryUrl { get; set; }

    }
}