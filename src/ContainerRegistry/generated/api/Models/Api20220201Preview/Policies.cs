// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The policies for a container registry.</summary>
    public partial class Policies :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPolicies,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal
    {

        /// <summary>Backing field for <see cref="AzureAdAuthenticationAsArmPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicy _azureAdAuthenticationAsArmPolicy;

        /// <summary>The policy for using ARM audience token for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicy AzureAdAuthenticationAsArmPolicy { get => (this._azureAdAuthenticationAsArmPolicy = this._azureAdAuthenticationAsArmPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.AzureAdAuthenticationAsArmPolicy()); set => this._azureAdAuthenticationAsArmPolicy = value; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicyInternal)AzureAdAuthenticationAsArmPolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicyInternal)AzureAdAuthenticationAsArmPolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus)""); }

        /// <summary>Backing field for <see cref="ExportPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicy _exportPolicy;

        /// <summary>The export policy for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicy ExportPolicy { get => (this._exportPolicy = this._exportPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ExportPolicy()); set => this._exportPolicy = value; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicyInternal)ExportPolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicyInternal)ExportPolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus)""); }

        /// <summary>Internal Acessors for AzureAdAuthenticationAsArmPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.AzureAdAuthenticationAsArmPolicy { get => (this._azureAdAuthenticationAsArmPolicy = this._azureAdAuthenticationAsArmPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.AzureAdAuthenticationAsArmPolicy()); set { {_azureAdAuthenticationAsArmPolicy = value;} } }

        /// <summary>Internal Acessors for ExportPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.ExportPolicy { get => (this._exportPolicy = this._exportPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ExportPolicy()); set { {_exportPolicy = value;} } }

        /// <summary>Internal Acessors for QuarantinePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.QuarantinePolicy { get => (this._quarantinePolicy = this._quarantinePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.QuarantinePolicy()); set { {_quarantinePolicy = value;} } }

        /// <summary>Internal Acessors for RetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.RetentionPolicy { get => (this._retentionPolicy = this._retentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.RetentionPolicy()); set { {_retentionPolicy = value;} } }

        /// <summary>Internal Acessors for RetentionPolicyLastUpdatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).LastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).LastUpdatedTime = value; }

        /// <summary>Internal Acessors for SoftDeletePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.SoftDeletePolicy { get => (this._softDeletePolicy = this._softDeletePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.SoftDeletePolicy()); set { {_softDeletePolicy = value;} } }

        /// <summary>Internal Acessors for SoftDeletePolicyLastUpdatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.SoftDeletePolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).LastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).LastUpdatedTime = value; }

        /// <summary>Internal Acessors for TrustPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IPoliciesInternal.TrustPolicy { get => (this._trustPolicy = this._trustPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.TrustPolicy()); set { {_trustPolicy = value;} } }

        /// <summary>Backing field for <see cref="QuarantinePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicy _quarantinePolicy;

        /// <summary>The quarantine policy for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicy QuarantinePolicy { get => (this._quarantinePolicy = this._quarantinePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.QuarantinePolicy()); set => this._quarantinePolicy = value; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicyInternal)QuarantinePolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicyInternal)QuarantinePolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Backing field for <see cref="RetentionPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicy _retentionPolicy;

        /// <summary>The retention policy for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicy RetentionPolicy { get => (this._retentionPolicy = this._retentionPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.RetentionPolicy()); set => this._retentionPolicy = value; }

        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? RetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).Day; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).Day = value ?? default(int); }

        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).LastUpdatedTime; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicyInternal)RetentionPolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Backing field for <see cref="SoftDeletePolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicy _softDeletePolicy;

        /// <summary>The soft delete policy for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicy SoftDeletePolicy { get => (this._softDeletePolicy = this._softDeletePolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.SoftDeletePolicy()); set => this._softDeletePolicy = value; }

        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).LastUpdatedTime; }

        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? SoftDeletePolicyRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).RetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).RetentionDay = value ?? default(int); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicyInternal)SoftDeletePolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Backing field for <see cref="TrustPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicy _trustPolicy;

        /// <summary>The content trust policy for a container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicy TrustPolicy { get => (this._trustPolicy = this._trustPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.TrustPolicy()); set => this._trustPolicy = value; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicyInternal)TrustPolicy).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicyInternal)TrustPolicy).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicyInternal)TrustPolicy).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicyInternal)TrustPolicy).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType)""); }

        /// <summary>Creates an new <see cref="Policies" /> instance.</summary>
        public Policies()
        {

        }
    }
    /// The policies for a container registry.
    public partial interface IPolicies :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days to retain an untagged manifest after which it gets purged.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the policy was last updated.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get;  }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the policy was last updated.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get;  }
        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days after which a soft-deleted item is permanently deleted.",
        SerializedName = @"retentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? SoftDeletePolicyRetentionDay { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of trust policy.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }

    }
    /// The policies for a container registry.
    internal partial interface IPoliciesInternal

    {
        /// <summary>The policy for using ARM audience token for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IAzureAdAuthenticationAsArmPolicy AzureAdAuthenticationAsArmPolicy { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.AzureAdAuthenticationAsArmPolicyStatus? AzureAdAuthenticationAsArmPolicyStatus { get; set; }
        /// <summary>The export policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IExportPolicy ExportPolicy { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The quarantine policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IQuarantinePolicy QuarantinePolicy { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The retention policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.IRetentionPolicy RetentionPolicy { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The soft delete policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ISoftDeletePolicy SoftDeletePolicy { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        global::System.DateTime? SoftDeletePolicyLastUpdatedTime { get; set; }
        /// <summary>The number of days after which a soft-deleted item is permanently deleted.</summary>
        int? SoftDeletePolicyRetentionDay { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? SoftDeletePolicyStatus { get; set; }
        /// <summary>The content trust policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20220201Preview.ITrustPolicy TrustPolicy { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }

    }
}