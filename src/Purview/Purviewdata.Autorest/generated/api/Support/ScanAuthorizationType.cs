// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support
{

    public partial struct ScanAuthorizationType :
        System.IEquatable<ScanAuthorizationType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AdlsGen1Credential = @"AdlsGen1Credential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AdlsGen1Msi = @"AdlsGen1Msi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AdlsGen2Credential = @"AdlsGen2Credential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AdlsGen2Msi = @"AdlsGen2Msi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonAccountCredential = @"AmazonAccountCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonPostgreSqlCredential = @"AmazonPostgreSqlCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonPostgreSqlRoleArn = @"AmazonPostgreSqlRoleARN";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonS3Credential = @"AmazonS3Credential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonS3RoleArn = @"AmazonS3RoleARN";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AmazonSqlCredential = @"AmazonSqlCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureCosmosDbCredential = @"AzureCosmosDbCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureDataExplorerCredential = @"AzureDataExplorerCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureDataExplorerMsi = @"AzureDataExplorerMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureFileServiceCredential = @"AzureFileServiceCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureMySqlCredential = @"AzureMySqlCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzurePostgreSqlCredential = @"AzurePostgreSqlCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureResourceGroupCredential = @"AzureResourceGroupCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureResourceGroupMsi = @"AzureResourceGroupMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDataWarehouseCredential = @"AzureSqlDataWarehouseCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDataWarehouseMsi = @"AzureSqlDataWarehouseMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDatabaseCredential = @"AzureSqlDatabaseCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDatabaseManagedInstanceCredential = @"AzureSqlDatabaseManagedInstanceCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDatabaseManagedInstanceMsi = @"AzureSqlDatabaseManagedInstanceMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSqlDatabaseMsi = @"AzureSqlDatabaseMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureStorageCredential = @"AzureStorageCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureStorageMsi = @"AzureStorageMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSubscriptionCredential = @"AzureSubscriptionCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSubscriptionMsi = @"AzureSubscriptionMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSynapseCredential = @"AzureSynapseCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSynapseMsi = @"AzureSynapseMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSynapseWorkspaceCredential = @"AzureSynapseWorkspaceCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType AzureSynapseWorkspaceMsi = @"AzureSynapseWorkspaceMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType OracleCredential = @"OracleOracleCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType OracleUserPass = @"OracleOracleUserPass";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType PowerBiDelegated = @"PowerBIDelegated";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType PowerBiMsi = @"PowerBIMsi";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType SapEccCredential = @"SapEccSapEccCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType SapEccUserPass = @"SapEccSapEccUserPass";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType SapS4HanaSapS4HanaCredential = @"SapS4HanaSapS4HanaCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType SapS4HanaSapS4HanaUserPass = @"SapS4HanaSapS4HanaUserPass";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType SqlServerDatabaseCredential = @"SqlServerDatabaseCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType TeradataCredential = @"TeradataTeradataCredential";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType TeradataTeradataUserPass = @"TeradataTeradataUserPass";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType TeradataUserPass = @"TeradataUserPass";

        /// <summary>the value for an instance of the <see cref="ScanAuthorizationType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to ScanAuthorizationType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ScanAuthorizationType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new ScanAuthorizationType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type ScanAuthorizationType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type ScanAuthorizationType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is ScanAuthorizationType && Equals((ScanAuthorizationType)obj);
        }

        /// <summary>Returns hashCode for enum ScanAuthorizationType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="ScanAuthorizationType" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private ScanAuthorizationType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for ScanAuthorizationType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to ScanAuthorizationType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="ScanAuthorizationType" />.</param>

        public static implicit operator ScanAuthorizationType(string value)
        {
            return new ScanAuthorizationType(value);
        }

        /// <summary>Implicit operator to convert ScanAuthorizationType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="ScanAuthorizationType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum ScanAuthorizationType</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e1, Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum ScanAuthorizationType</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e1, Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.ScanAuthorizationType e2)
        {
            return e2.Equals(e1);
        }
    }
}