// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support
{

    public partial struct DataSourceType :
        System.IEquatable<DataSourceType>
    {
        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AdlsGen1 = @"AdlsGen1";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AdlsGen2 = @"AdlsGen2";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AmazonAccount = @"AmazonAccount";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AmazonPostgreSql = @"AmazonPostgreSql";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AmazonS3 = @"AmazonS3";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AmazonSql = @"AmazonSql";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureCosmosDb = @"AzureCosmosDb";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureDataExplorer = @"AzureDataExplorer";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureFileService = @"AzureFileService";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureMySql = @"AzureMySql";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzurePostgreSql = @"AzurePostgreSql";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureResourceGroup = @"AzureResourceGroup";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSqlDataWarehouse = @"AzureSqlDataWarehouse";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSqlDatabase = @"AzureSqlDatabase";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSqlDatabaseManagedInstance = @"AzureSqlDatabaseManagedInstance";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureStorage = @"AzureStorage";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSubscription = @"AzureSubscription";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSynapse = @"AzureSynapse";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType AzureSynapseWorkspace = @"AzureSynapseWorkspace";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType None = @"None";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType Oracle = @"Oracle";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType PowerBi = @"PowerBI";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType SapEcc = @"SapEcc";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType SapS4Hana = @"SapS4Hana";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType SqlServerDatabase = @"SqlServerDatabase";

        public static Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType Teradata = @"Teradata";

        /// <summary>the value for an instance of the <see cref="DataSourceType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to DataSourceType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DataSourceType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new DataSourceType(global::System.Convert.ToString(value));
        }

        /// <summary>Creates an instance of the <see cref="DataSourceType" Enum class./></summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private DataSourceType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Compares values of enum type DataSourceType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type DataSourceType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is DataSourceType && Equals((DataSourceType)obj);
        }

        /// <summary>Returns hashCode for enum DataSourceType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Returns string representation for DataSourceType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to DataSourceType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="DataSourceType" />.</param>

        public static implicit operator DataSourceType(string value)
        {
            return new DataSourceType(value);
        }

        /// <summary>Implicit operator to convert DataSourceType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="DataSourceType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum DataSourceType</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e1, Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum DataSourceType</summary>
        /// <param name="e1">the value to compare against <see cref="e2" /></param>
        /// <param name="e2">the value to compare against <see cref="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e1, Microsoft.Azure.PowerShell.Cmdlets.Purviewdata.Support.DataSourceType e2)
        {
            return e2.Equals(e1);
        }
    }
}