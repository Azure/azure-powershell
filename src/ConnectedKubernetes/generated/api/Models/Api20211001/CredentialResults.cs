// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Extensions;

    /// <summary>The list of credential result response.</summary>
    public partial class CredentialResults :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResults,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal
    {

        /// <summary>Backing field for <see cref="HybridConnectionConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfig _hybridConnectionConfig;

        /// <summary>Contains the REP (rendezvous endpoint) and “Sender” access token.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfig HybridConnectionConfig { get => (this._hybridConnectionConfig = this._hybridConnectionConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.HybridConnectionConfig()); }

        /// <summary>Timestamp when this token will be expired.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Inlined)]
        public long? HybridConnectionConfigExpirationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).ExpirationTime; }

        /// <summary>Name of the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Inlined)]
        public string HybridConnectionConfigHybridConnectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).HybridConnectionName; }

        /// <summary>Name of the relay.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Inlined)]
        public string HybridConnectionConfigRelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Relay; }

        /// <summary>Sender access token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Inlined)]
        public string HybridConnectionConfigToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Token; }

        /// <summary>Backing field for <see cref="Kubeconfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult[] _kubeconfig;

        /// <summary>Base64-encoded Kubernetes configuration file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult[] Kubeconfig { get => this._kubeconfig; }

        /// <summary>Internal Acessors for HybridConnectionConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfig Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.HybridConnectionConfig { get => (this._hybridConnectionConfig = this._hybridConnectionConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.HybridConnectionConfig()); set { {_hybridConnectionConfig = value;} } }

        /// <summary>Internal Acessors for HybridConnectionConfigExpirationTime</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.HybridConnectionConfigExpirationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).ExpirationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).ExpirationTime = value; }

        /// <summary>Internal Acessors for HybridConnectionConfigHybridConnectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.HybridConnectionConfigHybridConnectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).HybridConnectionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).HybridConnectionName = value; }

        /// <summary>Internal Acessors for HybridConnectionConfigRelay</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.HybridConnectionConfigRelay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Relay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Relay = value; }

        /// <summary>Internal Acessors for HybridConnectionConfigToken</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.HybridConnectionConfigToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Token; set => ((Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfigInternal)HybridConnectionConfig).Token = value; }

        /// <summary>Internal Acessors for Kubeconfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult[] Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResultsInternal.Kubeconfig { get => this._kubeconfig; set { {_kubeconfig = value;} } }

        /// <summary>Creates an new <see cref="CredentialResults" /> instance.</summary>
        public CredentialResults()
        {

        }
    }
    /// The list of credential result response.
    public partial interface ICredentialResults :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.IJsonSerializable
    {
        /// <summary>Timestamp when this token will be expired.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when this token will be expired.",
        SerializedName = @"expirationTime",
        PossibleTypes = new [] { typeof(long) })]
        long? HybridConnectionConfigExpirationTime { get;  }
        /// <summary>Name of the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the connection",
        SerializedName = @"hybridConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string HybridConnectionConfigHybridConnectionName { get;  }
        /// <summary>Name of the relay.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the relay.",
        SerializedName = @"relay",
        PossibleTypes = new [] { typeof(string) })]
        string HybridConnectionConfigRelay { get;  }
        /// <summary>Sender access token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sender access token",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string HybridConnectionConfigToken { get;  }
        /// <summary>Base64-encoded Kubernetes configuration file.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Base64-encoded Kubernetes configuration file.",
        SerializedName = @"kubeconfigs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult[] Kubeconfig { get;  }

    }
    /// The list of credential result response.
    internal partial interface ICredentialResultsInternal

    {
        /// <summary>Contains the REP (rendezvous endpoint) and “Sender” access token.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.IHybridConnectionConfig HybridConnectionConfig { get; set; }
        /// <summary>Timestamp when this token will be expired.</summary>
        long? HybridConnectionConfigExpirationTime { get; set; }
        /// <summary>Name of the connection</summary>
        string HybridConnectionConfigHybridConnectionName { get; set; }
        /// <summary>Name of the relay.</summary>
        string HybridConnectionConfigRelay { get; set; }
        /// <summary>Sender access token</summary>
        string HybridConnectionConfigToken { get; set; }
        /// <summary>Base64-encoded Kubernetes configuration file.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20211001.ICredentialResult[] Kubeconfig { get; set; }

    }
}