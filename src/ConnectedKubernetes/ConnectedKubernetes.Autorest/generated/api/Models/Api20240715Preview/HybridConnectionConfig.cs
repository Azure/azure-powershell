// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Extensions;

    /// <summary>Contains the REP (rendezvous endpoint) and “Sender” access token.</summary>
    public partial class HybridConnectionConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfig,
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal
    {

        /// <summary>Backing field for <see cref="ExpirationTime" /> property.</summary>
        private long? _expirationTime;

        /// <summary>Timestamp when this token will be expired.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public long? ExpirationTime { get => this._expirationTime; }

        /// <summary>Backing field for <see cref="HybridConnectionName" /> property.</summary>
        private string _hybridConnectionName;

        /// <summary>Name of the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public string HybridConnectionName { get => this._hybridConnectionName; }

        /// <summary>Internal Acessors for ExpirationTime</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.ExpirationTime { get => this._expirationTime; set { {_expirationTime = value;} } }

        /// <summary>Internal Acessors for HybridConnectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.HybridConnectionName { get => this._hybridConnectionName; set { {_hybridConnectionName = value;} } }

        /// <summary>Internal Acessors for Relay</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.Relay { get => this._relay; set { {_relay = value;} } }

        /// <summary>Internal Acessors for RelayTid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.RelayTid { get => this._relayTid; set { {_relayTid = value;} } }

        /// <summary>Internal Acessors for RelayType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.RelayType { get => this._relayType; set { {_relayType = value;} } }

        /// <summary>Internal Acessors for Token</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Models.Api20240715Preview.IHybridConnectionConfigInternal.Token { get => this._token; set { {_token = value;} } }

        /// <summary>Backing field for <see cref="Relay" /> property.</summary>
        private string _relay;

        /// <summary>Name of the relay.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public string Relay { get => this._relay; }

        /// <summary>Backing field for <see cref="RelayTid" /> property.</summary>
        private string _relayTid;

        /// <summary>TenantID of the relay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public string RelayTid { get => this._relayTid; }

        /// <summary>Backing field for <see cref="RelayType" /> property.</summary>
        private string _relayType;

        /// <summary>Type of relay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public string RelayType { get => this._relayType; }

        /// <summary>Backing field for <see cref="Token" /> property.</summary>
        private string _token;

        /// <summary>Sender access token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.PropertyOrigin.Owned)]
        public string Token { get => this._token; }

        /// <summary>Creates an new <see cref="HybridConnectionConfig" /> instance.</summary>
        public HybridConnectionConfig()
        {

        }
    }
    /// Contains the REP (rendezvous endpoint) and “Sender” access token.
    public partial interface IHybridConnectionConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.IJsonSerializable
    {
        /// <summary>Timestamp when this token will be expired.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp when this token will be expired.",
        SerializedName = @"expirationTime",
        PossibleTypes = new [] { typeof(long) })]
        long? ExpirationTime { get;  }
        /// <summary>Name of the connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the connection",
        SerializedName = @"hybridConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string HybridConnectionName { get;  }
        /// <summary>Name of the relay.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the relay.",
        SerializedName = @"relay",
        PossibleTypes = new [] { typeof(string) })]
        string Relay { get;  }
        /// <summary>TenantID of the relay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"TenantID of the relay",
        SerializedName = @"relayTid",
        PossibleTypes = new [] { typeof(string) })]
        string RelayTid { get;  }
        /// <summary>Type of relay</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of relay",
        SerializedName = @"relayType",
        PossibleTypes = new [] { typeof(string) })]
        string RelayType { get;  }
        /// <summary>Sender access token</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConnectedKubernetes.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sender access token",
        SerializedName = @"token",
        PossibleTypes = new [] { typeof(string) })]
        string Token { get;  }

    }
    /// Contains the REP (rendezvous endpoint) and “Sender” access token.
    internal partial interface IHybridConnectionConfigInternal

    {
        /// <summary>Timestamp when this token will be expired.</summary>
        long? ExpirationTime { get; set; }
        /// <summary>Name of the connection</summary>
        string HybridConnectionName { get; set; }
        /// <summary>Name of the relay.</summary>
        string Relay { get; set; }
        /// <summary>TenantID of the relay</summary>
        string RelayTid { get; set; }
        /// <summary>Type of relay</summary>
        string RelayType { get; set; }
        /// <summary>Sender access token</summary>
        string Token { get; set; }

    }
}