
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for IdentitySource.
.Description
Create an in-memory object for IdentitySource.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IdentitySource
.Link
https://learn.microsoft.com/powershell/module/Az.VMware/new-azvmwareidentitysourceobject
#>
function New-AzVMwareIdentitySourceObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IdentitySource')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="The domain's NetBIOS name.")]
        [string]
        $Alias,
        [Parameter(HelpMessage="The base distinguished name for groups.")]
        [string]
        $BaseGroupDn,
        [Parameter(HelpMessage="The base distinguished name for users.")]
        [string]
        $BaseUserDn,
        [Parameter(HelpMessage="The domain's dns name.")]
        [string]
        $Domain,
        [Parameter(HelpMessage="The name of the identity source.")]
        [string]
        $Name,
        [Parameter(HelpMessage="The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.")]
        [string]
        $Password,
        [Parameter(HelpMessage="Primary server URL.")]
        [string]
        $PrimaryServer,
        [Parameter(HelpMessage="Secondary server URL.")]
        [string]
        $SecondaryServer,
        [Parameter(HelpMessage="Protect LDAP communication using SSL certificate (LDAPS).")]
        [Microsoft.Azure.PowerShell.Cmdlets.VMware.PSArgumentCompleterAttribute("Enabled", "Disabled")]
        [string]
        $Ssl,
        [Parameter(HelpMessage="The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group.")]
        [string]
        $Username
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.IdentitySource]::New()

        if ($PSBoundParameters.ContainsKey('Alias')) {
            $Object.Alias = $Alias
        }
        if ($PSBoundParameters.ContainsKey('BaseGroupDn')) {
            $Object.BaseGroupDn = $BaseGroupDn
        }
        if ($PSBoundParameters.ContainsKey('BaseUserDn')) {
            $Object.BaseUserDn = $BaseUserDn
        }
        if ($PSBoundParameters.ContainsKey('Domain')) {
            $Object.Domain = $Domain
        }
        if ($PSBoundParameters.ContainsKey('Name')) {
            $Object.Name = $Name
        }
        if ($PSBoundParameters.ContainsKey('Password')) {
            $Object.Password = $Password
        }
        if ($PSBoundParameters.ContainsKey('PrimaryServer')) {
            $Object.PrimaryServer = $PrimaryServer
        }
        if ($PSBoundParameters.ContainsKey('SecondaryServer')) {
            $Object.SecondaryServer = $SecondaryServer
        }
        if ($PSBoundParameters.ContainsKey('Ssl')) {
            $Object.Ssl = $Ssl
        }
        if ($PSBoundParameters.ContainsKey('Username')) {
            $Object.Username = $Username
        }
        return $Object
    }
}

