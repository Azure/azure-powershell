<Objs Version="1.1.0.1" xmlns="http://schemas.microsoft.com/powershell/2004/04">
  <Obj RefId="0">
    <TN RefId="0">
      <T>Microsoft.PowerShell.Commands.PSRepositoryItemInfo</T>
      <T>System.Management.Automation.PSCustomObject</T>
      <T>System.Object</T>
    </TN>
    <MS>
      <S N="Name">Pester</S>
      <S N="Version">4.10.1</S>
      <S N="Type">Module</S>
      <S N="Description">Pester provides a framework for running BDD style Tests to execute and validate PowerShell commands inside of PowerShell and offers a powerful set of Mocking Functions that allow tests to mimic and mock the functionality of any command inside of a piece of PowerShell code being tested. Pester tests can execute any command or script that is accessible to a pester test file. This can include functions, Cmdlets, Modules and scripts. Pester can be run in ad hoc style in a console or it can be integrated into the Build scripts of a Continuous Integration system.</S>
      <S N="Author">Pester Team</S>
      <Obj N="CompanyName" RefId="1">
        <TN RefId="1">
          <T>System.Object[]</T>
          <T>System.Array</T>
          <T>System.Object</T>
        </TN>
        <LST>
          <S>dlwyatt</S>
          <S>nohwnd</S>
        </LST>
      </Obj>
      <S N="Copyright">Copyright (c) 2019 by Pester Team, licensed under Apache 2.0 License.</S>
      <DT N="PublishedDate">2020-02-07T19:57:31+08:00</DT>
      <Nil N="InstalledDate" />
      <Nil N="UpdatedDate" />
      <URI N="LicenseUri">https://www.apache.org/licenses/LICENSE-2.0.html</URI>
      <URI N="ProjectUri">https://github.com/Pester/Pester</URI>
      <URI N="IconUri">https://raw.githubusercontent.com/pester/Pester/master/images/pester.PNG</URI>
      <Obj N="Tags" RefId="2">
        <TNRef RefId="1" />
        <LST>
          <S>powershell</S>
          <S>unit_testing</S>
          <S>bdd</S>
          <S>tdd</S>
          <S>mocking</S>
          <S>PSEdition_Core</S>
          <S>PSEdition_Desktop</S>
          <S>Windows</S>
          <S>Linux</S>
          <S>MacOS</S>
          <S>PSModule</S>
        </LST>
      </Obj>
      <Obj N="Includes" RefId="3">
        <TN RefId="2">
          <T>System.Collections.Hashtable</T>
          <T>System.Object</T>
        </TN>
        <DCT>
          <En>
            <S N="Key">Function</S>
            <Obj N="Value" RefId="4">
              <TNRef RefId="1" />
              <LST>
                <S>Describe</S>
                <S>Context</S>
                <S>It</S>
                <S>Should</S>
                <S>Mock</S>
                <S>Assert-MockCalled</S>
                <S>Assert-VerifiableMock</S>
                <S>Assert-VerifiableMocks</S>
                <S>New-Fixture</S>
                <S>Get-TestDriveItem</S>
                <S>Invoke-Pester</S>
                <S>Setup</S>
                <S>In</S>
                <S>InModuleScope</S>
                <S>Invoke-Mock</S>
                <S>BeforeEach</S>
                <S>AfterEach</S>
                <S>BeforeAll</S>
                <S>AfterAll</S>
                <S>Get-MockDynamicParameter</S>
                <S>Set-DynamicParameterVariable</S>
                <S>Set-TestInconclusive</S>
                <S>Set-ItResult</S>
                <S>SafeGetCommand</S>
                <S>New-PesterOption</S>
                <S>New-MockObject</S>
                <S>Add-AssertionOperator</S>
                <S>Get-ShouldOperator</S>
                <S>Invoke-Gherkin</S>
                <S>Find-GherkinStep</S>
                <S>GherkinStep</S>
                <S>BeforeEachFeature</S>
                <S>AfterEachFeature</S>
                <S>BeforeEachScenario</S>
                <S>AfterEachScenario</S>
              </LST>
            </Obj>
          </En>
          <En>
            <S N="Key">DscResource</S>
            <Obj N="Value" RefId="5">
              <TNRef RefId="1" />
              <LST />
            </Obj>
          </En>
          <En>
            <S N="Key">Workflow</S>
            <Ref N="Value" RefId="5" />
          </En>
          <En>
            <S N="Key">Cmdlet</S>
            <Ref N="Value" RefId="5" />
          </En>
          <En>
            <S N="Key">Command</S>
            <Obj N="Value" RefId="6">
              <TNRef RefId="1" />
              <LST>
                <S>Describe</S>
                <S>Context</S>
                <S>It</S>
                <S>Should</S>
                <S>Mock</S>
                <S>Assert-MockCalled</S>
                <S>Assert-VerifiableMock</S>
                <S>Assert-VerifiableMocks</S>
                <S>New-Fixture</S>
                <S>Get-TestDriveItem</S>
                <S>Invoke-Pester</S>
                <S>Setup</S>
                <S>In</S>
                <S>InModuleScope</S>
                <S>Invoke-Mock</S>
                <S>BeforeEach</S>
                <S>AfterEach</S>
                <S>BeforeAll</S>
                <S>AfterAll</S>
                <S>Get-MockDynamicParameter</S>
                <S>Set-DynamicParameterVariable</S>
                <S>Set-TestInconclusive</S>
                <S>Set-ItResult</S>
                <S>SafeGetCommand</S>
                <S>New-PesterOption</S>
                <S>New-MockObject</S>
                <S>Add-AssertionOperator</S>
                <S>Get-ShouldOperator</S>
                <S>Invoke-Gherkin</S>
                <S>Find-GherkinStep</S>
                <S>GherkinStep</S>
                <S>BeforeEachFeature</S>
                <S>AfterEachFeature</S>
                <S>BeforeEachScenario</S>
                <S>AfterEachScenario</S>
              </LST>
            </Obj>
          </En>
          <En>
            <S N="Key">RoleCapability</S>
            <Ref N="Value" RefId="5" />
          </En>
        </DCT>
      </Obj>
      <Nil N="PowerShellGetFormatVersion" />
      <S N="ReleaseNotes">https://github.com/pester/Pester/releases/tag/4.10.1</S>
      <Obj N="Dependencies" RefId="7">
        <TNRef RefId="1" />
        <LST />
      </Obj>
      <S N="RepositorySourceLocation">https://www.powershellgallery.com/api/v2</S>
      <S N="Repository">PSGallery</S>
      <S N="PackageManagementProvider">NuGet</S>
      <Obj N="AdditionalMetadata" RefId="8">
        <TN RefId="3">
          <T>System.Management.Automation.PSCustomObject</T>
          <T>System.Object</T>
        </TN>
        <MS>
          <S N="copyright">Copyright (c) 2019 by Pester Team, licensed under Apache 2.0 License.</S>
          <S N="description">Pester provides a framework for running BDD style Tests to execute and validate PowerShell commands inside of PowerShell and offers a powerful set of Mocking Functions that allow tests to mimic and mock the functionality of any command inside of a piece of PowerShell code being tested. Pester tests can execute any command or script that is accessible to a pester test file. This can include functions, Cmdlets, Modules and scripts. Pester can be run in ad hoc style in a console or it can be integrated into the Build scripts of a Continuous Integration system.</S>
          <S N="requireLicenseAcceptance">False</S>
          <S N="releaseNotes">https://github.com/pester/Pester/releases/tag/4.10.1</S>
          <S N="isLatestVersion">False</S>
          <S N="isAbsoluteLatestVersion">False</S>
          <S N="versionDownloadCount">1226254</S>
          <S N="downloadCount">4704855</S>
          <S N="packageSize">887295</S>
          <S N="published">2/7/2020 7:57:31 PM +08:00</S>
          <S N="created">2/7/2020 7:57:31 PM +08:00</S>
          <S N="lastUpdated">1/26/2021 8:07:08 AM +08:00</S>
          <S N="tags">powershell unit_testing bdd tdd mocking PSEdition_Core PSEdition_Desktop Windows Linux MacOS PSModule PSFunction_Describe PSCommand_Describe PSFunction_Context PSCommand_Context PSFunction_It PSCommand_It PSFunction_Should PSCommand_Should PSFunction_Mock PSCommand_Mock PSFunction_Assert-MockCalled PSCommand_Assert-MockCalled PSFunction_Assert-VerifiableMock PSCommand_Assert-VerifiableMock PSFunction_Assert-VerifiableMocks PSCommand_Assert-VerifiableMocks PSFunction_New-Fixture PSCommand_New-Fixture PSFunction_Get-TestDriveItem PSCommand_Get-TestDriveItem PSFunction_Invoke-Pester PSCommand_Invoke-Pester PSFunction_Setup PSCommand_Setup PSFunction_In PSCommand_In PSFunction_InModuleScope PSCommand_InModuleScope PSFunction_Invoke-Mock PSCommand_Invoke-Mock PSFunction_BeforeEach PSCommand_BeforeEach PSFunction_AfterEach PSCommand_AfterEach PSFunction_BeforeAll PSCommand_BeforeAll PSFunction_AfterAll PSCommand_AfterAll PSFunction_Get-MockDynamicParameter PSCommand_Get-MockDynamicParameter PSFunction_Set-DynamicParameterVariable PSCommand_Set-DynamicParameterVariable PSFunction_Set-TestInconclusive PSCommand_Set-TestInconclusive PSFunction_Set-ItResult PSCommand_Set-ItResult PSFunction_SafeGetCommand PSCommand_SafeGetCommand PSFunction_New-PesterOption PSCommand_New-PesterOption PSFunction_New-MockObject PSCommand_New-MockObject PSFunction_Add-AssertionOperator PSCommand_Add-AssertionOperator PSFunction_Get-ShouldOperator PSCommand_Get-ShouldOperator PSFunction_Invoke-Gherkin PSCommand_Invoke-Gherkin PSFunction_Find-GherkinStep PSCommand_Find-GherkinStep PSFunction_GherkinStep PSCommand_GherkinStep PSFunction_BeforeEachFeature PSCommand_BeforeEachFeature PSFunction_AfterEachFeature PSCommand_AfterEachFeature PSFunction_BeforeEachScenario PSCommand_BeforeEachScenario PSFunction_AfterEachScenario PSCommand_AfterEachScenario PSIncludes_Function</S>
          <S N="developmentDependency">False</S>
          <S N="updated">2021-01-26T08:07:08Z</S>
          <S N="NormalizedVersion">4.10.1</S>
          <S N="Authors">Pester Team</S>
          <S N="IsPrerelease">false</S>
          <S N="ItemType">Module</S>
          <S N="FileList">Pester.nuspec|junit_schema_4.xsd|LICENSE|nunit_schema_2.5.xsd|Pester.psd1|Pester.psm1|bin\pester.bat|Dependencies\Axiom\Axiom.psm1|Dependencies\Axiom\Verify-AssertionFailed.ps1|Dependencies\Axiom\Verify-Equal.ps1|Dependencies\Axiom\Verify-False.ps1|Dependencies\Axiom\Verify-NotNull.ps1|Dependencies\Axiom\Verify-NotSame.ps1|Dependencies\Axiom\Verify-Null.ps1|Dependencies\Axiom\Verify-Same.ps1|Dependencies\Axiom\Verify-Throw.ps1|Dependencies\Axiom\Verify-True.ps1|Dependencies\Axiom\Verify-Type.ps1|Dependencies\Format\Format.psm1|Dependencies\TypeClass\TypeClass.psm1|en-US\about_BeforeEach_AfterEach.help.txt|en-US\about_Mocking.help.txt|en-US\about_Pester.help.txt|en-US\about_Should.help.txt|en-US\about_TestDrive.help.txt|en-US\Gherkin.psd1|en-US\RSpec.psd1|Functions\Context.ps1|Functions\Coverage.ps1|Functions\Describe.ps1|Functions\Environment.ps1|Functions\Get-ShouldOperator.ps1|Functions\Gherkin.ps1|Functions\Gherkin.types.ps1xml|Functions\GherkinHook.ps1|Functions\GherkinStep.ps1|Functions\In.ps1|Functions\InModuleScope.ps1|Functions\It.ps1|Functions\Mock.ps1|Functions\New-Fixture.ps1|Functions\New-MockObject.ps1|Functions\Output.ps1|Functions\PesterState.ps1|Functions\Set-ItResult.ps1|Functions\SetupTeardown.ps1|Functions\TestDrive.ps1|Functions\TestRegistry.ps1|Functions\TestResults.ps1|Functions\Assertions\Be.ps1|Functions\Assertions\BeGreaterThan.ps1|Functions\Assertions\BeIn.ps1|Functions\Assertions\BeLessThan.ps1|Functions\Assertions\BeLike.ps1|Functions\Assertions\BeLikeExactly.ps1|Functions\Assertions\BeNullOrEmpty.ps1|Functions\Assertions\BeOfType.ps1|Functions\Assertions\BeTrueOrFalse.ps1|Functions\Assertions\Contain.ps1|Functions\Assertions\Exist.ps1|Functions\Assertions\FileContentMatch.ps1|Functions\Assertions\FileContentMatchExactly.ps1|Functions\Assertions\FileContentMatchMultiline.ps1|Functions\Assertions\HaveCount.ps1|Functions\Assertions\HaveParameter.ps1|Functions\Assertions\Match.ps1|Functions\Assertions\MatchExactly.ps1|Functions\Assertions\PesterThrow.ps1|Functions\Assertions\Set-TestInconclusive.ps1|Functions\Assertions\Should.ps1|lib\Gherkin\gherkin-languages.json|lib\Gherkin\core\Gherkin.dll|lib\Gherkin\legacy\Gherkin.dll|lib\Gherkin\legacy\Newtonsoft.Json.dll|Snippets\Context.snippets.ps1xml|Snippets\Describe.snippets.ps1xml|Snippets\It.snippets.ps1xml|Snippets\ShouldBe.snippets.ps1xml|Snippets\ShouldBeGreaterThan.snippets.ps1xml|Snippets\ShouldBeLessThan.snippets.ps1xml|Snippets\ShouldBeNullOrEmpty.snippets.ps1xml|Snippets\ShouldExist.snippets.ps1xml|Snippets\ShouldFileContentMatch.snippets.ps1xml|Snippets\ShouldMatch.snippets.ps1xml|Snippets\ShouldNotBe.snippets.ps1xml|Snippets\ShouldNotBeNullOrEmpty.snippets.ps1xml|Snippets\ShouldNotExist.snippets.ps1xml|Snippets\ShouldNotFileContentMatch.snippets.ps1xml|Snippets\ShouldNotMatch.snippets.ps1xml|Snippets\ShouldNotThrow.snippets.ps1xml|Snippets\ShouldThrow.snippets.ps1xml</S>
          <S N="GUID">a699dea5-2c73-4616-a270-1f7abb777e71</S>
          <S N="PowerShellVersion">2.0</S>
          <S N="CompanyName">Pester</S>
        </MS>
      </Obj>
      <S N="InstalledLocation">C:\workspace\generation\src\VMware\generated\modules\Pester\4.10.1</S>
    </MS>
  </Obj>
</Objs>
