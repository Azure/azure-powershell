// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201
{
    using Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.PowerShell;

    /// <summary>The properties of a private cloud resource</summary>
    [System.ComponentModel.TypeConverter(typeof(PrivateCloudPropertiesTypeConverter))]
    public partial class PrivateCloudProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.PrivateCloudProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PrivateCloudProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.PrivateCloudProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudProperties" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PrivateCloudProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PrivateCloudProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.PrivateCloudProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PrivateCloudProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Circuit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Circuit = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICircuit) content.GetValueForProperty("Circuit",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Circuit, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CircuitTypeConverter.ConvertFrom);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEndpoints) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecondaryCircuit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuit = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICircuit) content.GetValueForProperty("SecondaryCircuit",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuit, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CircuitTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.PrivateCloudProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.PrivateCloudProvisioningState.CreateFrom);
            }
            if (content.Contains("NetworkBlock"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NetworkBlock = (string) content.GetValueForProperty("NetworkBlock",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NetworkBlock, global::System.Convert.ToString);
            }
            if (content.Contains("ManagementNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ManagementNetwork = (string) content.GetValueForProperty("ManagementNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ManagementNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningNetwork = (string) content.GetValueForProperty("ProvisioningNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("VmotionNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VmotionNetwork = (string) content.GetValueForProperty("VmotionNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VmotionNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterPassword = (string) content.GetValueForProperty("VcenterPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterPassword, global::System.Convert.ToString);
            }
            if (content.Contains("NsxtPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtPassword = (string) content.GetValueForProperty("NsxtPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtPassword, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterCertificateThumbprint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterCertificateThumbprint = (string) content.GetValueForProperty("VcenterCertificateThumbprint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterCertificateThumbprint, global::System.Convert.ToString);
            }
            if (content.Contains("NsxtCertificateThumbprint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtCertificateThumbprint = (string) content.GetValueForProperty("NsxtCertificateThumbprint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtCertificateThumbprint, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalCloudLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ExternalCloudLink = (string[]) content.GetValueForProperty("ExternalCloudLink",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ExternalCloudLink, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityStrategy = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.AvailabilityStrategy?) content.GetValueForProperty("AvailabilityStrategy",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityStrategy, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.AvailabilityStrategy.CreateFrom);
            }
            if (content.Contains("ManagementClusterSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterSize = (int?) content.GetValueForProperty("ManagementClusterSize",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManagementClusterProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ClusterProvisioningState?) content.GetValueForProperty("ManagementClusterProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("ManagementClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterId = (int?) content.GetValueForProperty("ManagementClusterId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManagementClusterHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterHost = (string[]) content.GetValueForProperty("ManagementClusterHost",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterHost, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityZone = (int?) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityZone, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilitySecondaryZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilitySecondaryZone = (int?) content.GetValueForProperty("AvailabilitySecondaryZone",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilitySecondaryZone, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEncryptionKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EncryptionKeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionStatus = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionState?) content.GetValueForProperty("EncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionStatus, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionState.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVaultUrl = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionKeyStatus?) content.GetValueForProperty("KeyVaultPropertyKeyState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionKeyStatus.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyVersionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyVersionType = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionVersionType?) content.GetValueForProperty("KeyVaultPropertyVersionType",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyVersionType, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionVersionType.CreateFrom);
            }
            if (content.Contains("ManagementCluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementCluster = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICommonClusterProperties) content.GetValueForProperty("ManagementCluster",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementCluster, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CommonClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Availability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Availability = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IAvailabilityProperties) content.GetValueForProperty("Availability",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Availability, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.AvailabilityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Internet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Internet = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.InternetEnum?) content.GetValueForProperty("Internet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Internet, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.InternetEnum.CreateFrom);
            }
            if (content.Contains("IdentitySource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).IdentitySource = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IIdentitySource[]) content.GetValueForProperty("IdentitySource",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).IdentitySource, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IIdentitySource>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IdentitySourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("CircuitPrimarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitPrimarySubnet = (string) content.GetValueForProperty("CircuitPrimarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitPrimarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitSecondarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitSecondarySubnet = (string) content.GetValueForProperty("CircuitSecondarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitSecondarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointNsxtManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointNsxtManager = (string) content.GetValueForProperty("EndpointNsxtManager",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointNsxtManager, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVcsa"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointVcsa = (string) content.GetValueForProperty("EndpointVcsa",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointVcsa, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitExpressRouteId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRouteId = (string) content.GetValueForProperty("CircuitExpressRouteId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRouteId, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitExpressRoutePrivatePeeringId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRoutePrivatePeeringId = (string) content.GetValueForProperty("CircuitExpressRoutePrivatePeeringId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRoutePrivatePeeringId, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointHcxCloudManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointHcxCloudManager = (string) content.GetValueForProperty("EndpointHcxCloudManager",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointHcxCloudManager, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitPrimarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitPrimarySubnet = (string) content.GetValueForProperty("SecondaryCircuitPrimarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitPrimarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitSecondarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitSecondarySubnet = (string) content.GetValueForProperty("SecondaryCircuitSecondarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitSecondarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitExpressRouteId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRouteId = (string) content.GetValueForProperty("SecondaryCircuitExpressRouteId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRouteId, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitExpressRoutePrivatePeeringId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRoutePrivatePeeringId = (string) content.GetValueForProperty("SecondaryCircuitExpressRoutePrivatePeeringId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRoutePrivatePeeringId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.PrivateCloudProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PrivateCloudProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Circuit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Circuit = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICircuit) content.GetValueForProperty("Circuit",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Circuit, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CircuitTypeConverter.ConvertFrom);
            }
            if (content.Contains("Endpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Endpoint = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEndpoints) content.GetValueForProperty("Endpoint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).Endpoint, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EndpointsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecondaryCircuit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuit = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICircuit) content.GetValueForProperty("SecondaryCircuit",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuit, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CircuitTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.PrivateCloudProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.PrivateCloudProvisioningState.CreateFrom);
            }
            if (content.Contains("NetworkBlock"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NetworkBlock = (string) content.GetValueForProperty("NetworkBlock",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NetworkBlock, global::System.Convert.ToString);
            }
            if (content.Contains("ManagementNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ManagementNetwork = (string) content.GetValueForProperty("ManagementNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ManagementNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningNetwork = (string) content.GetValueForProperty("ProvisioningNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ProvisioningNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("VmotionNetwork"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VmotionNetwork = (string) content.GetValueForProperty("VmotionNetwork",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VmotionNetwork, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterPassword = (string) content.GetValueForProperty("VcenterPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterPassword, global::System.Convert.ToString);
            }
            if (content.Contains("NsxtPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtPassword = (string) content.GetValueForProperty("NsxtPassword",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtPassword, global::System.Convert.ToString);
            }
            if (content.Contains("VcenterCertificateThumbprint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterCertificateThumbprint = (string) content.GetValueForProperty("VcenterCertificateThumbprint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).VcenterCertificateThumbprint, global::System.Convert.ToString);
            }
            if (content.Contains("NsxtCertificateThumbprint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtCertificateThumbprint = (string) content.GetValueForProperty("NsxtCertificateThumbprint",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).NsxtCertificateThumbprint, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalCloudLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ExternalCloudLink = (string[]) content.GetValueForProperty("ExternalCloudLink",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).ExternalCloudLink, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityStrategy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityStrategy = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.AvailabilityStrategy?) content.GetValueForProperty("AvailabilityStrategy",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityStrategy, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.AvailabilityStrategy.CreateFrom);
            }
            if (content.Contains("ManagementClusterSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterSize = (int?) content.GetValueForProperty("ManagementClusterSize",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManagementClusterProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ClusterProvisioningState?) content.GetValueForProperty("ManagementClusterProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ClusterProvisioningState.CreateFrom);
            }
            if (content.Contains("ManagementClusterId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterId = (int?) content.GetValueForProperty("ManagementClusterId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterId, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ManagementClusterHost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterHost = (string[]) content.GetValueForProperty("ManagementClusterHost",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementClusterHost, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityZone = (int?) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilityZone, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("AvailabilitySecondaryZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilitySecondaryZone = (int?) content.GetValueForProperty("AvailabilitySecondaryZone",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).AvailabilitySecondaryZone, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEncryptionKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EncryptionKeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionStatus = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionState?) content.GetValueForProperty("EncryptionStatus",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).EncryptionStatus, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionState.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVaultUrl = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUrl",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyVaultUrl, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionKeyStatus?) content.GetValueForProperty("KeyVaultPropertyKeyState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyKeyState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionKeyStatus.CreateFrom);
            }
            if (content.Contains("KeyVaultPropertyVersionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyVersionType = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionVersionType?) content.GetValueForProperty("KeyVaultPropertyVersionType",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).KeyVaultPropertyVersionType, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.EncryptionVersionType.CreateFrom);
            }
            if (content.Contains("ManagementCluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementCluster = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ICommonClusterProperties) content.GetValueForProperty("ManagementCluster",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).ManagementCluster, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.CommonClusterPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Availability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Availability = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IAvailabilityProperties) content.GetValueForProperty("Availability",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Availability, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.AvailabilityPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Internet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Internet = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.InternetEnum?) content.GetValueForProperty("Internet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).Internet, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.InternetEnum.CreateFrom);
            }
            if (content.Contains("IdentitySource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).IdentitySource = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IIdentitySource[]) content.GetValueForProperty("IdentitySource",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudUpdatePropertiesInternal)this).IdentitySource, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IIdentitySource>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IdentitySourceTypeConverter.ConvertFrom));
            }
            if (content.Contains("CircuitPrimarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitPrimarySubnet = (string) content.GetValueForProperty("CircuitPrimarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitPrimarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitSecondarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitSecondarySubnet = (string) content.GetValueForProperty("CircuitSecondarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitSecondarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointNsxtManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointNsxtManager = (string) content.GetValueForProperty("EndpointNsxtManager",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointNsxtManager, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointVcsa"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointVcsa = (string) content.GetValueForProperty("EndpointVcsa",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointVcsa, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitExpressRouteId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRouteId = (string) content.GetValueForProperty("CircuitExpressRouteId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRouteId, global::System.Convert.ToString);
            }
            if (content.Contains("CircuitExpressRoutePrivatePeeringId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRoutePrivatePeeringId = (string) content.GetValueForProperty("CircuitExpressRoutePrivatePeeringId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).CircuitExpressRoutePrivatePeeringId, global::System.Convert.ToString);
            }
            if (content.Contains("EndpointHcxCloudManager"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointHcxCloudManager = (string) content.GetValueForProperty("EndpointHcxCloudManager",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).EndpointHcxCloudManager, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitPrimarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitPrimarySubnet = (string) content.GetValueForProperty("SecondaryCircuitPrimarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitPrimarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitSecondarySubnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitSecondarySubnet = (string) content.GetValueForProperty("SecondaryCircuitSecondarySubnet",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitSecondarySubnet, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitExpressRouteId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRouteId = (string) content.GetValueForProperty("SecondaryCircuitExpressRouteId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRouteId, global::System.Convert.ToString);
            }
            if (content.Contains("SecondaryCircuitExpressRoutePrivatePeeringId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRoutePrivatePeeringId = (string) content.GetValueForProperty("SecondaryCircuitExpressRoutePrivatePeeringId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IPrivateCloudPropertiesInternal)this).SecondaryCircuitExpressRoutePrivatePeeringId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The properties of a private cloud resource
    [System.ComponentModel.TypeConverter(typeof(PrivateCloudPropertiesTypeConverter))]
    public partial interface IPrivateCloudProperties

    {

    }
}