// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201
{
    using Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.PowerShell;

    /// <summary>An instance of a script executed by a user - custom or AVS</summary>
    [System.ComponentModel.TypeConverter(typeof(ScriptExecutionTypeConverter))]
    public partial class ScriptExecution
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecution"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecution" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecution DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ScriptExecution(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecution"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecution" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecution DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ScriptExecution(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ScriptExecution" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecution FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecution"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ScriptExecution(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ScriptCmdletId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ScriptCmdletId = (string) content.GetValueForProperty("ScriptCmdletId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ScriptCmdletId, global::System.Convert.ToString);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter[]) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Parameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("HiddenParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).HiddenParameter = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter[]) content.GetValueForProperty("HiddenParameter",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).HiddenParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("FailureReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FailureReason = (string) content.GetValueForProperty("FailureReason",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FailureReason, global::System.Convert.ToString);
            }
            if (content.Contains("Timeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Timeout = (string) content.GetValueForProperty("Timeout",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Timeout, global::System.Convert.ToString);
            }
            if (content.Contains("Retention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Retention = (string) content.GetValueForProperty("Retention",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Retention, global::System.Convert.ToString);
            }
            if (content.Contains("SubmittedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).SubmittedAt = (global::System.DateTime?) content.GetValueForProperty("SubmittedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).SubmittedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).StartedAt = (global::System.DateTime?) content.GetValueForProperty("StartedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).StartedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FinishedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FinishedAt = (global::System.DateTime?) content.GetValueForProperty("FinishedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FinishedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ScriptExecutionProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ScriptExecutionProvisioningState.CreateFrom);
            }
            if (content.Contains("Output"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Output = (string[]) content.GetValueForProperty("Output",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Output, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NamedOutput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).NamedOutput = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionPropertiesNamedOutputs) content.GetValueForProperty("NamedOutput",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).NamedOutput, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionPropertiesNamedOutputsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Information"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Information = (string[]) content.GetValueForProperty("Information",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Information, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Warning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Warning = (string[]) content.GetValueForProperty("Warning",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Warning, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Error"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Error = (string[]) content.GetValueForProperty("Error",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Error, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecution"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ScriptExecution(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IResourceInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("ScriptCmdletId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ScriptCmdletId = (string) content.GetValueForProperty("ScriptCmdletId",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ScriptCmdletId, global::System.Convert.ToString);
            }
            if (content.Contains("Parameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Parameter = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter[]) content.GetValueForProperty("Parameter",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Parameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("HiddenParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).HiddenParameter = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter[]) content.GetValueForProperty("HiddenParameter",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).HiddenParameter, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionParameter>(__y, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionParameterTypeConverter.ConvertFrom));
            }
            if (content.Contains("FailureReason"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FailureReason = (string) content.GetValueForProperty("FailureReason",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FailureReason, global::System.Convert.ToString);
            }
            if (content.Contains("Timeout"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Timeout = (string) content.GetValueForProperty("Timeout",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Timeout, global::System.Convert.ToString);
            }
            if (content.Contains("Retention"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Retention = (string) content.GetValueForProperty("Retention",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Retention, global::System.Convert.ToString);
            }
            if (content.Contains("SubmittedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).SubmittedAt = (global::System.DateTime?) content.GetValueForProperty("SubmittedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).SubmittedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).StartedAt = (global::System.DateTime?) content.GetValueForProperty("StartedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).StartedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FinishedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FinishedAt = (global::System.DateTime?) content.GetValueForProperty("FinishedAt",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).FinishedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ScriptExecutionProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.VMware.Support.ScriptExecutionProvisioningState.CreateFrom);
            }
            if (content.Contains("Output"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Output = (string[]) content.GetValueForProperty("Output",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Output, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NamedOutput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).NamedOutput = (Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionPropertiesNamedOutputs) content.GetValueForProperty("NamedOutput",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).NamedOutput, Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.ScriptExecutionPropertiesNamedOutputsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Information"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Information = (string[]) content.GetValueForProperty("Information",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Information, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Warning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Warning = (string[]) content.GetValueForProperty("Warning",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Warning, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("Error"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Error = (string[]) content.GetValueForProperty("Error",((Microsoft.Azure.PowerShell.Cmdlets.VMware.Models.Api20211201.IScriptExecutionInternal)this).Error, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.VMware.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// An instance of a script executed by a user - custom or AVS
    [System.ComponentModel.TypeConverter(typeof(ScriptExecutionTypeConverter))]
    public partial interface IScriptExecution

    {

    }
}