// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// Azure container mapping of the endpoint.
    /// </summary>
    public partial class AzureContainerInfo
    {
        /// <summary>
        /// Initializes a new instance of the AzureContainerInfo class.
        /// </summary>
        public AzureContainerInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AzureContainerInfo class.
        /// </summary>

        /// <param name="storageAccountCredentialId">ID of the storage account credential used to access storage.
        /// </param>

        /// <param name="containerName">Container name (Based on the data format specified, this represents the
        /// name of Azure Files/Page blob/Block blob).
        /// </param>

        /// <param name="dataFormat">Storage format used for the file represented by the share.
        /// Possible values include: &#39;BlockBlob&#39;, &#39;PageBlob&#39;, &#39;AzureFile&#39;</param>
        public AzureContainerInfo(string storageAccountCredentialId, string containerName, string dataFormat)

        {
            this.StorageAccountCredentialId = storageAccountCredentialId;
            this.ContainerName = containerName;
            this.DataFormat = dataFormat;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets iD of the storage account credential used to access storage.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageAccountCredentialId")]
        public string StorageAccountCredentialId {get; set; }

        /// <summary>
        /// Gets or sets container name (Based on the data format specified, this
        /// represents the name of Azure Files/Page blob/Block blob).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerName")]
        public string ContainerName {get; set; }

        /// <summary>
        /// Gets or sets storage format used for the file represented by the share. Possible values include: &#39;BlockBlob&#39;, &#39;PageBlob&#39;, &#39;AzureFile&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataFormat")]
        public string DataFormat {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.StorageAccountCredentialId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "StorageAccountCredentialId");
            }
            if (this.ContainerName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ContainerName");
            }
            if (this.DataFormat == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DataFormat");
            }



        }
    }
}