// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// SkuInformation object
    /// </summary>
    public partial class ResourceTypeSku
    {
        /// <summary>
        /// Initializes a new instance of the ResourceTypeSku class.
        /// </summary>
        public ResourceTypeSku()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResourceTypeSku class.
        /// </summary>

        /// <param name="resourceType">The type of the resource
        /// </param>

        /// <param name="name">The Sku name
        /// Possible values include: &#39;Gateway&#39;, &#39;Edge&#39;, &#39;TEA_1Node&#39;, &#39;TEA_1Node_UPS&#39;,
        /// &#39;TEA_1Node_Heater&#39;, &#39;TEA_1Node_UPS_Heater&#39;, &#39;TEA_4Node_Heater&#39;,
        /// &#39;TEA_4Node_UPS_Heater&#39;, &#39;TMA&#39;</param>

        /// <param name="kind">The Sku kind
        /// </param>

        /// <param name="tier">The Sku tier
        /// Possible values include: &#39;Standard&#39;</param>

        /// <param name="family">The Sku family
        /// </param>

        /// <param name="locations">Availability of the SKU for the region
        /// </param>

        /// <param name="apiVersions">The API versions in which SKU is available
        /// </param>

        /// <param name="locationInfo">Availability of the SKU for the location/zone
        /// </param>

        /// <param name="costs">The pricing info of the Sku.
        /// </param>

        /// <param name="restrictions">Restrictions of the SKU availability.
        /// </param>
        public ResourceTypeSku(string resourceType = default(string), string name = default(string), string kind = default(string), string tier = default(string), string family = default(string), System.Collections.Generic.IList<string> locations = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> apiVersions = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<SkuLocationInfo> locationInfo = default(System.Collections.Generic.IList<SkuLocationInfo>), System.Collections.Generic.IList<SkuCost> costs = default(System.Collections.Generic.IList<SkuCost>), System.Collections.Generic.IList<SkuRestriction> restrictions = default(System.Collections.Generic.IList<SkuRestriction>))

        {
            this.ResourceType = resourceType;
            this.Name = name;
            this.Kind = kind;
            this.Tier = tier;
            this.Family = family;
            this.Locations = locations;
            this.ApiVersions = apiVersions;
            this.LocationInfo = locationInfo;
            this.Costs = costs;
            this.Restrictions = restrictions;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the type of the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceType")]
        public string ResourceType {get; private set; }

        /// <summary>
        /// Gets the Sku name Possible values include: &#39;Gateway&#39;, &#39;Edge&#39;, &#39;TEA_1Node&#39;, &#39;TEA_1Node_UPS&#39;, &#39;TEA_1Node_Heater&#39;, &#39;TEA_1Node_UPS_Heater&#39;, &#39;TEA_4Node_Heater&#39;, &#39;TEA_4Node_UPS_Heater&#39;, &#39;TMA&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the Sku kind
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; private set; }

        /// <summary>
        /// Gets the Sku tier Possible values include: &#39;Standard&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tier")]
        public string Tier {get; private set; }

        /// <summary>
        /// Gets the Sku family
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "family")]
        public string Family {get; private set; }

        /// <summary>
        /// Gets availability of the SKU for the region
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.IList<string> Locations {get; private set; }

        /// <summary>
        /// Gets the API versions in which SKU is available
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "apiVersions")]
        public System.Collections.Generic.IList<string> ApiVersions {get; private set; }

        /// <summary>
        /// Gets availability of the SKU for the location/zone
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "locationInfo")]
        public System.Collections.Generic.IList<SkuLocationInfo> LocationInfo {get; private set; }

        /// <summary>
        /// Gets the pricing info of the Sku.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "costs")]
        public System.Collections.Generic.IList<SkuCost> Costs {get; private set; }

        /// <summary>
        /// Gets restrictions of the SKU availability.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restrictions")]
        public System.Collections.Generic.IList<SkuRestriction> Restrictions {get; private set; }
    }
}