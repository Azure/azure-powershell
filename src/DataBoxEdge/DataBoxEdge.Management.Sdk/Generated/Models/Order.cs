// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// The order details.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Order : ARMBaseModel
    {
        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>

        /// <param name="id">The path ID that uniquely identifies the object.
        /// </param>

        /// <param name="name">The object name.
        /// </param>

        /// <param name="type">The hierarchical type of the object.
        /// </param>

        /// <param name="contactInformation">The contact details.
        /// </param>

        /// <param name="shippingAddress">The shipping address.
        /// </param>

        /// <param name="currentStatus">Current status of the order.
        /// </param>

        /// <param name="orderHistory">List of status changes in the order.
        /// </param>

        /// <param name="serialNumber">Serial number of the device.
        /// </param>

        /// <param name="deliveryTrackingInfo">Tracking information for the package delivered to the customer whether it
        /// has an original or a replacement device.
        /// </param>

        /// <param name="returnTrackingInfo">Tracking information for the package returned from the customer whether it
        /// has an original or a replacement device.
        /// </param>
        public Order(string id = default(string), string name = default(string), string type = default(string), ContactDetails contactInformation = default(ContactDetails), Address shippingAddress = default(Address), OrderStatus currentStatus = default(OrderStatus), System.Collections.Generic.IList<OrderStatus> orderHistory = default(System.Collections.Generic.IList<OrderStatus>), string serialNumber = default(string), System.Collections.Generic.IList<TrackingInfo> deliveryTrackingInfo = default(System.Collections.Generic.IList<TrackingInfo>), System.Collections.Generic.IList<TrackingInfo> returnTrackingInfo = default(System.Collections.Generic.IList<TrackingInfo>))

        : base(id, name, type)
        {
            this.ContactInformation = contactInformation;
            this.ShippingAddress = shippingAddress;
            this.CurrentStatus = currentStatus;
            this.OrderHistory = orderHistory;
            this.SerialNumber = serialNumber;
            this.DeliveryTrackingInfo = deliveryTrackingInfo;
            this.ReturnTrackingInfo = returnTrackingInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the contact details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.contactInformation")]
        public ContactDetails ContactInformation {get; set; }

        /// <summary>
        /// Gets or sets the shipping address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.shippingAddress")]
        public Address ShippingAddress {get; set; }

        /// <summary>
        /// Gets or sets current status of the order.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.currentStatus")]
        public OrderStatus CurrentStatus {get; set; }

        /// <summary>
        /// Gets list of status changes in the order.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.orderHistory")]
        public System.Collections.Generic.IList<OrderStatus> OrderHistory {get; private set; }

        /// <summary>
        /// Gets serial number of the device.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.serialNumber")]
        public string SerialNumber {get; private set; }

        /// <summary>
        /// Gets tracking information for the package delivered to the customer whether
        /// it has an original or a replacement device.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.deliveryTrackingInfo")]
        public System.Collections.Generic.IList<TrackingInfo> DeliveryTrackingInfo {get; private set; }

        /// <summary>
        /// Gets tracking information for the package returned from the customer
        /// whether it has an original or a replacement device.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.returnTrackingInfo")]
        public System.Collections.Generic.IList<TrackingInfo> ReturnTrackingInfo {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ContactInformation != null)
            {
                this.ContactInformation.Validate();
            }
            if (this.ShippingAddress != null)
            {
                this.ShippingAddress.Validate();
            }
            if (this.CurrentStatus != null)
            {
                this.CurrentStatus.Validate();
            }
            if (this.OrderHistory != null)
            {
                foreach (var element in this.OrderHistory)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }



        }
    }
}