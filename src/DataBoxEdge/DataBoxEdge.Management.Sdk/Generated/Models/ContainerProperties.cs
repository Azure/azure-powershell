// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// The container properties.
    /// </summary>
    public partial class ContainerProperties
    {
        /// <summary>
        /// Initializes a new instance of the ContainerProperties class.
        /// </summary>
        public ContainerProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContainerProperties class.
        /// </summary>

        /// <param name="containerStatus">Current status of the container.
        /// Possible values include: &#39;OK&#39;, &#39;Offline&#39;, &#39;Unknown&#39;, &#39;Updating&#39;,
        /// &#39;NeedsAttention&#39;</param>

        /// <param name="dataFormat">DataFormat for Container
        /// Possible values include: &#39;BlockBlob&#39;, &#39;PageBlob&#39;, &#39;AzureFile&#39;</param>

        /// <param name="refreshDetails">Details of the refresh job on this container.
        /// </param>

        /// <param name="createdDateTime">The UTC time when container got created.
        /// </param>
        public ContainerProperties(string dataFormat, string containerStatus = default(string), RefreshDetails refreshDetails = default(RefreshDetails), System.DateTime? createdDateTime = default(System.DateTime?))

        {
            this.ContainerStatus = containerStatus;
            this.DataFormat = dataFormat;
            this.RefreshDetails = refreshDetails;
            this.CreatedDateTime = createdDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets current status of the container. Possible values include: &#39;OK&#39;, &#39;Offline&#39;, &#39;Unknown&#39;, &#39;Updating&#39;, &#39;NeedsAttention&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerStatus")]
        public string ContainerStatus {get; private set; }

        /// <summary>
        /// Gets or sets dataFormat for Container Possible values include: &#39;BlockBlob&#39;, &#39;PageBlob&#39;, &#39;AzureFile&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataFormat")]
        public string DataFormat {get; set; }

        /// <summary>
        /// Gets details of the refresh job on this container.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "refreshDetails")]
        public RefreshDetails RefreshDetails {get; private set; }

        /// <summary>
        /// Gets the UTC time when container got created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdDateTime")]
        public System.DateTime? CreatedDateTime {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.DataFormat == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DataFormat");
            }



        }
    }
}