// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// Contains all the contact details of the customer.
    /// </summary>
    public partial class ContactDetails
    {
        /// <summary>
        /// Initializes a new instance of the ContactDetails class.
        /// </summary>
        public ContactDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ContactDetails class.
        /// </summary>

        /// <param name="contactPerson">The contact person name.
        /// </param>

        /// <param name="companyName">The name of the company.
        /// </param>

        /// <param name="phone">The phone number.
        /// </param>

        /// <param name="emailList">The email list.
        /// </param>
        public ContactDetails(string contactPerson, string companyName, string phone, System.Collections.Generic.IList<string> emailList)

        {
            this.ContactPerson = contactPerson;
            this.CompanyName = companyName;
            this.Phone = phone;
            this.EmailList = emailList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the contact person name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "contactPerson")]
        public string ContactPerson {get; set; }

        /// <summary>
        /// Gets or sets the name of the company.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "companyName")]
        public string CompanyName {get; set; }

        /// <summary>
        /// Gets or sets the phone number.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "phone")]
        public string Phone {get; set; }

        /// <summary>
        /// Gets or sets the email list.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "emailList")]
        public System.Collections.Generic.IList<string> EmailList {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ContactPerson == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ContactPerson");
            }
            if (this.CompanyName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CompanyName");
            }
            if (this.Phone == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Phone");
            }
            if (this.EmailList == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EmailList");
            }




        }
    }
}