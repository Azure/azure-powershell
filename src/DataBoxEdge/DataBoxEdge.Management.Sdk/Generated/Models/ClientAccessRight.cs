// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataBoxEdge.Models
{
    using System.Linq;

    /// <summary>
    /// The mapping between a particular client IP and the type of access client
    /// has on the NFS share.
    /// </summary>
    public partial class ClientAccessRight
    {
        /// <summary>
        /// Initializes a new instance of the ClientAccessRight class.
        /// </summary>
        public ClientAccessRight()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientAccessRight class.
        /// </summary>

        /// <param name="client">IP of the client.
        /// </param>

        /// <param name="accessPermission">Type of access to be allowed for the client.
        /// Possible values include: &#39;NoAccess&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>
        public ClientAccessRight(string client, string accessPermission)

        {
            this.Client = client;
            this.AccessPermission = accessPermission;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets iP of the client.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "client")]
        public string Client {get; set; }

        /// <summary>
        /// Gets or sets type of access to be allowed for the client. Possible values include: &#39;NoAccess&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "accessPermission")]
        public string AccessPermission {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Client == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Client");
            }
            if (this.AccessPermission == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AccessPermission");
            }


        }
    }
}