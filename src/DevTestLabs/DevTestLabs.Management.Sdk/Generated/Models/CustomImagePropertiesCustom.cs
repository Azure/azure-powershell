// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for creating a custom image from a VHD.
    /// </summary>
    public partial class CustomImagePropertiesCustom
    {
        /// <summary>
        /// Initializes a new instance of the CustomImagePropertiesCustom class.
        /// </summary>
        public CustomImagePropertiesCustom()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomImagePropertiesCustom class.
        /// </summary>

        /// <param name="imageName">The image name.
        /// </param>

        /// <param name="sysPrep">Indicates whether sysprep has been run on the VHD.
        /// </param>

        /// <param name="osType">The OS type of the custom image (i.e. Windows, Linux)
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;, &#39;None&#39;</param>
        public CustomImagePropertiesCustom(string osType, string imageName = default(string), bool? sysPrep = default(bool?))

        {
            this.ImageName = imageName;
            this.SysPrep = sysPrep;
            this.OSType = osType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the image name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "imageName")]
        public string ImageName {get; set; }

        /// <summary>
        /// Gets or sets indicates whether sysprep has been run on the VHD.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sysPrep")]
        public bool? SysPrep {get; set; }

        /// <summary>
        /// Gets or sets the OS type of the custom image (i.e. Windows, Linux) Possible values include: &#39;Windows&#39;, &#39;Linux&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.OSType == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "OSType");
            }


        }
    }
}