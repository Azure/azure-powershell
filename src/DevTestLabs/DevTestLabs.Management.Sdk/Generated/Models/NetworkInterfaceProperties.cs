// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of a network interface.
    /// </summary>
    public partial class NetworkInterfaceProperties
    {
        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceProperties class.
        /// </summary>
        public NetworkInterfaceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetworkInterfaceProperties class.
        /// </summary>

        /// <param name="virtualNetworkId">The resource ID of the virtual network.
        /// </param>

        /// <param name="subnetId">The resource ID of the sub net.
        /// </param>

        /// <param name="publicIPAddressId">The resource ID of the public IP address.
        /// </param>

        /// <param name="publicIPAddress">The public IP address.
        /// </param>

        /// <param name="privateIPAddress">The private IP address.
        /// </param>

        /// <param name="dnsName">The DNS name.
        /// </param>

        /// <param name="rdpAuthority">The RdpAuthority property is a server DNS host name or IP address followed
        /// by the service port number for RDP (Remote Desktop Protocol).
        /// </param>

        /// <param name="sshAuthority">The SshAuthority property is a server DNS host name or IP address followed
        /// by the service port number for SSH.
        /// </param>

        /// <param name="sharedPublicIPAddressConfiguration">The configuration for sharing a public IP address across multiple virtual
        /// machines.
        /// </param>
        public NetworkInterfaceProperties(string virtualNetworkId = default(string), string subnetId = default(string), string publicIPAddressId = default(string), string publicIPAddress = default(string), string privateIPAddress = default(string), string dnsName = default(string), string rdpAuthority = default(string), string sshAuthority = default(string), SharedPublicIpAddressConfiguration sharedPublicIPAddressConfiguration = default(SharedPublicIpAddressConfiguration))

        {
            this.VirtualNetworkId = virtualNetworkId;
            this.SubnetId = subnetId;
            this.PublicIPAddressId = publicIPAddressId;
            this.PublicIPAddress = publicIPAddress;
            this.PrivateIPAddress = privateIPAddress;
            this.DnsName = dnsName;
            this.RdpAuthority = rdpAuthority;
            this.SshAuthority = sshAuthority;
            this.SharedPublicIPAddressConfiguration = sharedPublicIPAddressConfiguration;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource ID of the virtual network.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualNetworkId")]
        public string VirtualNetworkId {get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the sub net.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "subnetId")]
        public string SubnetId {get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIpAddressId")]
        public string PublicIPAddressId {get; set; }

        /// <summary>
        /// Gets or sets the public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIpAddress")]
        public string PublicIPAddress {get; set; }

        /// <summary>
        /// Gets or sets the private IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateIpAddress")]
        public string PrivateIPAddress {get; set; }

        /// <summary>
        /// Gets or sets the DNS name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dnsName")]
        public string DnsName {get; set; }

        /// <summary>
        /// Gets or sets the RdpAuthority property is a server DNS host name or IP
        /// address followed by the service port number for RDP (Remote Desktop
        /// Protocol).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rdpAuthority")]
        public string RdpAuthority {get; set; }

        /// <summary>
        /// Gets or sets the SshAuthority property is a server DNS host name or IP
        /// address followed by the service port number for SSH.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sshAuthority")]
        public string SshAuthority {get; set; }

        /// <summary>
        /// Gets or sets the configuration for sharing a public IP address across
        /// multiple virtual machines.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sharedPublicIpAddressConfiguration")]
        public SharedPublicIpAddressConfiguration SharedPublicIPAddressConfiguration {get; set; }
    }
}