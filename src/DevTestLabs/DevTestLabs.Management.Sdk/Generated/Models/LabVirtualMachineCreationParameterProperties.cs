// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for virtual machine creation.
    /// </summary>
    public partial class LabVirtualMachineCreationParameterProperties
    {
        /// <summary>
        /// Initializes a new instance of the LabVirtualMachineCreationParameterProperties class.
        /// </summary>
        public LabVirtualMachineCreationParameterProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LabVirtualMachineCreationParameterProperties class.
        /// </summary>

        /// <param name="bulkCreationParameters">The number of virtual machine instances to create.
        /// </param>

        /// <param name="notes">The notes of the virtual machine.
        /// </param>

        /// <param name="ownerObjectId">The object identifier of the owner of the virtual machine.
        /// </param>

        /// <param name="ownerUserPrincipalName">The user principal name of the virtual machine owner.
        /// </param>

        /// <param name="createdByUserId">The object identifier of the creator of the virtual machine.
        /// </param>

        /// <param name="createdByUser">The email address of creator of the virtual machine.
        /// </param>

        /// <param name="createdDate">The creation date of the virtual machine.
        /// </param>

        /// <param name="customImageId">The custom image identifier of the virtual machine.
        /// </param>

        /// <param name="osType">The OS type of the virtual machine.
        /// </param>

        /// <param name="size">The size of the virtual machine.
        /// </param>

        /// <param name="userName">The user name of the virtual machine.
        /// </param>

        /// <param name="password">The password of the virtual machine administrator.
        /// </param>

        /// <param name="sshKey">The SSH key of the virtual machine administrator.
        /// </param>

        /// <param name="isAuthenticationWithSshKey">Indicates whether this virtual machine uses an SSH key for authentication.
        /// </param>

        /// <param name="fqdn">The fully-qualified domain name of the virtual machine.
        /// </param>

        /// <param name="labSubnetName">The lab subnet name of the virtual machine.
        /// </param>

        /// <param name="labVirtualNetworkId">The lab virtual network identifier of the virtual machine.
        /// </param>

        /// <param name="disallowPublicIPAddress">Indicates whether the virtual machine is to be created without a public IP
        /// address.
        /// </param>

        /// <param name="artifacts">The artifacts to be installed on the virtual machine.
        /// </param>

        /// <param name="artifactDeploymentStatus">The artifact deployment status for the virtual machine.
        /// </param>

        /// <param name="galleryImageReference">The Microsoft Azure Marketplace image reference of the virtual machine.
        /// </param>

        /// <param name="computeVM">The compute virtual machine properties.
        /// </param>

        /// <param name="networkInterface">The network interface properties.
        /// </param>

        /// <param name="applicableSchedule">The applicable schedule for the virtual machine.
        /// </param>

        /// <param name="expirationDate">The expiration date for VM.
        /// </param>

        /// <param name="allowClaim">Indicates whether another user can take ownership of the virtual machine
        /// </param>

        /// <param name="storageType">Storage type to use for virtual machine (i.e. Standard, Premium).
        /// </param>

        /// <param name="virtualMachineCreationSource">Tells source of creation of lab virtual machine. Output property only.
        /// Possible values include: &#39;FromCustomImage&#39;, &#39;FromGalleryImage&#39;</param>

        /// <param name="environmentId">The resource ID of the environment that contains this virtual machine, if
        /// any.
        /// </param>

        /// <param name="provisioningState">The provisioning status of the resource.
        /// </param>

        /// <param name="uniqueIdentifier">The unique immutable identifier of a resource (Guid).
        /// </param>
        public LabVirtualMachineCreationParameterProperties(BulkCreationParameters bulkCreationParameters = default(BulkCreationParameters), string notes = default(string), string ownerObjectId = default(string), string ownerUserPrincipalName = default(string), string createdByUserId = default(string), string createdByUser = default(string), System.DateTime? createdDate = default(System.DateTime?), string customImageId = default(string), string osType = default(string), string size = default(string), string userName = default(string), string password = default(string), string sshKey = default(string), bool? isAuthenticationWithSshKey = default(bool?), string fqdn = default(string), string labSubnetName = default(string), string labVirtualNetworkId = default(string), bool? disallowPublicIPAddress = default(bool?), System.Collections.Generic.IList<ArtifactInstallProperties> artifacts = default(System.Collections.Generic.IList<ArtifactInstallProperties>), ArtifactDeploymentStatusProperties artifactDeploymentStatus = default(ArtifactDeploymentStatusProperties), GalleryImageReference galleryImageReference = default(GalleryImageReference), ComputeVmProperties computeVM = default(ComputeVmProperties), NetworkInterfaceProperties networkInterface = default(NetworkInterfaceProperties), ApplicableSchedule applicableSchedule = default(ApplicableSchedule), System.DateTime? expirationDate = default(System.DateTime?), bool? allowClaim = default(bool?), string storageType = default(string), string virtualMachineCreationSource = default(string), string environmentId = default(string), string provisioningState = default(string), string uniqueIdentifier = default(string))

        {
            this.BulkCreationParameters = bulkCreationParameters;
            this.Notes = notes;
            this.OwnerObjectId = ownerObjectId;
            this.OwnerUserPrincipalName = ownerUserPrincipalName;
            this.CreatedByUserId = createdByUserId;
            this.CreatedByUser = createdByUser;
            this.CreatedDate = createdDate;
            this.CustomImageId = customImageId;
            this.OSType = osType;
            this.Size = size;
            this.UserName = userName;
            this.Password = password;
            this.SshKey = sshKey;
            this.IsAuthenticationWithSshKey = isAuthenticationWithSshKey;
            this.Fqdn = fqdn;
            this.LabSubnetName = labSubnetName;
            this.LabVirtualNetworkId = labVirtualNetworkId;
            this.DisallowPublicIPAddress = disallowPublicIPAddress;
            this.Artifacts = artifacts;
            this.ArtifactDeploymentStatus = artifactDeploymentStatus;
            this.GalleryImageReference = galleryImageReference;
            this.ComputeVM = computeVM;
            this.NetworkInterface = networkInterface;
            this.ApplicableSchedule = applicableSchedule;
            this.ExpirationDate = expirationDate;
            this.AllowClaim = allowClaim;
            this.StorageType = storageType;
            this.VirtualMachineCreationSource = virtualMachineCreationSource;
            this.EnvironmentId = environmentId;
            this.ProvisioningState = provisioningState;
            this.UniqueIdentifier = uniqueIdentifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the number of virtual machine instances to create.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bulkCreationParameters")]
        public BulkCreationParameters BulkCreationParameters {get; set; }

        /// <summary>
        /// Gets or sets the notes of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "notes")]
        public string Notes {get; set; }

        /// <summary>
        /// Gets or sets the object identifier of the owner of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ownerObjectId")]
        public string OwnerObjectId {get; set; }

        /// <summary>
        /// Gets or sets the user principal name of the virtual machine owner.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ownerUserPrincipalName")]
        public string OwnerUserPrincipalName {get; set; }

        /// <summary>
        /// Gets or sets the object identifier of the creator of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdByUserId")]
        public string CreatedByUserId {get; set; }

        /// <summary>
        /// Gets or sets the email address of creator of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdByUser")]
        public string CreatedByUser {get; set; }

        /// <summary>
        /// Gets or sets the creation date of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createdDate")]
        public System.DateTime? CreatedDate {get; set; }

        /// <summary>
        /// Gets or sets the custom image identifier of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "customImageId")]
        public string CustomImageId {get; set; }

        /// <summary>
        /// Gets or sets the OS type of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public string OSType {get; set; }

        /// <summary>
        /// Gets or sets the size of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "size")]
        public string Size {get; set; }

        /// <summary>
        /// Gets or sets the user name of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userName")]
        public string UserName {get; set; }

        /// <summary>
        /// Gets or sets the password of the virtual machine administrator.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "password")]
        public string Password {get; set; }

        /// <summary>
        /// Gets or sets the SSH key of the virtual machine administrator.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sshKey")]
        public string SshKey {get; set; }

        /// <summary>
        /// Gets or sets indicates whether this virtual machine uses an SSH key for
        /// authentication.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isAuthenticationWithSshKey")]
        public bool? IsAuthenticationWithSshKey {get; set; }

        /// <summary>
        /// Gets or sets the fully-qualified domain name of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fqdn")]
        public string Fqdn {get; set; }

        /// <summary>
        /// Gets or sets the lab subnet name of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "labSubnetName")]
        public string LabSubnetName {get; set; }

        /// <summary>
        /// Gets or sets the lab virtual network identifier of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "labVirtualNetworkId")]
        public string LabVirtualNetworkId {get; set; }

        /// <summary>
        /// Gets or sets indicates whether the virtual machine is to be created without
        /// a public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "disallowPublicIpAddress")]
        public bool? DisallowPublicIPAddress {get; set; }

        /// <summary>
        /// Gets or sets the artifacts to be installed on the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifacts")]
        public System.Collections.Generic.IList<ArtifactInstallProperties> Artifacts {get; set; }

        /// <summary>
        /// Gets or sets the artifact deployment status for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactDeploymentStatus")]
        public ArtifactDeploymentStatusProperties ArtifactDeploymentStatus {get; set; }

        /// <summary>
        /// Gets or sets the Microsoft Azure Marketplace image reference of the virtual
        /// machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "galleryImageReference")]
        public GalleryImageReference GalleryImageReference {get; set; }

        /// <summary>
        /// Gets or sets the compute virtual machine properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "computeVm")]
        public ComputeVmProperties ComputeVM {get; set; }

        /// <summary>
        /// Gets or sets the network interface properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkInterface")]
        public NetworkInterfaceProperties NetworkInterface {get; set; }

        /// <summary>
        /// Gets or sets the applicable schedule for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applicableSchedule")]
        public ApplicableSchedule ApplicableSchedule {get; set; }

        /// <summary>
        /// Gets or sets the expiration date for VM.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "expirationDate")]
        public System.DateTime? ExpirationDate {get; set; }

        /// <summary>
        /// Gets or sets indicates whether another user can take ownership of the
        /// virtual machine
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "allowClaim")]
        public bool? AllowClaim {get; set; }

        /// <summary>
        /// Gets or sets storage type to use for virtual machine (i.e. Standard,
        /// Premium).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageType")]
        public string StorageType {get; set; }

        /// <summary>
        /// Gets or sets tells source of creation of lab virtual machine. Output
        /// property only. Possible values include: &#39;FromCustomImage&#39;, &#39;FromGalleryImage&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualMachineCreationSource")]
        public string VirtualMachineCreationSource {get; set; }

        /// <summary>
        /// Gets or sets the resource ID of the environment that contains this virtual
        /// machine, if any.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentId")]
        public string EnvironmentId {get; set; }

        /// <summary>
        /// Gets or sets the provisioning status of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "uniqueIdentifier")]
        public string UniqueIdentifier {get; set; }
    }
}