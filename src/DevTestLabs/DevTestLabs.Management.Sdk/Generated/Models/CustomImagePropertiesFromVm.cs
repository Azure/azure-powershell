// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for creating a custom image from a virtual machine.
    /// </summary>
    public partial class CustomImagePropertiesFromVm
    {
        /// <summary>
        /// Initializes a new instance of the CustomImagePropertiesFromVm class.
        /// </summary>
        public CustomImagePropertiesFromVm()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomImagePropertiesFromVm class.
        /// </summary>

        /// <param name="sourceVMId">The source vm identifier.
        /// </param>

        /// <param name="windowsOSInfo">The Windows OS information of the VM.
        /// </param>

        /// <param name="linuxOSInfo">The Linux OS information of the VM.
        /// </param>
        public CustomImagePropertiesFromVm(string sourceVMId = default(string), WindowsOsInfo windowsOSInfo = default(WindowsOsInfo), LinuxOsInfo linuxOSInfo = default(LinuxOsInfo))

        {
            this.SourceVMId = sourceVMId;
            this.WindowsOSInfo = windowsOSInfo;
            this.LinuxOSInfo = linuxOSInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the source vm identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceVmId")]
        public string SourceVMId {get; set; }

        /// <summary>
        /// Gets or sets the Windows OS information of the VM.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "windowsOsInfo")]
        public WindowsOsInfo WindowsOSInfo {get; set; }

        /// <summary>
        /// Gets or sets the Linux OS information of the VM.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "linuxOsInfo")]
        public LinuxOsInfo LinuxOSInfo {get; set; }
    }
}