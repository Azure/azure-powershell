// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// A custom image.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class CustomImage : Resource
    {
        /// <summary>
        /// Initializes a new instance of the CustomImage class.
        /// </summary>
        public CustomImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomImage class.
        /// </summary>

        /// <param name="id">The identifier of the resource.
        /// </param>

        /// <param name="name">The name of the resource.
        /// </param>

        /// <param name="type">The type of the resource.
        /// </param>

        /// <param name="location">The location of the resource.
        /// </param>

        /// <param name="tags">The tags of the resource.
        /// </param>

        /// <param name="vm">The virtual machine from which the image is to be created.
        /// </param>

        /// <param name="vhd">The VHD from which the image is to be created.
        /// </param>

        /// <param name="description">The description of the custom image.
        /// </param>

        /// <param name="author">The author of the custom image.
        /// </param>

        /// <param name="creationDate">The creation date of the custom image.
        /// </param>

        /// <param name="managedImageId">The Managed Image Id backing the custom image.
        /// </param>

        /// <param name="provisioningState">The provisioning status of the resource.
        /// </param>

        /// <param name="uniqueIdentifier">The unique immutable identifier of a resource (Guid).
        /// </param>
        public CustomImage(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), CustomImagePropertiesFromVm vm = default(CustomImagePropertiesFromVm), CustomImagePropertiesCustom vhd = default(CustomImagePropertiesCustom), string description = default(string), string author = default(string), System.DateTime? creationDate = default(System.DateTime?), string managedImageId = default(string), string provisioningState = default(string), string uniqueIdentifier = default(string))

        : base(id, name, type, location, tags)
        {
            this.VM = vm;
            this.Vhd = vhd;
            this.Description = description;
            this.Author = author;
            this.CreationDate = creationDate;
            this.ManagedImageId = managedImageId;
            this.ProvisioningState = provisioningState;
            this.UniqueIdentifier = uniqueIdentifier;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the virtual machine from which the image is to be created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vm")]
        public CustomImagePropertiesFromVm VM {get; set; }

        /// <summary>
        /// Gets or sets the VHD from which the image is to be created.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vhd")]
        public CustomImagePropertiesCustom Vhd {get; set; }

        /// <summary>
        /// Gets or sets the description of the custom image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the author of the custom image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.author")]
        public string Author {get; set; }

        /// <summary>
        /// Gets the creation date of the custom image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.creationDate")]
        public System.DateTime? CreationDate {get; private set; }

        /// <summary>
        /// Gets or sets the Managed Image Id backing the custom image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.managedImageId")]
        public string ManagedImageId {get; set; }

        /// <summary>
        /// Gets or sets the provisioning status of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets the unique immutable identifier of a resource (Guid).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.uniqueIdentifier")]
        public string UniqueIdentifier {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.Vhd != null)
            {
                this.Vhd.Validate();
            }





        }
    }
}