// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// An artifact.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Artifact : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>
        public Artifact()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Artifact class.
        /// </summary>

        /// <param name="id">The identifier of the resource.
        /// </param>

        /// <param name="name">The name of the resource.
        /// </param>

        /// <param name="type">The type of the resource.
        /// </param>

        /// <param name="location">The location of the resource.
        /// </param>

        /// <param name="tags">The tags of the resource.
        /// </param>

        /// <param name="title">The artifact&#39;s title.
        /// </param>

        /// <param name="description">The artifact&#39;s description.
        /// </param>

        /// <param name="publisher">The artifact&#39;s publisher.
        /// </param>

        /// <param name="filePath">The file path to the artifact.
        /// </param>

        /// <param name="icon">The URI to the artifact icon.
        /// </param>

        /// <param name="targetOSType">The artifact&#39;s target OS.
        /// </param>

        /// <param name="parameters">The artifact&#39;s parameters.
        /// </param>

        /// <param name="createdDate">The artifact&#39;s creation date.
        /// </param>
        public Artifact(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string title = default(string), string description = default(string), string publisher = default(string), string filePath = default(string), string icon = default(string), string targetOSType = default(string), object parameters = default(object), System.DateTime? createdDate = default(System.DateTime?))

        : base(id, name, type, location, tags)
        {
            this.Title = title;
            this.Description = description;
            this.Publisher = publisher;
            this.FilePath = filePath;
            this.Icon = icon;
            this.TargetOSType = targetOSType;
            this.Parameters = parameters;
            this.CreatedDate = createdDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the artifact&#39;s title.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.title")]
        public string Title {get; private set; }

        /// <summary>
        /// Gets the artifact&#39;s description.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets the artifact&#39;s publisher.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publisher")]
        public string Publisher {get; private set; }

        /// <summary>
        /// Gets the file path to the artifact.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.filePath")]
        public string FilePath {get; private set; }

        /// <summary>
        /// Gets the URI to the artifact icon.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.icon")]
        public string Icon {get; private set; }

        /// <summary>
        /// Gets the artifact&#39;s target OS.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.targetOsType")]
        public string TargetOSType {get; private set; }

        /// <summary>
        /// Gets the artifact&#39;s parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.parameters")]
        public object Parameters {get; private set; }

        /// <summary>
        /// Gets the artifact&#39;s creation date.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate {get; private set; }
    }
}