// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of an artifact.
    /// </summary>
    public partial class ArtifactInstallProperties
    {
        /// <summary>
        /// Initializes a new instance of the ArtifactInstallProperties class.
        /// </summary>
        public ArtifactInstallProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArtifactInstallProperties class.
        /// </summary>

        /// <param name="artifactId">The artifact&#39;s identifier.
        /// </param>

        /// <param name="parameters">The parameters of the artifact.
        /// </param>

        /// <param name="status">The status of the artifact.
        /// </param>

        /// <param name="deploymentStatusMessage">The status message from the deployment.
        /// </param>

        /// <param name="vmExtensionStatusMessage">The status message from the virtual machine extension.
        /// </param>

        /// <param name="installTime">The time that the artifact starts to install on the virtual machine.
        /// </param>
        public ArtifactInstallProperties(string artifactId = default(string), System.Collections.Generic.IList<ArtifactParameterProperties> parameters = default(System.Collections.Generic.IList<ArtifactParameterProperties>), string status = default(string), string deploymentStatusMessage = default(string), string vmExtensionStatusMessage = default(string), System.DateTime? installTime = default(System.DateTime?))

        {
            this.ArtifactId = artifactId;
            this.Parameters = parameters;
            this.Status = status;
            this.DeploymentStatusMessage = deploymentStatusMessage;
            this.VMExtensionStatusMessage = vmExtensionStatusMessage;
            this.InstallTime = installTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the artifact&#39;s identifier.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "artifactId")]
        public string ArtifactId {get; set; }

        /// <summary>
        /// Gets or sets the parameters of the artifact.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parameters")]
        public System.Collections.Generic.IList<ArtifactParameterProperties> Parameters {get; set; }

        /// <summary>
        /// Gets or sets the status of the artifact.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets the status message from the deployment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deploymentStatusMessage")]
        public string DeploymentStatusMessage {get; set; }

        /// <summary>
        /// Gets or sets the status message from the virtual machine extension.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmExtensionStatusMessage")]
        public string VMExtensionStatusMessage {get; set; }

        /// <summary>
        /// Gets or sets the time that the artifact starts to install on the virtual
        /// machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "installTime")]
        public System.DateTime? InstallTime {get; set; }
    }
}