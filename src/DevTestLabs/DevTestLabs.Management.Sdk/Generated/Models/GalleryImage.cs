// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// A gallery image.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class GalleryImage : Resource
    {
        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>
        public GalleryImage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GalleryImage class.
        /// </summary>

        /// <param name="id">The identifier of the resource.
        /// </param>

        /// <param name="name">The name of the resource.
        /// </param>

        /// <param name="type">The type of the resource.
        /// </param>

        /// <param name="location">The location of the resource.
        /// </param>

        /// <param name="tags">The tags of the resource.
        /// </param>

        /// <param name="author">The author of the gallery image.
        /// </param>

        /// <param name="createdDate">The creation date of the gallery image.
        /// </param>

        /// <param name="description">The description of the gallery image.
        /// </param>

        /// <param name="imageReference">The image reference of the gallery image.
        /// </param>

        /// <param name="icon">The icon of the gallery image.
        /// </param>

        /// <param name="enabled">Indicates whether this gallery image is enabled.
        /// </param>
        public GalleryImage(string id = default(string), string name = default(string), string type = default(string), string location = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string author = default(string), System.DateTime? createdDate = default(System.DateTime?), string description = default(string), GalleryImageReference imageReference = default(GalleryImageReference), string icon = default(string), bool? enabled = default(bool?))

        : base(id, name, type, location, tags)
        {
            this.Author = author;
            this.CreatedDate = createdDate;
            this.Description = description;
            this.ImageReference = imageReference;
            this.Icon = icon;
            this.Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the author of the gallery image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.author")]
        public string Author {get; set; }

        /// <summary>
        /// Gets the creation date of the gallery image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.createdDate")]
        public System.DateTime? CreatedDate {get; private set; }

        /// <summary>
        /// Gets or sets the description of the gallery image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the image reference of the gallery image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.imageReference")]
        public GalleryImageReference ImageReference {get; set; }

        /// <summary>
        /// Gets or sets the icon of the gallery image.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.icon")]
        public string Icon {get; set; }

        /// <summary>
        /// Gets or sets indicates whether this gallery image is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enabled")]
        public bool? Enabled {get; set; }
    }
}