// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DevTestLabs.Models
{
    using System.Linq;

    /// <summary>
    /// A rule for NAT - exposing a VM&#39;s port (backendPort) on the public IP
    /// address using a load balancer.
    /// </summary>
    public partial class InboundNatRule
    {
        /// <summary>
        /// Initializes a new instance of the InboundNatRule class.
        /// </summary>
        public InboundNatRule()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InboundNatRule class.
        /// </summary>

        /// <param name="transportProtocol">The transport protocol for the endpoint.
        /// Possible values include: &#39;Tcp&#39;, &#39;Udp&#39;</param>

        /// <param name="frontendPort">The external endpoint port of the inbound connection. Possible values range
        /// between 1 and 65535, inclusive. If unspecified, a value will be allocated
        /// automatically.
        /// </param>

        /// <param name="backendPort">The port to which the external traffic will be redirected.
        /// </param>
        public InboundNatRule(string transportProtocol = default(string), int? frontendPort = default(int?), int? backendPort = default(int?))

        {
            this.TransportProtocol = transportProtocol;
            this.FrontendPort = frontendPort;
            this.BackendPort = backendPort;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the transport protocol for the endpoint. Possible values include: &#39;Tcp&#39;, &#39;Udp&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "transportProtocol")]
        public string TransportProtocol {get; set; }

        /// <summary>
        /// Gets or sets the external endpoint port of the inbound connection. Possible
        /// values range between 1 and 65535, inclusive. If unspecified, a value will
        /// be allocated automatically.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "frontendPort")]
        public int? FrontendPort {get; set; }

        /// <summary>
        /// Gets or sets the port to which the external traffic will be redirected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backendPort")]
        public int? BackendPort {get; set; }
    }
}