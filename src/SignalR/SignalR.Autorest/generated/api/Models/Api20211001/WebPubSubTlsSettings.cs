// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Extensions;

    /// <summary>TLS settings for the resource</summary>
    public partial class WebPubSubTlsSettings :
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20211001.IWebPubSubTlsSettings,
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Models.Api20211001.IWebPubSubTlsSettingsInternal
    {

        /// <summary>Backing field for <see cref="ClientCertEnabled" /> property.</summary>
        private bool? _clientCertEnabled;

        /// <summary>Request client certificate during TLS handshake if enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Origin(Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.PropertyOrigin.Owned)]
        public bool? ClientCertEnabled { get => this._clientCertEnabled; set => this._clientCertEnabled = value; }

        /// <summary>Creates an new <see cref="WebPubSubTlsSettings" /> instance.</summary>
        public WebPubSubTlsSettings()
        {

        }
    }
    /// TLS settings for the resource
    public partial interface IWebPubSubTlsSettings :
        Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.IJsonSerializable
    {
        /// <summary>Request client certificate during TLS handshake if enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.WebPubSub.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Request client certificate during TLS handshake if enabled",
        SerializedName = @"clientCertEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ClientCertEnabled { get; set; }

    }
    /// TLS settings for the resource
    internal partial interface IWebPubSubTlsSettingsInternal

    {
        /// <summary>Request client certificate during TLS handshake if enabled</summary>
        bool? ClientCertEnabled { get; set; }

    }
}