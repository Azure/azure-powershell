// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.SignalR.Models
{
    using System.Linq;

    /// <summary>
    /// Upstream auth settings.
    /// </summary>
    public partial class UpstreamAuthSettings
    {
        /// <summary>
        /// Initializes a new instance of the UpstreamAuthSettings class.
        /// </summary>
        public UpstreamAuthSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UpstreamAuthSettings class.
        /// </summary>

        /// <param name="type">Gets or sets the type of auth. None or ManagedIdentity is supported now.
        /// Possible values include: &#39;None&#39;, &#39;ManagedIdentity&#39;</param>

        /// <param name="managedIdentity">Gets or sets the managed identity settings. It&#39;s required if the auth type
        /// is set to ManagedIdentity.
        /// </param>
        public UpstreamAuthSettings(string type = default(string), ManagedIdentitySettings managedIdentity = default(ManagedIdentitySettings))

        {
            this.Type = type;
            this.ManagedIdentity = managedIdentity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the type of auth. None or ManagedIdentity is
        /// supported now. Possible values include: &#39;None&#39;, &#39;ManagedIdentity&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets gets or sets the managed identity settings. It&#39;s required if
        /// the auth type is set to ManagedIdentity.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedIdentity")]
        public ManagedIdentitySettings ManagedIdentity {get; set; }
    }
}