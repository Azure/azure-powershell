// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.SignalR.Models
{
    using System.Linq;

    /// <summary>
    /// Live trace category configuration of a Microsoft.SignalRService resource.
    /// </summary>
    public partial class LiveTraceCategory
    {
        /// <summary>
        /// Initializes a new instance of the LiveTraceCategory class.
        /// </summary>
        public LiveTraceCategory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LiveTraceCategory class.
        /// </summary>

        /// <param name="name">Gets or sets the live trace category&#39;s name.
        /// Available values: ConnectivityLogs, MessagingLogs.
        /// Case insensitive.
        /// </param>

        /// <param name="enabled">Indicates whether or the live trace category is enabled.
        /// Available values: true, false.
        /// Case insensitive.
        /// </param>
        public LiveTraceCategory(string name = default(string), string enabled = default(string))

        {
            this.Name = name;
            this.Enabled = enabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets gets or sets the live trace category&#39;s name.
        /// Available values: ConnectivityLogs, MessagingLogs.
        /// Case insensitive.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets indicates whether or the live trace category is enabled.
        /// Available values: true, false.
        /// Case insensitive.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enabled")]
        public string Enabled {get; set; }
    }
}