// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.SignalR.Models
{
    using System.Linq;

    /// <summary>
    /// Network ACLs for the resource
    /// </summary>
    public partial class SignalRNetworkACLs
    {
        /// <summary>
        /// Initializes a new instance of the SignalRNetworkACLs class.
        /// </summary>
        public SignalRNetworkACLs()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SignalRNetworkACLs class.
        /// </summary>

        /// <param name="defaultAction">Azure Networking ACL Action.
        /// Possible values include: &#39;Allow&#39;, &#39;Deny&#39;</param>

        /// <param name="publicNetwork">Network ACL
        /// </param>

        /// <param name="privateEndpoints">ACLs for requests from private endpoints
        /// </param>

        /// <param name="ipRules">IP rules for filtering public traffic
        /// </param>
        public SignalRNetworkACLs(string defaultAction = default(string), NetworkACL publicNetwork = default(NetworkACL), System.Collections.Generic.IList<PrivateEndpointACL> privateEndpoints = default(System.Collections.Generic.IList<PrivateEndpointACL>), System.Collections.Generic.IList<IPRule> ipRules = default(System.Collections.Generic.IList<IPRule>))

        {
            this.DefaultAction = defaultAction;
            this.PublicNetwork = publicNetwork;
            this.PrivateEndpoints = privateEndpoints;
            this.IPRules = ipRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets azure Networking ACL Action. Possible values include: &#39;Allow&#39;, &#39;Deny&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "defaultAction")]
        public string DefaultAction {get; set; }

        /// <summary>
        /// Gets or sets network ACL
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicNetwork")]
        public NetworkACL PublicNetwork {get; set; }

        /// <summary>
        /// Gets or sets aCLs for requests from private endpoints
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "privateEndpoints")]
        public System.Collections.Generic.IList<PrivateEndpointACL> PrivateEndpoints {get; set; }

        /// <summary>
        /// Gets or sets iP rules for filtering public traffic
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipRules")]
        public System.Collections.Generic.IList<IPRule> IPRules {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {


            if (this.PrivateEndpoints != null)
            {
                foreach (var element in this.PrivateEndpoints)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.IPRules != null)
            {
                if (this.IPRules.Count > 30)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxItems, "IPRules", 30);
                }
            }
        }
    }
}