// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.SignalR.Models
{
    using System.Linq;

    /// <summary>
    /// A class represent a replica resource.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Replica : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the Replica class.
        /// </summary>
        public Replica()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Replica class.
        /// </summary>

        /// <param name="id">Fully qualified resource ID for the resource. E.g.
        /// &#34;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}&#34;
        /// </param>

        /// <param name="name">The name of the resource
        /// </param>

        /// <param name="type">The type of the resource. E.g. &#34;Microsoft.Compute/virtualMachines&#34; or
        /// &#34;Microsoft.Storage/storageAccounts&#34;
        /// </param>

        /// <param name="systemData">Azure Resource Manager metadata containing createdBy and modifiedBy
        /// information.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="location">The geo-location where the resource lives
        /// </param>

        /// <param name="sku">The billing information of the resource.
        /// </param>

        /// <param name="provisioningState">Provisioning state of the resource.
        /// Possible values include: &#39;Unknown&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Canceled&#39;,
        /// &#39;Running&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Moving&#39;</param>

        /// <param name="regionEndpointEnabled">Enable or disable the regional endpoint. Default to &#34;Enabled&#34;.
        /// When it&#39;s Disabled, new connections will not be routed to this endpoint,
        /// however existing connections will not be affected.
        /// </param>

        /// <param name="resourceStopped">Stop or start the resource.  Default to &#34;false&#34;.
        /// When it&#39;s true, the data plane of the resource is shutdown.
        /// When it&#39;s false, the data plane of the resource is started.
        /// </param>
        public Replica(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), ResourceSku sku = default(ResourceSku), string provisioningState = default(string), string regionEndpointEnabled = default(string), string resourceStopped = default(string))

        : base(location, id, name, type, systemData, tags)
        {
            this.Sku = sku;
            this.ProvisioningState = provisioningState;
            this.RegionEndpointEnabled = regionEndpointEnabled;
            this.ResourceStopped = resourceStopped;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the billing information of the resource.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ResourceSku Sku {get; set; }

        /// <summary>
        /// Gets provisioning state of the resource. Possible values include: &#39;Unknown&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Canceled&#39;, &#39;Running&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Deleting&#39;, &#39;Moving&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets enable or disable the regional endpoint. Default to &#34;Enabled&#34;.
        /// When it&#39;s Disabled, new connections will not be routed to this endpoint,
        /// however existing connections will not be affected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.regionEndpointEnabled")]
        public string RegionEndpointEnabled {get; set; }

        /// <summary>
        /// Gets or sets stop or start the resource.  Default to &#34;false&#34;.
        /// When it&#39;s true, the data plane of the resource is shutdown.
        /// When it&#39;s false, the data plane of the resource is started.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceStopped")]
        public string ResourceStopped {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Sku != null)
            {
                this.Sku.Validate();
            }



        }
    }
}