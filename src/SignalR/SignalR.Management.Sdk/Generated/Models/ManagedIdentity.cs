// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.SignalR.Models
{
    using System.Linq;

    /// <summary>
    /// A class represent managed identities used for request and response
    /// </summary>
    public partial class ManagedIdentity
    {
        /// <summary>
        /// Initializes a new instance of the ManagedIdentity class.
        /// </summary>
        public ManagedIdentity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedIdentity class.
        /// </summary>

        /// <param name="type">Represent the identity type: systemAssigned, userAssigned, None
        /// Possible values include: &#39;None&#39;, &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;</param>

        /// <param name="userAssignedIdentities">Get or set the user assigned identities
        /// </param>

        /// <param name="principalId">Get the principal id for the system assigned identity.
        /// Only be used in response.
        /// </param>

        /// <param name="tenantId">Get the tenant id for the system assigned identity.
        /// Only be used in response
        /// </param>
        public ManagedIdentity(string type = default(string), System.Collections.Generic.IDictionary<string, UserAssignedIdentityProperty> userAssignedIdentities = default(System.Collections.Generic.IDictionary<string, UserAssignedIdentityProperty>), string principalId = default(string), string tenantId = default(string))

        {
            this.Type = type;
            this.UserAssignedIdentities = userAssignedIdentities;
            this.PrincipalId = principalId;
            this.TenantId = tenantId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets represent the identity type: systemAssigned, userAssigned,
        /// None Possible values include: &#39;None&#39;, &#39;SystemAssigned&#39;, &#39;UserAssigned&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; set; }

        /// <summary>
        /// Gets or sets get or set the user assigned identities
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userAssignedIdentities")]
        public System.Collections.Generic.IDictionary<string, UserAssignedIdentityProperty> UserAssignedIdentities {get; set; }

        /// <summary>
        /// Gets get the principal id for the system assigned identity.
        /// Only be used in response.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "principalId")]
        public string PrincipalId {get; private set; }

        /// <summary>
        /// Gets get the tenant id for the system assigned identity.
        /// Only be used in response
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tenantId")]
        public string TenantId {get; private set; }
    }
}