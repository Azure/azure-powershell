// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Extensions;

    /// <summary>Properties specific to the monitor resource.</summary>
    public partial class MonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal
    {

        /// <summary>Business of the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string CompanyInfoBusiness { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoBusiness; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoBusiness = value ?? null; }

        /// <summary>Country of the company location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string CompanyInfoCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoCountry; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoCountry = value ?? null; }

        /// <summary>Domain of the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string CompanyInfoDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoDomain = value ?? null; }

        /// <summary>Number of employees in the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string CompanyInfoEmployeesNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoEmployeesNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoEmployeesNumber = value ?? null; }

        /// <summary>State of the company location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string CompanyInfoState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfoState = value ?? null; }

        /// <summary>Associated Azure subscription Id for the elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentAzureSubscriptionId; }

        /// <summary>Region where Deployment at Elastic side took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentElasticsearchRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchRegion; }

        /// <summary>Elasticsearch ingestion endpoint of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentElasticsearchServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchServiceUrl; }

        /// <summary>Elastic deployment Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentId; }

        /// <summary>Kibana endpoint of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentKibanaServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaServiceUrl; }

        /// <summary>Kibana dashboard sso URL of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentKibanaSsoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaSsoUrl; }

        /// <summary>Elastic deployment name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudDeploymentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentName; }

        /// <summary>Elastic cloud default dashboard sso URL of the Elastic user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudUserElasticCloudSsoDefaultUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserElasticCloudSsoDefaultUrl; }

        /// <summary>Email of the Elastic User Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserEmailAddress; }

        /// <summary>User Id of the elastic account of the User.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string ElasticCloudUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserId; }

        /// <summary>Backing field for <see cref="ElasticProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticProperties _elasticProperty;

        /// <summary>Elastic cloud properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticProperties ElasticProperty { get => (this._elasticProperty = this._elasticProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.ElasticProperties()); set => this._elasticProperty = value; }

        /// <summary>Backing field for <see cref="LiftrResourceCategory" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories? _liftrResourceCategory;

        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories? LiftrResourceCategory { get => this._liftrResourceCategory; }

        /// <summary>Backing field for <see cref="LiftrResourcePreference" /> property.</summary>
        private int? _liftrResourcePreference;

        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public int? LiftrResourcePreference { get => this._liftrResourcePreference; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentAzureSubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentAzureSubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentAzureSubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentAzureSubscriptionId = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentElasticsearchRegion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentElasticsearchRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchRegion = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentElasticsearchServiceUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentElasticsearchServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchServiceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentElasticsearchServiceUrl = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentId = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentKibanaServiceUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentKibanaServiceUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaServiceUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaServiceUrl = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentKibanaSsoUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentKibanaSsoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaSsoUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentKibanaSsoUrl = value; }

        /// <summary>Internal Acessors for ElasticCloudDeploymentName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudDeploymentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeploymentName = value; }

        /// <summary>Internal Acessors for ElasticCloudUserElasticCloudSsoDefaultUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudUserElasticCloudSsoDefaultUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserElasticCloudSsoDefaultUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserElasticCloudSsoDefaultUrl = value; }

        /// <summary>Internal Acessors for ElasticCloudUserEmailAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserEmailAddress = value; }

        /// <summary>Internal Acessors for ElasticCloudUserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticCloudUserId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUserId = value; }

        /// <summary>Internal Acessors for ElasticProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticProperties Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticProperty { get => (this._elasticProperty = this._elasticProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.ElasticProperties()); set { {_elasticProperty = value;} } }

        /// <summary>Internal Acessors for ElasticPropertyElasticCloudDeployment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticCloudDeployment Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticPropertyElasticCloudDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudDeployment = value; }

        /// <summary>Internal Acessors for ElasticPropertyElasticCloudUser</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticCloudUser Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ElasticPropertyElasticCloudUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticPropertiesInternal)ElasticProperty).ElasticCloudUser = value; }

        /// <summary>Internal Acessors for LiftrResourceCategory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories? Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.LiftrResourceCategory { get => this._liftrResourceCategory; set { {_liftrResourceCategory = value;} } }

        /// <summary>Internal Acessors for LiftrResourcePreference</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.LiftrResourcePreference { get => this._liftrResourcePreference; set { {_liftrResourcePreference = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UserInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfo Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.UserInfo { get => (this._userInfo = this._userInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.UserInfo()); set { {_userInfo = value;} } }

        /// <summary>Internal Acessors for UserInfoCompanyInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.ICompanyInfo Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IMonitorPropertiesInternal.UserInfoCompanyInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyInfo = value; }

        /// <summary>Backing field for <see cref="MonitoringStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.MonitoringStatus? _monitoringStatus;

        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.MonitoringStatus? MonitoringStatus { get => this._monitoringStatus; set => this._monitoringStatus = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UserInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfo _userInfo;

        /// <summary>User information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfo UserInfo { get => (this._userInfo = this._userInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.UserInfo()); set => this._userInfo = value; }

        /// <summary>Company name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string UserInfoCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).CompanyName = value ?? null; }

        /// <summary>Email of the user used by Elastic for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string UserInfoEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).EmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).EmailAddress = value ?? null; }

        /// <summary>First name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string UserInfoFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).FirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).FirstName = value ?? null; }

        /// <summary>Last name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Origin(Microsoft.Azure.PowerShell.Cmdlets.Elastic.PropertyOrigin.Inlined)]
        public string UserInfoLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).LastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfoInternal)UserInfo).LastName = value ?? null; }

        /// <summary>Creates an new <see cref="MonitorProperties" /> instance.</summary>
        public MonitorProperties()
        {

        }
    }
    /// Properties specific to the monitor resource.
    public partial interface IMonitorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.IJsonSerializable
    {
        /// <summary>Business of the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Business of the company",
        SerializedName = @"business",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoBusiness { get; set; }
        /// <summary>Country of the company location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country of the company location.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoCountry { get; set; }
        /// <summary>Domain of the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Domain of the company",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoDomain { get; set; }
        /// <summary>Number of employees in the company</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of employees in the company",
        SerializedName = @"employeesNumber",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoEmployeesNumber { get; set; }
        /// <summary>State of the company location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"State of the company location.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string CompanyInfoState { get; set; }
        /// <summary>Associated Azure subscription Id for the elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Associated Azure subscription Id for the elastic deployment.",
        SerializedName = @"azureSubscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentAzureSubscriptionId { get;  }
        /// <summary>Region where Deployment at Elastic side took place.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Region where Deployment at Elastic side took place.",
        SerializedName = @"elasticsearchRegion",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentElasticsearchRegion { get;  }
        /// <summary>Elasticsearch ingestion endpoint of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Elasticsearch ingestion endpoint of the Elastic deployment.",
        SerializedName = @"elasticsearchServiceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentElasticsearchServiceUrl { get;  }
        /// <summary>Elastic deployment Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Elastic deployment Id",
        SerializedName = @"deploymentId",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentId { get;  }
        /// <summary>Kibana endpoint of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Kibana endpoint of the Elastic deployment.",
        SerializedName = @"kibanaServiceUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentKibanaServiceUrl { get;  }
        /// <summary>Kibana dashboard sso URL of the Elastic deployment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Kibana dashboard sso URL of the Elastic deployment.",
        SerializedName = @"kibanaSsoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentKibanaSsoUrl { get;  }
        /// <summary>Elastic deployment name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Elastic deployment name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudDeploymentName { get;  }
        /// <summary>Elastic cloud default dashboard sso URL of the Elastic user account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Elastic cloud default dashboard sso URL of the Elastic user account.",
        SerializedName = @"elasticCloudSsoDefaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudUserElasticCloudSsoDefaultUrl { get;  }
        /// <summary>Email of the Elastic User Account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Email of the Elastic User Account.",
        SerializedName = @"emailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudUserEmailAddress { get;  }
        /// <summary>User Id of the elastic account of the User.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User Id of the elastic account of the User.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ElasticCloudUserId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"liftrResourceCategory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories) })]
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories? LiftrResourceCategory { get;  }
        /// <summary>The priority of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The priority of the resource.",
        SerializedName = @"liftrResourcePreference",
        PossibleTypes = new [] { typeof(int) })]
        int? LiftrResourcePreference { get;  }
        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying if the resource monitoring is enabled or disabled.",
        SerializedName = @"monitoringStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.MonitoringStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>Provisioning state of the monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the monitor resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Company name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Company name of the user",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoCompanyName { get; set; }
        /// <summary>Email of the user used by Elastic for contacting them if needed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of the user used by Elastic for contacting them if needed",
        SerializedName = @"emailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoEmailAddress { get; set; }
        /// <summary>First name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First name of the user",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoFirstName { get; set; }
        /// <summary>Last name of the user</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Elastic.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last name of the user",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string UserInfoLastName { get; set; }

    }
    /// Properties specific to the monitor resource.
    internal partial interface IMonitorPropertiesInternal

    {
        /// <summary>Business of the company</summary>
        string CompanyInfoBusiness { get; set; }
        /// <summary>Country of the company location.</summary>
        string CompanyInfoCountry { get; set; }
        /// <summary>Domain of the company</summary>
        string CompanyInfoDomain { get; set; }
        /// <summary>Number of employees in the company</summary>
        string CompanyInfoEmployeesNumber { get; set; }
        /// <summary>State of the company location.</summary>
        string CompanyInfoState { get; set; }
        /// <summary>Associated Azure subscription Id for the elastic deployment.</summary>
        string ElasticCloudDeploymentAzureSubscriptionId { get; set; }
        /// <summary>Region where Deployment at Elastic side took place.</summary>
        string ElasticCloudDeploymentElasticsearchRegion { get; set; }
        /// <summary>Elasticsearch ingestion endpoint of the Elastic deployment.</summary>
        string ElasticCloudDeploymentElasticsearchServiceUrl { get; set; }
        /// <summary>Elastic deployment Id</summary>
        string ElasticCloudDeploymentId { get; set; }
        /// <summary>Kibana endpoint of the Elastic deployment.</summary>
        string ElasticCloudDeploymentKibanaServiceUrl { get; set; }
        /// <summary>Kibana dashboard sso URL of the Elastic deployment.</summary>
        string ElasticCloudDeploymentKibanaSsoUrl { get; set; }
        /// <summary>Elastic deployment name</summary>
        string ElasticCloudDeploymentName { get; set; }
        /// <summary>Elastic cloud default dashboard sso URL of the Elastic user account.</summary>
        string ElasticCloudUserElasticCloudSsoDefaultUrl { get; set; }
        /// <summary>Email of the Elastic User Account.</summary>
        string ElasticCloudUserEmailAddress { get; set; }
        /// <summary>User Id of the elastic account of the User.</summary>
        string ElasticCloudUserId { get; set; }
        /// <summary>Elastic cloud properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticProperties ElasticProperty { get; set; }
        /// <summary>Details of the elastic cloud deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticCloudDeployment ElasticPropertyElasticCloudDeployment { get; set; }
        /// <summary>Details of the user's elastic account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IElasticCloudUser ElasticPropertyElasticCloudUser { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.LiftrResourceCategories? LiftrResourceCategory { get; set; }
        /// <summary>The priority of the resource.</summary>
        int? LiftrResourcePreference { get; set; }
        /// <summary>Flag specifying if the resource monitoring is enabled or disabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.MonitoringStatus? MonitoringStatus { get; set; }
        /// <summary>Provisioning state of the monitor resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>User information.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.IUserInfo UserInfo { get; set; }
        /// <summary>Company information of the user to be passed to partners.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Elastic.Models.Api20200701.ICompanyInfo UserInfoCompanyInfo { get; set; }
        /// <summary>Company name of the user</summary>
        string UserInfoCompanyName { get; set; }
        /// <summary>Email of the user used by Elastic for contacting them if needed</summary>
        string UserInfoEmailAddress { get; set; }
        /// <summary>First name of the user</summary>
        string UserInfoFirstName { get; set; }
        /// <summary>Last name of the user</summary>
        string UserInfoLastName { get; set; }

    }
}