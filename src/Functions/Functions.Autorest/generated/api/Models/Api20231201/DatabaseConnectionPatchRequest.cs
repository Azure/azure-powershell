// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Static Site Database Connection Request Properties resource when patching</summary>
    public partial class DatabaseConnectionPatchRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequest,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestInternal
    {

        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ConnectionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ConnectionIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ConnectionIdentity = value ?? null; }

        /// <summary>The connection string to use to connect to the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ConnectionString = value ?? null; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DatabaseConnectionPatchRequestProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestProperties _property;

        /// <summary>DatabaseConnectionPatchRequest resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DatabaseConnectionPatchRequestProperties()); set => this._property = value; }

        /// <summary>The region of the database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string Region { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).Region = value ?? null; }

        /// <summary>The resource id of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestPropertiesInternal)Property).ResourceId = value ?? null; }

        /// <summary>Creates an new <see cref="DatabaseConnectionPatchRequest" /> instance.</summary>
        public DatabaseConnectionPatchRequest()
        {

        }
    }
    /// Static Site Database Connection Request Properties resource when patching
    public partial interface IDatabaseConnectionPatchRequest :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.",
        SerializedName = @"connectionIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionIdentity { get; set; }
        /// <summary>The connection string to use to connect to the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The connection string to use to connect to the database.",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionString { get; set; }
        /// <summary>The region of the database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The region of the database resource.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>The resource id of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the database.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }

    }
    /// Static Site Database Connection Request Properties resource when patching
    internal partial interface IDatabaseConnectionPatchRequestInternal

    {
        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        string ConnectionIdentity { get; set; }
        /// <summary>The connection string to use to connect to the database.</summary>
        string ConnectionString { get; set; }
        /// <summary>DatabaseConnectionPatchRequest resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPatchRequestProperties Property { get; set; }
        /// <summary>The region of the database resource.</summary>
        string Region { get; set; }
        /// <summary>The resource id of the database.</summary>
        string ResourceId { get; set; }

    }
}