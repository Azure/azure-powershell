// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    public partial class SiteDnsConfig :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteDnsConfig,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteDnsConfigInternal
    {

        /// <summary>Backing field for <see cref="DnsAltServer" /> property.</summary>
        private string _dnsAltServer;

        /// <summary>
        /// Alternate DNS server to be used by apps. This property replicates the WEBSITE_DNS_ALT_SERVER app setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DnsAltServer { get => this._dnsAltServer; set => this._dnsAltServer = value; }

        /// <summary>Backing field for <see cref="DnsLegacySortOrder" /> property.</summary>
        private bool? _dnsLegacySortOrder;

        /// <summary>
        /// Indicates that sites using Virtual network custom DNS servers are still sorting the list of DNS servers. Read-Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? DnsLegacySortOrder { get => this._dnsLegacySortOrder; }

        /// <summary>Backing field for <see cref="DnsMaxCacheTimeout" /> property.</summary>
        private int? _dnsMaxCacheTimeout;

        /// <summary>
        /// Custom time for DNS to be cached in seconds. Allowed range: 0-60. Default is 30 seconds. 0 means caching disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public int? DnsMaxCacheTimeout { get => this._dnsMaxCacheTimeout; set => this._dnsMaxCacheTimeout = value; }

        /// <summary>Backing field for <see cref="DnsRetryAttemptCount" /> property.</summary>
        private int? _dnsRetryAttemptCount;

        /// <summary>Total number of retries for dns lookup. Allowed range: 1-5. Default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public int? DnsRetryAttemptCount { get => this._dnsRetryAttemptCount; set => this._dnsRetryAttemptCount = value; }

        /// <summary>Backing field for <see cref="DnsRetryAttemptTimeout" /> property.</summary>
        private int? _dnsRetryAttemptTimeout;

        /// <summary>Timeout for a single dns lookup in seconds. Allowed range: 1-30. Default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public int? DnsRetryAttemptTimeout { get => this._dnsRetryAttemptTimeout; set => this._dnsRetryAttemptTimeout = value; }

        /// <summary>Backing field for <see cref="DnsServer" /> property.</summary>
        private string[] _dnsServer;

        /// <summary>
        /// List of custom DNS servers to be used by an app for lookups. Maximum 5 dns servers can be set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string[] DnsServer { get => this._dnsServer; set => this._dnsServer = value; }

        /// <summary>Internal Acessors for DnsLegacySortOrder</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ISiteDnsConfigInternal.DnsLegacySortOrder { get => this._dnsLegacySortOrder; set { {_dnsLegacySortOrder = value;} } }

        /// <summary>Creates an new <see cref="SiteDnsConfig" /> instance.</summary>
        public SiteDnsConfig()
        {

        }
    }
    public partial interface ISiteDnsConfig :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Alternate DNS server to be used by apps. This property replicates the WEBSITE_DNS_ALT_SERVER app setting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Alternate DNS server to be used by apps. This property replicates the WEBSITE_DNS_ALT_SERVER app setting.",
        SerializedName = @"dnsAltServer",
        PossibleTypes = new [] { typeof(string) })]
        string DnsAltServer { get; set; }
        /// <summary>
        /// Indicates that sites using Virtual network custom DNS servers are still sorting the list of DNS servers. Read-Only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates that sites using Virtual network custom DNS servers are still sorting the list of DNS servers. Read-Only.",
        SerializedName = @"dnsLegacySortOrder",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DnsLegacySortOrder { get;  }
        /// <summary>
        /// Custom time for DNS to be cached in seconds. Allowed range: 0-60. Default is 30 seconds. 0 means caching disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Custom time for DNS to be cached in seconds. Allowed range: 0-60. Default is 30 seconds. 0 means caching disabled.",
        SerializedName = @"dnsMaxCacheTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? DnsMaxCacheTimeout { get; set; }
        /// <summary>Total number of retries for dns lookup. Allowed range: 1-5. Default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of retries for dns lookup. Allowed range: 1-5. Default is 3.",
        SerializedName = @"dnsRetryAttemptCount",
        PossibleTypes = new [] { typeof(int) })]
        int? DnsRetryAttemptCount { get; set; }
        /// <summary>Timeout for a single dns lookup in seconds. Allowed range: 1-30. Default is 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timeout for a single dns lookup in seconds. Allowed range: 1-30. Default is 3.",
        SerializedName = @"dnsRetryAttemptTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? DnsRetryAttemptTimeout { get; set; }
        /// <summary>
        /// List of custom DNS servers to be used by an app for lookups. Maximum 5 dns servers can be set.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of custom DNS servers to be used by an app for lookups. Maximum 5 dns servers can be set.",
        SerializedName = @"dnsServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DnsServer { get; set; }

    }
    internal partial interface ISiteDnsConfigInternal

    {
        /// <summary>
        /// Alternate DNS server to be used by apps. This property replicates the WEBSITE_DNS_ALT_SERVER app setting.
        /// </summary>
        string DnsAltServer { get; set; }
        /// <summary>
        /// Indicates that sites using Virtual network custom DNS servers are still sorting the list of DNS servers. Read-Only.
        /// </summary>
        bool? DnsLegacySortOrder { get; set; }
        /// <summary>
        /// Custom time for DNS to be cached in seconds. Allowed range: 0-60. Default is 30 seconds. 0 means caching disabled.
        /// </summary>
        int? DnsMaxCacheTimeout { get; set; }
        /// <summary>Total number of retries for dns lookup. Allowed range: 1-5. Default is 3.</summary>
        int? DnsRetryAttemptCount { get; set; }
        /// <summary>Timeout for a single dns lookup in seconds. Allowed range: 1-30. Default is 3.</summary>
        int? DnsRetryAttemptTimeout { get; set; }
        /// <summary>
        /// List of custom DNS servers to be used by an app for lookups. Maximum 5 dns servers can be set.
        /// </summary>
        string[] DnsServer { get; set; }

    }
}