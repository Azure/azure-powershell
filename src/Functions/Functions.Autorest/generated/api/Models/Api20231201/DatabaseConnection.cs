// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Static Site Database Connection resource.</summary>
    public partial class DatabaseConnection :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnection,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource __proxyOnlyResource = new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ProxyOnlyResource();

        /// <summary>A list of configuration files associated with this database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteDatabaseConnectionConfigurationFileOverview[] ConfigurationFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConfigurationFile; }

        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ConnectionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConnectionIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConnectionIdentity = value ?? null; }

        /// <summary>The connection string to use to connect to the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConnectionString = value ?? null; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; }

        /// <summary>Kind of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind = value ?? null; }

        /// <summary>Internal Acessors for ConfigurationFile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteDatabaseConnectionConfigurationFileOverview[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionInternal.ConfigurationFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConfigurationFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ConfigurationFile = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DatabaseConnectionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type = value; }

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionProperties _property;

        /// <summary>DatabaseConnection resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.DatabaseConnectionProperties()); set => this._property = value; }

        /// <summary>The region of the database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string Region { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).Region = value ?? null; }

        /// <summary>The resource id of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionPropertiesInternal)Property).ResourceId = value ?? null; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; }

        /// <summary>Creates an new <see cref="DatabaseConnection" /> instance.</summary>
        public DatabaseConnection()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyOnlyResource), __proxyOnlyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyOnlyResource), __proxyOnlyResource);
        }
    }
    /// Static Site Database Connection resource.
    public partial interface IDatabaseConnection :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResource
    {
        /// <summary>A list of configuration files associated with this database connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A list of configuration files associated with this database connection.",
        SerializedName = @"configurationFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteDatabaseConnectionConfigurationFileOverview) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteDatabaseConnectionConfigurationFileOverview[] ConfigurationFile { get;  }
        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated with the resource id of the managed identity resource.",
        SerializedName = @"connectionIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionIdentity { get; set; }
        /// <summary>The connection string to use to connect to the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The connection string to use to connect to the database.",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionString { get; set; }
        /// <summary>The region of the database resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The region of the database resource.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>The resource id of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the database.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }

    }
    /// Static Site Database Connection resource.
    internal partial interface IDatabaseConnectionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IProxyOnlyResourceInternal
    {
        /// <summary>A list of configuration files associated with this database connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IStaticSiteDatabaseConnectionConfigurationFileOverview[] ConfigurationFile { get; set; }
        /// <summary>
        /// If present, the identity is used in conjunction with connection string to connect to the database. Use of the system-assigned
        /// managed identity is indicated with the string 'SystemAssigned', while use of a user-assigned managed identity is indicated
        /// with the resource id of the managed identity resource.
        /// </summary>
        string ConnectionIdentity { get; set; }
        /// <summary>The connection string to use to connect to the database.</summary>
        string ConnectionString { get; set; }
        /// <summary>DatabaseConnection resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IDatabaseConnectionProperties Property { get; set; }
        /// <summary>The region of the database resource.</summary>
        string Region { get; set; }
        /// <summary>The resource id of the database.</summary>
        string ResourceId { get; set; }

    }
}