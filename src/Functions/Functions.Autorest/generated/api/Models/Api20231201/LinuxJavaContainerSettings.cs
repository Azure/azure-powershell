// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Linux Java Container settings.</summary>
    public partial class LinuxJavaContainerSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal
    {

        /// <summary>Backing field for <see cref="EndOfLifeDate" /> property.</summary>
        private global::System.DateTime? _endOfLifeDate;

        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public global::System.DateTime? EndOfLifeDate { get => this._endOfLifeDate; }

        /// <summary>Backing field for <see cref="IsAutoUpdate" /> property.</summary>
        private bool? _isAutoUpdate;

        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? IsAutoUpdate { get => this._isAutoUpdate; }

        /// <summary>Backing field for <see cref="IsDeprecated" /> property.</summary>
        private bool? _isDeprecated;

        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? IsDeprecated { get => this._isDeprecated; }

        /// <summary>Backing field for <see cref="IsEarlyAccess" /> property.</summary>
        private bool? _isEarlyAccess;

        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? IsEarlyAccess { get => this._isEarlyAccess; }

        /// <summary>Backing field for <see cref="IsHidden" /> property.</summary>
        private bool? _isHidden;

        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? IsHidden { get => this._isHidden; }

        /// <summary>Backing field for <see cref="IsPreview" /> property.</summary>
        private bool? _isPreview;

        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public bool? IsPreview { get => this._isPreview; }

        /// <summary>Backing field for <see cref="Java11Runtime" /> property.</summary>
        private string _java11Runtime;

        /// <summary>Java 11 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Java11Runtime { get => this._java11Runtime; }

        /// <summary>Backing field for <see cref="Java8Runtime" /> property.</summary>
        private string _java8Runtime;

        /// <summary>Java 8 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Java8Runtime { get => this._java8Runtime; }

        /// <summary>Internal Acessors for EndOfLifeDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.EndOfLifeDate { get => this._endOfLifeDate; set { {_endOfLifeDate = value;} } }

        /// <summary>Internal Acessors for IsAutoUpdate</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.IsAutoUpdate { get => this._isAutoUpdate; set { {_isAutoUpdate = value;} } }

        /// <summary>Internal Acessors for IsDeprecated</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.IsDeprecated { get => this._isDeprecated; set { {_isDeprecated = value;} } }

        /// <summary>Internal Acessors for IsEarlyAccess</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.IsEarlyAccess { get => this._isEarlyAccess; set { {_isEarlyAccess = value;} } }

        /// <summary>Internal Acessors for IsHidden</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.IsHidden { get => this._isHidden; set { {_isHidden = value;} } }

        /// <summary>Internal Acessors for IsPreview</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.IsPreview { get => this._isPreview; set { {_isPreview = value;} } }

        /// <summary>Internal Acessors for Java11Runtime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.Java11Runtime { get => this._java11Runtime; set { {_java11Runtime = value;} } }

        /// <summary>Internal Acessors for Java8Runtime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ILinuxJavaContainerSettingsInternal.Java8Runtime { get => this._java8Runtime; set { {_java8Runtime = value;} } }

        /// <summary>Creates an new <see cref="LinuxJavaContainerSettings" /> instance.</summary>
        public LinuxJavaContainerSettings()
        {

        }
    }
    /// Linux Java Container settings.
    public partial interface ILinuxJavaContainerSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>End-of-life date for the minor version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End-of-life date for the minor version.",
        SerializedName = @"endOfLifeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndOfLifeDate { get;  }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.",
        SerializedName = @"isAutoUpdate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsAutoUpdate { get;  }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is deprecated; otherwise, <code>false</code>.",
        SerializedName = @"isDeprecated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDeprecated { get;  }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the minor version is early-access; otherwise, <code>false</code>.",
        SerializedName = @"isEarlyAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEarlyAccess { get;  }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack should be hidden; otherwise, <code>false</code>.",
        SerializedName = @"isHidden",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsHidden { get;  }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"<code>true</code> if the stack is in preview; otherwise, <code>false</code>.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPreview { get;  }
        /// <summary>Java 11 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java 11 version (runtime only).",
        SerializedName = @"java11Runtime",
        PossibleTypes = new [] { typeof(string) })]
        string Java11Runtime { get;  }
        /// <summary>Java 8 version (runtime only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Java 8 version (runtime only).",
        SerializedName = @"java8Runtime",
        PossibleTypes = new [] { typeof(string) })]
        string Java8Runtime { get;  }

    }
    /// Linux Java Container settings.
    internal partial interface ILinuxJavaContainerSettingsInternal

    {
        /// <summary>End-of-life date for the minor version.</summary>
        global::System.DateTime? EndOfLifeDate { get; set; }
        /// <summary>
        /// <code>true</code> if the stack version is auto-updated; otherwise, <code>false</code>.
        /// </summary>
        bool? IsAutoUpdate { get; set; }
        /// <summary><code>true</code> if the stack is deprecated; otherwise, <code>false</code>.</summary>
        bool? IsDeprecated { get; set; }
        /// <summary>
        /// <code>true</code> if the minor version is early-access; otherwise, <code>false</code>.
        /// </summary>
        bool? IsEarlyAccess { get; set; }
        /// <summary><code>true</code> if the stack should be hidden; otherwise, <code>false</code>.</summary>
        bool? IsHidden { get; set; }
        /// <summary><code>true</code> if the stack is in preview; otherwise, <code>false</code>.</summary>
        bool? IsPreview { get; set; }
        /// <summary>Java 11 version (runtime only).</summary>
        string Java11Runtime { get; set; }
        /// <summary>Java 8 version (runtime only).</summary>
        string Java8Runtime { get; set; }

    }
}