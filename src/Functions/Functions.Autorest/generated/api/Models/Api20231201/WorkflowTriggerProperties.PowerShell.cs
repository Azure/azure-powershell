// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>The workflow trigger properties.</summary>
    [System.ComponentModel.TypeConverter(typeof(WorkflowTriggerPropertiesTypeConverter))]
    public partial class WorkflowTriggerProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new WorkflowTriggerProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new WorkflowTriggerProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="WorkflowTriggerProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="WorkflowTriggerProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal WorkflowTriggerProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Recurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Recurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence) content.GetValueForProperty("Recurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Recurrence, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Workflow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Workflow = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceReference) content.GetValueForProperty("Workflow",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Workflow, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState.CreateFrom);
            }
            if (content.Contains("CreatedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).CreatedTime = (global::System.DateTime?) content.GetValueForProperty("CreatedTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).CreatedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ChangedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ChangedTime = (global::System.DateTime?) content.GetValueForProperty("ChangedTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ChangedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState.CreateFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus.CreateFrom);
            }
            if (content.Contains("LastExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).LastExecutionTime = (global::System.DateTime?) content.GetValueForProperty("LastExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).LastExecutionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).NextExecutionTime = (global::System.DateTime?) content.GetValueForProperty("NextExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).NextExecutionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecurrenceSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceSchedule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule) content.GetValueForProperty("RecurrenceSchedule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceSchedule, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrenceFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceFrequency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency?) content.GetValueForProperty("RecurrenceFrequency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceFrequency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency.CreateFrom);
            }
            if (content.Contains("RecurrenceInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceInterval = (int?) content.GetValueForProperty("RecurrenceInterval",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrenceStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceStartTime = (string) content.GetValueForProperty("RecurrenceStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceEndTime = (string) content.GetValueForProperty("RecurrenceEndTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceEndTime, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceTimeZone = (string) content.GetValueForProperty("RecurrenceTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[]) content.GetValueForProperty("ScheduleWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek.CreateFrom));
            }
            if (content.Contains("ScheduleMonthlyOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthlyOccurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[]) content.GetValueForProperty("ScheduleMonthlyOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthlyOccurrence, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleOccurrenceTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkflowId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowId = (string) content.GetValueForProperty("WorkflowId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowId, global::System.Convert.ToString);
            }
            if (content.Contains("WorkflowName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowName = (string) content.GetValueForProperty("WorkflowName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowName, global::System.Convert.ToString);
            }
            if (content.Contains("WorkflowType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowType = (string) content.GetValueForProperty("WorkflowType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowType, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMinute = (int[]) content.GetValueForProperty("ScheduleMinute",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMinute, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleHour = (int[]) content.GetValueForProperty("ScheduleHour",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleHour, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleMonthDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthDay = (int[]) content.GetValueForProperty("ScheduleMonthDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthDay, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal WorkflowTriggerProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Recurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Recurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerRecurrence) content.GetValueForProperty("Recurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Recurrence, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.WorkflowTriggerRecurrenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Workflow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Workflow = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IResourceReference) content.GetValueForProperty("Workflow",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Workflow, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.ResourceReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowTriggerProvisioningState.CreateFrom);
            }
            if (content.Contains("CreatedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).CreatedTime = (global::System.DateTime?) content.GetValueForProperty("CreatedTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).CreatedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ChangedTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ChangedTime = (global::System.DateTime?) content.GetValueForProperty("ChangedTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ChangedTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowState.CreateFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.WorkflowStatus.CreateFrom);
            }
            if (content.Contains("LastExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).LastExecutionTime = (global::System.DateTime?) content.GetValueForProperty("LastExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).LastExecutionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NextExecutionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).NextExecutionTime = (global::System.DateTime?) content.GetValueForProperty("NextExecutionTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).NextExecutionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("RecurrenceSchedule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceSchedule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceSchedule) content.GetValueForProperty("RecurrenceSchedule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceSchedule, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecurrenceFrequency"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceFrequency = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency?) content.GetValueForProperty("RecurrenceFrequency",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceFrequency, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.RecurrenceFrequency.CreateFrom);
            }
            if (content.Contains("RecurrenceInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceInterval = (int?) content.GetValueForProperty("RecurrenceInterval",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RecurrenceStartTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceStartTime = (string) content.GetValueForProperty("RecurrenceStartTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceStartTime, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceEndTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceEndTime = (string) content.GetValueForProperty("RecurrenceEndTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceEndTime, global::System.Convert.ToString);
            }
            if (content.Contains("RecurrenceTimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceTimeZone = (string) content.GetValueForProperty("RecurrenceTimeZone",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).RecurrenceTimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleWeekDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleWeekDay = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek[]) content.GetValueForProperty("ScheduleWeekDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleWeekDay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DaysOfWeek.CreateFrom));
            }
            if (content.Contains("ScheduleMonthlyOccurrence"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthlyOccurrence = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence[]) content.GetValueForProperty("ScheduleMonthlyOccurrence",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthlyOccurrence, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IRecurrenceScheduleOccurrence>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.RecurrenceScheduleOccurrenceTypeConverter.ConvertFrom));
            }
            if (content.Contains("WorkflowId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowId = (string) content.GetValueForProperty("WorkflowId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowId, global::System.Convert.ToString);
            }
            if (content.Contains("WorkflowName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowName = (string) content.GetValueForProperty("WorkflowName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowName, global::System.Convert.ToString);
            }
            if (content.Contains("WorkflowType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowType = (string) content.GetValueForProperty("WorkflowType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).WorkflowType, global::System.Convert.ToString);
            }
            if (content.Contains("ScheduleMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMinute = (int[]) content.GetValueForProperty("ScheduleMinute",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMinute, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleHour = (int[]) content.GetValueForProperty("ScheduleHour",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleHour, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            if (content.Contains("ScheduleMonthDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthDay = (int[]) content.GetValueForProperty("ScheduleMonthDay",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20231201.IWorkflowTriggerPropertiesInternal)this).ScheduleMonthDay, __y => TypeConverterExtensions.SelectToArray<int>(__y, (__w)=> (int) global::System.Convert.ChangeType(__w, typeof(int))));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// The workflow trigger properties.
    [System.ComponentModel.TypeConverter(typeof(WorkflowTriggerPropertiesTypeConverter))]
    public partial interface IWorkflowTriggerProperties

    {

    }
}