// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    public partial class FunctionsIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.IFunctionsIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.IFunctionsIdentityInternal
    {

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; set => this._accountName = value; }

        /// <summary>Backing field for <see cref="AnalysisName" /> property.</summary>
        private string _analysisName;

        /// <summary>Analysis Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string AnalysisName { get => this._analysisName; set => this._analysisName = value; }

        /// <summary>Backing field for <see cref="AppSettingKey" /> property.</summary>
        private string _appSettingKey;

        /// <summary>App Setting key name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string AppSettingKey { get => this._appSettingKey; set => this._appSettingKey = value; }

        /// <summary>Backing field for <see cref="Authprovider" /> property.</summary>
        private string _authprovider;

        /// <summary>The auth provider for the users.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Authprovider { get => this._authprovider; set => this._authprovider = value; }

        /// <summary>Backing field for <see cref="BackupId" /> property.</summary>
        private string _backupId;

        /// <summary>ID of the backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string BackupId { get => this._backupId; set => this._backupId = value; }

        /// <summary>Backing field for <see cref="BaseAddress" /> property.</summary>
        private string _baseAddress;

        /// <summary>Module base address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string BaseAddress { get => this._baseAddress; set => this._baseAddress = value; }

        /// <summary>Backing field for <see cref="BlobServicesName" /> property.</summary>
        private string _blobServicesName;

        /// <summary>
        /// The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string BlobServicesName { get => this._blobServicesName; set => this._blobServicesName = value; }

        /// <summary>Backing field for <see cref="CertificateOrderName" /> property.</summary>
        private string _certificateOrderName;

        /// <summary>Name of the certificate order..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string CertificateOrderName { get => this._certificateOrderName; set => this._certificateOrderName = value; }

        /// <summary>Backing field for <see cref="ContainerName" /> property.</summary>
        private string _containerName;

        /// <summary>
        /// The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters
        /// in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded
        /// and followed by a letter or number.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ContainerName { get => this._containerName; set => this._containerName = value; }

        /// <summary>Backing field for <see cref="DeletedSiteId" /> property.</summary>
        private string _deletedSiteId;

        /// <summary>The numeric ID of the deleted app, e.g. 12345</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DeletedSiteId { get => this._deletedSiteId; set => this._deletedSiteId = value; }

        /// <summary>Backing field for <see cref="DetectorName" /> property.</summary>
        private string _detectorName;

        /// <summary>Detector Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DetectorName { get => this._detectorName; set => this._detectorName = value; }

        /// <summary>Backing field for <see cref="DiagnosticCategory" /> property.</summary>
        private string _diagnosticCategory;

        /// <summary>Diagnostic Category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DiagnosticCategory { get => this._diagnosticCategory; set => this._diagnosticCategory = value; }

        /// <summary>Backing field for <see cref="DiagnosticsName" /> property.</summary>
        private string _diagnosticsName;

        /// <summary>Name of the diagnostics item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DiagnosticsName { get => this._diagnosticsName; set => this._diagnosticsName = value; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>Name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; set => this._domainName = value; }

        /// <summary>Backing field for <see cref="DomainOwnershipIdentifierName" /> property.</summary>
        private string _domainOwnershipIdentifierName;

        /// <summary>Name of domain ownership identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string DomainOwnershipIdentifierName { get => this._domainOwnershipIdentifierName; set => this._domainOwnershipIdentifierName = value; }

        /// <summary>Backing field for <see cref="EntityName" /> property.</summary>
        private string _entityName;

        /// <summary>Name of the hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string EntityName { get => this._entityName; set => this._entityName = value; }

        /// <summary>Backing field for <see cref="FunctionName" /> property.</summary>
        private string _functionName;

        /// <summary>Function name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string FunctionName { get => this._functionName; set => this._functionName = value; }

        /// <summary>Backing field for <see cref="GatewayName" /> property.</summary>
        private string _gatewayName;

        /// <summary>Name of the gateway. Currently, the only supported string is "primary".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string GatewayName { get => this._gatewayName; set => this._gatewayName = value; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>Hostname in the hostname binding.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; set => this._hostName = value; }

        /// <summary>Backing field for <see cref="HostingEnvironmentName" /> property.</summary>
        private string _hostingEnvironmentName;

        /// <summary>Name of the hosting environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string HostingEnvironmentName { get => this._hostingEnvironmentName; set => this._hostingEnvironmentName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Deployment ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="Id1" /> property.</summary>
        private string _id1;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Id1 { get => this._id1; set => this._id1 = value; }

        /// <summary>Backing field for <see cref="ImmutabilityPolicyName" /> property.</summary>
        private string _immutabilityPolicyName;

        /// <summary>
        /// The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be
        /// 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ImmutabilityPolicyName { get => this._immutabilityPolicyName; set => this._immutabilityPolicyName = value; }

        /// <summary>Backing field for <see cref="Instance" /> property.</summary>
        private string _instance;

        /// <summary>Name of the instance in the multi-role pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Instance { get => this._instance; set => this._instance = value; }

        /// <summary>Backing field for <see cref="InstanceId" /> property.</summary>
        private string _instanceId;

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string InstanceId { get => this._instanceId; set => this._instanceId = value; }

        /// <summary>Backing field for <see cref="KeyId" /> property.</summary>
        private string _keyId;

        /// <summary>The API Key ID. This is unique within a Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string KeyId { get => this._keyId; set => this._keyId = value; }

        /// <summary>Backing field for <see cref="KeyName" /> property.</summary>
        private string _keyName;

        /// <summary>The name of the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string KeyName { get => this._keyName; set => this._keyName = value; }

        /// <summary>Backing field for <see cref="KeyType" /> property.</summary>
        private string _keyType;

        /// <summary>The type of host key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string KeyType { get => this._keyType; set => this._keyType = value; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Backing field for <see cref="ManagementPolicyName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ManagementPolicyName? _managementPolicyName;

        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ManagementPolicyName? ManagementPolicyName { get => this._managementPolicyName; set => this._managementPolicyName = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="NamespaceName" /> property.</summary>
        private string _namespaceName;

        /// <summary>The namespace for this hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string NamespaceName { get => this._namespaceName; set => this._namespaceName = value; }

        /// <summary>Backing field for <see cref="OperationId" /> property.</summary>
        private string _operationId;

        /// <summary>GUID of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string OperationId { get => this._operationId; set => this._operationId = value; }

        /// <summary>Backing field for <see cref="PrId" /> property.</summary>
        private string _prId;

        /// <summary>The stage site identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PrId { get => this._prId; set => this._prId = value; }

        /// <summary>Backing field for <see cref="PremierAddOnName" /> property.</summary>
        private string _premierAddOnName;

        /// <summary>Add-on name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PremierAddOnName { get => this._premierAddOnName; set => this._premierAddOnName = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnectionName" /> property.</summary>
        private string _privateEndpointConnectionName;

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PrivateEndpointConnectionName { get => this._privateEndpointConnectionName; set => this._privateEndpointConnectionName = value; }

        /// <summary>Backing field for <see cref="ProcessId" /> property.</summary>
        private string _processId;

        /// <summary>PID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ProcessId { get => this._processId; set => this._processId = value; }

        /// <summary>Backing field for <see cref="PublicCertificateName" /> property.</summary>
        private string _publicCertificateName;

        /// <summary>Public certificate name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PublicCertificateName { get => this._publicCertificateName; set => this._publicCertificateName = value; }

        /// <summary>Backing field for <see cref="PurgeId" /> property.</summary>
        private string _purgeId;

        /// <summary>
        /// In a purge status request, this is the Id of the operation the status of which is returned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string PurgeId { get => this._purgeId; set => this._purgeId = value; }

        /// <summary>Backing field for <see cref="RelayName" /> property.</summary>
        private string _relayName;

        /// <summary>The relay name for this hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string RelayName { get => this._relayName; set => this._relayName = value; }

        /// <summary>Backing field for <see cref="ResourceGroupName" /> property.</summary>
        private string _resourceGroupName;

        /// <summary>Name of the resource group to which the resource belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => this._resourceGroupName; set => this._resourceGroupName = value; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>The name of the Application Insights component resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; set => this._resourceName = value; }

        /// <summary>Backing field for <see cref="RouteName" /> property.</summary>
        private string _routeName;

        /// <summary>Name of the Virtual Network route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string RouteName { get => this._routeName; set => this._routeName = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// The resource provider scope of the resource. Parent resource being extended by Managed Identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SiteExtensionId" /> property.</summary>
        private string _siteExtensionId;

        /// <summary>Site extension name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SiteExtensionId { get => this._siteExtensionId; set => this._siteExtensionId = value; }

        /// <summary>Backing field for <see cref="SiteName" /> property.</summary>
        private string _siteName;

        /// <summary>Site Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SiteName { get => this._siteName; set => this._siteName = value; }

        /// <summary>Backing field for <see cref="Slot" /> property.</summary>
        private string _slot;

        /// <summary>Slot Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Slot { get => this._slot; set => this._slot = value; }

        /// <summary>Backing field for <see cref="SnapshotId" /> property.</summary>
        private string _snapshotId;

        /// <summary>The ID of the snapshot to read.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SnapshotId { get => this._snapshotId; set => this._snapshotId = value; }

        /// <summary>Backing field for <see cref="SourceControlType" /> property.</summary>
        private string _sourceControlType;

        /// <summary>Type of source control</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SourceControlType { get => this._sourceControlType; set => this._sourceControlType = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="Userid" /> property.</summary>
        private string _userid;

        /// <summary>The user id of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string Userid { get => this._userid; set => this._userid = value; }

        /// <summary>Backing field for <see cref="View" /> property.</summary>
        private string _view;

        /// <summary>The type of view. This can either be "summary" or "detailed".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string View { get => this._view; set => this._view = value; }

        /// <summary>Backing field for <see cref="VnetName" /> property.</summary>
        private string _vnetName;

        /// <summary>Name of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string VnetName { get => this._vnetName; set => this._vnetName = value; }

        /// <summary>Backing field for <see cref="WebJobName" /> property.</summary>
        private string _webJobName;

        /// <summary>Name of Web Job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string WebJobName { get => this._webJobName; set => this._webJobName = value; }

        /// <summary>Backing field for <see cref="WorkerName" /> property.</summary>
        private string _workerName;

        /// <summary>Name of worker machine, which typically starts with RD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string WorkerName { get => this._workerName; set => this._workerName = value; }

        /// <summary>Backing field for <see cref="WorkerPoolName" /> property.</summary>
        private string _workerPoolName;

        /// <summary>Name of the worker pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        public string WorkerPoolName { get => this._workerPoolName; set => this._workerPoolName = value; }

        /// <summary>Creates an new <see cref="FunctionsIdentity" /> instance.</summary>
        public FunctionsIdentity()
        {

        }
    }
    public partial interface IFunctionsIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get; set; }
        /// <summary>Analysis Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Analysis Name",
        SerializedName = @"analysisName",
        PossibleTypes = new [] { typeof(string) })]
        string AnalysisName { get; set; }
        /// <summary>App Setting key name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"App Setting key name.",
        SerializedName = @"appSettingKey",
        PossibleTypes = new [] { typeof(string) })]
        string AppSettingKey { get; set; }
        /// <summary>The auth provider for the users.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The auth provider for the users.",
        SerializedName = @"authprovider",
        PossibleTypes = new [] { typeof(string) })]
        string Authprovider { get; set; }
        /// <summary>ID of the backup.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the backup.",
        SerializedName = @"backupId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupId { get; set; }
        /// <summary>Module base address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Module base address.",
        SerializedName = @"baseAddress",
        PossibleTypes = new [] { typeof(string) })]
        string BaseAddress { get; set; }
        /// <summary>
        /// The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the blob Service within the specified storage account. Blob Service Name must be 'default'",
        SerializedName = @"BlobServicesName",
        PossibleTypes = new [] { typeof(string) })]
        string BlobServicesName { get; set; }
        /// <summary>Name of the certificate order..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the certificate order..",
        SerializedName = @"certificateOrderName",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateOrderName { get; set; }
        /// <summary>
        /// The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters
        /// in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded
        /// and followed by a letter or number.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
        SerializedName = @"containerName",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerName { get; set; }
        /// <summary>The numeric ID of the deleted app, e.g. 12345</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The numeric ID of the deleted app, e.g. 12345",
        SerializedName = @"deletedSiteId",
        PossibleTypes = new [] { typeof(string) })]
        string DeletedSiteId { get; set; }
        /// <summary>Detector Resource Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Detector Resource Name",
        SerializedName = @"detectorName",
        PossibleTypes = new [] { typeof(string) })]
        string DetectorName { get; set; }
        /// <summary>Diagnostic Category</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Diagnostic Category",
        SerializedName = @"diagnosticCategory",
        PossibleTypes = new [] { typeof(string) })]
        string DiagnosticCategory { get; set; }
        /// <summary>Name of the diagnostics item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the diagnostics item.",
        SerializedName = @"diagnosticsName",
        PossibleTypes = new [] { typeof(string) })]
        string DiagnosticsName { get; set; }
        /// <summary>Name of the domain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the domain.",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>Name of domain ownership identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of domain ownership identifier.",
        SerializedName = @"domainOwnershipIdentifierName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainOwnershipIdentifierName { get; set; }
        /// <summary>Name of the hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the hybrid connection.",
        SerializedName = @"entityName",
        PossibleTypes = new [] { typeof(string) })]
        string EntityName { get; set; }
        /// <summary>Function name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Function name.",
        SerializedName = @"functionName",
        PossibleTypes = new [] { typeof(string) })]
        string FunctionName { get; set; }
        /// <summary>Name of the gateway. Currently, the only supported string is "primary".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the gateway. Currently, the only supported string is ""primary"".",
        SerializedName = @"gatewayName",
        PossibleTypes = new [] { typeof(string) })]
        string GatewayName { get; set; }
        /// <summary>Hostname in the hostname binding.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Hostname in the hostname binding.",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }
        /// <summary>Name of the hosting environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the hosting environment.",
        SerializedName = @"hostingEnvironmentName",
        PossibleTypes = new [] { typeof(string) })]
        string HostingEnvironmentName { get; set; }
        /// <summary>Deployment ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deployment ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id1 { get; set; }
        /// <summary>
        /// The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be
        /// 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
        SerializedName = @"immutabilityPolicyName",
        PossibleTypes = new [] { typeof(string) })]
        string ImmutabilityPolicyName { get; set; }
        /// <summary>Name of the instance in the multi-role pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the instance in the multi-role pool.",
        SerializedName = @"instance",
        PossibleTypes = new [] { typeof(string) })]
        string Instance { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string InstanceId { get; set; }
        /// <summary>The API Key ID. This is unique within a Application Insights component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The API Key ID. This is unique within a Application Insights component.",
        SerializedName = @"keyId",
        PossibleTypes = new [] { typeof(string) })]
        string KeyId { get; set; }
        /// <summary>The name of the key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the key.",
        SerializedName = @"keyName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyName { get; set; }
        /// <summary>The type of host key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of host key.",
        SerializedName = @"keyType",
        PossibleTypes = new [] { typeof(string) })]
        string KeyType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Storage Account Management Policy. It should always be 'default'",
        SerializedName = @"managementPolicyName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ManagementPolicyName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ManagementPolicyName? ManagementPolicyName { get; set; }
        /// <summary>Name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the certificate.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The namespace for this hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The namespace for this hybrid connection.",
        SerializedName = @"namespaceName",
        PossibleTypes = new [] { typeof(string) })]
        string NamespaceName { get; set; }
        /// <summary>GUID of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"GUID of the operation.",
        SerializedName = @"operationId",
        PossibleTypes = new [] { typeof(string) })]
        string OperationId { get; set; }
        /// <summary>The stage site identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The stage site identifier.",
        SerializedName = @"prId",
        PossibleTypes = new [] { typeof(string) })]
        string PrId { get; set; }
        /// <summary>Add-on name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Add-on name.",
        SerializedName = @"premierAddOnName",
        PossibleTypes = new [] { typeof(string) })]
        string PremierAddOnName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"privateEndpointConnectionName",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateEndpointConnectionName { get; set; }
        /// <summary>PID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PID.",
        SerializedName = @"processId",
        PossibleTypes = new [] { typeof(string) })]
        string ProcessId { get; set; }
        /// <summary>Public certificate name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public certificate name.",
        SerializedName = @"publicCertificateName",
        PossibleTypes = new [] { typeof(string) })]
        string PublicCertificateName { get; set; }
        /// <summary>
        /// In a purge status request, this is the Id of the operation the status of which is returned.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"In a purge status request, this is the Id of the operation the status of which is returned.",
        SerializedName = @"purgeId",
        PossibleTypes = new [] { typeof(string) })]
        string PurgeId { get; set; }
        /// <summary>The relay name for this hybrid connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The relay name for this hybrid connection.",
        SerializedName = @"relayName",
        PossibleTypes = new [] { typeof(string) })]
        string RelayName { get; set; }
        /// <summary>Name of the resource group to which the resource belongs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the resource group to which the resource belongs.",
        SerializedName = @"resourceGroupName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroupName { get; set; }
        /// <summary>The name of the Application Insights component resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Application Insights component resource.",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get; set; }
        /// <summary>Name of the Virtual Network route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the Virtual Network route.",
        SerializedName = @"routeName",
        PossibleTypes = new [] { typeof(string) })]
        string RouteName { get; set; }
        /// <summary>
        /// The resource provider scope of the resource. Parent resource being extended by Managed Identities.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource provider scope of the resource. Parent resource being extended by Managed Identities.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Site extension name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Site extension name.",
        SerializedName = @"siteExtensionId",
        PossibleTypes = new [] { typeof(string) })]
        string SiteExtensionId { get; set; }
        /// <summary>Site Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Site Name",
        SerializedName = @"siteName",
        PossibleTypes = new [] { typeof(string) })]
        string SiteName { get; set; }
        /// <summary>Slot Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Slot Name",
        SerializedName = @"slot",
        PossibleTypes = new [] { typeof(string) })]
        string Slot { get; set; }
        /// <summary>The ID of the snapshot to read.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the snapshot to read.",
        SerializedName = @"snapshotId",
        PossibleTypes = new [] { typeof(string) })]
        string SnapshotId { get; set; }
        /// <summary>Type of source control</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of source control",
        SerializedName = @"sourceControlType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceControlType { get; set; }
        /// <summary>
        /// Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>The user id of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user id of the user.",
        SerializedName = @"userid",
        PossibleTypes = new [] { typeof(string) })]
        string Userid { get; set; }
        /// <summary>The type of view. This can either be "summary" or "detailed".</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of view. This can either be ""summary"" or ""detailed"".",
        SerializedName = @"view",
        PossibleTypes = new [] { typeof(string) })]
        string View { get; set; }
        /// <summary>Name of the virtual network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the virtual network.",
        SerializedName = @"vnetName",
        PossibleTypes = new [] { typeof(string) })]
        string VnetName { get; set; }
        /// <summary>Name of Web Job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of Web Job.",
        SerializedName = @"webJobName",
        PossibleTypes = new [] { typeof(string) })]
        string WebJobName { get; set; }
        /// <summary>Name of worker machine, which typically starts with RD.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of worker machine, which typically starts with RD.",
        SerializedName = @"workerName",
        PossibleTypes = new [] { typeof(string) })]
        string WorkerName { get; set; }
        /// <summary>Name of the worker pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the worker pool.",
        SerializedName = @"workerPoolName",
        PossibleTypes = new [] { typeof(string) })]
        string WorkerPoolName { get; set; }

    }
    internal partial interface IFunctionsIdentityInternal

    {
        /// <summary>
        /// The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters
        /// in length and use numbers and lower-case letters only.
        /// </summary>
        string AccountName { get; set; }
        /// <summary>Analysis Name</summary>
        string AnalysisName { get; set; }
        /// <summary>App Setting key name.</summary>
        string AppSettingKey { get; set; }
        /// <summary>The auth provider for the users.</summary>
        string Authprovider { get; set; }
        /// <summary>ID of the backup.</summary>
        string BackupId { get; set; }
        /// <summary>Module base address.</summary>
        string BaseAddress { get; set; }
        /// <summary>
        /// The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
        /// </summary>
        string BlobServicesName { get; set; }
        /// <summary>Name of the certificate order..</summary>
        string CertificateOrderName { get; set; }
        /// <summary>
        /// The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters
        /// in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded
        /// and followed by a letter or number.
        /// </summary>
        string ContainerName { get; set; }
        /// <summary>The numeric ID of the deleted app, e.g. 12345</summary>
        string DeletedSiteId { get; set; }
        /// <summary>Detector Resource Name</summary>
        string DetectorName { get; set; }
        /// <summary>Diagnostic Category</summary>
        string DiagnosticCategory { get; set; }
        /// <summary>Name of the diagnostics item.</summary>
        string DiagnosticsName { get; set; }
        /// <summary>Name of the domain.</summary>
        string DomainName { get; set; }
        /// <summary>Name of domain ownership identifier.</summary>
        string DomainOwnershipIdentifierName { get; set; }
        /// <summary>Name of the hybrid connection.</summary>
        string EntityName { get; set; }
        /// <summary>Function name.</summary>
        string FunctionName { get; set; }
        /// <summary>Name of the gateway. Currently, the only supported string is "primary".</summary>
        string GatewayName { get; set; }
        /// <summary>Hostname in the hostname binding.</summary>
        string HostName { get; set; }
        /// <summary>Name of the hosting environment.</summary>
        string HostingEnvironmentName { get; set; }
        /// <summary>Deployment ID.</summary>
        string Id { get; set; }
        /// <summary>Resource identity path</summary>
        string Id1 { get; set; }
        /// <summary>
        /// The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be
        /// 'default'
        /// </summary>
        string ImmutabilityPolicyName { get; set; }
        /// <summary>Name of the instance in the multi-role pool.</summary>
        string Instance { get; set; }

        string InstanceId { get; set; }
        /// <summary>The API Key ID. This is unique within a Application Insights component.</summary>
        string KeyId { get; set; }
        /// <summary>The name of the key.</summary>
        string KeyName { get; set; }
        /// <summary>The type of host key.</summary>
        string KeyType { get; set; }

        string Location { get; set; }
        /// <summary>
        /// The name of the Storage Account Management Policy. It should always be 'default'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ManagementPolicyName? ManagementPolicyName { get; set; }
        /// <summary>Name of the certificate.</summary>
        string Name { get; set; }
        /// <summary>The namespace for this hybrid connection.</summary>
        string NamespaceName { get; set; }
        /// <summary>GUID of the operation.</summary>
        string OperationId { get; set; }
        /// <summary>The stage site identifier.</summary>
        string PrId { get; set; }
        /// <summary>Add-on name.</summary>
        string PremierAddOnName { get; set; }

        string PrivateEndpointConnectionName { get; set; }
        /// <summary>PID.</summary>
        string ProcessId { get; set; }
        /// <summary>Public certificate name.</summary>
        string PublicCertificateName { get; set; }
        /// <summary>
        /// In a purge status request, this is the Id of the operation the status of which is returned.
        /// </summary>
        string PurgeId { get; set; }
        /// <summary>The relay name for this hybrid connection.</summary>
        string RelayName { get; set; }
        /// <summary>Name of the resource group to which the resource belongs.</summary>
        string ResourceGroupName { get; set; }
        /// <summary>The name of the Application Insights component resource.</summary>
        string ResourceName { get; set; }
        /// <summary>Name of the Virtual Network route.</summary>
        string RouteName { get; set; }
        /// <summary>
        /// The resource provider scope of the resource. Parent resource being extended by Managed Identities.
        /// </summary>
        string Scope { get; set; }
        /// <summary>Site extension name.</summary>
        string SiteExtensionId { get; set; }
        /// <summary>Site Name</summary>
        string SiteName { get; set; }
        /// <summary>Slot Name</summary>
        string Slot { get; set; }
        /// <summary>The ID of the snapshot to read.</summary>
        string SnapshotId { get; set; }
        /// <summary>Type of source control</summary>
        string SourceControlType { get; set; }
        /// <summary>
        /// Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
        /// </summary>
        string SubscriptionId { get; set; }
        /// <summary>The user id of the user.</summary>
        string Userid { get; set; }
        /// <summary>The type of view. This can either be "summary" or "detailed".</summary>
        string View { get; set; }
        /// <summary>Name of the virtual network.</summary>
        string VnetName { get; set; }
        /// <summary>Name of Web Job.</summary>
        string WebJobName { get; set; }
        /// <summary>Name of worker machine, which typically starts with RD.</summary>
        string WorkerName { get; set; }
        /// <summary>Name of the worker pool.</summary>
        string WorkerPoolName { get; set; }

    }
}