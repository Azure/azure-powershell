namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Extensions;

    /// <summary>Represents a recommendation result generated by the recommendation engine.</summary>
    public partial class Recommendation :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendation,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResource __proxyOnlyResource = new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.ProxyOnlyResource();

        /// <summary>Name of action recommended by this object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ActionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ActionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ActionName = value; }

        /// <summary>Deep link to a blade on the portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string BladeName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).BladeName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).BladeName = value; }

        /// <summary>The list of category tags that this recommendation belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string[] CategoryTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).CategoryTag; }

        /// <summary>List of channels that this recommendation can apply.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Channels? Channel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Channel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Channel = value; }

        /// <summary>Timestamp when this instance was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).CreationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).CreationTime = value; }

        /// <summary>UI friendly name of the rule (may not be unique).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).DisplayName = value; }

        /// <summary>
        /// True if this recommendation is still valid (i.e. "actionable"). False if it is invalid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public int? Enabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Enabled = value; }

        /// <summary>The end time in UTC of a range that the recommendation refers to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).EndTime = value; }

        /// <summary>Extension name of the portal if exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ExtensionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ExtensionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ExtensionName = value; }

        /// <summary>Forward link to an external document associated with the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ForwardLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ForwardLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ForwardLink = value; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; }

        /// <summary>True if this is associated with a dynamically added rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public bool? IsDynamic { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).IsDynamic; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).IsDynamic = value; }

        /// <summary>Kind of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Kind = value; }

        /// <summary>Level indicating how critical this recommendation can impact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.NotificationLevel? Level { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Level; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Level = value; }

        /// <summary>Recommendation text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string Message { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Message = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Type = value; }

        /// <summary>Internal Acessors for CategoryTag</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationInternal.CategoryTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).CategoryTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).CategoryTag = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationProperties Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.RecommendationProperties()); set { {_property = value;} } }

        /// <summary>Resource Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Name; }

        /// <summary>
        /// When to notify this recommendation next in UTC. Null means that this will never be notified anymore.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextNotificationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NextNotificationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NextNotificationTime = value; }

        /// <summary>Date and time in UTC when this notification expires.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? NotificationExpirationTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NotificationExpirationTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NotificationExpirationTime = value; }

        /// <summary>
        /// Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? NotifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NotifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).NotifiedTime = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationProperties _property;

        /// <summary>Recommendation resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.RecommendationProperties()); set => this._property = value; }

        /// <summary>A GUID value that each recommendation object is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string RecommendationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).RecommendationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).RecommendationId = value; }

        /// <summary>Full ARM resource ID string that this recommendation object is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ResourceId = value; }

        /// <summary>
        /// Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ResourceScopeType? ResourceScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ResourceScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).ResourceScope = value; }

        /// <summary>Unique name of the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string RuleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).RuleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).RuleName = value; }

        /// <summary>A metric value measured by the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public double? Score { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Score; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).Score = value; }

        /// <summary>The beginning time in UTC of a range that the recommendation refers to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).StartTime = value; }

        /// <summary>
        /// The list of states of this recommendation. If it's null then it should be considered "Active".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inlined)]
        public string[] State { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationPropertiesInternal)Property).State = value; }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Functions.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal)__proxyOnlyResource).Type; }

        /// <summary>Creates an new <see cref="Recommendation" /> instance.</summary>
        public Recommendation()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyOnlyResource), __proxyOnlyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyOnlyResource), __proxyOnlyResource);
        }
    }
    /// Represents a recommendation result generated by the recommendation engine.
    public partial interface IRecommendation :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResource
    {
        /// <summary>Name of action recommended by this object.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of action recommended by this object.",
        SerializedName = @"actionName",
        PossibleTypes = new [] { typeof(string) })]
        string ActionName { get; set; }
        /// <summary>Deep link to a blade on the portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deep link to a blade on the portal.",
        SerializedName = @"bladeName",
        PossibleTypes = new [] { typeof(string) })]
        string BladeName { get; set; }
        /// <summary>The list of category tags that this recommendation belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of category tags that this recommendation belongs to.",
        SerializedName = @"categoryTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] CategoryTag { get;  }
        /// <summary>List of channels that this recommendation can apply.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of channels that this recommendation can apply.",
        SerializedName = @"channels",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Channels) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Channels? Channel { get; set; }
        /// <summary>Timestamp when this instance was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timestamp when this instance was created.",
        SerializedName = @"creationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>UI friendly name of the rule (may not be unique).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UI friendly name of the rule (may not be unique).",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// True if this recommendation is still valid (i.e. "actionable"). False if it is invalid.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if this recommendation is still valid (i.e. ""actionable""). False if it is invalid.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(int) })]
        int? Enabled { get; set; }
        /// <summary>The end time in UTC of a range that the recommendation refers to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end time in UTC of a range that the recommendation refers to.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>Extension name of the portal if exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Extension name of the portal if exists.",
        SerializedName = @"extensionName",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionName { get; set; }
        /// <summary>Forward link to an external document associated with the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Forward link to an external document associated with the rule.",
        SerializedName = @"forwardLink",
        PossibleTypes = new [] { typeof(string) })]
        string ForwardLink { get; set; }
        /// <summary>True if this is associated with a dynamically added rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if this is associated with a dynamically added rule",
        SerializedName = @"isDynamic",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDynamic { get; set; }
        /// <summary>Level indicating how critical this recommendation can impact.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level indicating how critical this recommendation can impact.",
        SerializedName = @"level",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.NotificationLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.NotificationLevel? Level { get; set; }
        /// <summary>Recommendation text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Recommendation text.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string Message { get; set; }
        /// <summary>
        /// When to notify this recommendation next in UTC. Null means that this will never be notified anymore.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When to notify this recommendation next in UTC. Null means that this will never be notified anymore.",
        SerializedName = @"nextNotificationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextNotificationTime { get; set; }
        /// <summary>Date and time in UTC when this notification expires.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time in UTC when this notification expires.",
        SerializedName = @"notificationExpirationTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NotificationExpirationTime { get; set; }
        /// <summary>
        /// Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.",
        SerializedName = @"notifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NotifiedTime { get; set; }
        /// <summary>A GUID value that each recommendation object is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A GUID value that each recommendation object is associated with.",
        SerializedName = @"recommendationId",
        PossibleTypes = new [] { typeof(string) })]
        string RecommendationId { get; set; }
        /// <summary>Full ARM resource ID string that this recommendation object is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Full ARM resource ID string that this recommendation object is associated with.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>
        /// Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.",
        SerializedName = @"resourceScope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ResourceScopeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ResourceScopeType? ResourceScope { get; set; }
        /// <summary>Unique name of the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique name of the rule.",
        SerializedName = @"ruleName",
        PossibleTypes = new [] { typeof(string) })]
        string RuleName { get; set; }
        /// <summary>A metric value measured by the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A metric value measured by the rule.",
        SerializedName = @"score",
        PossibleTypes = new [] { typeof(double) })]
        double? Score { get; set; }
        /// <summary>The beginning time in UTC of a range that the recommendation refers to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The beginning time in UTC of a range that the recommendation refers to.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>
        /// The list of states of this recommendation. If it's null then it should be considered "Active".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of states of this recommendation. If it's null then it should be considered ""Active"".",
        SerializedName = @"states",
        PossibleTypes = new [] { typeof(string) })]
        string[] State { get; set; }

    }
    /// Represents a recommendation result generated by the recommendation engine.
    internal partial interface IRecommendationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IProxyOnlyResourceInternal
    {
        /// <summary>Name of action recommended by this object.</summary>
        string ActionName { get; set; }
        /// <summary>Deep link to a blade on the portal.</summary>
        string BladeName { get; set; }
        /// <summary>The list of category tags that this recommendation belongs to.</summary>
        string[] CategoryTag { get; set; }
        /// <summary>List of channels that this recommendation can apply.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Channels? Channel { get; set; }
        /// <summary>Timestamp when this instance was created.</summary>
        global::System.DateTime? CreationTime { get; set; }
        /// <summary>UI friendly name of the rule (may not be unique).</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// True if this recommendation is still valid (i.e. "actionable"). False if it is invalid.
        /// </summary>
        int? Enabled { get; set; }
        /// <summary>The end time in UTC of a range that the recommendation refers to.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>Extension name of the portal if exists.</summary>
        string ExtensionName { get; set; }
        /// <summary>Forward link to an external document associated with the rule.</summary>
        string ForwardLink { get; set; }
        /// <summary>True if this is associated with a dynamically added rule</summary>
        bool? IsDynamic { get; set; }
        /// <summary>Level indicating how critical this recommendation can impact.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.NotificationLevel? Level { get; set; }
        /// <summary>Recommendation text.</summary>
        string Message { get; set; }
        /// <summary>
        /// When to notify this recommendation next in UTC. Null means that this will never be notified anymore.
        /// </summary>
        global::System.DateTime? NextNotificationTime { get; set; }
        /// <summary>Date and time in UTC when this notification expires.</summary>
        global::System.DateTime? NotificationExpirationTime { get; set; }
        /// <summary>
        /// Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.
        /// </summary>
        global::System.DateTime? NotifiedTime { get; set; }
        /// <summary>Recommendation resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190801.IRecommendationProperties Property { get; set; }
        /// <summary>A GUID value that each recommendation object is associated with.</summary>
        string RecommendationId { get; set; }
        /// <summary>Full ARM resource ID string that this recommendation object is associated with.</summary>
        string ResourceId { get; set; }
        /// <summary>
        /// Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.ResourceScopeType? ResourceScope { get; set; }
        /// <summary>Unique name of the rule.</summary>
        string RuleName { get; set; }
        /// <summary>A metric value measured by the rule.</summary>
        double? Score { get; set; }
        /// <summary>The beginning time in UTC of a range that the recommendation refers to.</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>
        /// The list of states of this recommendation. If it's null then it should be considered "Active".
        /// </summary>
        string[] State { get; set; }

    }
}