// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401
{
    using Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.PowerShell;

    /// <summary>The parameters used when creating a storage account.</summary>
    [System.ComponentModel.TypeConverter(typeof(StorageAccountCreateParametersTypeConverter))]
    public partial class StorageAccountCreateParameters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParameters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new StorageAccountCreateParameters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParameters"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParameters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new StorageAccountCreateParameters(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="StorageAccountCreateParameters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="className" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParameters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal StorageAccountCreateParameters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountPropertiesCreateParameters) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountPropertiesCreateParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind.CreateFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("SkuResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuResourceType = (string) content.GetValueForProperty("SkuResourceType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuResourceType, global::System.Convert.ToString);
            }
            if (content.Contains("SkuKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuKind = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind?) content.GetValueForProperty("SkuKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuKind, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind.CreateFrom);
            }
            if (content.Contains("SkuLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuLocation = (string[]) content.GetValueForProperty("SkuLocation",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SkuCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuCapability = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISkuCapability[]) content.GetValueForProperty("SkuCapability",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuCapability, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISkuCapability>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.SkuCapabilityTypeConverter.ConvertFrom));
            }
            if (content.Contains("SkuRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IRestriction[]) content.GetValueForProperty("SkuRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.RestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomain = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ICustomDomain) content.GetValueForProperty("CustomDomain",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomain, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.CustomDomainTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AccessTier = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AccessTier?) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AccessTier, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AccessTier.CreateFrom);
            }
            if (content.Contains("NetworkRuleSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSet = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.INetworkRuleSet) content.GetValueForProperty("NetworkRuleSet",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSet, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.NetworkRuleSetTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureFilesIdentityBasedAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFilesIdentityBasedAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IAzureFilesIdentityBasedAuthentication) content.GetValueForProperty("AzureFilesIdentityBasedAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFilesIdentityBasedAuthentication, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.AzureFilesIdentityBasedAuthenticationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnableHttpsTrafficOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EnableHttpsTrafficOnly = (bool?) content.GetValueForProperty("EnableHttpsTrafficOnly",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EnableHttpsTrafficOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsHnsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IsHnsEnabled = (bool?) content.GetValueForProperty("IsHnsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IsHnsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LargeFileSharesState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).LargeFileSharesState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LargeFileSharesState?) content.GetValueForProperty("LargeFileSharesState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).LargeFileSharesState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LargeFileSharesState.CreateFrom);
            }
            if (content.Contains("CustomDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainName = (string) content.GetValueForProperty("CustomDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionService = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionServices) content.GetValueForProperty("EncryptionService",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionService, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServicesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionKeySource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeySource = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.KeySource) content.GetValueForProperty("EncryptionKeySource",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeySource, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.KeySource.CreateFrom);
            }
            if (content.Contains("NetworkRuleSetBypass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetBypass = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Bypass?) content.GetValueForProperty("NetworkRuleSetBypass",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetBypass, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Bypass.CreateFrom);
            }
            if (content.Contains("NetworkRuleSetIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetIPRule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIPRule[]) content.GetValueForProperty("NetworkRuleSetIPRule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetIPRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkRuleSetDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetDefaultAction = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DefaultAction) content.GetValueForProperty("NetworkRuleSetDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetDefaultAction, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DefaultAction.CreateFrom);
            }
            if (content.Contains("CustomDomainUseSubDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainUseSubDomainName = (bool?) content.GetValueForProperty("CustomDomainUseSubDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainUseSubDomainName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkRuleSetVirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetVirtualNetworkRule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IVirtualNetworkRule[]) content.GetValueForProperty("NetworkRuleSetVirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetVirtualNetworkRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IVirtualNetworkRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.VirtualNetworkRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("AzureFileIdentityBasedAuthenticationActiveDirectoryProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationActiveDirectoryProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IActiveDirectoryProperties) content.GetValueForProperty("AzureFileIdentityBasedAuthenticationActiveDirectoryProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationActiveDirectoryProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ActiveDirectoryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureFileIdentityBasedAuthenticationDirectoryServiceOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationDirectoryServiceOption = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DirectoryServiceOptions) content.GetValueForProperty("AzureFileIdentityBasedAuthenticationDirectoryServiceOption",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationDirectoryServiceOption, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DirectoryServiceOptions.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainName = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyForestName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyForestName = (string) content.GetValueForProperty("ActiveDirectoryPropertyForestName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyForestName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainGuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainGuid = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainGuid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainGuid, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainSid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainSid = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainSid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainSid, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceBlob = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceBlob",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceBlob, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceFile = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceFile",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceFile, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceTable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceTable = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceTable",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceTable, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceQueue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceQueue = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceQueue",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceQueue, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVaultUri = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyNetBiosDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyNetBiosDomainName = (string) content.GetValueForProperty("ActiveDirectoryPropertyNetBiosDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyNetBiosDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyAzureStorageSid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyAzureStorageSid = (string) content.GetValueForProperty("ActiveDirectoryPropertyAzureStorageSid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyAzureStorageSid, global::System.Convert.ToString);
            }
            if (content.Contains("BlobEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobEnabled = (bool?) content.GetValueForProperty("BlobEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BlobLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("BlobLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileEnabled = (bool?) content.GetValueForProperty("FileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("FileLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TableEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableEnabled = (bool?) content.GetValueForProperty("TableEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TableLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("TableLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("QueueEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueEnabled = (bool?) content.GetValueForProperty("QueueEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("QueueLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("QueueLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParameters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal StorageAccountCreateParameters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.SkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountPropertiesCreateParameters) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountPropertiesCreateParametersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Kind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Kind = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind) content.GetValueForProperty("Kind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Kind, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind.CreateFrom);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.StorageAccountCreateParametersTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuName = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuName) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuName, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuName.CreateFrom);
            }
            if (content.Contains("SkuTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuTier = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuTier?) content.GetValueForProperty("SkuTier",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuTier, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.SkuTier.CreateFrom);
            }
            if (content.Contains("SkuResourceType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuResourceType = (string) content.GetValueForProperty("SkuResourceType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuResourceType, global::System.Convert.ToString);
            }
            if (content.Contains("SkuKind"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuKind = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind?) content.GetValueForProperty("SkuKind",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuKind, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Kind.CreateFrom);
            }
            if (content.Contains("SkuLocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuLocation = (string[]) content.GetValueForProperty("SkuLocation",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuLocation, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SkuCapability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuCapability = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISkuCapability[]) content.GetValueForProperty("SkuCapability",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuCapability, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ISkuCapability>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.SkuCapabilityTypeConverter.ConvertFrom));
            }
            if (content.Contains("SkuRestriction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuRestriction = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IRestriction[]) content.GetValueForProperty("SkuRestriction",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).SkuRestriction, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IRestriction>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.RestrictionTypeConverter.ConvertFrom));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityType = (string) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IdentityType, global::System.Convert.ToString);
            }
            if (content.Contains("CustomDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomain = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ICustomDomain) content.GetValueForProperty("CustomDomain",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomain, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.CustomDomainTypeConverter.ConvertFrom);
            }
            if (content.Contains("Encryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Encryption = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryption) content.GetValueForProperty("Encryption",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).Encryption, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("AccessTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AccessTier = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AccessTier?) content.GetValueForProperty("AccessTier",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AccessTier, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.AccessTier.CreateFrom);
            }
            if (content.Contains("NetworkRuleSet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSet = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.INetworkRuleSet) content.GetValueForProperty("NetworkRuleSet",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSet, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.NetworkRuleSetTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureFilesIdentityBasedAuthentication"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFilesIdentityBasedAuthentication = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IAzureFilesIdentityBasedAuthentication) content.GetValueForProperty("AzureFilesIdentityBasedAuthentication",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFilesIdentityBasedAuthentication, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.AzureFilesIdentityBasedAuthenticationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnableHttpsTrafficOnly"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EnableHttpsTrafficOnly = (bool?) content.GetValueForProperty("EnableHttpsTrafficOnly",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EnableHttpsTrafficOnly, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("IsHnsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IsHnsEnabled = (bool?) content.GetValueForProperty("IsHnsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).IsHnsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("LargeFileSharesState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).LargeFileSharesState = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LargeFileSharesState?) content.GetValueForProperty("LargeFileSharesState",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).LargeFileSharesState, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.LargeFileSharesState.CreateFrom);
            }
            if (content.Contains("CustomDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainName = (string) content.GetValueForProperty("CustomDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionService"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionService = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionServices) content.GetValueForProperty("EncryptionService",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionService, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServicesTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionKeySource"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeySource = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.KeySource) content.GetValueForProperty("EncryptionKeySource",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeySource, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.KeySource.CreateFrom);
            }
            if (content.Contains("NetworkRuleSetBypass"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetBypass = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Bypass?) content.GetValueForProperty("NetworkRuleSetBypass",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetBypass, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.Bypass.CreateFrom);
            }
            if (content.Contains("NetworkRuleSetIPRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetIPRule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIPRule[]) content.GetValueForProperty("NetworkRuleSetIPRule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetIPRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IIPRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IPRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("NetworkRuleSetDefaultAction"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetDefaultAction = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DefaultAction) content.GetValueForProperty("NetworkRuleSetDefaultAction",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetDefaultAction, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DefaultAction.CreateFrom);
            }
            if (content.Contains("CustomDomainUseSubDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainUseSubDomainName = (bool?) content.GetValueForProperty("CustomDomainUseSubDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).CustomDomainUseSubDomainName, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("EncryptionKeyVaultProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeyVaultProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IKeyVaultProperties) content.GetValueForProperty("EncryptionKeyVaultProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).EncryptionKeyVaultProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.KeyVaultPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkRuleSetVirtualNetworkRule"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetVirtualNetworkRule = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IVirtualNetworkRule[]) content.GetValueForProperty("NetworkRuleSetVirtualNetworkRule",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).NetworkRuleSetVirtualNetworkRule, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IVirtualNetworkRule>(__y, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.VirtualNetworkRuleTypeConverter.ConvertFrom));
            }
            if (content.Contains("AzureFileIdentityBasedAuthenticationActiveDirectoryProperty"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationActiveDirectoryProperty = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IActiveDirectoryProperties) content.GetValueForProperty("AzureFileIdentityBasedAuthenticationActiveDirectoryProperty",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationActiveDirectoryProperty, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.ActiveDirectoryPropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("AzureFileIdentityBasedAuthenticationDirectoryServiceOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationDirectoryServiceOption = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DirectoryServiceOptions) content.GetValueForProperty("AzureFileIdentityBasedAuthenticationDirectoryServiceOption",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).AzureFileIdentityBasedAuthenticationDirectoryServiceOption, Microsoft.Azure.PowerShell.Cmdlets.Functions.Support.DirectoryServiceOptions.CreateFrom);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainName = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyForestName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyForestName = (string) content.GetValueForProperty("ActiveDirectoryPropertyForestName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyForestName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainGuid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainGuid = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainGuid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainGuid, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyDomainSid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainSid = (string) content.GetValueForProperty("ActiveDirectoryPropertyDomainSid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyDomainSid, global::System.Convert.ToString);
            }
            if (content.Contains("ServiceBlob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceBlob = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceBlob",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceBlob, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceFile"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceFile = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceFile",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceFile, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceTable"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceTable = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceTable",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceTable, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("ServiceQueue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceQueue = (Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IEncryptionService) content.GetValueForProperty("ServiceQueue",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ServiceQueue, Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.EncryptionServiceTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyVaultPropertyKeyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyName = (string) content.GetValueForProperty("KeyVaultPropertyKeyName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyName, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVersion = (string) content.GetValueForProperty("KeyVaultPropertyKeyVersion",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVersion, global::System.Convert.ToString);
            }
            if (content.Contains("KeyVaultPropertyKeyVaultUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVaultUri = (string) content.GetValueForProperty("KeyVaultPropertyKeyVaultUri",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).KeyVaultPropertyKeyVaultUri, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyNetBiosDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyNetBiosDomainName = (string) content.GetValueForProperty("ActiveDirectoryPropertyNetBiosDomainName",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyNetBiosDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("ActiveDirectoryPropertyAzureStorageSid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyAzureStorageSid = (string) content.GetValueForProperty("ActiveDirectoryPropertyAzureStorageSid",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).ActiveDirectoryPropertyAzureStorageSid, global::System.Convert.ToString);
            }
            if (content.Contains("BlobEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobEnabled = (bool?) content.GetValueForProperty("BlobEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("BlobLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("BlobLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).BlobLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("FileEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileEnabled = (bool?) content.GetValueForProperty("FileEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("FileLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("FileLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).FileLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("TableEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableEnabled = (bool?) content.GetValueForProperty("TableEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("TableLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("TableLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).TableLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("QueueEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueEnabled = (bool?) content.GetValueForProperty("QueueEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("QueueLastEnabledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueLastEnabledTime = (global::System.DateTime?) content.GetValueForProperty("QueueLastEnabledTime",((Microsoft.Azure.PowerShell.Cmdlets.Functions.Models.Api20190401.IStorageAccountCreateParametersInternal)this).QueueLastEnabledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Functions.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The parameters used when creating a storage account.
    [System.ComponentModel.TypeConverter(typeof(StorageAccountCreateParametersTypeConverter))]
    public partial interface IStorageAccountCreateParameters

    {

    }
}