// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>
    /// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    /// </summary>
    public partial class AmlFilesystem :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystem,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.TrackedResource();

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>The version of Lustre running in the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ClientInfoLustreVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoLustreVersion; }

        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ClientInfoMgsAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMgsAddress; }

        /// <summary>Recommended command to mount the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ClientInfoMountCommand { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMountCommand; }

        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ContainerStorageInterfacePersistentVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolume; }

        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ContainerStorageInterfacePersistentVolumeClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolumeClaim; }

        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ContainerStorageInterfaceStorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfaceStorageClass; }

        /// <summary>
        /// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24
        /// subnet mask within the VNET's address space.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string FilesystemSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).FilesystemSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).FilesystemSubnet = value ?? null; }

        /// <summary>List of AML file system health states.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 3)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemHealthStateType? HealthState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemHealthStateType)""); }

        /// <summary>Server-defined error code for the AML file system health</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string HealthStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthStatusCode = value ?? null; }

        /// <summary>Describes the health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string HealthStatusDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthStatusDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HealthStatusDescription = value ?? null; }

        /// <summary>Archive status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] HsmArchiveStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HsmArchiveStatus; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentity _identity;

        /// <summary>The managed identity used by the AML file system, if configured.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemIdentity()); set => this._identity = value; }

        /// <summary>The principal ID for the user-assigned identity of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).PrincipalId; }

        /// <summary>The tenant ID associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).TenantId; }

        /// <summary>The type of identity used for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemIdentityType)""); }

        /// <summary>
        /// A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The URL referencing a key encryption key in key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string KeyEncryptionKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).KeyEncryptionKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).KeyEncryptionKeyUrl = value ?? null; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 1)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Day of the week on which the maintenance window will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.MaintenanceDayOfWeekType? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindowDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindowDayOfWeek = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.MaintenanceDayOfWeekType)""); }

        /// <summary>The time of day (in UTC) to start the maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string MaintenanceWindowTimeOfDayUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindowTimeOfDayUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindowTimeOfDayUtc = value ?? null; }

        /// <summary>Internal Acessors for ClientInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfo Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ClientInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfo = value; }

        /// <summary>Internal Acessors for ClientInfoContainerStorageInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ClientInfoContainerStorageInterface { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoContainerStorageInterface; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoContainerStorageInterface = value; }

        /// <summary>Internal Acessors for ClientInfoLustreVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ClientInfoLustreVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoLustreVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoLustreVersion = value; }

        /// <summary>Internal Acessors for ClientInfoMgsAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ClientInfoMgsAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMgsAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMgsAddress = value; }

        /// <summary>Internal Acessors for ClientInfoMountCommand</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ClientInfoMountCommand { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMountCommand; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ClientInfoMountCommand = value; }

        /// <summary>Internal Acessors for ContainerStorageInterfacePersistentVolume</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ContainerStorageInterfacePersistentVolume { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolume; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolume = value; }

        /// <summary>Internal Acessors for ContainerStorageInterfacePersistentVolumeClaim</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ContainerStorageInterfacePersistentVolumeClaim { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolumeClaim; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfacePersistentVolumeClaim = value; }

        /// <summary>Internal Acessors for ContainerStorageInterfaceStorageClass</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ContainerStorageInterfaceStorageClass { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfaceStorageClass; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ContainerStorageInterfaceStorageClass = value; }

        /// <summary>Internal Acessors for EncryptionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemEncryptionSettings Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.EncryptionSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).EncryptionSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).EncryptionSetting = value; }

        /// <summary>Internal Acessors for EncryptionSettingKeyEncryptionKey</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReference Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.EncryptionSettingKeyEncryptionKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).EncryptionSettingKeyEncryptionKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).EncryptionSettingKeyEncryptionKey = value; }

        /// <summary>Internal Acessors for Health</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHealth Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.Health { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).Health; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).Health = value; }

        /// <summary>Internal Acessors for Hsm</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsm Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.Hsm { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).Hsm; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).Hsm = value; }

        /// <summary>Internal Acessors for HsmArchiveStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.HsmArchiveStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HsmArchiveStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HsmArchiveStatus = value; }

        /// <summary>Internal Acessors for HsmSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.HsmSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HsmSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).HsmSetting = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentity Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyEncryptionKeySourceVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReferenceSourceVault Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.KeyEncryptionKeySourceVault { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).KeyEncryptionKeySourceVault; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).KeyEncryptionKeySourceVault = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemProperties Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemProvisioningStateType? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuName Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.SkuName()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for ThroughputProvisionedMBps</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal.ThroughputProvisionedMBps { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ThroughputProvisionedMBps; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ThroughputProvisionedMBps = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemProperties _property;

        /// <summary>Properties of the AML file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemProperties()); set => this._property = value; }

        /// <summary>ARM provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemProvisioningStateType? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 2)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SettingContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingContainer = value ?? null; }

        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SettingImportPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingImportPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingImportPrefix = value ?? null; }

        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SettingLoggingContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingLoggingContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SettingLoggingContainer = value ?? null; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuName _sku;

        /// <summary>SKU for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuName Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.SkuName()); set => this._sku = value; }

        /// <summary>SKU name for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 4)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuNameInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuNameInternal)Sku).Name = value ?? null; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SourceVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SourceVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).SourceVaultId = value ?? null; }

        /// <summary>The size of the AML file system, in TiB. This might be rounded up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public float? StorageCapacityTiB { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).StorageCapacityTiB; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).StorageCapacityTiB = value ?? default(float); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? ThroughputProvisionedMBps { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesInternal)Property).ThroughputProvisionedMBps; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.IResourceInternal)__trackedResource).Type; }

        /// <summary>Backing field for <see cref="Zone" /> property.</summary>
        private string[] _zone;

        /// <summary>
        /// Availability zones for resources. This field should only contain a single element in the array.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string[] Zone { get => this._zone; set => this._zone = value; }

        /// <summary>Creates an new <see cref="AmlFilesystem" /> instance.</summary>
        public AmlFilesystem()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("azure-async-operation", out var __azureAsyncOperationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader0) is string __headerAzureAsyncOperationHeader0 ? __headerAzureAsyncOperationHeader0 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    public partial interface IAmlFilesystem :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResource
    {
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"azure-async-operation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>The version of Lustre running in the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Lustre running in the AML file system",
        SerializedName = @"lustreVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ClientInfoLustreVersion { get;  }
        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).",
        SerializedName = @"mgsAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ClientInfoMgsAddress { get;  }
        /// <summary>Recommended command to mount the AML file system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended command to mount the AML file system",
        SerializedName = @"mountCommand",
        PossibleTypes = new [] { typeof(string) })]
        string ClientInfoMountCommand { get;  }
        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"persistentVolume",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfacePersistentVolume { get;  }
        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"persistentVolumeClaim",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfacePersistentVolumeClaim { get;  }
        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML",
        SerializedName = @"storageClass",
        PossibleTypes = new [] { typeof(string) })]
        string ContainerStorageInterfaceStorageClass { get;  }
        /// <summary>
        /// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24
        /// subnet mask within the VNET's address space.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space.",
        SerializedName = @"filesystemSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string FilesystemSubnet { get; set; }
        /// <summary>List of AML file system health states.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of AML file system health states.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemHealthStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemHealthStateType? HealthState { get; set; }
        /// <summary>Server-defined error code for the AML file system health</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Server-defined error code for the AML file system health",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(string) })]
        string HealthStatusCode { get; set; }
        /// <summary>Describes the health state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describes the health state.",
        SerializedName = @"statusDescription",
        PossibleTypes = new [] { typeof(string) })]
        string HealthStatusDescription { get; set; }
        /// <summary>Archive status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Archive status",
        SerializedName = @"archiveStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] HsmArchiveStatus { get;  }
        /// <summary>The principal ID for the user-assigned identity of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID for the user-assigned identity of the resource.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The tenant ID associated with the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID associated with the resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The type of identity used for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity used for the resource.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemIdentityType? IdentityType { get; set; }
        /// <summary>
        /// A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The URL referencing a key encryption key in key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL referencing a key encryption key in key vault.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyEncryptionKeyUrl { get; set; }
        /// <summary>Day of the week on which the maintenance window will occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Day of the week on which the maintenance window will occur.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.MaintenanceDayOfWeekType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.MaintenanceDayOfWeekType? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>The time of day (in UTC) to start the maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time of day (in UTC) to start the maintenance window.",
        SerializedName = @"timeOfDayUTC",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowTimeOfDayUtc { get; set; }
        /// <summary>ARM provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemProvisioningStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemProvisioningStateType? ProvisioningState { get;  }
        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
        SerializedName = @"container",
        PossibleTypes = new [] { typeof(string) })]
        string SettingContainer { get; set; }
        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.",
        SerializedName = @"importPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string SettingImportPrefix { get; set; }
        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
        SerializedName = @"loggingContainer",
        PossibleTypes = new [] { typeof(string) })]
        string SettingLoggingContainer { get; set; }
        /// <summary>SKU name for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU name for this resource.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SourceVaultId { get; set; }
        /// <summary>The size of the AML file system, in TiB. This might be rounded up.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the AML file system, in TiB. This might be rounded up.",
        SerializedName = @"storageCapacityTiB",
        PossibleTypes = new [] { typeof(float) })]
        float? StorageCapacityTiB { get; set; }
        /// <summary>
        /// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput",
        SerializedName = @"throughputProvisionedMBps",
        PossibleTypes = new [] { typeof(int) })]
        int? ThroughputProvisionedMBps { get;  }
        /// <summary>
        /// Availability zones for resources. This field should only contain a single element in the array.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Availability zones for resources. This field should only contain a single element in the array.",
        SerializedName = @"zones",
        PossibleTypes = new [] { typeof(string) })]
        string[] Zone { get; set; }

    }
    /// An AML file system instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    internal partial interface IAmlFilesystemInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api30.ITrackedResourceInternal
    {
        string AzureAsyncOperation { get; set; }
        /// <summary>Client information for the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemClientInfo ClientInfo { get; set; }
        /// <summary>Container Storage Interface information for the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemContainerStorageInterface ClientInfoContainerStorageInterface { get; set; }
        /// <summary>The version of Lustre running in the AML file system</summary>
        string ClientInfoLustreVersion { get; set; }
        /// <summary>
        /// The IPv4 address used by clients to mount the AML file system's Lustre Management Service (MGS).
        /// </summary>
        string ClientInfoMgsAddress { get; set; }
        /// <summary>Recommended command to mount the AML file system</summary>
        string ClientInfoMountCommand { get; set; }
        /// <summary>Recommended AKS Persistent Volume for the CSI driver, in Base64 encoded YAML</summary>
        string ContainerStorageInterfacePersistentVolume { get; set; }
        /// <summary>
        /// Recommended AKS Persistent Volume Claim for the CSI driver, in Base64 encoded YAML
        /// </summary>
        string ContainerStorageInterfacePersistentVolumeClaim { get; set; }
        /// <summary>Recommended AKS Storage Class for the CSI driver, in Base64 encoded YAML</summary>
        string ContainerStorageInterfaceStorageClass { get; set; }
        /// <summary>Specifies encryption settings of the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemEncryptionSettings EncryptionSetting { get; set; }
        /// <summary>Specifies the location of the encryption key in Key Vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReference EncryptionSettingKeyEncryptionKey { get; set; }
        /// <summary>
        /// Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24
        /// subnet mask within the VNET's address space.
        /// </summary>
        string FilesystemSubnet { get; set; }
        /// <summary>Health of the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHealth Health { get; set; }
        /// <summary>List of AML file system health states.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemHealthStateType? HealthState { get; set; }
        /// <summary>Server-defined error code for the AML file system health</summary>
        string HealthStatusCode { get; set; }
        /// <summary>Describes the health state.</summary>
        string HealthStatusDescription { get; set; }
        /// <summary>Hydration and archive settings and status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsm Hsm { get; set; }
        /// <summary>Archive status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] HsmArchiveStatus { get; set; }
        /// <summary>Specifies HSM settings of the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings HsmSetting { get; set; }
        /// <summary>The managed identity used by the AML file system, if configured.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemIdentity Identity { get; set; }
        /// <summary>The principal ID for the user-assigned identity of the resource.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID associated with the resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The type of identity used for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemIdentityType? IdentityType { get; set; }
        /// <summary>
        /// A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>Describes a resource Id to source key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReferenceSourceVault KeyEncryptionKeySourceVault { get; set; }
        /// <summary>The URL referencing a key encryption key in key vault.</summary>
        string KeyEncryptionKeyUrl { get; set; }
        /// <summary>Start time of a 30-minute weekly maintenance window.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>Day of the week on which the maintenance window will occur.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.MaintenanceDayOfWeekType? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>The time of day (in UTC) to start the maintenance window.</summary>
        string MaintenanceWindowTimeOfDayUtc { get; set; }
        /// <summary>Properties of the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemProperties Property { get; set; }
        /// <summary>ARM provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.AmlFilesystemProvisioningStateType? ProvisioningState { get; set; }
        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        string SettingContainer { get; set; }
        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        string SettingImportPrefix { get; set; }
        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        string SettingLoggingContainer { get; set; }
        /// <summary>SKU for the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ISkuName Sku { get; set; }
        /// <summary>SKU name for this resource.</summary>
        string SkuName { get; set; }
        /// <summary>Resource Id.</summary>
        string SourceVaultId { get; set; }
        /// <summary>The size of the AML file system, in TiB. This might be rounded up.</summary>
        float? StorageCapacityTiB { get; set; }
        /// <summary>
        /// Throughput provisioned in MB per sec, calculated as storageCapacityTiB * per-unit storage throughput
        /// </summary>
        int? ThroughputProvisionedMBps { get; set; }
        /// <summary>
        /// Availability zones for resources. This field should only contain a single element in the array.
        /// </summary>
        string[] Zone { get; set; }

    }
}