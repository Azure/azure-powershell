// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>A namespace junction.</summary>
    public partial class NamespaceJunction :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunctionInternal
    {

        /// <summary>Backing field for <see cref="NamespacePath" /> property.</summary>
        private string _namespacePath;

        /// <summary>Namespace path on a cache for a Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string NamespacePath { get => this._namespacePath; set => this._namespacePath = value; }

        /// <summary>Backing field for <see cref="NfsAccessPolicy" /> property.</summary>
        private string _nfsAccessPolicy;

        /// <summary>Name of the access policy applied to this junction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string NfsAccessPolicy { get => this._nfsAccessPolicy; set => this._nfsAccessPolicy = value; }

        /// <summary>Backing field for <see cref="NfsExport" /> property.</summary>
        private string _nfsExport;

        /// <summary>NFS export where targetPath exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string NfsExport { get => this._nfsExport; set => this._nfsExport = value; }

        /// <summary>Backing field for <see cref="TargetPath" /> property.</summary>
        private string _targetPath;

        /// <summary>Path in Storage Target to which namespacePath points.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string TargetPath { get => this._targetPath; set => this._targetPath = value; }

        /// <summary>Creates an new <see cref="NamespaceJunction" /> instance.</summary>
        public NamespaceJunction()
        {

        }
    }
    /// A namespace junction.
    public partial interface INamespaceJunction :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>Namespace path on a cache for a Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace path on a cache for a Storage Target.",
        SerializedName = @"namespacePath",
        PossibleTypes = new [] { typeof(string) })]
        string NamespacePath { get; set; }
        /// <summary>Name of the access policy applied to this junction.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the access policy applied to this junction.",
        SerializedName = @"nfsAccessPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string NfsAccessPolicy { get; set; }
        /// <summary>NFS export where targetPath exists.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"NFS export where targetPath exists.",
        SerializedName = @"nfsExport",
        PossibleTypes = new [] { typeof(string) })]
        string NfsExport { get; set; }
        /// <summary>Path in Storage Target to which namespacePath points.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Path in Storage Target to which namespacePath points.",
        SerializedName = @"targetPath",
        PossibleTypes = new [] { typeof(string) })]
        string TargetPath { get; set; }

    }
    /// A namespace junction.
    internal partial interface INamespaceJunctionInternal

    {
        /// <summary>Namespace path on a cache for a Storage Target.</summary>
        string NamespacePath { get; set; }
        /// <summary>Name of the access policy applied to this junction.</summary>
        string NfsAccessPolicy { get; set; }
        /// <summary>NFS export where targetPath exists.</summary>
        string NfsExport { get; set; }
        /// <summary>Path in Storage Target to which namespacePath points.</summary>
        string TargetPath { get; set; }

    }
}