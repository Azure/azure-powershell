// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Active Directory admin credentials used to join the HPC Cache to a domain.</summary>
    public partial class CacheActiveDirectorySettingsCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentials,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheActiveDirectorySettingsCredentialsInternal
    {

        /// <summary>Backing field for <see cref="Password" /> property.</summary>
        private string _password;

        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string Password { get => this._password; set => this._password = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>Creates an new <see cref="CacheActiveDirectorySettingsCredentials" /> instance.</summary>
        public CacheActiveDirectorySettingsCredentials()
        {

        }
    }
    /// Active Directory admin credentials used to join the HPC Cache to a domain.
    public partial interface ICacheActiveDirectorySettingsCredentials :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string Password { get; set; }
        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// Active Directory admin credentials used to join the HPC Cache to a domain.
    internal partial interface ICacheActiveDirectorySettingsCredentialsInternal

    {
        /// <summary>
        /// Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        string Password { get; set; }
        /// <summary>
        /// Username of the Active Directory domain administrator. This value is stored encrypted and not returned on response.
        /// </summary>
        string Username { get; set; }

    }
}