// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.PowerShell;

    /// <summary>
    /// A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(CacheTypeConverter))]
    public partial class Cache
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Cache"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Cache(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CachePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CacheIdentityType?) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CacheIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheIdentityUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheIdentityUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Health"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Health = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheHealth) content.GetValueForProperty("Health",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Health, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheHealthTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatus = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatus) content.GetValueForProperty("UpgradeStatus",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatus, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUpgradeStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeSettings) content.GetValueForProperty("UpgradeSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUpgradeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheNetworkSettings) content.GetValueForProperty("NetworkSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheNetworkSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheEncryptionSettings) content.GetValueForProperty("EncryptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheEncryptionSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheSecuritySettings) content.GetValueForProperty("SecuritySetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheSecuritySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SizeGb = (int?) content.GetValueForProperty("SizeGb",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MountAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).MountAddress = (string[]) content.GetValueForProperty("MountAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).MountAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType.CreateFrom);
            }
            if (content.Contains("Subnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Subnet = (string) content.GetValueForProperty("Subnet",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Subnet, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PrimingJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).PrimingJob = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IPrimingJob[]) content.GetValueForProperty("PrimingJob",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).PrimingJob, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IPrimingJob>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.PrimingJobTypeConverter.ConvertFrom));
            }
            if (content.Contains("SpaceAllocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SpaceAllocation = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetSpaceAllocation[]) content.GetValueForProperty("SpaceAllocation",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SpaceAllocation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetSpaceAllocation>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.StorageTargetSpaceAllocationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DirectoryServicesSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).DirectoryServicesSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings) content.GetValueForProperty("DirectoryServicesSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).DirectoryServicesSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("HealthState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthState = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType?) content.GetValueForProperty("HealthState",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthState, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType.CreateFrom);
            }
            if (content.Contains("HealthStatusDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthStatusDescription = (string) content.GetValueForProperty("HealthStatusDescription",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthStatusDescription, global::System.Convert.ToString);
            }
            if (content.Contains("HealthCondition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthCondition = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICondition[]) content.GetValueForProperty("HealthCondition",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthCondition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICondition>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ConditionTypeConverter.ConvertFrom));
            }
            if (content.Contains("UpgradeStatusCurrentFirmwareVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusCurrentFirmwareVersion = (string) content.GetValueForProperty("UpgradeStatusCurrentFirmwareVersion",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusCurrentFirmwareVersion, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeStatusFirmwareUpdateStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateStatus = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType?) content.GetValueForProperty("UpgradeStatusFirmwareUpdateStatus",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateStatus, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType.CreateFrom);
            }
            if (content.Contains("UpgradeStatusFirmwareUpdateDeadline"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateDeadline = (global::System.DateTime?) content.GetValueForProperty("UpgradeStatusFirmwareUpdateDeadline",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateDeadline, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpgradeStatusLastFirmwareUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusLastFirmwareUpdate = (global::System.DateTime?) content.GetValueForProperty("UpgradeStatusLastFirmwareUpdate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusLastFirmwareUpdate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpgradeStatusPendingFirmwareVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusPendingFirmwareVersion = (string) content.GetValueForProperty("UpgradeStatusPendingFirmwareVersion",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusPendingFirmwareVersion, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeSettingUpgradeScheduleEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingUpgradeScheduleEnabled = (bool?) content.GetValueForProperty("UpgradeSettingUpgradeScheduleEnabled",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingUpgradeScheduleEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UpgradeSettingScheduledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingScheduledTime = (global::System.DateTime?) content.GetValueForProperty("UpgradeSettingScheduledTime",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingScheduledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkSettingMtu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingMtu = (int?) content.GetValueForProperty("NetworkSettingMtu",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingMtu, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkSettingUtilityAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingUtilityAddress = (string[]) content.GetValueForProperty("NetworkSettingUtilityAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingUtilityAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkSettingDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsServer = (string[]) content.GetValueForProperty("NetworkSettingDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkSettingDnsSearchDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsSearchDomain = (string) content.GetValueForProperty("NetworkSettingDnsSearchDomain",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsSearchDomain, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkSettingNtpServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingNtpServer = (string) content.GetValueForProperty("NetworkSettingNtpServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingNtpServer, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionSettingKeyEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingKeyEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReference) content.GetValueForProperty("EncryptionSettingKeyEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingKeyEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.KeyVaultKeyReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingRotationToLatestKeyVersionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingRotationToLatestKeyVersionEnabled = (bool?) content.GetValueForProperty("EncryptionSettingRotationToLatestKeyVersionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingRotationToLatestKeyVersionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecuritySettingAccessPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySettingAccessPolicy = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfsAccessPolicy[]) content.GetValueForProperty("SecuritySettingAccessPolicy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySettingAccessPolicy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfsAccessPolicy>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.NfsAccessPolicyTypeConverter.ConvertFrom));
            }
            if (content.Contains("KeyEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReferenceSourceVault) content.GetValueForProperty("KeyEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.KeyVaultKeyReferenceSourceVaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeyUrl = (string) content.GetValueForProperty("KeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SourceVaultId = (string) content.GetValueForProperty("SourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SourceVaultId, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Cache"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Cache(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Identity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Identity = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheIdentity) content.GetValueForProperty("Identity",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Identity, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheIdentityTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemData"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemData = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData) content.GetValueForProperty("SystemData",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemData, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.SystemDataTypeConverter.ConvertFrom);
            }
            if (content.Contains("Property"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Property = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheProperties) content.GetValueForProperty("Property",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Property, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CachePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("Sku"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Sku = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheSku) content.GetValueForProperty("Sku",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Sku, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheSkuTypeConverter.ConvertFrom);
            }
            if (content.Contains("Tag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Tag = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheTags) content.GetValueForProperty("Tag",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Tag, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheTagsTypeConverter.ConvertFrom);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Id, global::System.Convert.ToString);
            }
            if (content.Contains("Location"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Location = (string) content.GetValueForProperty("Location",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Location, global::System.Convert.ToString);
            }
            if (content.Contains("Name"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Name = (string) content.GetValueForProperty("Name",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Name, global::System.Convert.ToString);
            }
            if (content.Contains("Type"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Type = (string) content.GetValueForProperty("Type",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Type, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedBy = (string) content.GetValueForProperty("SystemDataCreatedBy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataCreatedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataCreatedAt",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("IdentityPrincipalId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityPrincipalId = (string) content.GetValueForProperty("IdentityPrincipalId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityPrincipalId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityTenantId = (string) content.GetValueForProperty("IdentityTenantId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("IdentityType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CacheIdentityType?) content.GetValueForProperty("IdentityType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CacheIdentityType.CreateFrom);
            }
            if (content.Contains("IdentityUserAssignedIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityUserAssignedIdentity = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheIdentityUserAssignedIdentities) content.GetValueForProperty("IdentityUserAssignedIdentity",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).IdentityUserAssignedIdentity, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheIdentityUserAssignedIdentitiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SystemDataCreatedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedByType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType?) content.GetValueForProperty("SystemDataCreatedByType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataCreatedByType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedBy = (string) content.GetValueForProperty("SystemDataLastModifiedBy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedBy, global::System.Convert.ToString);
            }
            if (content.Contains("SystemDataLastModifiedByType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedByType = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType?) content.GetValueForProperty("SystemDataLastModifiedByType",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedByType, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType.CreateFrom);
            }
            if (content.Contains("SystemDataLastModifiedAt"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedAt = (global::System.DateTime?) content.GetValueForProperty("SystemDataLastModifiedAt",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SystemDataLastModifiedAt, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("Health"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Health = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheHealth) content.GetValueForProperty("Health",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Health, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheHealthTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatus = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeStatus) content.GetValueForProperty("UpgradeStatus",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatus, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUpgradeStatusTypeConverter.ConvertFrom);
            }
            if (content.Contains("UpgradeSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeSettings) content.GetValueForProperty("UpgradeSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheUpgradeSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("NetworkSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheNetworkSettings) content.GetValueForProperty("NetworkSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheNetworkSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheEncryptionSettings) content.GetValueForProperty("EncryptionSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheEncryptionSettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SecuritySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheSecuritySettings) content.GetValueForProperty("SecuritySetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheSecuritySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SizeGb = (int?) content.GetValueForProperty("SizeGb",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MountAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).MountAddress = (string[]) content.GetValueForProperty("MountAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).MountAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType.CreateFrom);
            }
            if (content.Contains("Subnet"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Subnet = (string) content.GetValueForProperty("Subnet",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Subnet, global::System.Convert.ToString);
            }
            if (content.Contains("Zone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Zone = (string[]) content.GetValueForProperty("Zone",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).Zone, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("PrimingJob"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).PrimingJob = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IPrimingJob[]) content.GetValueForProperty("PrimingJob",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).PrimingJob, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IPrimingJob>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.PrimingJobTypeConverter.ConvertFrom));
            }
            if (content.Contains("SpaceAllocation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SpaceAllocation = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetSpaceAllocation[]) content.GetValueForProperty("SpaceAllocation",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SpaceAllocation, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetSpaceAllocation>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.StorageTargetSpaceAllocationTypeConverter.ConvertFrom));
            }
            if (content.Contains("DirectoryServicesSetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).DirectoryServicesSetting = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheDirectorySettings) content.GetValueForProperty("DirectoryServicesSetting",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).DirectoryServicesSetting, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.CacheDirectorySettingsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SkuName = (string) content.GetValueForProperty("SkuName",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SkuName, global::System.Convert.ToString);
            }
            if (content.Contains("HealthState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthState = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType?) content.GetValueForProperty("HealthState",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthState, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.HealthStateType.CreateFrom);
            }
            if (content.Contains("HealthStatusDescription"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthStatusDescription = (string) content.GetValueForProperty("HealthStatusDescription",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthStatusDescription, global::System.Convert.ToString);
            }
            if (content.Contains("HealthCondition"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthCondition = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICondition[]) content.GetValueForProperty("HealthCondition",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).HealthCondition, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICondition>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ConditionTypeConverter.ConvertFrom));
            }
            if (content.Contains("UpgradeStatusCurrentFirmwareVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusCurrentFirmwareVersion = (string) content.GetValueForProperty("UpgradeStatusCurrentFirmwareVersion",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusCurrentFirmwareVersion, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeStatusFirmwareUpdateStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateStatus = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType?) content.GetValueForProperty("UpgradeStatusFirmwareUpdateStatus",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateStatus, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.FirmwareStatusType.CreateFrom);
            }
            if (content.Contains("UpgradeStatusFirmwareUpdateDeadline"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateDeadline = (global::System.DateTime?) content.GetValueForProperty("UpgradeStatusFirmwareUpdateDeadline",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusFirmwareUpdateDeadline, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpgradeStatusLastFirmwareUpdate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusLastFirmwareUpdate = (global::System.DateTime?) content.GetValueForProperty("UpgradeStatusLastFirmwareUpdate",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusLastFirmwareUpdate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("UpgradeStatusPendingFirmwareVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusPendingFirmwareVersion = (string) content.GetValueForProperty("UpgradeStatusPendingFirmwareVersion",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeStatusPendingFirmwareVersion, global::System.Convert.ToString);
            }
            if (content.Contains("UpgradeSettingUpgradeScheduleEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingUpgradeScheduleEnabled = (bool?) content.GetValueForProperty("UpgradeSettingUpgradeScheduleEnabled",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingUpgradeScheduleEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("UpgradeSettingScheduledTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingScheduledTime = (global::System.DateTime?) content.GetValueForProperty("UpgradeSettingScheduledTime",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).UpgradeSettingScheduledTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkSettingMtu"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingMtu = (int?) content.GetValueForProperty("NetworkSettingMtu",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingMtu, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NetworkSettingUtilityAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingUtilityAddress = (string[]) content.GetValueForProperty("NetworkSettingUtilityAddress",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingUtilityAddress, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkSettingDnsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsServer = (string[]) content.GetValueForProperty("NetworkSettingDnsServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsServer, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("NetworkSettingDnsSearchDomain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsSearchDomain = (string) content.GetValueForProperty("NetworkSettingDnsSearchDomain",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingDnsSearchDomain, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkSettingNtpServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingNtpServer = (string) content.GetValueForProperty("NetworkSettingNtpServer",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).NetworkSettingNtpServer, global::System.Convert.ToString);
            }
            if (content.Contains("EncryptionSettingKeyEncryptionKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingKeyEncryptionKey = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReference) content.GetValueForProperty("EncryptionSettingKeyEncryptionKey",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingKeyEncryptionKey, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.KeyVaultKeyReferenceTypeConverter.ConvertFrom);
            }
            if (content.Contains("EncryptionSettingRotationToLatestKeyVersionEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingRotationToLatestKeyVersionEnabled = (bool?) content.GetValueForProperty("EncryptionSettingRotationToLatestKeyVersionEnabled",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).EncryptionSettingRotationToLatestKeyVersionEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("SecuritySettingAccessPolicy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySettingAccessPolicy = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfsAccessPolicy[]) content.GetValueForProperty("SecuritySettingAccessPolicy",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SecuritySettingAccessPolicy, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfsAccessPolicy>(__y, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.NfsAccessPolicyTypeConverter.ConvertFrom));
            }
            if (content.Contains("KeyEncryptionKeySourceVault"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeySourceVault = (Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IKeyVaultKeyReferenceSourceVault) content.GetValueForProperty("KeyEncryptionKeySourceVault",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeySourceVault, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.KeyVaultKeyReferenceSourceVaultTypeConverter.ConvertFrom);
            }
            if (content.Contains("KeyEncryptionKeyUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeyUrl = (string) content.GetValueForProperty("KeyEncryptionKeyUrl",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).KeyEncryptionKeyUrl, global::System.Convert.ToString);
            }
            if (content.Contains("SourceVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SourceVaultId = (string) content.GetValueForProperty("SourceVaultId",((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheInternal)this).SourceVaultId, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Cache"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICache" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICache DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Cache(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Cache"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICache" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICache DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Cache(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Cache" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Cache" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICache FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// A cache instance. Follows Azure Resource Manager standards: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
    [System.ComponentModel.TypeConverter(typeof(CacheTypeConverter))]
    public partial interface ICache

    {

    }
}