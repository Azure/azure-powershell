// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Cache Upgrade Settings.</summary>
    public partial class CacheUpgradeSettings :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeSettings,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ICacheUpgradeSettingsInternal
    {

        /// <summary>Backing field for <see cref="ScheduledTime" /> property.</summary>
        private global::System.DateTime? _scheduledTime;

        /// <summary>
        /// When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware
        /// update will automatically be installed on the cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public global::System.DateTime? ScheduledTime { get => this._scheduledTime; set => this._scheduledTime = value; }

        /// <summary>Backing field for <see cref="UpgradeScheduleEnabled" /> property.</summary>
        private bool? _upgradeScheduleEnabled;

        /// <summary>
        /// True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will
        /// automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public bool? UpgradeScheduleEnabled { get => this._upgradeScheduleEnabled; set => this._upgradeScheduleEnabled = value; }

        /// <summary>Creates an new <see cref="CacheUpgradeSettings" /> instance.</summary>
        public CacheUpgradeSettings()
        {

        }
    }
    /// Cache Upgrade Settings.
    public partial interface ICacheUpgradeSettings :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware
        /// update will automatically be installed on the cache.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware update will automatically be installed on the cache.",
        SerializedName = @"scheduledTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ScheduledTime { get; set; }
        /// <summary>
        /// True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will
        /// automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.",
        SerializedName = @"upgradeScheduleEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpgradeScheduleEnabled { get; set; }

    }
    /// Cache Upgrade Settings.
    internal partial interface ICacheUpgradeSettingsInternal

    {
        /// <summary>
        /// When upgradeScheduleEnabled is true, this field holds the user-chosen upgrade time. At the user-chosen time, the firmware
        /// update will automatically be installed on the cache.
        /// </summary>
        global::System.DateTime? ScheduledTime { get; set; }
        /// <summary>
        /// True if the user chooses to select an installation time between now and firmwareUpdateDeadline. Else the firmware will
        /// automatically be installed after firmwareUpdateDeadline if not triggered earlier via the upgrade operation.
        /// </summary>
        bool? UpgradeScheduleEnabled { get; set; }

    }
}