// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Hydration and archive settings and status</summary>
    public partial class AmlFilesystemPropertiesHsm :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsm,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsmInternal
    {

        /// <summary>Backing field for <see cref="ArchiveStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] _archiveStatus;

        /// <summary>Archive status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] ArchiveStatus { get => this._archiveStatus; }

        /// <summary>Internal Acessors for ArchiveStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsmInternal.ArchiveStatus { get => this._archiveStatus; set { {_archiveStatus = value;} } }

        /// <summary>Internal Acessors for Setting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemPropertiesHsmInternal.Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemHsmSettings()); set { {_setting = value;} } }

        /// <summary>Backing field for <see cref="Setting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings _setting;

        /// <summary>Specifies HSM settings of the AML file system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings Setting { get => (this._setting = this._setting ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.AmlFilesystemHsmSettings()); set => this._setting = value; }

        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string SettingContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).Container; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).Container = value ?? null; }

        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string SettingImportPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).ImportPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).ImportPrefix = value ?? null; }

        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string SettingLoggingContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).LoggingContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettingsInternal)Setting).LoggingContainer = value ?? null; }

        /// <summary>Creates an new <see cref="AmlFilesystemPropertiesHsm" /> instance.</summary>
        public AmlFilesystemPropertiesHsm()
        {

        }
    }
    /// Hydration and archive settings and status
    public partial interface IAmlFilesystemPropertiesHsm :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>Archive status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Archive status",
        SerializedName = @"archiveStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] ArchiveStatus { get;  }
        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account.",
        SerializedName = @"container",
        PossibleTypes = new [] { typeof(string) })]
        string SettingContainer { get; set; }
        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.",
        SerializedName = @"importPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string SettingImportPrefix { get; set; }
        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account.",
        SerializedName = @"loggingContainer",
        PossibleTypes = new [] { typeof(string) })]
        string SettingLoggingContainer { get; set; }

    }
    /// Hydration and archive settings and status
    internal partial interface IAmlFilesystemPropertiesHsmInternal

    {
        /// <summary>Archive status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemArchive[] ArchiveStatus { get; set; }
        /// <summary>Specifies HSM settings of the AML file system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IAmlFilesystemHsmSettings Setting { get; set; }
        /// <summary>
        /// Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider
        /// must have permission to create SAS tokens on the storage account.
        /// </summary>
        string SettingContainer { get; set; }
        /// <summary>
        /// Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace.
        /// </summary>
        string SettingImportPrefix { get; set; }
        /// <summary>
        /// Resource ID of storage container used for logging events and errors. Must be a separate container in the same storage
        /// account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the
        /// storage account.
        /// </summary>
        string SettingLoggingContainer { get; set; }

    }
}