// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Type of the Storage Target.</summary>
    public partial class StorageTarget :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTarget,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResource __storageTargetResource = new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.StorageTargetResource();

        /// <summary>The percentage of cache space allocated for this storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? AllocationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).AllocationPercentage; }

        /// <summary>Resource ID of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string BlobNfTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfTarget = value ?? null; }

        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string BlobNfUsageModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfUsageModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfUsageModel = value ?? null; }

        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? BlobNfVerificationTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfVerificationTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfVerificationTimer = value ?? default(int); }

        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? BlobNfWriteBackTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfWriteBackTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNfWriteBackTimer = value ?? default(int); }

        /// <summary>Resource ID of storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string ClfTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).ClfTarget; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).ClfTarget = value ?? null; }

        /// <summary>Resource ID of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Id; }

        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Junction; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Junction = value ?? null /* arrayOf */; }

        /// <summary>Region name string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 1)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Location; }

        /// <summary>Internal Acessors for AllocationPercentage</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.AllocationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).AllocationPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).AllocationPercentage = value; }

        /// <summary>Internal Acessors for BlobNf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.BlobNf { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNf; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).BlobNf = value; }

        /// <summary>Internal Acessors for Clf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.Clf { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Clf; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Clf = value; }

        /// <summary>Internal Acessors for Nfs3</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.Nfs3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3 = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetProperties Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.StorageTargetProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Unknown</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetInternal.Unknown { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Unknown; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Unknown = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Id = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal.Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Location = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Type = value; }

        /// <summary>Name of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Name; }

        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Nfs3Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3Target = value ?? null; }

        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Nfs3UsageModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3UsageModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3UsageModel = value ?? null; }

        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? Nfs3VerificationTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3VerificationTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3VerificationTimer = value ?? default(int); }

        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public int? Nfs3WriteBackTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3WriteBackTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).Nfs3WriteBackTimer = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetProperties _property;

        /// <summary>StorageTarget properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.StorageTargetProperties()); set => this._property = value; }

        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 2)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Storage target operational state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.FormatTable(Index = 3)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType)""); }

        /// <summary>The system meta data relating to this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.CreatedByType)""); }

        /// <summary>Type of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType? TargetType { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).TargetType; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).TargetType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType)""); }

        /// <summary>Type of the Storage Target; Microsoft.StorageCache/Cache/StorageTarget</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal)__storageTargetResource).Type; }

        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).UnknownAttribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal)Property).UnknownAttribute = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="StorageTarget" /> instance.</summary>
        public StorageTarget()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__storageTargetResource), __storageTargetResource);
            await eventListener.AssertObjectIsValid(nameof(__storageTargetResource), __storageTargetResource);
        }
    }
    /// Type of the Storage Target.
    public partial interface IStorageTarget :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResource
    {
        /// <summary>The percentage of cache space allocated for this storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The percentage of cache space allocated for this storage target",
        SerializedName = @"allocationPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? AllocationPercentage { get;  }
        /// <summary>Resource ID of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the storage container.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string BlobNfTarget { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the StorageCache usage model to be used for this storage target.",
        SerializedName = @"usageModel",
        PossibleTypes = new [] { typeof(string) })]
        string BlobNfUsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
        SerializedName = @"verificationTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? BlobNfVerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
        SerializedName = @"writeBackTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? BlobNfWriteBackTimer { get; set; }
        /// <summary>Resource ID of storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ClfTarget { get; set; }
        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of cache namespace junctions to target for namespace associations.",
        SerializedName = @"junctions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get; set; }
        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Nfs3Target { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the StorageCache usage model to be used for this storage target.",
        SerializedName = @"usageModel",
        PossibleTypes = new [] { typeof(string) })]
        string Nfs3UsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
        SerializedName = @"verificationTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? Nfs3VerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
        SerializedName = @"writeBackTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? Nfs3WriteBackTimer { get; set; }
        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get;  }
        /// <summary>Storage target operational state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage target operational state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get; set; }
        /// <summary>Type of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Storage Target.",
        SerializedName = @"targetType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType? TargetType { get; set; }
        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of string->string pairs containing information about the Storage Target.",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get; set; }

    }
    /// Type of the Storage Target.
    internal partial interface IStorageTargetInternal :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetResourceInternal
    {
        /// <summary>The percentage of cache space allocated for this storage target</summary>
        int? AllocationPercentage { get; set; }
        /// <summary>Properties when targetType is blobNfs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget BlobNf { get; set; }
        /// <summary>Resource ID of the storage container.</summary>
        string BlobNfTarget { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        string BlobNfUsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        int? BlobNfVerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        int? BlobNfWriteBackTimer { get; set; }
        /// <summary>Properties when targetType is clfs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget Clf { get; set; }
        /// <summary>Resource ID of storage container.</summary>
        string ClfTarget { get; set; }
        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get; set; }
        /// <summary>Properties when targetType is nfs3.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target Nfs3 { get; set; }
        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        string Nfs3Target { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        string Nfs3UsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        int? Nfs3VerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        int? Nfs3WriteBackTimer { get; set; }
        /// <summary>StorageTarget properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetProperties Property { get; set; }
        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get; set; }
        /// <summary>Storage target operational state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get; set; }
        /// <summary>Type of the Storage Target.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType? TargetType { get; set; }
        /// <summary>Properties when targetType is unknown.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget Unknown { get; set; }
        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get; set; }

    }
}