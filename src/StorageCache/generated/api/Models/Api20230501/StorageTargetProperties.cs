// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Extensions;

    /// <summary>Properties of the Storage Target.</summary>
    public partial class StorageTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AllocationPercentage" /> property.</summary>
        private int? _allocationPercentage;

        /// <summary>The percentage of cache space allocated for this storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public int? AllocationPercentage { get => this._allocationPercentage; }

        /// <summary>Backing field for <see cref="BlobNf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget _blobNf;

        /// <summary>Properties when targetType is blobNfs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget BlobNf { get => (this._blobNf = this._blobNf ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.BlobNfsTarget()); set => this._blobNf = value; }

        /// <summary>Resource ID of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string BlobNfTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).Target = value ?? null; }

        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string BlobNfUsageModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).UsageModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).UsageModel = value ?? null; }

        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public int? BlobNfVerificationTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).VerificationTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).VerificationTimer = value ?? default(int); }

        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public int? BlobNfWriteBackTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).WriteBackTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTargetInternal)BlobNf).WriteBackTimer = value ?? default(int); }

        /// <summary>Backing field for <see cref="Clf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget _clf;

        /// <summary>Properties when targetType is clfs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget Clf { get => (this._clf = this._clf ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ClfsTarget()); set => this._clf = value; }

        /// <summary>Resource ID of storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string ClfTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTargetInternal)Clf).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTargetInternal)Clf).Target = value ?? null; }

        /// <summary>Backing field for <see cref="Junction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] _junction;

        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get => this._junction; set => this._junction = value; }

        /// <summary>Internal Acessors for AllocationPercentage</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.AllocationPercentage { get => this._allocationPercentage; set { {_allocationPercentage = value;} } }

        /// <summary>Internal Acessors for BlobNf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.BlobNf { get => (this._blobNf = this._blobNf ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.BlobNfsTarget()); set { {_blobNf = value;} } }

        /// <summary>Internal Acessors for Clf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.Clf { get => (this._clf = this._clf ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.ClfsTarget()); set { {_clf = value;} } }

        /// <summary>Internal Acessors for Nfs3</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.Nfs3 { get => (this._nfs3 = this._nfs3 ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Nfs3Target()); set { {_nfs3 = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Unknown</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IStorageTargetPropertiesInternal.Unknown { get => (this._unknown = this._unknown ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.UnknownTarget()); set { {_unknown = value;} } }

        /// <summary>Backing field for <see cref="Nfs3" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target _nfs3;

        /// <summary>Properties when targetType is nfs3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target Nfs3 { get => (this._nfs3 = this._nfs3 ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.Nfs3Target()); set => this._nfs3 = value; }

        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string Nfs3Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).Target = value ?? null; }

        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public string Nfs3UsageModel { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).UsageModel; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).UsageModel = value ?? null; }

        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public int? Nfs3VerificationTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).VerificationTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).VerificationTimer = value ?? default(int); }

        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public int? Nfs3WriteBackTimer { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).WriteBackTimer; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3TargetInternal)Nfs3).WriteBackTimer = value ?? default(int); }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? _provisioningState;

        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? _state;

        /// <summary>Storage target operational state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="TargetType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType _targetType;

        /// <summary>Type of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType TargetType { get => this._targetType; set => this._targetType = value; }

        /// <summary>Backing field for <see cref="Unknown" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget _unknown;

        /// <summary>Properties when targetType is unknown.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget Unknown { get => (this._unknown = this._unknown ?? new Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.UnknownTarget()); set => this._unknown = value; }

        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Origin(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTargetInternal)Unknown).Attribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTargetInternal)Unknown).Attribute = value ?? null /* model class */; }

        /// <summary>Creates an new <see cref="StorageTargetProperties" /> instance.</summary>
        public StorageTargetProperties()
        {

        }
    }
    /// Properties of the Storage Target.
    public partial interface IStorageTargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.IJsonSerializable
    {
        /// <summary>The percentage of cache space allocated for this storage target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The percentage of cache space allocated for this storage target",
        SerializedName = @"allocationPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? AllocationPercentage { get;  }
        /// <summary>Resource ID of the storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the storage container.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string BlobNfTarget { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the StorageCache usage model to be used for this storage target.",
        SerializedName = @"usageModel",
        PossibleTypes = new [] { typeof(string) })]
        string BlobNfUsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
        SerializedName = @"verificationTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? BlobNfVerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
        SerializedName = @"writeBackTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? BlobNfWriteBackTimer { get; set; }
        /// <summary>Resource ID of storage container.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of storage container.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ClfTarget { get; set; }
        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of cache namespace junctions to target for namespace associations.",
        SerializedName = @"junctions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get; set; }
        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP address or host name of an NFSv3 host (e.g., 10.0.44.44).",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string Nfs3Target { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Identifies the StorageCache usage model to be used for this storage target.",
        SerializedName = @"usageModel",
        PossibleTypes = new [] { typeof(string) })]
        string Nfs3UsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.",
        SerializedName = @"verificationTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? Nfs3VerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.",
        SerializedName = @"writeBackTimer",
        PossibleTypes = new [] { typeof(int) })]
        int? Nfs3WriteBackTimer { get; set; }
        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get;  }
        /// <summary>Storage target operational state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage target operational state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get; set; }
        /// <summary>Type of the Storage Target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of the Storage Target.",
        SerializedName = @"targetType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType TargetType { get; set; }
        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dictionary of string->string pairs containing information about the Storage Target.",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get; set; }

    }
    /// Properties of the Storage Target.
    internal partial interface IStorageTargetPropertiesInternal

    {
        /// <summary>The percentage of cache space allocated for this storage target</summary>
        int? AllocationPercentage { get; set; }
        /// <summary>Properties when targetType is blobNfs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IBlobNfsTarget BlobNf { get; set; }
        /// <summary>Resource ID of the storage container.</summary>
        string BlobNfTarget { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        string BlobNfUsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        int? BlobNfVerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        int? BlobNfWriteBackTimer { get; set; }
        /// <summary>Properties when targetType is clfs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IClfsTarget Clf { get; set; }
        /// <summary>Resource ID of storage container.</summary>
        string ClfTarget { get; set; }
        /// <summary>List of cache namespace junctions to target for namespace associations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INamespaceJunction[] Junction { get; set; }
        /// <summary>Properties when targetType is nfs3.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.INfs3Target Nfs3 { get; set; }
        /// <summary>IP address or host name of an NFSv3 host (e.g., 10.0.44.44).</summary>
        string Nfs3Target { get; set; }
        /// <summary>Identifies the StorageCache usage model to be used for this storage target.</summary>
        string Nfs3UsageModel { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits before it checks the back-end storage for file updates.
        /// </summary>
        int? Nfs3VerificationTimer { get; set; }
        /// <summary>
        /// Amount of time (in seconds) the cache waits after the last file change before it copies the changed file to back-end storage.
        /// </summary>
        int? Nfs3WriteBackTimer { get; set; }
        /// <summary>
        /// ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.ProvisioningStateType? ProvisioningState { get; set; }
        /// <summary>Storage target operational state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.OperationalStateType? State { get; set; }
        /// <summary>Type of the Storage Target.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Support.StorageTargetType TargetType { get; set; }
        /// <summary>Properties when targetType is unknown.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownTarget Unknown { get; set; }
        /// <summary>
        /// Dictionary of string->string pairs containing information about the Storage Target.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.StorageCache.Models.Api20230501.IUnknownProperties UnknownAttribute { get; set; }

    }
}