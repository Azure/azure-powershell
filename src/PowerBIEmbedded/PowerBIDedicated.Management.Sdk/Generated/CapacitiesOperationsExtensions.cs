// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.PowerBIDedicated
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for CapacitiesOperations
    /// </summary>
    public static partial class CapacitiesOperationsExtensions
    {
        /// <summary>
        /// Gets details about the specified dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        public static DedicatedCapacity GetDetails(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                return ((ICapacitiesOperations)operations).GetDetailsAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets details about the specified dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedCapacity> GetDetailsAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetDetailsWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Provisions the specified Dedicated capacity based on the configuration
        /// specified in the request.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        public static DedicatedCapacity Create(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacity capacityParameters)
        {
                return ((ICapacitiesOperations)operations).CreateAsync(resourceGroupName, dedicatedCapacityName, capacityParameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Provisions the specified Dedicated capacity based on the configuration
        /// specified in the request.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedCapacity> CreateAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacity capacityParameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, capacityParameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void Delete(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).DeleteAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Updates the current state of the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static DedicatedCapacity Update(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacityUpdateParameters capacityUpdateParameters)
        {
                return ((ICapacitiesOperations)operations).UpdateAsync(resourceGroupName, dedicatedCapacityName, capacityUpdateParameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates the current state of the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedCapacity> UpdateAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacityUpdateParameters capacityUpdateParameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, capacityUpdateParameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Suspends operation of the specified dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void Suspend(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).SuspendAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Suspends operation of the specified dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task SuspendAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.SuspendWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Resumes operation of the specified Dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void Resume(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).ResumeAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Resumes operation of the specified Dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task ResumeAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.ResumeWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Gets all the Dedicated capacities for the given resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        public static System.Collections.Generic.IEnumerable<DedicatedCapacity> ListByResourceGroup(this ICapacitiesOperations operations, string resourceGroupName)
        {
                return ((ICapacitiesOperations)operations).ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets all the Dedicated capacities for the given resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DedicatedCapacity>> ListByResourceGroupAsync(this ICapacitiesOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists all the Dedicated capacities for the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static System.Collections.Generic.IEnumerable<DedicatedCapacity> List(this ICapacitiesOperations operations)
        {
                return ((ICapacitiesOperations)operations).ListAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists all the Dedicated capacities for the given subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DedicatedCapacity>> ListAsync(this ICapacitiesOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists eligible SKUs for PowerBI Dedicated resource provider.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static SkuEnumerationForNewResourceResult ListSkus(this ICapacitiesOperations operations)
        {
                return ((ICapacitiesOperations)operations).ListSkusAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists eligible SKUs for PowerBI Dedicated resource provider.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<SkuEnumerationForNewResourceResult> ListSkusAsync(this ICapacitiesOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListSkusWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Lists eligible SKUs for a PowerBI Dedicated resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static SkuEnumerationForExistingResourceResult ListSkusForCapacity(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                return ((ICapacitiesOperations)operations).ListSkusForCapacityAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Lists eligible SKUs for a PowerBI Dedicated resource.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<SkuEnumerationForExistingResourceResult> ListSkusForCapacityAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListSkusForCapacityWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Provisions the specified Dedicated capacity based on the configuration
        /// specified in the request.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        public static DedicatedCapacity BeginCreate(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacity capacityParameters)
        {
                return ((ICapacitiesOperations)operations).BeginCreateAsync(resourceGroupName, dedicatedCapacityName, capacityParameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Provisions the specified Dedicated capacity based on the configuration
        /// specified in the request.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be a minimum of 3 characters,
        /// and a maximum of 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedCapacity> BeginCreateAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacity capacityParameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginCreateWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, capacityParameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void BeginDelete(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).BeginDeleteAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Updates the current state of the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static DedicatedCapacity BeginUpdate(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacityUpdateParameters capacityUpdateParameters)
        {
                return ((ICapacitiesOperations)operations).BeginUpdateAsync(resourceGroupName, dedicatedCapacityName, capacityUpdateParameters).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Updates the current state of the specified Dedicated capacity.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<DedicatedCapacity> BeginUpdateAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, DedicatedCapacityUpdateParameters capacityUpdateParameters, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginUpdateWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, capacityUpdateParameters, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Suspends operation of the specified dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void BeginSuspend(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).BeginSuspendAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Suspends operation of the specified dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginSuspendAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginSuspendWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Resumes operation of the specified Dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        public static void BeginResume(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName)
        {
                ((ICapacitiesOperations)operations).BeginResumeAsync(resourceGroupName, dedicatedCapacityName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Resumes operation of the specified Dedicated capacity instance.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the Azure Resource group of which a given PowerBIDedicated
        /// capacity is part. This name must be at least 1 character in length, and no
        /// more than 90.
        /// </param>
        /// <param name='dedicatedCapacityName'>
        /// The name of the Dedicated capacity. It must be at least 3 characters in
        /// length, and no more than 63.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginResumeAsync(this ICapacitiesOperations operations, string resourceGroupName, string dedicatedCapacityName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginResumeWithHttpMessagesAsync(resourceGroupName, dedicatedCapacityName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
