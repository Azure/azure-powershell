// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.PowerBIEmbedded
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for WorkspaceCollectionsOperations
    /// </summary>
    public static partial class WorkspaceCollectionsOperationsExtensions
    {
        /// <summary>
        /// Retrieves an existing Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static WorkspaceCollection GetByName(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
        {
                return ((IWorkspaceCollectionsOperations)operations).GetByNameAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves an existing Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkspaceCollection> GetByNameAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByNameWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Creates a new Power BI Workspace Collection with the specified properties.
        /// A Power BI Workspace Collection contains one or more workspaces, and can be
        /// used to provision keys that provide API access to those workspaces.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static WorkspaceCollection Create(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CreateWorkspaceCollectionRequest body)
        {
                return ((IWorkspaceCollectionsOperations)operations).CreateAsync(resourceGroupName, workspaceCollectionName, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates a new Power BI Workspace Collection with the specified properties.
        /// A Power BI Workspace Collection contains one or more workspaces, and can be
        /// used to provision keys that provide API access to those workspaces.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkspaceCollection> CreateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, CreateWorkspaceCollectionRequest body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, body, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Update an existing Power BI Workspace Collection with the specified
        /// properties.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static WorkspaceCollection Update(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, UpdateWorkspaceCollectionRequest body)
        {
                return ((IWorkspaceCollectionsOperations)operations).UpdateAsync(resourceGroupName, workspaceCollectionName, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Update an existing Power BI Workspace Collection with the specified
        /// properties.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkspaceCollection> UpdateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, UpdateWorkspaceCollectionRequest body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, body, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Delete a Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static void Delete(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
        {
                ((IWorkspaceCollectionsOperations)operations).DeleteAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete a Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Verify the specified Power BI Workspace Collection name is valid and not
        /// already in use.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Azure location
        /// </param>
        public static CheckNameResponse CheckNameAvailability(this IWorkspaceCollectionsOperations operations, string location, CheckNameRequest body)
        {
                return ((IWorkspaceCollectionsOperations)operations).CheckNameAvailabilityAsync(location, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Verify the specified Power BI Workspace Collection name is valid and not
        /// already in use.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='location'>
        /// Azure location
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<CheckNameResponse> CheckNameAvailabilityAsync(this IWorkspaceCollectionsOperations operations, string location, CheckNameRequest body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CheckNameAvailabilityWithHttpMessagesAsync(location, body, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieves all existing Power BI workspace collections in the specified
        /// resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        public static System.Collections.Generic.IEnumerable<WorkspaceCollection> ListByResourceGroup(this IWorkspaceCollectionsOperations operations, string resourceGroupName)
        {
                return ((IWorkspaceCollectionsOperations)operations).ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves all existing Power BI workspace collections in the specified
        /// resource group.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<WorkspaceCollection>> ListByResourceGroupAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieves all existing Power BI workspace collections in the specified
        /// subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static System.Collections.Generic.IEnumerable<WorkspaceCollection> ListBySubscription(this IWorkspaceCollectionsOperations operations)
        {
                return ((IWorkspaceCollectionsOperations)operations).ListBySubscriptionAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves all existing Power BI workspace collections in the specified
        /// subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<WorkspaceCollection>> ListBySubscriptionAsync(this IWorkspaceCollectionsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Retrieves the primary and secondary access keys for the specified Power BI
        /// Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static WorkspaceCollectionAccessKeys GetAccessKeys(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
        {
                return ((IWorkspaceCollectionsOperations)operations).GetAccessKeysAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Retrieves the primary and secondary access keys for the specified Power BI
        /// Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkspaceCollectionAccessKeys> GetAccessKeysAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetAccessKeysWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Regenerates the primary or secondary access key for the specified Power BI
        /// Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static WorkspaceCollectionAccessKeys RegenerateKey(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, WorkspaceCollectionAccessKey body)
        {
                return ((IWorkspaceCollectionsOperations)operations).RegenerateKeyAsync(resourceGroupName, workspaceCollectionName, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Regenerates the primary or secondary access key for the specified Power BI
        /// Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<WorkspaceCollectionAccessKeys> RegenerateKeyAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, WorkspaceCollectionAccessKey body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.RegenerateKeyWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, body, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Migrates an existing Power BI Workspace Collection to a different resource
        /// group and/or subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        public static void Migrate(this IWorkspaceCollectionsOperations operations, string resourceGroupName, MigrateWorkspaceCollectionRequest body)
        {
                ((IWorkspaceCollectionsOperations)operations).MigrateAsync(resourceGroupName, body).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Migrates an existing Power BI Workspace Collection to a different resource
        /// group and/or subscription.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task MigrateAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, MigrateWorkspaceCollectionRequest body, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.MigrateWithHttpMessagesAsync(resourceGroupName, body, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Delete a Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        public static void BeginDelete(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName)
        {
                ((IWorkspaceCollectionsOperations)operations).BeginDeleteAsync(resourceGroupName, workspaceCollectionName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Delete a Power BI Workspace Collection.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Azure resource group
        /// </param>
        /// <param name='workspaceCollectionName'>
        /// Power BI Embedded Workspace Collection name
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task BeginDeleteAsync(this IWorkspaceCollectionsOperations operations, string resourceGroupName, string workspaceCollectionName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.BeginDeleteWithHttpMessagesAsync(resourceGroupName, workspaceCollectionName, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
    }
}
