// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Extensions;

    /// <summary>The properties of the linker.</summary>
    public partial class LinkerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ILinkerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ILinkerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AuthInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IAuthInfoBase _authInfo;

        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IAuthInfoBase AuthInfo { get => (this._authInfo = this._authInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.AuthInfoBase()); set => this._authInfo = value; }

        /// <summary>Backing field for <see cref="ClientType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType? _clientType;

        /// <summary>The application client type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType? ClientType { get => this._clientType; set => this._clientType = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ILinkerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SecretStore</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStore Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ILinkerPropertiesInternal.SecretStore { get => (this._secretStore = this._secretStore ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.SecretStore()); set { {_secretStore = value;} } }

        /// <summary>Internal Acessors for VNetSolution</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolution Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ILinkerPropertiesInternal.VNetSolution { get => (this._vNetSolution = this._vNetSolution ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.VNetSolution()); set { {_vNetSolution = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>connection scope in source service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SecretStore" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStore _secretStore;

        /// <summary>An option to store secret value in secure place</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStore SecretStore { get => (this._secretStore = this._secretStore ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.SecretStore()); set => this._secretStore = value; }

        /// <summary>The key vault id to store secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inlined)]
        public string SecretStoreKeyVaultId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStoreInternal)SecretStore).KeyVaultId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStoreInternal)SecretStore).KeyVaultId = value ?? null; }

        /// <summary>Backing field for <see cref="TargetService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ITargetServiceBase _targetService;

        /// <summary>The target service properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ITargetServiceBase TargetService { get => (this._targetService = this._targetService ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.TargetServiceBase()); set => this._targetService = value; }

        /// <summary>Backing field for <see cref="VNetSolution" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolution _vNetSolution;

        /// <summary>The VNet solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolution VNetSolution { get => (this._vNetSolution = this._vNetSolution ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.VNetSolution()); set => this._vNetSolution = value; }

        /// <summary>Type of VNet solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? VNetSolutionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolutionInternal)VNetSolution).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolutionInternal)VNetSolution).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType)""); }

        /// <summary>Creates an new <see cref="LinkerProperties" /> instance.</summary>
        public LinkerProperties()
        {

        }
    }
    /// The properties of the linker.
    public partial interface ILinkerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IJsonSerializable
    {
        /// <summary>The authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type.",
        SerializedName = @"authInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IAuthInfoBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IAuthInfoBase AuthInfo { get; set; }
        /// <summary>The application client type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The application client type",
        SerializedName = @"clientType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType? ClientType { get; set; }
        /// <summary>The provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state. ",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>connection scope in source service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"connection scope in source service.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>The key vault id to store secret</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The key vault id to store secret",
        SerializedName = @"keyVaultId",
        PossibleTypes = new [] { typeof(string) })]
        string SecretStoreKeyVaultId { get; set; }
        /// <summary>The target service properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target service properties",
        SerializedName = @"targetService",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ITargetServiceBase) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ITargetServiceBase TargetService { get; set; }
        /// <summary>Type of VNet solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of VNet solution.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? VNetSolutionType { get; set; }

    }
    /// The properties of the linker.
    internal partial interface ILinkerPropertiesInternal

    {
        /// <summary>The authentication type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IAuthInfoBase AuthInfo { get; set; }
        /// <summary>The application client type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.ClientType? ClientType { get; set; }
        /// <summary>The provisioning state.</summary>
        string ProvisioningState { get; set; }
        /// <summary>connection scope in source service.</summary>
        string Scope { get; set; }
        /// <summary>An option to store secret value in secure place</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ISecretStore SecretStore { get; set; }
        /// <summary>The key vault id to store secret</summary>
        string SecretStoreKeyVaultId { get; set; }
        /// <summary>The target service properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.ITargetServiceBase TargetService { get; set; }
        /// <summary>The VNet solution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolution VNetSolution { get; set; }
        /// <summary>Type of VNet solution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? VNetSolutionType { get; set; }

    }
}