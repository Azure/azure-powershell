// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Extensions;

    /// <summary>The VNet solution for linker</summary>
    public partial class VNetSolution :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolution,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Models.Api20220501.IVNetSolutionInternal
    {

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? _type;

        /// <summary>Type of VNet solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="VNetSolution" /> instance.</summary>
        public VNetSolution()
        {

        }
    }
    /// The VNet solution for linker
    public partial interface IVNetSolution :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.IJsonSerializable
    {
        /// <summary>Type of VNet solution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of VNet solution.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? Type { get; set; }

    }
    /// The VNet solution for linker
    internal partial interface IVNetSolutionInternal

    {
        /// <summary>Type of VNet solution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceLinker.Support.VNetSolutionType? Type { get; set; }

    }
}