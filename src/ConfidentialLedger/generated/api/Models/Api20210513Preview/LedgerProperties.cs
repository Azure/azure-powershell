// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Extensions;

    /// <summary>Additional Confidential Ledger properties.</summary>
    public partial class LedgerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AadBasedSecurityPrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal[] _aadBasedSecurityPrincipal;

        /// <summary>Array of all AAD based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get => this._aadBasedSecurityPrincipal; set => this._aadBasedSecurityPrincipal = value; }

        /// <summary>Backing field for <see cref="CertBasedSecurityPrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal[] _certBasedSecurityPrincipal;

        /// <summary>Array of all cert based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get => this._certBasedSecurityPrincipal; set => this._certBasedSecurityPrincipal = value; }

        /// <summary>Backing field for <see cref="IdentityServiceUri" /> property.</summary>
        private string _identityServiceUri;

        /// <summary>Endpoint for accessing network identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string IdentityServiceUri { get => this._identityServiceUri; }

        /// <summary>Backing field for <see cref="LedgerInternalNamespace" /> property.</summary>
        private string _ledgerInternalNamespace;

        /// <summary>Internal namespace for the Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerInternalNamespace { get => this._ledgerInternalNamespace; }

        /// <summary>Backing field for <see cref="LedgerName" /> property.</summary>
        private string _ledgerName;

        /// <summary>Unique name for the Confidential Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerName { get => this._ledgerName; }

        /// <summary>Backing field for <see cref="LedgerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? _ledgerType;

        /// <summary>Type of Confidential Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get => this._ledgerType; set => this._ledgerType = value; }

        /// <summary>Backing field for <see cref="LedgerUri" /> property.</summary>
        private string _ledgerUri;

        /// <summary>Endpoint for calling Ledger Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerUri { get => this._ledgerUri; }

        /// <summary>Internal Acessors for IdentityServiceUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal.IdentityServiceUri { get => this._identityServiceUri; set { {_identityServiceUri = value;} } }

        /// <summary>Internal Acessors for LedgerInternalNamespace</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal.LedgerInternalNamespace { get => this._ledgerInternalNamespace; set { {_ledgerInternalNamespace = value;} } }

        /// <summary>Internal Acessors for LedgerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal.LedgerName { get => this._ledgerName; set { {_ledgerName = value;} } }

        /// <summary>Internal Acessors for LedgerUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal.LedgerUri { get => this._ledgerUri; set { {_ledgerUri = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ILedgerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of Ledger Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="LedgerProperties" /> instance.</summary>
        public LedgerProperties()
        {

        }
    }
    /// Additional Confidential Ledger properties.
    public partial interface ILedgerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.IJsonSerializable
    {
        /// <summary>Array of all AAD based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of all AAD based Security Principals.",
        SerializedName = @"aadBasedSecurityPrincipals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get; set; }
        /// <summary>Array of all cert based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of all cert based Security Principals.",
        SerializedName = @"certBasedSecurityPrincipals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get; set; }
        /// <summary>Endpoint for accessing network identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Endpoint for accessing network identity.",
        SerializedName = @"identityServiceUri",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityServiceUri { get;  }
        /// <summary>Internal namespace for the Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Internal namespace for the Ledger",
        SerializedName = @"ledgerInternalNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerInternalNamespace { get;  }
        /// <summary>Unique name for the Confidential Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique name for the Confidential Ledger.",
        SerializedName = @"ledgerName",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerName { get;  }
        /// <summary>Type of Confidential Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of Confidential Ledger",
        SerializedName = @"ledgerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get; set; }
        /// <summary>Endpoint for calling Ledger Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Endpoint for calling Ledger Service.",
        SerializedName = @"ledgerUri",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerUri { get;  }
        /// <summary>Provisioning state of Ledger Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of Ledger Resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get;  }

    }
    /// Additional Confidential Ledger properties.
    internal partial interface ILedgerPropertiesInternal

    {
        /// <summary>Array of all AAD based Security Principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get; set; }
        /// <summary>Array of all cert based Security Principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get; set; }
        /// <summary>Endpoint for accessing network identity.</summary>
        string IdentityServiceUri { get; set; }
        /// <summary>Internal namespace for the Ledger</summary>
        string LedgerInternalNamespace { get; set; }
        /// <summary>Unique name for the Confidential Ledger.</summary>
        string LedgerName { get; set; }
        /// <summary>Type of Confidential Ledger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get; set; }
        /// <summary>Endpoint for calling Ledger Service.</summary>
        string LedgerUri { get; set; }
        /// <summary>Provisioning state of Ledger Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get; set; }

    }
}