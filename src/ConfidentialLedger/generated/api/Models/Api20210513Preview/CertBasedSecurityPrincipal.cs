// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Extensions;

    /// <summary>Cert based security principal with Ledger RoleName</summary>
    public partial class CertBasedSecurityPrincipal :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipal,
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.ICertBasedSecurityPrincipalInternal
    {

        /// <summary>Backing field for <see cref="Cert" /> property.</summary>
        private string _cert;

        /// <summary>Public key of the user cert (.pem or .cer)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string Cert { get => this._cert; set => this._cert = value; }

        /// <summary>Backing field for <see cref="LedgerRoleName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? _ledgerRoleName;

        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get => this._ledgerRoleName; set => this._ledgerRoleName = value; }

        /// <summary>Creates an new <see cref="CertBasedSecurityPrincipal" /> instance.</summary>
        public CertBasedSecurityPrincipal()
        {

        }
    }
    /// Cert based security principal with Ledger RoleName
    public partial interface ICertBasedSecurityPrincipal :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.IJsonSerializable
    {
        /// <summary>Public key of the user cert (.pem or .cer)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Public key of the user cert (.pem or .cer)",
        SerializedName = @"cert",
        PossibleTypes = new [] { typeof(string) })]
        string Cert { get; set; }
        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"LedgerRole associated with the Security Principal of Ledger",
        SerializedName = @"ledgerRoleName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get; set; }

    }
    /// Cert based security principal with Ledger RoleName
    internal partial interface ICertBasedSecurityPrincipalInternal

    {
        /// <summary>Public key of the user cert (.pem or .cer)</summary>
        string Cert { get; set; }
        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get; set; }

    }
}