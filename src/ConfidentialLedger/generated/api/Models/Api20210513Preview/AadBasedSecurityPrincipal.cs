// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Extensions;

    /// <summary>AAD based security principal with associated Ledger RoleName</summary>
    public partial class AadBasedSecurityPrincipal :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipal,
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20210513Preview.IAadBasedSecurityPrincipalInternal
    {

        /// <summary>Backing field for <see cref="LedgerRoleName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? _ledgerRoleName;

        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get => this._ledgerRoleName; set => this._ledgerRoleName = value; }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>UUID/GUID based Principal Id of the Security Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; set => this._principalId = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>UUID/GUID based Tenant Id of the Security Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; set => this._tenantId = value; }

        /// <summary>Creates an new <see cref="AadBasedSecurityPrincipal" /> instance.</summary>
        public AadBasedSecurityPrincipal()
        {

        }
    }
    /// AAD based security principal with associated Ledger RoleName
    public partial interface IAadBasedSecurityPrincipal :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.IJsonSerializable
    {
        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"LedgerRole associated with the Security Principal of Ledger",
        SerializedName = @"ledgerRoleName",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get; set; }
        /// <summary>UUID/GUID based Principal Id of the Security Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UUID/GUID based Principal Id of the Security Principal",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>UUID/GUID based Tenant Id of the Security Principal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UUID/GUID based Tenant Id of the Security Principal",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// AAD based security principal with associated Ledger RoleName
    internal partial interface IAadBasedSecurityPrincipalInternal

    {
        /// <summary>LedgerRole associated with the Security Principal of Ledger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerRoleName? LedgerRoleName { get; set; }
        /// <summary>UUID/GUID based Principal Id of the Security Principal</summary>
        string PrincipalId { get; set; }
        /// <summary>UUID/GUID based Tenant Id of the Security Principal</summary>
        string TenantId { get; set; }

    }
}