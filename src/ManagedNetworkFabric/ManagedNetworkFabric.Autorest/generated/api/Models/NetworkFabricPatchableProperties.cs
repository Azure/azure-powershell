// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Network Fabric updatable properties.</summary>
    public partial class NetworkFabricPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchableProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesInternal
    {

        /// <summary>Backing field for <see cref="FabricAsn" /> property.</summary>
        private long? _fabricAsn;

        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long? FabricAsn { get => this._fabricAsn; set => this._fabricAsn = value; }

        /// <summary>Backing field for <see cref="Ipv4Prefix" /> property.</summary>
        private string _ipv4Prefix;

        /// <summary>IPv4Prefix for Management Network. Example: 10.1.0.0/19.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Ipv4Prefix { get => this._ipv4Prefix; set => this._ipv4Prefix = value; }

        /// <summary>Backing field for <see cref="Ipv6Prefix" /> property.</summary>
        private string _ipv6Prefix;

        /// <summary>IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Ipv6Prefix { get => this._ipv6Prefix; set => this._ipv6Prefix = value; }

        /// <summary>Backing field for <see cref="ManagementNetworkConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties _managementNetworkConfiguration;

        /// <summary>Configuration to be used to setup the management network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties ManagementNetworkConfiguration { get => (this._managementNetworkConfiguration = this._managementNetworkConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagementNetworkConfigurationPatchableProperties()); set => this._managementNetworkConfiguration = value; }

        /// <summary>Internal Acessors for TerminalServerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesTerminalServerConfiguration Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesInternal.TerminalServerConfiguration { get => (this._terminalServerConfiguration = this._terminalServerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.NetworkFabricPatchablePropertiesTerminalServerConfiguration()); set { {_terminalServerConfiguration = value;} } }

        /// <summary>Backing field for <see cref="RackCount" /> property.</summary>
        private int? _rackCount;

        /// <summary>Number of compute racks associated to Network Fabric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public int? RackCount { get => this._rackCount; set => this._rackCount = value; }

        /// <summary>Backing field for <see cref="ServerCountPerRack" /> property.</summary>
        private int? _serverCountPerRack;

        /// <summary>Number of servers.Possible values are from 1-16.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public int? ServerCountPerRack { get => this._serverCountPerRack; set => this._serverCountPerRack = value; }

        /// <summary>Backing field for <see cref="TerminalServerConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesTerminalServerConfiguration _terminalServerConfiguration;

        /// <summary>Network and credentials configuration already applied to terminal server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesTerminalServerConfiguration TerminalServerConfiguration { get => (this._terminalServerConfiguration = this._terminalServerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.NetworkFabricPatchablePropertiesTerminalServerConfiguration()); set => this._terminalServerConfiguration = value; }

        /// <summary>Password for the terminal server connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).Password = value ?? null; }

        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationPrimaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).PrimaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).PrimaryIpv4Prefix = value ?? null; }

        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationPrimaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).PrimaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).PrimaryIpv6Prefix = value ?? null; }

        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationSecondaryIpv4Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).SecondaryIpv4Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).SecondaryIpv4Prefix = value ?? null; }

        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationSecondaryIpv6Prefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).SecondaryIpv6Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ILayer3IPPrefixPropertiesInternal)TerminalServerConfiguration).SecondaryIpv6Prefix = value ?? null; }

        /// <summary>Serial Number of Terminal server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).SerialNumber = value ?? null; }

        /// <summary>Username for the terminal server connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string TerminalServerConfigurationUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ITerminalServerPatchablePropertiesInternal)TerminalServerConfiguration).Username = value ?? null; }

        /// <summary>Creates an new <see cref="NetworkFabricPatchableProperties" /> instance.</summary>
        public NetworkFabricPatchableProperties()
        {

        }
    }
    /// Network Fabric updatable properties.
    public partial interface INetworkFabricPatchableProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"ASN of CE devices for CE/PE connectivity.",
        SerializedName = @"fabricASN",
        PossibleTypes = new [] { typeof(long) })]
        long? FabricAsn { get; set; }
        /// <summary>IPv4Prefix for Management Network. Example: 10.1.0.0/19.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4Prefix for Management Network. Example: 10.1.0.0/19.",
        SerializedName = @"ipv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv4Prefix { get; set; }
        /// <summary>IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.",
        SerializedName = @"ipv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string Ipv6Prefix { get; set; }
        /// <summary>Configuration to be used to setup the management network.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Configuration to be used to setup the management network.",
        SerializedName = @"managementNetworkConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties ManagementNetworkConfiguration { get; set; }
        /// <summary>Number of compute racks associated to Network Fabric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of compute racks associated to Network Fabric.",
        SerializedName = @"rackCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RackCount { get; set; }
        /// <summary>Number of servers.Possible values are from 1-16.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Number of servers.Possible values are from 1-16.",
        SerializedName = @"serverCountPerRack",
        PossibleTypes = new [] { typeof(int) })]
        int? ServerCountPerRack { get; set; }
        /// <summary>Password for the terminal server connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Password for the terminal server connection.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationPassword { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv4 Address Prefix.",
        SerializedName = @"primaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IPv6 Address Prefix.",
        SerializedName = @"primaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv4 Address Prefix.",
        SerializedName = @"secondaryIpv4Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Secondary IPv6 Address Prefix.",
        SerializedName = @"secondaryIpv6Prefix",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationSecondaryIpv6Prefix { get; set; }
        /// <summary>Serial Number of Terminal server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Serial Number of Terminal server.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationSerialNumber { get; set; }
        /// <summary>Username for the terminal server connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Username for the terminal server connection.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string TerminalServerConfigurationUsername { get; set; }

    }
    /// Network Fabric updatable properties.
    internal partial interface INetworkFabricPatchablePropertiesInternal

    {
        /// <summary>ASN of CE devices for CE/PE connectivity.</summary>
        long? FabricAsn { get; set; }
        /// <summary>IPv4Prefix for Management Network. Example: 10.1.0.0/19.</summary>
        string Ipv4Prefix { get; set; }
        /// <summary>IPv6Prefix for Management Network. Example: 3FFE:FFFF:0:CD40::/59.</summary>
        string Ipv6Prefix { get; set; }
        /// <summary>Configuration to be used to setup the management network.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagementNetworkConfigurationPatchableProperties ManagementNetworkConfiguration { get; set; }
        /// <summary>Number of compute racks associated to Network Fabric.</summary>
        int? RackCount { get; set; }
        /// <summary>Number of servers.Possible values are from 1-16.</summary>
        int? ServerCountPerRack { get; set; }
        /// <summary>Network and credentials configuration already applied to terminal server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkFabricPatchablePropertiesTerminalServerConfiguration TerminalServerConfiguration { get; set; }
        /// <summary>Password for the terminal server connection.</summary>
        string TerminalServerConfigurationPassword { get; set; }
        /// <summary>IPv4 Address Prefix.</summary>
        string TerminalServerConfigurationPrimaryIpv4Prefix { get; set; }
        /// <summary>IPv6 Address Prefix.</summary>
        string TerminalServerConfigurationPrimaryIpv6Prefix { get; set; }
        /// <summary>Secondary IPv4 Address Prefix.</summary>
        string TerminalServerConfigurationSecondaryIpv4Prefix { get; set; }
        /// <summary>Secondary IPv6 Address Prefix.</summary>
        string TerminalServerConfigurationSecondaryIpv6Prefix { get; set; }
        /// <summary>Serial Number of Terminal server.</summary>
        string TerminalServerConfigurationSerialNumber { get; set; }
        /// <summary>Username for the terminal server connection.</summary>
        string TerminalServerConfigurationUsername { get; set; }

    }
}