// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>IP Community patchable properties.</summary>
    public partial class IPCommunityRule :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityRule,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityRuleInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private string _action;

        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="CommunityMember" /> property.</summary>
        private System.Collections.Generic.List<string> _communityMember;

        /// <summary>List the community members of IP Community.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> CommunityMember { get => this._communityMember; set => this._communityMember = value; }

        /// <summary>Backing field for <see cref="SequenceNumber" /> property.</summary>
        private long _sequenceNumber;

        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long SequenceNumber { get => this._sequenceNumber; set => this._sequenceNumber = value; }

        /// <summary>Backing field for <see cref="WellKnownCommunity" /> property.</summary>
        private System.Collections.Generic.List<string> _wellKnownCommunity;

        /// <summary>Supported well known Community List.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> WellKnownCommunity { get => this._wellKnownCommunity; set => this._wellKnownCommunity = value; }

        /// <summary>Creates an new <see cref="IPCommunityRule" /> instance.</summary>
        public IPCommunityRule()
        {

        }
    }
    /// IP Community patchable properties.
    public partial interface IIPCommunityRule :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Action to be taken on the configuration. Example: Permit | Deny.",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny")]
        string Action { get; set; }
        /// <summary>List the community members of IP Community.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List the community members of IP Community.",
        SerializedName = @"communityMembers",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> CommunityMember { get; set; }
        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that network and the rest of the list is ignored.",
        SerializedName = @"sequenceNumber",
        PossibleTypes = new [] { typeof(long) })]
        long SequenceNumber { get; set; }
        /// <summary>Supported well known Community List.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Supported well known Community List.",
        SerializedName = @"wellKnownCommunities",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Internet", "LocalAS", "NoAdvertise", "NoExport", "GShut")]
        System.Collections.Generic.List<string> WellKnownCommunity { get; set; }

    }
    /// IP Community patchable properties.
    internal partial interface IIPCommunityRuleInternal

    {
        /// <summary>Action to be taken on the configuration. Example: Permit | Deny.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny")]
        string Action { get; set; }
        /// <summary>List the community members of IP Community.</summary>
        System.Collections.Generic.List<string> CommunityMember { get; set; }
        /// <summary>
        /// Sequence to insert to/delete from existing route. Prefix lists are evaluated starting with the lowest sequence number
        /// and continue down the list until a match is made. Once a match is made, the permit or deny statement is applied to that
        /// network and the rest of the list is ignored.
        /// </summary>
        long SequenceNumber { get; set; }
        /// <summary>Supported well known Community List.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Internet", "LocalAS", "NoAdvertise", "NoExport", "GShut")]
        System.Collections.Generic.List<string> WellKnownCommunity { get; set; }

    }
}