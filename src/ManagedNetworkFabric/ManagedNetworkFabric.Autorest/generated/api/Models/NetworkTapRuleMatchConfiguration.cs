// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Defines the match configuration that are supported to filter the traffic.</summary>
    public partial class NetworkTapRuleMatchConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleAction> _action;

        /// <summary>List of actions that need to be performed for the matched conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleAction> Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="IPAddressType" /> property.</summary>
        private string _iPAddressType;

        /// <summary>Type of IP Address. IPv4 or IPv6</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string IPAddressType { get => this._iPAddressType; set => this._iPAddressType = value; }

        /// <summary>Backing field for <see cref="MatchCondition" /> property.</summary>
        private System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchCondition> _matchCondition;

        /// <summary>List of the match conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchCondition> MatchCondition { get => this._matchCondition; set => this._matchCondition = value; }

        /// <summary>Backing field for <see cref="MatchConfigurationName" /> property.</summary>
        private string _matchConfigurationName;

        /// <summary>The name of the match configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public string MatchConfigurationName { get => this._matchConfigurationName; set => this._matchConfigurationName = value; }

        /// <summary>Backing field for <see cref="SequenceNumber" /> property.</summary>
        private long? _sequenceNumber;

        /// <summary>Sequence Number of the match configuration..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long? SequenceNumber { get => this._sequenceNumber; set => this._sequenceNumber = value; }

        /// <summary>Creates an new <see cref="NetworkTapRuleMatchConfiguration" /> instance.</summary>
        public NetworkTapRuleMatchConfiguration()
        {

        }
    }
    /// Defines the match configuration that are supported to filter the traffic.
    public partial interface INetworkTapRuleMatchConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>List of actions that need to be performed for the matched conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of actions that need to be performed for the matched conditions.",
        SerializedName = @"actions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleAction) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleAction> Action { get; set; }
        /// <summary>Type of IP Address. IPv4 or IPv6</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of IP Address. IPv4 or IPv6",
        SerializedName = @"ipAddressType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string IPAddressType { get; set; }
        /// <summary>List of the match conditions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the match conditions.",
        SerializedName = @"matchConditions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchCondition) })]
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchCondition> MatchCondition { get; set; }
        /// <summary>The name of the match configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The name of the match configuration.",
        SerializedName = @"matchConfigurationName",
        PossibleTypes = new [] { typeof(string) })]
        string MatchConfigurationName { get; set; }
        /// <summary>Sequence Number of the match configuration..</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Sequence Number of the match configuration..",
        SerializedName = @"sequenceNumber",
        PossibleTypes = new [] { typeof(long) })]
        long? SequenceNumber { get; set; }

    }
    /// Defines the match configuration that are supported to filter the traffic.
    internal partial interface INetworkTapRuleMatchConfigurationInternal

    {
        /// <summary>List of actions that need to be performed for the matched conditions.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleAction> Action { get; set; }
        /// <summary>Type of IP Address. IPv4 or IPv6</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("IPv4", "IPv6")]
        string IPAddressType { get; set; }
        /// <summary>List of the match conditions.</summary>
        System.Collections.Generic.List<Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.INetworkTapRuleMatchCondition> MatchCondition { get; set; }
        /// <summary>The name of the match configuration.</summary>
        string MatchConfigurationName { get; set; }
        /// <summary>Sequence Number of the match configuration..</summary>
        long? SequenceNumber { get; set; }

    }
}