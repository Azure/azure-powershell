// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Defines the common match conditions of the ACL and Network Tap Rule.</summary>
    public partial class CommonMatchConditions :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ICommonMatchConditions,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ICommonMatchConditionsInternal
    {

        /// <summary>Backing field for <see cref="IPCondition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchCondition _iPCondition;

        /// <summary>IP condition that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchCondition IPCondition { get => (this._iPCondition = this._iPCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IPMatchCondition()); set => this._iPCondition = value; }

        /// <summary>The List of IP Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPConditionIpgroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).IPGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).IPGroupName = value ?? null /* arrayOf */; }

        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPConditionIpprefixValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).IPPrefixValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).IPPrefixValue = value ?? null /* arrayOf */; }

        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string IPConditionPrefixType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).PrefixType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).PrefixType = value ?? null; }

        /// <summary>IP Address type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string IPConditionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchConditionInternal)IPCondition).Type = value ?? null; }

        /// <summary>Internal Acessors for IPCondition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchCondition Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ICommonMatchConditionsInternal.IPCondition { get => (this._iPCondition = this._iPCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IPMatchCondition()); set { {_iPCondition = value;} } }

        /// <summary>Internal Acessors for VlanMatchCondition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchCondition Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ICommonMatchConditionsInternal.VlanMatchCondition { get => (this._vlanMatchCondition = this._vlanMatchCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VlanMatchCondition()); set { {_vlanMatchCondition = value;} } }

        /// <summary>Backing field for <see cref="ProtocolType" /> property.</summary>
        private System.Collections.Generic.List<string> _protocolType;

        /// <summary>List of the protocols that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> ProtocolType { get => this._protocolType; set => this._protocolType = value; }

        /// <summary>Backing field for <see cref="VlanMatchCondition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchCondition _vlanMatchCondition;

        /// <summary>Vlan match condition that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchCondition VlanMatchCondition { get => (this._vlanMatchCondition = this._vlanMatchCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.VlanMatchCondition()); set => this._vlanMatchCondition = value; }

        /// <summary>List of inner vlans that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> VlanMatchConditionInnerVlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).InnerVlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).InnerVlan = value ?? null /* arrayOf */; }

        /// <summary>List of vlans that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> VlanMatchConditionVlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).Vlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).Vlan = value ?? null /* arrayOf */; }

        /// <summary>List of vlan group names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> VlanMatchConditionVlanGroupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).VlanGroupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchConditionInternal)VlanMatchCondition).VlanGroupName = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="CommonMatchConditions" /> instance.</summary>
        public CommonMatchConditions()
        {

        }
    }
    /// Defines the common match conditions of the ACL and Network Tap Rule.
    public partial interface ICommonMatchConditions :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable
    {
        /// <summary>The List of IP Group Names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The List of IP Group Names that need to be matched.",
        SerializedName = @"ipGroupNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPConditionIpgroupName { get; set; }
        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The list of IP Prefixes that need to be matched.",
        SerializedName = @"ipPrefixValues",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPConditionIpprefixValue { get; set; }
        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Prefix Type that needs to be matched.",
        SerializedName = @"prefixType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Prefix", "LongestPrefix")]
        string IPConditionPrefixType { get; set; }
        /// <summary>IP Address type that needs to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"IP Address type that needs to be matched.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourceIP", "DestinationIP")]
        string IPConditionType { get; set; }
        /// <summary>List of the protocols that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of the protocols that need to be matched.",
        SerializedName = @"protocolTypes",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ProtocolType { get; set; }
        /// <summary>List of inner vlans that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of inner vlans that need to be matched.",
        SerializedName = @"innerVlans",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VlanMatchConditionInnerVlan { get; set; }
        /// <summary>List of vlans that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of vlans that need to be matched.",
        SerializedName = @"vlans",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VlanMatchConditionVlan { get; set; }
        /// <summary>List of vlan group names that need to be matched.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of vlan group names that need to be matched.",
        SerializedName = @"vlanGroupNames",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> VlanMatchConditionVlanGroupName { get; set; }

    }
    /// Defines the common match conditions of the ACL and Network Tap Rule.
    internal partial interface ICommonMatchConditionsInternal

    {
        /// <summary>IP condition that needs to be matched.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPMatchCondition IPCondition { get; set; }
        /// <summary>The List of IP Group Names that need to be matched.</summary>
        System.Collections.Generic.List<string> IPConditionIpgroupName { get; set; }
        /// <summary>The list of IP Prefixes that need to be matched.</summary>
        System.Collections.Generic.List<string> IPConditionIpprefixValue { get; set; }
        /// <summary>IP Prefix Type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Prefix", "LongestPrefix")]
        string IPConditionPrefixType { get; set; }
        /// <summary>IP Address type that needs to be matched.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("SourceIP", "DestinationIP")]
        string IPConditionType { get; set; }
        /// <summary>List of the protocols that need to be matched.</summary>
        System.Collections.Generic.List<string> ProtocolType { get; set; }
        /// <summary>Vlan match condition that needs to be matched.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IVlanMatchCondition VlanMatchCondition { get; set; }
        /// <summary>List of inner vlans that need to be matched.</summary>
        System.Collections.Generic.List<string> VlanMatchConditionInnerVlan { get; set; }
        /// <summary>List of vlans that need to be matched.</summary>
        System.Collections.Generic.List<string> VlanMatchConditionVlan { get; set; }
        /// <summary>List of vlan group names that need to be matched.</summary>
        System.Collections.Generic.List<string> VlanMatchConditionVlanGroupName { get; set; }

    }
}