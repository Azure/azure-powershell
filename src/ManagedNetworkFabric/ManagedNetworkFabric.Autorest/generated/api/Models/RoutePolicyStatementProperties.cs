// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Extensions;

    /// <summary>Route Policy Statement properties.</summary>
    public partial class RoutePolicyStatementProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource __annotationResource = new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.AnnotationResource();

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionProperties _action;

        /// <summary>Route policy action properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionProperties Action { get => (this._action = this._action ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.StatementActionProperties()); set => this._action = value; }

        /// <summary>Local Preference of the route policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public long? ActionLocalPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).LocalPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).LocalPreference = value ?? default(long); }

        /// <summary>Action type. Example: Permit | Deny | Continue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string ActionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).ActionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).ActionType = value ; }

        /// <summary>Switch configuration description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inherited)]
        public string Annotation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal)__annotationResource).Annotation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal)__annotationResource).Annotation = value ?? null; }

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionProperties _condition;

        /// <summary>Route policy condition properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionProperties Condition { get => (this._condition = this._condition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.StatementConditionProperties()); set => this._condition = value; }

        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ConditionIPCommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdListInternal)Condition).IPCommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdListInternal)Condition).IPCommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> ConditionIPExtendedCommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdListInternal)Condition).IPExtendedCommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdListInternal)Condition).IPExtendedCommunityId = value ?? null /* arrayOf */; }

        /// <summary>Arm Resource Id of IpPrefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string ConditionIPPrefixId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionPropertiesInternal)Condition).IPPrefixId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionPropertiesInternal)Condition).IPPrefixId = value ?? null; }

        /// <summary>Type of the condition used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public string ConditionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionPropertiesInternal)Condition).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionPropertiesInternal)Condition).Type = value ?? null; }

        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPCommunityPropertyAddIpcommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyAddIpcommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyAddIpcommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPCommunityPropertyDeleteIpcommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyDeleteIpcommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyDeleteIpcommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPCommunityPropertySetIpcommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertySetIpcommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertySetIpcommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPExtendedCommunityPropertyAddIpextendedCommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyAddIpextendedCommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyAddIpextendedCommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPExtendedCommunityPropertyDeleteIpextendedCommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyDeleteIpextendedCommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyDeleteIpextendedCommunityId = value ?? null /* arrayOf */; }

        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Inlined)]
        public System.Collections.Generic.List<string> IPExtendedCommunityPropertySetIpextendedCommunityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertySetIpextendedCommunityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertySetIpextendedCommunityId = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.Action { get => (this._action = this._action ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.StatementActionProperties()); set { {_action = value;} } }

        /// <summary>Internal Acessors for ActionIPCommunityProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IActionIPCommunityProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.ActionIPCommunityProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityProperty = value; }

        /// <summary>Internal Acessors for ActionIPExtendedCommunityProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IActionIPExtendedCommunityProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.ActionIPExtendedCommunityProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityProperty = value; }

        /// <summary>Internal Acessors for Condition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionProperties Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.Condition { get => (this._condition = this._condition ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.StatementConditionProperties()); set { {_condition = value;} } }

        /// <summary>Internal Acessors for IPCommunityPropertyAdd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPCommunityPropertyAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyAdd = value; }

        /// <summary>Internal Acessors for IPCommunityPropertyDelete</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPCommunityPropertyDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertyDelete = value; }

        /// <summary>Internal Acessors for IPCommunityPropertySet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPCommunityPropertySet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertySet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPCommunityPropertySet = value; }

        /// <summary>Internal Acessors for IPExtendedCommunityPropertyAdd</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPExtendedCommunityPropertyAdd { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyAdd; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyAdd = value; }

        /// <summary>Internal Acessors for IPExtendedCommunityPropertyDelete</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPExtendedCommunityPropertyDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertyDelete = value; }

        /// <summary>Internal Acessors for IPExtendedCommunityPropertySet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IRoutePolicyStatementPropertiesInternal.IPExtendedCommunityPropertySet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertySet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionPropertiesInternal)Action).IPExtendedCommunityPropertySet = value; }

        /// <summary>Backing field for <see cref="SequenceNumber" /> property.</summary>
        private long _sequenceNumber;

        /// <summary>Sequence to insert to/delete from existing route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PropertyOrigin.Owned)]
        public long SequenceNumber { get => this._sequenceNumber; set => this._sequenceNumber = value; }

        /// <summary>Creates an new <see cref="RoutePolicyStatementProperties" /> instance.</summary>
        public RoutePolicyStatementProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__annotationResource), __annotationResource);
            await eventListener.AssertObjectIsValid(nameof(__annotationResource), __annotationResource);
        }
    }
    /// Route Policy Statement properties.
    public partial interface IRoutePolicyStatementProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResource
    {
        /// <summary>Local Preference of the route policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Local Preference of the route policy.",
        SerializedName = @"localPreference",
        PossibleTypes = new [] { typeof(long) })]
        long? ActionLocalPreference { get; set; }
        /// <summary>Action type. Example: Permit | Deny | Continue.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Action type. Example: Permit | Deny | Continue.",
        SerializedName = @"actionType",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny", "Continue")]
        string ActionType { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Community resource IDs.",
        SerializedName = @"ipCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ConditionIPCommunityId { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Extended Community resource IDs.",
        SerializedName = @"ipExtendedCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> ConditionIPExtendedCommunityId { get; set; }
        /// <summary>Arm Resource Id of IpPrefix.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Arm Resource Id of IpPrefix.",
        SerializedName = @"ipPrefixId",
        PossibleTypes = new [] { typeof(string) })]
        string ConditionIPPrefixId { get; set; }
        /// <summary>Type of the condition used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Type of the condition used.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Or", "And")]
        string ConditionType { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Community resource IDs.",
        SerializedName = @"ipCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPCommunityPropertyAddIpcommunityId { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Community resource IDs.",
        SerializedName = @"ipCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPCommunityPropertyDeleteIpcommunityId { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Community resource IDs.",
        SerializedName = @"ipCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPCommunityPropertySetIpcommunityId { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Extended Community resource IDs.",
        SerializedName = @"ipExtendedCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPExtendedCommunityPropertyAddIpextendedCommunityId { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Extended Community resource IDs.",
        SerializedName = @"ipExtendedCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPExtendedCommunityPropertyDeleteIpextendedCommunityId { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"List of IP Extended Community resource IDs.",
        SerializedName = @"ipExtendedCommunityIds",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> IPExtendedCommunityPropertySetIpextendedCommunityId { get; set; }
        /// <summary>Sequence to insert to/delete from existing route.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Sequence to insert to/delete from existing route.",
        SerializedName = @"sequenceNumber",
        PossibleTypes = new [] { typeof(long) })]
        long SequenceNumber { get; set; }

    }
    /// Route Policy Statement properties.
    internal partial interface IRoutePolicyStatementPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IAnnotationResourceInternal
    {
        /// <summary>Route policy action properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementActionProperties Action { get; set; }
        /// <summary>IP Community Properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IActionIPCommunityProperties ActionIPCommunityProperty { get; set; }
        /// <summary>IP Extended Community Properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IActionIPExtendedCommunityProperties ActionIPExtendedCommunityProperty { get; set; }
        /// <summary>Local Preference of the route policy.</summary>
        long? ActionLocalPreference { get; set; }
        /// <summary>Action type. Example: Permit | Deny | Continue.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Permit", "Deny", "Continue")]
        string ActionType { get; set; }
        /// <summary>Route policy condition properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IStatementConditionProperties Condition { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        System.Collections.Generic.List<string> ConditionIPCommunityId { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        System.Collections.Generic.List<string> ConditionIPExtendedCommunityId { get; set; }
        /// <summary>Arm Resource Id of IpPrefix.</summary>
        string ConditionIPPrefixId { get; set; }
        /// <summary>Type of the condition used.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.PSArgumentCompleterAttribute("Or", "And")]
        string ConditionType { get; set; }
        /// <summary>List of IP Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList IPCommunityPropertyAdd { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPCommunityPropertyAddIpcommunityId { get; set; }
        /// <summary>List of IP Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList IPCommunityPropertyDelete { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPCommunityPropertyDeleteIpcommunityId { get; set; }
        /// <summary>List of IP Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPCommunityIdList IPCommunityPropertySet { get; set; }
        /// <summary>List of IP Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPCommunityPropertySetIpcommunityId { get; set; }
        /// <summary>List of IP Extended Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList IPExtendedCommunityPropertyAdd { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPExtendedCommunityPropertyAddIpextendedCommunityId { get; set; }
        /// <summary>List of IP Extended Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList IPExtendedCommunityPropertyDelete { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPExtendedCommunityPropertyDeleteIpextendedCommunityId { get; set; }
        /// <summary>List of IP Extended Community IDs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IIPExtendedCommunityIdList IPExtendedCommunityPropertySet { get; set; }
        /// <summary>List of IP Extended Community resource IDs.</summary>
        System.Collections.Generic.List<string> IPExtendedCommunityPropertySetIpextendedCommunityId { get; set; }
        /// <summary>Sequence to insert to/delete from existing route.</summary>
        long SequenceNumber { get; set; }

    }
}