// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.PowerShell;

    [System.ComponentModel.TypeConverter(typeof(ManagedNetworkFabricIdentityTypeConverter))]
    public partial class ManagedNetworkFabricIdentity
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedNetworkFabricIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentity"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentity DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ManagedNetworkFabricIdentity(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedNetworkFabricIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentity"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentity DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ManagedNetworkFabricIdentity(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ManagedNetworkFabricIdentity" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ManagedNetworkFabricIdentity" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentity FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedNetworkFabricIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ManagedNetworkFabricIdentity(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("AccessControlListName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).AccessControlListName = (string) content.GetValueForProperty("AccessControlListName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).AccessControlListName, global::System.Convert.ToString);
            }
            if (content.Contains("InternetGatewayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayName = (string) content.GetValueForProperty("InternetGatewayName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayName, global::System.Convert.ToString);
            }
            if (content.Contains("InternetGatewayRuleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayRuleName = (string) content.GetValueForProperty("InternetGatewayRuleName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayRuleName, global::System.Convert.ToString);
            }
            if (content.Contains("IPCommunityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPCommunityName = (string) content.GetValueForProperty("IPCommunityName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPCommunityName, global::System.Convert.ToString);
            }
            if (content.Contains("IPExtendedCommunityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPExtendedCommunityName = (string) content.GetValueForProperty("IPExtendedCommunityName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPExtendedCommunityName, global::System.Convert.ToString);
            }
            if (content.Contains("IPPrefixName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPPrefixName = (string) content.GetValueForProperty("IPPrefixName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPPrefixName, global::System.Convert.ToString);
            }
            if (content.Contains("L2IsolationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L2IsolationDomainName = (string) content.GetValueForProperty("L2IsolationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L2IsolationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("L3IsolationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L3IsolationDomainName = (string) content.GetValueForProperty("L3IsolationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L3IsolationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("InternalNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternalNetworkName = (string) content.GetValueForProperty("InternalNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternalNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ExternalNetworkName = (string) content.GetValueForProperty("ExternalNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ExternalNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("NeighborGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NeighborGroupName = (string) content.GetValueForProperty("NeighborGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NeighborGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkDeviceSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceSkuName = (string) content.GetValueForProperty("NetworkDeviceSkuName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceName = (string) content.GetValueForProperty("NetworkDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkInterfaceName = (string) content.GetValueForProperty("NetworkInterfaceName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkInterfaceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricControllerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricControllerName = (string) content.GetValueForProperty("NetworkFabricControllerName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricControllerName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricSkuName = (string) content.GetValueForProperty("NetworkFabricSkuName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricName = (string) content.GetValueForProperty("NetworkFabricName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkToNetworkInterconnectName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkToNetworkInterconnectName = (string) content.GetValueForProperty("NetworkToNetworkInterconnectName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkToNetworkInterconnectName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkPacketBrokerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkPacketBrokerName = (string) content.GetValueForProperty("NetworkPacketBrokerName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkPacketBrokerName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkRackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkRackName = (string) content.GetValueForProperty("NetworkRackName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkRackName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkTapRuleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapRuleName = (string) content.GetValueForProperty("NetworkTapRuleName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapRuleName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkTapName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapName = (string) content.GetValueForProperty("NetworkTapName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapName, global::System.Convert.ToString);
            }
            if (content.Contains("RoutePolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).RoutePolicyName = (string) content.GetValueForProperty("RoutePolicyName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).RoutePolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.ManagedNetworkFabricIdentity"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ManagedNetworkFabricIdentity(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ResourceGroupName = (string) content.GetValueForProperty("ResourceGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ResourceGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("AccessControlListName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).AccessControlListName = (string) content.GetValueForProperty("AccessControlListName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).AccessControlListName, global::System.Convert.ToString);
            }
            if (content.Contains("InternetGatewayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayName = (string) content.GetValueForProperty("InternetGatewayName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayName, global::System.Convert.ToString);
            }
            if (content.Contains("InternetGatewayRuleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayRuleName = (string) content.GetValueForProperty("InternetGatewayRuleName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternetGatewayRuleName, global::System.Convert.ToString);
            }
            if (content.Contains("IPCommunityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPCommunityName = (string) content.GetValueForProperty("IPCommunityName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPCommunityName, global::System.Convert.ToString);
            }
            if (content.Contains("IPExtendedCommunityName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPExtendedCommunityName = (string) content.GetValueForProperty("IPExtendedCommunityName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPExtendedCommunityName, global::System.Convert.ToString);
            }
            if (content.Contains("IPPrefixName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPPrefixName = (string) content.GetValueForProperty("IPPrefixName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).IPPrefixName, global::System.Convert.ToString);
            }
            if (content.Contains("L2IsolationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L2IsolationDomainName = (string) content.GetValueForProperty("L2IsolationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L2IsolationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("L3IsolationDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L3IsolationDomainName = (string) content.GetValueForProperty("L3IsolationDomainName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).L3IsolationDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("InternalNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternalNetworkName = (string) content.GetValueForProperty("InternalNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).InternalNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("ExternalNetworkName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ExternalNetworkName = (string) content.GetValueForProperty("ExternalNetworkName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).ExternalNetworkName, global::System.Convert.ToString);
            }
            if (content.Contains("NeighborGroupName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NeighborGroupName = (string) content.GetValueForProperty("NeighborGroupName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NeighborGroupName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkDeviceSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceSkuName = (string) content.GetValueForProperty("NetworkDeviceSkuName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkDeviceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceName = (string) content.GetValueForProperty("NetworkDeviceName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkDeviceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkInterfaceName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkInterfaceName = (string) content.GetValueForProperty("NetworkInterfaceName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkInterfaceName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricControllerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricControllerName = (string) content.GetValueForProperty("NetworkFabricControllerName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricControllerName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricSkuName = (string) content.GetValueForProperty("NetworkFabricSkuName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkFabricName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricName = (string) content.GetValueForProperty("NetworkFabricName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkFabricName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkToNetworkInterconnectName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkToNetworkInterconnectName = (string) content.GetValueForProperty("NetworkToNetworkInterconnectName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkToNetworkInterconnectName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkPacketBrokerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkPacketBrokerName = (string) content.GetValueForProperty("NetworkPacketBrokerName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkPacketBrokerName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkRackName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkRackName = (string) content.GetValueForProperty("NetworkRackName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkRackName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkTapRuleName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapRuleName = (string) content.GetValueForProperty("NetworkTapRuleName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapRuleName, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkTapName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapName = (string) content.GetValueForProperty("NetworkTapName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).NetworkTapName, global::System.Convert.ToString);
            }
            if (content.Contains("RoutePolicyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).RoutePolicyName = (string) content.GetValueForProperty("RoutePolicyName",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).RoutePolicyName, global::System.Convert.ToString);
            }
            if (content.Contains("Id"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).Id = (string) content.GetValueForProperty("Id",((Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Models.IManagedNetworkFabricIdentityInternal)this).Id, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ManagedNetworkFabric.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    [System.ComponentModel.TypeConverter(typeof(ManagedNetworkFabricIdentityTypeConverter))]
    public partial interface IManagedNetworkFabricIdentity

    {

    }
}