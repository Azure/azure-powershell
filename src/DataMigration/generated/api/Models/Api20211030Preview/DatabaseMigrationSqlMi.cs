// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database Migration Resource for SQL Managed Instance.</summary>
    public partial class DatabaseMigrationSqlMi :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMi,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResource __proxyResource = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ProxyResource();

        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string AzureBlobAccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobAccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobAccountKey = value ?? null; }

        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string AzureBlobContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobContainerName = value ?? null; }

        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string AzureBlobStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobStorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).AzureBlobStorageAccountResourceId = value ?? null; }

        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public global::System.DateTime? EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).EndedOn; }

        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string FileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileSharePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileSharePassword = value ?? null; }

        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string FileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileSharePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileSharePath = value ?? null; }

        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string FileShareUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileShareUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).FileShareUsername = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Id; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.FormatTable(Index = 2)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType? Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType)""); }

        /// <summary>Internal Acessors for BackupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IBackupConfiguration Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.BackupConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfiguration = value; }

        /// <summary>Internal Acessors for BackupConfigurationSourceLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.BackupConfigurationSourceLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfigurationSourceLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfigurationSourceLocation = value; }

        /// <summary>Internal Acessors for BackupConfigurationTargetLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ITargetLocation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.BackupConfigurationTargetLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfigurationTargetLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).BackupConfigurationTargetLocation = value; }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).EndedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).EndedOn = value; }

        /// <summary>Internal Acessors for MigrationFailureError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IErrorInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.MigrationFailureError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureError = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorCode = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorMessage = value; }

        /// <summary>Internal Acessors for MigrationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationStatus = value; }

        /// <summary>Internal Acessors for MigrationStatusDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.MigrationStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).MigrationStatusDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).MigrationStatusDetail = value; }

        /// <summary>Internal Acessors for OfflineConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IOfflineConfiguration Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.OfflineConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfiguration = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMi Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.DatabaseMigrationPropertiesSqlMi()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SourceLocationAzureBlob</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.SourceLocationAzureBlob { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).SourceLocationAzureBlob; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).SourceLocationAzureBlob = value; }

        /// <summary>Internal Acessors for SourceLocationFileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.SourceLocationFileShare { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).SourceLocationFileShare; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).SourceLocationFileShare = value; }

        /// <summary>Internal Acessors for SourceSqlConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlConnectionInformation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.SourceSqlConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnection = value; }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).StartedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).StartedOn = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationSqlMiInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SystemData()); set { {_systemData = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Type = value; }

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorCode; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationFailureErrorMessage; }

        /// <summary>ID tracking current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string MigrationOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationOperationId = value ?? null; }

        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string MigrationService { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationService; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationService = value ?? null; }

        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.FormatTable(Index = 4)]
        public string MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).MigrationStatus; }

        /// <summary>Detailed migration status. Not included by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails MigrationStatusDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).MigrationStatusDetail; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.FormatTable(Index = 0)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Name; }

        /// <summary>
        /// Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the
        /// service will determine the last backup file name based on latest backup files present in file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string OfflineConfigurationLastBackupName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfigurationLastBackupName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfigurationLastBackupName = value ?? null; }

        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public bool? OfflineConfigurationOffline { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfigurationOffline; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).OfflineConfigurationOffline = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMi _property;

        /// <summary>Database Migration Resource properties for SQL Managed Instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMi Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.DatabaseMigrationPropertiesSqlMi()); set => this._property = value; }

        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string ProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).ProvisioningError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).ProvisioningError = value ?? null; }

        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.FormatTable(Index = 3)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Resource Id of the target resource (SQL VM or SQL Managed Instance)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SourceDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceDatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceDatabaseName = value ?? null; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SourceSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionAuthentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SourceSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionDataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public bool? SourceSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionEncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionEncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SourceSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionPassword = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public bool? SourceSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionTrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionTrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SourceSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).SourceSqlConnectionUserName = value ?? null; }

        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public global::System.DateTime? StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesInternal)Property).StartedOn; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemData _systemData;

        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SystemData()); }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType)""); }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType)""); }

        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string TargetDatabaseCollation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetDatabaseCollation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetDatabaseCollation = value ?? null; }

        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string TargetLocationAccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetLocationAccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetLocationAccountKey = value ?? null; }

        /// <summary>Resource Id of the storage account copying backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.DoNotFormat]
        public string TargetLocationStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetLocationStorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMiInternal)Property).TargetLocationStorageAccountResourceId = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.FormatTable(Index = 1)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal)__proxyResource).Type; }

        /// <summary>Creates an new <see cref="DatabaseMigrationSqlMi" /> instance.</summary>
        public DatabaseMigrationSqlMi()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResource), __proxyResource);
            await eventListener.AssertObjectIsValid(nameof(__proxyResource), __proxyResource);
        }
    }
    /// Database Migration Resource for SQL Managed Instance.
    public partial interface IDatabaseMigrationSqlMi :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResource
    {
        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage Account Key.",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobAccountKey { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob container name where backups are stored.",
        SerializedName = @"blobContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobContainerName { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the storage account where backups are stored.",
        SerializedName = @"storageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration end time.",
        SerializedName = @"endedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndedOn { get;  }
        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for username to access file share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location as SMB share or local drive where backups are placed.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username to access the file share location for backups.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string FileShareUsername { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType? Kind { get; set; }
        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationFailureErrorCode { get;  }
        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationFailureErrorMessage { get;  }
        /// <summary>ID tracking current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID tracking current migration operation.",
        SerializedName = @"migrationOperationId",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationOperationId { get; set; }
        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the Migration Service.",
        SerializedName = @"migrationService",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationService { get; set; }
        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Migration status.",
        SerializedName = @"migrationStatus",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationStatus { get;  }
        /// <summary>Detailed migration status. Not included by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Detailed migration status. Not included by default.",
        SerializedName = @"migrationStatusDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails MigrationStatusDetail { get;  }
        /// <summary>
        /// Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the
        /// service will determine the last backup file name based on latest backup files present in file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the service will determine the last backup file name based on latest backup files present in file share.",
        SerializedName = @"lastBackupName",
        PossibleTypes = new [] { typeof(string) })]
        string OfflineConfigurationLastBackupName { get; set; }
        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offline migration",
        SerializedName = @"offline",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OfflineConfigurationOffline { get; set; }
        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Error message for migration provisioning failure, if any.",
        SerializedName = @"provisioningError",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningError { get; set; }
        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource Id of the target resource (SQL VM or SQL Managed Instance)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the target resource (SQL VM or SQL Managed Instance)",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the source database.",
        SerializedName = @"sourceDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDatabaseName { get; set; }
        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source.",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt connection or not.",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to source SQL.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust server certificate or not.",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name to connect to source SQL.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration start time.",
        SerializedName = @"startedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedOn { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataCreatedByType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Database collation to be used for the target database.",
        SerializedName = @"targetDatabaseCollation",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDatabaseCollation { get; set; }
        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage Account Key.",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string TargetLocationAccountKey { get; set; }
        /// <summary>Resource Id of the storage account copying backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the storage account copying backups.",
        SerializedName = @"storageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetLocationStorageAccountResourceId { get; set; }

    }
    /// Database Migration Resource for SQL Managed Instance.
    internal partial interface IDatabaseMigrationSqlMiInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IProxyResourceInternal
    {
        /// <summary>Storage Account Key.</summary>
        string AzureBlobAccountKey { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        string AzureBlobContainerName { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Backup configuration info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IBackupConfiguration BackupConfiguration { get; set; }
        /// <summary>Source location of backups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocation BackupConfigurationSourceLocation { get; set; }
        /// <summary>Target location for copying backups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ITargetLocation BackupConfigurationTargetLocation { get; set; }
        /// <summary>Database migration end time.</summary>
        global::System.DateTime? EndedOn { get; set; }
        /// <summary>Password for username to access file share location.</summary>
        string FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        string FileShareUsername { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType? Kind { get; set; }
        /// <summary>Error details in case of migration failure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IErrorInfo MigrationFailureError { get; set; }
        /// <summary>Error code.</summary>
        string MigrationFailureErrorCode { get; set; }
        /// <summary>Error message.</summary>
        string MigrationFailureErrorMessage { get; set; }
        /// <summary>ID tracking current migration operation.</summary>
        string MigrationOperationId { get; set; }
        /// <summary>Resource Id of the Migration Service.</summary>
        string MigrationService { get; set; }
        /// <summary>Migration status.</summary>
        string MigrationStatus { get; set; }
        /// <summary>Detailed migration status. Not included by default.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails MigrationStatusDetail { get; set; }
        /// <summary>Offline configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IOfflineConfiguration OfflineConfiguration { get; set; }
        /// <summary>
        /// Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the
        /// service will determine the last backup file name based on latest backup files present in file share.
        /// </summary>
        string OfflineConfigurationLastBackupName { get; set; }
        /// <summary>Offline migration</summary>
        bool? OfflineConfigurationOffline { get; set; }
        /// <summary>Database Migration Resource properties for SQL Managed Instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IDatabaseMigrationPropertiesSqlMi Property { get; set; }
        /// <summary>Error message for migration provisioning failure, if any.</summary>
        string ProvisioningError { get; set; }
        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource Id of the target resource (SQL VM or SQL Managed Instance)</summary>
        string Scope { get; set; }
        /// <summary>Name of the source database.</summary>
        string SourceDatabaseName { get; set; }
        /// <summary>Source Azure Blob.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob SourceLocationAzureBlob { get; set; }
        /// <summary>Source File share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare SourceLocationFileShare { get; set; }
        /// <summary>Source SQL Server connection details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlConnectionInformation SourceSqlConnection { get; set; }
        /// <summary>Authentication type.</summary>
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        string SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>Database migration start time.</summary>
        global::System.DateTime? StartedOn { get; set; }
        /// <summary>Metadata pertaining to creation and last modification of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISystemData SystemData { get; set; }

        global::System.DateTime? SystemDataCreatedAt { get; set; }

        string SystemDataCreatedBy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataCreatedByType { get; set; }

        global::System.DateTime? SystemDataLastModifiedAt { get; set; }

        string SystemDataLastModifiedBy { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        string TargetDatabaseCollation { get; set; }
        /// <summary>Storage Account Key.</summary>
        string TargetLocationAccountKey { get; set; }
        /// <summary>Resource Id of the storage account copying backups.</summary>
        string TargetLocationStorageAccountResourceId { get; set; }

    }
}