// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Describes how an individual MongoDB database should be migrated
    /// </summary>
    public partial class MongoDbDatabaseSettings
    {
        /// <summary>
        /// Initializes a new instance of the MongoDbDatabaseSettings class.
        /// </summary>
        public MongoDbDatabaseSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MongoDbDatabaseSettings class.
        /// </summary>

        /// <param name="collections">The collections on the source database to migrate to the target. The keys
        /// are the unqualified names of the collections.
        /// </param>

        /// <param name="targetRUs">The RUs that should be configured on a CosmosDB target, or null to use the
        /// default, or 0 if throughput should not be provisioned for the database.
        /// This has no effect on non-CosmosDB targets.
        /// </param>
        public MongoDbDatabaseSettings(System.Collections.Generic.IDictionary<string, MongoDbCollectionSettings> collections, int? targetRUs = default(int?))

        {
            this.Collections = collections;
            this.TargetRUs = targetRUs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the collections on the source database to migrate to the
        /// target. The keys are the unqualified names of the collections.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "collections")]
        public System.Collections.Generic.IDictionary<string, MongoDbCollectionSettings> Collections {get; set; }

        /// <summary>
        /// Gets or sets the RUs that should be configured on a CosmosDB target, or
        /// null to use the default, or 0 if throughput should not be provisioned for
        /// the database. This has no effect on non-CosmosDB targets.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetRUs")]
        public int? TargetRUs {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Collections == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Collections");
            }
            if (this.Collections != null)
            {
                foreach (var valueElement in this.Collections.Values)
                {
                    if (valueElement != null)
                    {
                        valueElement.Validate();
                    }
                }
            }
        }
    }
}