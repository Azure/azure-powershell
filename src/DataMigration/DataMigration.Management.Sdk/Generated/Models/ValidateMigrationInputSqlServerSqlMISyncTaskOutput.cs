// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Output for task that validates migration input for Azure SQL Database
    /// Managed Instance online migration
    /// </summary>
    public partial class ValidateMigrationInputSqlServerSqlMISyncTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the ValidateMigrationInputSqlServerSqlMISyncTaskOutput class.
        /// </summary>
        public ValidateMigrationInputSqlServerSqlMISyncTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ValidateMigrationInputSqlServerSqlMISyncTaskOutput class.
        /// </summary>

        /// <param name="id">Database identifier
        /// </param>

        /// <param name="name">Name of database
        /// </param>

        /// <param name="validationErrors">Errors associated with a selected database object
        /// </param>
        public ValidateMigrationInputSqlServerSqlMISyncTaskOutput(string id = default(string), string name = default(string), System.Collections.Generic.IList<ReportableException> validationErrors = default(System.Collections.Generic.IList<ReportableException>))

        {
            this.Id = id;
            this.Name = name;
            this.ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets database identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets name of database
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets errors associated with a selected database object
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public System.Collections.Generic.IList<ReportableException> ValidationErrors {get; private set; }
    }
}