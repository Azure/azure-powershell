// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Results for schema comparison between the source and target
    /// </summary>
    public partial class SchemaComparisonValidationResult
    {
        /// <summary>
        /// Initializes a new instance of the SchemaComparisonValidationResult class.
        /// </summary>
        public SchemaComparisonValidationResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchemaComparisonValidationResult class.
        /// </summary>

        /// <param name="schemaDifferences">List of schema differences between the source and target databases
        /// </param>

        /// <param name="validationErrors">List of errors that happened while performing schema compare validation
        /// </param>

        /// <param name="sourceDatabaseObjectCount">Count of source database objects
        /// </param>

        /// <param name="targetDatabaseObjectCount">Count of target database objects
        /// </param>
        public SchemaComparisonValidationResult(SchemaComparisonValidationResultType schemaDifferences = default(SchemaComparisonValidationResultType), ValidationError validationErrors = default(ValidationError), System.Collections.Generic.IDictionary<string, long?> sourceDatabaseObjectCount = default(System.Collections.Generic.IDictionary<string, long?>), System.Collections.Generic.IDictionary<string, long?> targetDatabaseObjectCount = default(System.Collections.Generic.IDictionary<string, long?>))

        {
            this.SchemaDifferences = schemaDifferences;
            this.ValidationErrors = validationErrors;
            this.SourceDatabaseObjectCount = sourceDatabaseObjectCount;
            this.TargetDatabaseObjectCount = targetDatabaseObjectCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of schema differences between the source and target
        /// databases
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "schemaDifferences")]
        public SchemaComparisonValidationResultType SchemaDifferences {get; set; }

        /// <summary>
        /// Gets or sets list of errors that happened while performing schema compare
        /// validation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public ValidationError ValidationErrors {get; set; }

        /// <summary>
        /// Gets or sets count of source database objects
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceDatabaseObjectCount")]
        public System.Collections.Generic.IDictionary<string, long?> SourceDatabaseObjectCount {get; set; }

        /// <summary>
        /// Gets or sets count of target database objects
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetDatabaseObjectCount")]
        public System.Collections.Generic.IDictionary<string, long?> TargetDatabaseObjectCount {get; set; }
    }
}