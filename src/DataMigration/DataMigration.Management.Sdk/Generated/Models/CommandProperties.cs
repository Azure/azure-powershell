// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for all types of DMS command properties. If command is not
    /// supported by current client, this object is returned.
    /// </summary>
    [Newtonsoft.Json.JsonObject("CommandProperties")]
    public partial class CommandProperties
    {
        /// <summary>
        /// Initializes a new instance of the CommandProperties class.
        /// </summary>
        public CommandProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommandProperties class.
        /// </summary>

        /// <param name="errors">Array of errors. This is ignored if submitted.
        /// </param>

        /// <param name="state">The state of the command. This is ignored if submitted.
        /// Possible values include: &#39;Unknown&#39;, &#39;Accepted&#39;, &#39;Running&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;</param>
        public CommandProperties(System.Collections.Generic.IList<ODataError> errors = default(System.Collections.Generic.IList<ODataError>), string state = default(string))

        {
            this.Errors = errors;
            this.State = state;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets array of errors. This is ignored if submitted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errors")]
        public System.Collections.Generic.IList<ODataError> Errors {get; private set; }

        /// <summary>
        /// Gets the state of the command. This is ignored if submitted. Possible values include: &#39;Unknown&#39;, &#39;Accepted&#39;, &#39;Running&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }
    }
}