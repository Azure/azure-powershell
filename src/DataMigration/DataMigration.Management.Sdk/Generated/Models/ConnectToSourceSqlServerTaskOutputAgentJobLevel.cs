// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Agent Job level output for the task that validates connection to SQL Server
    /// and also validates source server requirements
    /// </summary>
    [Newtonsoft.Json.JsonObject("AgentJobLevelOutput")]
    public partial class ConnectToSourceSqlServerTaskOutputAgentJobLevel : ConnectToSourceSqlServerTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the ConnectToSourceSqlServerTaskOutputAgentJobLevel class.
        /// </summary>
        public ConnectToSourceSqlServerTaskOutputAgentJobLevel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectToSourceSqlServerTaskOutputAgentJobLevel class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="name">Agent Job name
        /// </param>

        /// <param name="jobCategory">The type of Agent Job.
        /// </param>

        /// <param name="isEnabled">The state of the original Agent Job.
        /// </param>

        /// <param name="jobOwner">The owner of the Agent Job
        /// </param>

        /// <param name="lastExecutedOn">UTC Date and time when the Agent Job was last executed.
        /// </param>

        /// <param name="validationErrors">Validation errors
        /// </param>

        /// <param name="migrationEligibility">Information about eligibility of agent job for migration.
        /// </param>
        public ConnectToSourceSqlServerTaskOutputAgentJobLevel(string id = default(string), string name = default(string), string jobCategory = default(string), bool? isEnabled = default(bool?), string jobOwner = default(string), System.DateTimeOffset? lastExecutedOn = default(System.DateTimeOffset?), System.Collections.Generic.IList<ReportableException> validationErrors = default(System.Collections.Generic.IList<ReportableException>), MigrationEligibilityInfo migrationEligibility = default(MigrationEligibilityInfo))

        : base(id)
        {
            this.Name = name;
            this.JobCategory = jobCategory;
            this.IsEnabled = isEnabled;
            this.JobOwner = jobOwner;
            this.LastExecutedOn = lastExecutedOn;
            this.ValidationErrors = validationErrors;
            this.MigrationEligibility = migrationEligibility;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets agent Job name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the type of Agent Job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobCategory")]
        public string JobCategory {get; private set; }

        /// <summary>
        /// Gets the state of the original Agent Job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled {get; private set; }

        /// <summary>
        /// Gets the owner of the Agent Job
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "jobOwner")]
        public string JobOwner {get; private set; }

        /// <summary>
        /// Gets uTC Date and time when the Agent Job was last executed.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastExecutedOn")]
        public System.DateTimeOffset? LastExecutedOn {get; private set; }

        /// <summary>
        /// Gets validation errors
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public System.Collections.Generic.IList<ReportableException> ValidationErrors {get; private set; }

        /// <summary>
        /// Gets information about eligibility of agent job for migration.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "migrationEligibility")]
        public MigrationEligibilityInfo MigrationEligibility {get; private set; }
    }
}