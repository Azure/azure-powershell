// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Properties for task that migrates SQL Server databases to Azure SQL
    /// Database Managed Instance
    /// </summary>
    [Newtonsoft.Json.JsonObject("Migrate.SqlServer.AzureSqlDbMI")]
    public partial class MigrateSqlServerSqlMITaskProperties : ProjectTaskProperties
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMITaskProperties class.
        /// </summary>
        public MigrateSqlServerSqlMITaskProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMITaskProperties class.
        /// </summary>

        /// <param name="errors">Array of errors. This is ignored if submitted.
        /// </param>

        /// <param name="state">The state of the task. This is ignored if submitted.
        /// Possible values include: &#39;Unknown&#39;, &#39;Queued&#39;, &#39;Running&#39;, &#39;Canceled&#39;,
        /// &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;FailedInputValidation&#39;, &#39;Faulted&#39;</param>

        /// <param name="commands">Array of command properties.
        /// </param>

        /// <param name="clientData">Key value pairs of client data to attach meta data information to task
        /// </param>

        /// <param name="input">Task input
        /// </param>

        /// <param name="output">Task output. This is ignored if submitted.
        /// </param>
        public MigrateSqlServerSqlMITaskProperties(System.Collections.Generic.IList<ODataError> errors = default(System.Collections.Generic.IList<ODataError>), string state = default(string), System.Collections.Generic.IList<CommandProperties> commands = default(System.Collections.Generic.IList<CommandProperties>), System.Collections.Generic.IDictionary<string, string> clientData = default(System.Collections.Generic.IDictionary<string, string>), MigrateSqlServerSqlMITaskInput input = default(MigrateSqlServerSqlMITaskInput), System.Collections.Generic.IList<MigrateSqlServerSqlMITaskOutput> output = default(System.Collections.Generic.IList<MigrateSqlServerSqlMITaskOutput>))

        : base(errors, state, commands, clientData)
        {
            this.Input = input;
            this.Output = output;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets task input
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "input")]
        public MigrateSqlServerSqlMITaskInput Input {get; set; }

        /// <summary>
        /// Gets task output. This is ignored if submitted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "output")]
        public System.Collections.Generic.IList<MigrateSqlServerSqlMITaskOutput> Output {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.Input != null)
            {
                this.Input.Validate();
            }

        }
    }
}