// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Information of backup set
    /// </summary>
    public partial class BackupSetInfo
    {
        /// <summary>
        /// Initializes a new instance of the BackupSetInfo class.
        /// </summary>
        public BackupSetInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BackupSetInfo class.
        /// </summary>

        /// <param name="backupSetId">Id for the set of backup files
        /// </param>

        /// <param name="firstLsn">First log sequence number of the backup file
        /// </param>

        /// <param name="lastLsn">Last log sequence number of the backup file
        /// </param>

        /// <param name="lastModifiedTime">Last modified time of the backup file in share location
        /// </param>

        /// <param name="backupType">Enum of the different backup types
        /// Possible values include: &#39;Database&#39;, &#39;TransactionLog&#39;, &#39;File&#39;,
        /// &#39;DifferentialDatabase&#39;, &#39;DifferentialFile&#39;, &#39;Partial&#39;,
        /// &#39;DifferentialPartial&#39;</param>

        /// <param name="listOfBackupFiles">List of files in the backup set
        /// </param>

        /// <param name="databaseName">Name of the database to which the backup set belongs
        /// </param>

        /// <param name="backupStartDate">Date and time that the backup operation began
        /// </param>

        /// <param name="backupFinishedDate">Date and time that the backup operation finished
        /// </param>

        /// <param name="isBackupRestored">Whether the backup set is restored or not
        /// </param>
        public BackupSetInfo(string backupSetId = default(string), string firstLsn = default(string), string lastLsn = default(string), System.DateTimeOffset? lastModifiedTime = default(System.DateTimeOffset?), string backupType = default(string), System.Collections.Generic.IList<BackupFileInfo> listOfBackupFiles = default(System.Collections.Generic.IList<BackupFileInfo>), string databaseName = default(string), System.DateTimeOffset? backupStartDate = default(System.DateTimeOffset?), System.DateTimeOffset? backupFinishedDate = default(System.DateTimeOffset?), bool? isBackupRestored = default(bool?))

        {
            this.BackupSetId = backupSetId;
            this.FirstLsn = firstLsn;
            this.LastLsn = lastLsn;
            this.LastModifiedTime = lastModifiedTime;
            this.BackupType = backupType;
            this.ListOfBackupFiles = listOfBackupFiles;
            this.DatabaseName = databaseName;
            this.BackupStartDate = backupStartDate;
            this.BackupFinishedDate = backupFinishedDate;
            this.IsBackupRestored = isBackupRestored;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets id for the set of backup files
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupSetId")]
        public string BackupSetId {get; set; }

        /// <summary>
        /// Gets or sets first log sequence number of the backup file
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "firstLsn")]
        public string FirstLsn {get; set; }

        /// <summary>
        /// Gets or sets last log sequence number of the backup file
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastLsn")]
        public string LastLsn {get; set; }

        /// <summary>
        /// Gets or sets last modified time of the backup file in share location
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastModifiedTime")]
        public System.DateTimeOffset? LastModifiedTime {get; set; }

        /// <summary>
        /// Gets or sets enum of the different backup types Possible values include: &#39;Database&#39;, &#39;TransactionLog&#39;, &#39;File&#39;, &#39;DifferentialDatabase&#39;, &#39;DifferentialFile&#39;, &#39;Partial&#39;, &#39;DifferentialPartial&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupType")]
        public string BackupType {get; set; }

        /// <summary>
        /// Gets or sets list of files in the backup set
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "listOfBackupFiles")]
        public System.Collections.Generic.IList<BackupFileInfo> ListOfBackupFiles {get; set; }

        /// <summary>
        /// Gets or sets name of the database to which the backup set belongs
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName {get; set; }

        /// <summary>
        /// Gets or sets date and time that the backup operation began
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupStartDate")]
        public System.DateTimeOffset? BackupStartDate {get; set; }

        /// <summary>
        /// Gets or sets date and time that the backup operation finished
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupFinishedDate")]
        public System.DateTimeOffset? BackupFinishedDate {get; set; }

        /// <summary>
        /// Gets or sets whether the backup set is restored or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isBackupRestored")]
        public bool? IsBackupRestored {get; set; }
    }
}