// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Table properties
    /// </summary>
    public partial class DatabaseTable
    {
        /// <summary>
        /// Initializes a new instance of the DatabaseTable class.
        /// </summary>
        public DatabaseTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatabaseTable class.
        /// </summary>

        /// <param name="hasRows">Indicates whether table is empty or not
        /// </param>

        /// <param name="name">Schema-qualified name of the table
        /// </param>
        public DatabaseTable(bool? hasRows = default(bool?), string name = default(string))

        {
            this.HasRows = hasRows;
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets indicates whether table is empty or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hasRows")]
        public bool? HasRows {get; private set; }

        /// <summary>
        /// Gets schema-qualified name of the table
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }
    }
}