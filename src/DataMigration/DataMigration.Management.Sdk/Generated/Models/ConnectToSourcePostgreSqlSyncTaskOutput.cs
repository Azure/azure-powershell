// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Output for the task that validates connection to PostgreSQL and source
    /// server requirements
    /// </summary>
    public partial class ConnectToSourcePostgreSqlSyncTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the ConnectToSourcePostgreSqlSyncTaskOutput class.
        /// </summary>
        public ConnectToSourcePostgreSqlSyncTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectToSourcePostgreSqlSyncTaskOutput class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="sourceServerVersion">Version of the source server
        /// </param>

        /// <param name="databases">List of databases on source server
        /// </param>

        /// <param name="sourceServerBrandVersion">Source server brand version
        /// </param>

        /// <param name="validationErrors">Validation errors associated with the task
        /// </param>
        public ConnectToSourcePostgreSqlSyncTaskOutput(string id = default(string), string sourceServerVersion = default(string), System.Collections.Generic.IList<string> databases = default(System.Collections.Generic.IList<string>), string sourceServerBrandVersion = default(string), System.Collections.Generic.IList<ReportableException> validationErrors = default(System.Collections.Generic.IList<ReportableException>))

        {
            this.Id = id;
            this.SourceServerVersion = sourceServerVersion;
            this.Databases = databases;
            this.SourceServerBrandVersion = sourceServerBrandVersion;
            this.ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets result identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets version of the source server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceServerVersion")]
        public string SourceServerVersion {get; private set; }

        /// <summary>
        /// Gets list of databases on source server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databases")]
        public System.Collections.Generic.IList<string> Databases {get; private set; }

        /// <summary>
        /// Gets source server brand version
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceServerBrandVersion")]
        public string SourceServerBrandVersion {get; private set; }

        /// <summary>
        /// Gets validation errors associated with the task
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public System.Collections.Generic.IList<ReportableException> ValidationErrors {get; private set; }
    }
}