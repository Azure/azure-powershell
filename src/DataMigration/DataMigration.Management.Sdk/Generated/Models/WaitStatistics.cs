// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Wait statistics gathered during query batch execution
    /// </summary>
    public partial class WaitStatistics
    {
        /// <summary>
        /// Initializes a new instance of the WaitStatistics class.
        /// </summary>
        public WaitStatistics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WaitStatistics class.
        /// </summary>

        /// <param name="waitType">Type of the Wait
        /// </param>

        /// <param name="waitTimeMS">Total wait time in millisecond(s)
        /// </param>

        /// <param name="waitCount">Total no. of waits
        /// </param>
        public WaitStatistics(string waitType = default(string), double? waitTimeMS = default(double?), long? waitCount = default(long?))

        {
            this.WaitType = waitType;
            this.WaitTimeMS = waitTimeMS;
            this.WaitCount = waitCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets type of the Wait
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "waitType")]
        public string WaitType {get; set; }

        /// <summary>
        /// Gets or sets total wait time in millisecond(s)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "waitTimeMs")]
        public double? WaitTimeMS {get; set; }

        /// <summary>
        /// Gets or sets total no. of waits
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "waitCount")]
        public long? WaitCount {get; set; }
    }
}