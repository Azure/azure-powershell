// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Base class for non sql migration task output
    /// </summary>
    public partial class NonSqlMigrationTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the NonSqlMigrationTaskOutput class.
        /// </summary>
        public NonSqlMigrationTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NonSqlMigrationTaskOutput class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="startedOn">Migration start time
        /// </param>

        /// <param name="endedOn">Migration end time
        /// </param>

        /// <param name="status">Current state of migration
        /// Possible values include: &#39;Default&#39;, &#39;Connecting&#39;,
        /// &#39;SourceAndTargetSelected&#39;, &#39;SelectLogins&#39;, &#39;Configured&#39;, &#39;Running&#39;,
        /// &#39;Error&#39;, &#39;Stopped&#39;, &#39;Completed&#39;, &#39;CompletedWithWarnings&#39;</param>

        /// <param name="dataMigrationTableResults">Results of the migration. The key contains the table name and the value the
        /// table result object
        /// </param>

        /// <param name="progressMessage">Message about the progress of the migration
        /// </param>

        /// <param name="sourceServerName">Name of source server
        /// </param>

        /// <param name="targetServerName">Name of target server
        /// </param>
        public NonSqlMigrationTaskOutput(string id = default(string), System.DateTimeOffset? startedOn = default(System.DateTimeOffset?), System.DateTimeOffset? endedOn = default(System.DateTimeOffset?), string status = default(string), System.Collections.Generic.IDictionary<string, NonSqlDataMigrationTableResult> dataMigrationTableResults = default(System.Collections.Generic.IDictionary<string, NonSqlDataMigrationTableResult>), string progressMessage = default(string), string sourceServerName = default(string), string targetServerName = default(string))

        {
            this.Id = id;
            this.StartedOn = startedOn;
            this.EndedOn = endedOn;
            this.Status = status;
            this.DataMigrationTableResults = dataMigrationTableResults;
            this.ProgressMessage = progressMessage;
            this.SourceServerName = sourceServerName;
            this.TargetServerName = targetServerName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets result identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets migration start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startedOn")]
        public System.DateTimeOffset? StartedOn {get; private set; }

        /// <summary>
        /// Gets migration end time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endedOn")]
        public System.DateTimeOffset? EndedOn {get; private set; }

        /// <summary>
        /// Gets current state of migration Possible values include: &#39;Default&#39;, &#39;Connecting&#39;, &#39;SourceAndTargetSelected&#39;, &#39;SelectLogins&#39;, &#39;Configured&#39;, &#39;Running&#39;, &#39;Error&#39;, &#39;Stopped&#39;, &#39;Completed&#39;, &#39;CompletedWithWarnings&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets results of the migration. The key contains the table name and the
        /// value the table result object
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dataMigrationTableResults")]
        public System.Collections.Generic.IDictionary<string, NonSqlDataMigrationTableResult> DataMigrationTableResults {get; private set; }

        /// <summary>
        /// Gets message about the progress of the migration
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "progressMessage")]
        public string ProgressMessage {get; private set; }

        /// <summary>
        /// Gets name of source server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceServerName")]
        public string SourceServerName {get; private set; }

        /// <summary>
        /// Gets name of target server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetServerName")]
        public string TargetServerName {get; private set; }
    }
}