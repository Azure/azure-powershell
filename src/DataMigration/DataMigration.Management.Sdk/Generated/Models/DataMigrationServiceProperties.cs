// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the Database Migration Service instance
    /// </summary>
    public partial class DataMigrationServiceProperties
    {
        /// <summary>
        /// Initializes a new instance of the DataMigrationServiceProperties class.
        /// </summary>
        public DataMigrationServiceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMigrationServiceProperties class.
        /// </summary>

        /// <param name="provisioningState">The resource&#39;s provisioning state
        /// Possible values include: &#39;Accepted&#39;, &#39;Deleting&#39;, &#39;Deploying&#39;, &#39;Stopped&#39;,
        /// &#39;Stopping&#39;, &#39;Starting&#39;, &#39;FailedToStart&#39;, &#39;FailedToStop&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;</param>

        /// <param name="publicKey">The public key of the service, used to encrypt secrets sent to the service
        /// </param>

        /// <param name="virtualSubnetId">The ID of the Microsoft.Network/virtualNetworks/subnets resource to which
        /// the service should be joined
        /// </param>
        public DataMigrationServiceProperties(string virtualSubnetId, string provisioningState = default(string), string publicKey = default(string))

        {
            this.ProvisioningState = provisioningState;
            this.PublicKey = publicKey;
            this.VirtualSubnetId = virtualSubnetId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the resource&#39;s provisioning state Possible values include: &#39;Accepted&#39;, &#39;Deleting&#39;, &#39;Deploying&#39;, &#39;Stopped&#39;, &#39;Stopping&#39;, &#39;Starting&#39;, &#39;FailedToStart&#39;, &#39;FailedToStop&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the public key of the service, used to encrypt secrets sent to
        /// the service
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicKey")]
        public string PublicKey {get; set; }

        /// <summary>
        /// Gets or sets the ID of the Microsoft.Network/virtualNetworks/subnets
        /// resource to which the service should be joined
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualSubnetId")]
        public string VirtualSubnetId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VirtualSubnetId == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "VirtualSubnetId");
            }



        }
    }
}