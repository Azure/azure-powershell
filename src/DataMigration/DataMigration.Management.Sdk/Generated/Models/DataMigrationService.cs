// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// A Database Migration Service resource
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class DataMigrationService : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the DataMigrationService class.
        /// </summary>
        public DataMigrationService()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMigrationService class.
        /// </summary>

        /// <param name="id">Resource ID.
        /// </param>

        /// <param name="name">Resource name.
        /// </param>

        /// <param name="type">Resource type.
        /// </param>

        /// <param name="tags">Resource tags.
        /// </param>

        /// <param name="location">Resource location.
        /// </param>

        /// <param name="etag">HTTP strong entity tag value. Ignored if submitted
        /// </param>

        /// <param name="kind">The resource kind. Only &#39;vm&#39; (the default) is supported.
        /// </param>

        /// <param name="sku">Service SKU
        /// </param>

        /// <param name="provisioningState">The resource&#39;s provisioning state
        /// Possible values include: &#39;Accepted&#39;, &#39;Deleting&#39;, &#39;Deploying&#39;, &#39;Stopped&#39;,
        /// &#39;Stopping&#39;, &#39;Starting&#39;, &#39;FailedToStart&#39;, &#39;FailedToStop&#39;, &#39;Succeeded&#39;,
        /// &#39;Failed&#39;</param>

        /// <param name="publicKey">The public key of the service, used to encrypt secrets sent to the service
        /// </param>

        /// <param name="virtualSubnetId">The ID of the Microsoft.Network/virtualNetworks/subnets resource to which
        /// the service should be joined
        /// </param>
        public DataMigrationService(string location, string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IDictionary<string, string> tags = default(System.Collections.Generic.IDictionary<string, string>), string etag = default(string), string kind = default(string), ServiceSku sku = default(ServiceSku), string provisioningState = default(string), string publicKey = default(string), string virtualSubnetId = default(string))

        : base(location, id, name, type, tags)
        {
            this.Etag = etag;
            this.Kind = kind;
            this.Sku = sku;
            this.ProvisioningState = provisioningState;
            this.PublicKey = publicKey;
            this.VirtualSubnetId = virtualSubnetId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets hTTP strong entity tag value. Ignored if submitted
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "etag")]
        public string Etag {get; set; }

        /// <summary>
        /// Gets or sets the resource kind. Only &#39;vm&#39; (the default) is supported.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; set; }

        /// <summary>
        /// Gets or sets service SKU
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sku")]
        public ServiceSku Sku {get; set; }

        /// <summary>
        /// Gets the resource&#39;s provisioning state Possible values include: &#39;Accepted&#39;, &#39;Deleting&#39;, &#39;Deploying&#39;, &#39;Stopped&#39;, &#39;Stopping&#39;, &#39;Starting&#39;, &#39;FailedToStart&#39;, &#39;FailedToStop&#39;, &#39;Succeeded&#39;, &#39;Failed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets or sets the public key of the service, used to encrypt secrets sent to
        /// the service
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publicKey")]
        public string PublicKey {get; set; }

        /// <summary>
        /// Gets or sets the ID of the Microsoft.Network/virtualNetworks/subnets
        /// resource to which the service should be joined
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualSubnetId")]
        public string VirtualSubnetId {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();






        }
    }
}