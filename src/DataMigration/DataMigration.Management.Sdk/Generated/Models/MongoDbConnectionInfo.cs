// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a connection to a MongoDB data source
    /// </summary>
    [Newtonsoft.Json.JsonObject("MongoDbConnectionInfo")]
    public partial class MongoDbConnectionInfo : ConnectionInfo
    {
        /// <summary>
        /// Initializes a new instance of the MongoDbConnectionInfo class.
        /// </summary>
        public MongoDbConnectionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MongoDbConnectionInfo class.
        /// </summary>

        /// <param name="userName">User name
        /// </param>

        /// <param name="password">Password credential.
        /// </param>

        /// <param name="connectionString">A MongoDB connection string or blob container URL. The user name and
        /// password can be specified here or in the userName and password properties
        /// </param>
        public MongoDbConnectionInfo(string connectionString, string userName = default(string), string password = default(string))

        : base(userName, password)
        {
            this.ConnectionString = connectionString;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets a MongoDB connection string or blob container URL. The user
        /// name and password can be specified here or in the userName and password
        /// properties
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ConnectionString == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ConnectionString");
            }

        }
    }
}