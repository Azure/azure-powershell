// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    [Newtonsoft.Json.JsonObject("AgentJobLevelOutput")]
    public partial class MigrateSqlServerSqlMITaskOutputAgentJobLevel : MigrateSqlServerSqlMITaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMITaskOutputAgentJobLevel class.
        /// </summary>
        public MigrateSqlServerSqlMITaskOutputAgentJobLevel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMITaskOutputAgentJobLevel class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="name">Agent Job name.
        /// </param>

        /// <param name="isEnabled">The state of the original Agent Job.
        /// </param>

        /// <param name="state">Current state of migration
        /// Possible values include: &#39;None&#39;, &#39;InProgress&#39;, &#39;Failed&#39;, &#39;Warning&#39;,
        /// &#39;Completed&#39;, &#39;Skipped&#39;, &#39;Stopped&#39;</param>

        /// <param name="startedOn">Migration start time
        /// </param>

        /// <param name="endedOn">Migration end time
        /// </param>

        /// <param name="message">Migration progress message
        /// </param>

        /// <param name="exceptionsAndWarnings">Migration errors and warnings per job
        /// </param>
        public MigrateSqlServerSqlMITaskOutputAgentJobLevel(string id = default(string), string name = default(string), bool? isEnabled = default(bool?), string state = default(string), System.DateTimeOffset? startedOn = default(System.DateTimeOffset?), System.DateTimeOffset? endedOn = default(System.DateTimeOffset?), string message = default(string), System.Collections.Generic.IList<ReportableException> exceptionsAndWarnings = default(System.Collections.Generic.IList<ReportableException>))

        : base(id)
        {
            this.Name = name;
            this.IsEnabled = isEnabled;
            this.State = state;
            this.StartedOn = startedOn;
            this.EndedOn = endedOn;
            this.Message = message;
            this.ExceptionsAndWarnings = exceptionsAndWarnings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets agent Job name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets the state of the original Agent Job.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isEnabled")]
        public bool? IsEnabled {get; private set; }

        /// <summary>
        /// Gets current state of migration Possible values include: &#39;None&#39;, &#39;InProgress&#39;, &#39;Failed&#39;, &#39;Warning&#39;, &#39;Completed&#39;, &#39;Skipped&#39;, &#39;Stopped&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; private set; }

        /// <summary>
        /// Gets migration start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startedOn")]
        public System.DateTimeOffset? StartedOn {get; private set; }

        /// <summary>
        /// Gets migration end time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endedOn")]
        public System.DateTimeOffset? EndedOn {get; private set; }

        /// <summary>
        /// Gets migration progress message
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "message")]
        public string Message {get; private set; }

        /// <summary>
        /// Gets migration errors and warnings per job
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exceptionsAndWarnings")]
        public System.Collections.Generic.IList<ReportableException> ExceptionsAndWarnings {get; private set; }
    }
}