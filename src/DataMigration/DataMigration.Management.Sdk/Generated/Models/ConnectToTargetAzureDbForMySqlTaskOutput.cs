// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Output for the task that validates connection to Azure Database for MySQL
    /// and target server requirements
    /// </summary>
    public partial class ConnectToTargetAzureDbForMySqlTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the ConnectToTargetAzureDbForMySqlTaskOutput class.
        /// </summary>
        public ConnectToTargetAzureDbForMySqlTaskOutput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConnectToTargetAzureDbForMySqlTaskOutput class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="serverVersion">Version of the target server
        /// </param>

        /// <param name="databases">List of databases on target server
        /// </param>

        /// <param name="targetServerBrandVersion">Target server brand version
        /// </param>

        /// <param name="validationErrors">Validation errors associated with the task
        /// </param>
        public ConnectToTargetAzureDbForMySqlTaskOutput(string id = default(string), string serverVersion = default(string), System.Collections.Generic.IList<string> databases = default(System.Collections.Generic.IList<string>), string targetServerBrandVersion = default(string), System.Collections.Generic.IList<ReportableException> validationErrors = default(System.Collections.Generic.IList<ReportableException>))

        {
            this.Id = id;
            this.ServerVersion = serverVersion;
            this.Databases = databases;
            this.TargetServerBrandVersion = targetServerBrandVersion;
            this.ValidationErrors = validationErrors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets result identifier
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets version of the target server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serverVersion")]
        public string ServerVersion {get; private set; }

        /// <summary>
        /// Gets list of databases on target server
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databases")]
        public System.Collections.Generic.IList<string> Databases {get; private set; }

        /// <summary>
        /// Gets target server brand version
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetServerBrandVersion")]
        public string TargetServerBrandVersion {get; private set; }

        /// <summary>
        /// Gets validation errors associated with the task
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "validationErrors")]
        public System.Collections.Generic.IList<ReportableException> ValidationErrors {get; private set; }
    }
}