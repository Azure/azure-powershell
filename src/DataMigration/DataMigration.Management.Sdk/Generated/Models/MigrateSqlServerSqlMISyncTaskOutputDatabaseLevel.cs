// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    [Newtonsoft.Json.JsonObject("DatabaseLevelOutput")]
    public partial class MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel : MigrateSqlServerSqlMISyncTaskOutput
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel class.
        /// </summary>
        public MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel class.
        /// </summary>

        /// <param name="id">Result identifier
        /// </param>

        /// <param name="sourceDatabaseName">Name of the database
        /// </param>

        /// <param name="migrationState">Current state of database
        /// Possible values include: &#39;UNDEFINED&#39;, &#39;INITIAL&#39;,
        /// &#39;FULL_BACKUP_UPLOAD_START&#39;, &#39;LOG_SHIPPING_START&#39;, &#39;UPLOAD_LOG_FILES_START&#39;,
        /// &#39;CUTOVER_START&#39;, &#39;POST_CUTOVER_COMPLETE&#39;, &#39;COMPLETED&#39;, &#39;CANCELLED&#39;,
        /// &#39;FAILED&#39;</param>

        /// <param name="startedOn">Database migration start time
        /// </param>

        /// <param name="endedOn">Database migration end time
        /// </param>

        /// <param name="fullBackupSetInfo">Details of full backup set
        /// </param>

        /// <param name="lastRestoredBackupSetInfo">Last applied backup set information
        /// </param>

        /// <param name="activeBackupSets">Backup sets that are currently active (Either being uploaded or getting
        /// restored)
        /// </param>

        /// <param name="containerName">Name of container created in the Azure Storage account where backups are
        /// copied to
        /// </param>

        /// <param name="errorPrefix">prefix string to use for querying errors for this database
        /// </param>

        /// <param name="isFullBackupRestored">Whether full backup has been applied to the target database or not
        /// </param>

        /// <param name="exceptionsAndWarnings">Migration exceptions and warnings
        /// </param>
        public MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel(string id = default(string), string sourceDatabaseName = default(string), string migrationState = default(string), System.DateTimeOffset? startedOn = default(System.DateTimeOffset?), System.DateTimeOffset? endedOn = default(System.DateTimeOffset?), BackupSetInfo fullBackupSetInfo = default(BackupSetInfo), BackupSetInfo lastRestoredBackupSetInfo = default(BackupSetInfo), System.Collections.Generic.IList<BackupSetInfo> activeBackupSets = default(System.Collections.Generic.IList<BackupSetInfo>), string containerName = default(string), string errorPrefix = default(string), bool? isFullBackupRestored = default(bool?), System.Collections.Generic.IList<ReportableException> exceptionsAndWarnings = default(System.Collections.Generic.IList<ReportableException>))

        : base(id)
        {
            this.SourceDatabaseName = sourceDatabaseName;
            this.MigrationState = migrationState;
            this.StartedOn = startedOn;
            this.EndedOn = endedOn;
            this.FullBackupSetInfo = fullBackupSetInfo;
            this.LastRestoredBackupSetInfo = lastRestoredBackupSetInfo;
            this.ActiveBackupSets = activeBackupSets;
            this.ContainerName = containerName;
            this.ErrorPrefix = errorPrefix;
            this.IsFullBackupRestored = isFullBackupRestored;
            this.ExceptionsAndWarnings = exceptionsAndWarnings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets name of the database
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceDatabaseName")]
        public string SourceDatabaseName {get; private set; }

        /// <summary>
        /// Gets current state of database Possible values include: &#39;UNDEFINED&#39;, &#39;INITIAL&#39;, &#39;FULL_BACKUP_UPLOAD_START&#39;, &#39;LOG_SHIPPING_START&#39;, &#39;UPLOAD_LOG_FILES_START&#39;, &#39;CUTOVER_START&#39;, &#39;POST_CUTOVER_COMPLETE&#39;, &#39;COMPLETED&#39;, &#39;CANCELLED&#39;, &#39;FAILED&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "migrationState")]
        public string MigrationState {get; private set; }

        /// <summary>
        /// Gets database migration start time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "startedOn")]
        public System.DateTimeOffset? StartedOn {get; private set; }

        /// <summary>
        /// Gets database migration end time
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "endedOn")]
        public System.DateTimeOffset? EndedOn {get; private set; }

        /// <summary>
        /// Gets details of full backup set
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "fullBackupSetInfo")]
        public BackupSetInfo FullBackupSetInfo {get; private set; }

        /// <summary>
        /// Gets last applied backup set information
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "lastRestoredBackupSetInfo")]
        public BackupSetInfo LastRestoredBackupSetInfo {get; private set; }

        /// <summary>
        /// Gets backup sets that are currently active (Either being uploaded or
        /// getting restored)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "activeBackupSets")]
        public System.Collections.Generic.IList<BackupSetInfo> ActiveBackupSets {get; private set; }

        /// <summary>
        /// Gets name of container created in the Azure Storage account where backups
        /// are copied to
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "containerName")]
        public string ContainerName {get; private set; }

        /// <summary>
        /// Gets prefix string to use for querying errors for this database
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "errorPrefix")]
        public string ErrorPrefix {get; private set; }

        /// <summary>
        /// Gets whether full backup has been applied to the target database or not
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isFullBackupRestored")]
        public bool? IsFullBackupRestored {get; private set; }

        /// <summary>
        /// Gets migration exceptions and warnings
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exceptionsAndWarnings")]
        public System.Collections.Generic.IList<ReportableException> ExceptionsAndWarnings {get; private set; }
    }
}