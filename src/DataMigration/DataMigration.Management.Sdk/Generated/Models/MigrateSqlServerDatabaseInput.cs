// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Database specific information for SQL to SQL migration task inputs
    /// </summary>
    public partial class MigrateSqlServerDatabaseInput
    {
        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerDatabaseInput class.
        /// </summary>
        public MigrateSqlServerDatabaseInput()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MigrateSqlServerDatabaseInput class.
        /// </summary>

        /// <param name="name">Name of the database
        /// </param>

        /// <param name="restoreDatabaseName">Name of the database at destination
        /// </param>

        /// <param name="backupAndRestoreFolder">The backup and restore folder
        /// </param>

        /// <param name="databaseFiles">The list of database files
        /// </param>
        public MigrateSqlServerDatabaseInput(string name = default(string), string restoreDatabaseName = default(string), string backupAndRestoreFolder = default(string), System.Collections.Generic.IList<DatabaseFileInput> databaseFiles = default(System.Collections.Generic.IList<DatabaseFileInput>))

        {
            this.Name = name;
            this.RestoreDatabaseName = restoreDatabaseName;
            this.BackupAndRestoreFolder = backupAndRestoreFolder;
            this.DatabaseFiles = databaseFiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the database
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets name of the database at destination
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "restoreDatabaseName")]
        public string RestoreDatabaseName {get; set; }

        /// <summary>
        /// Gets or sets the backup and restore folder
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "backupAndRestoreFolder")]
        public string BackupAndRestoreFolder {get; set; }

        /// <summary>
        /// Gets or sets the list of database files
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "databaseFiles")]
        public System.Collections.Generic.IList<DatabaseFileInput> DatabaseFiles {get; set; }
    }
}