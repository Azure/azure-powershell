// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration.Models
{
    using System.Linq;

    /// <summary>
    /// Common metadata for migration projects
    /// </summary>
    public partial class DataMigrationProjectMetadata
    {
        /// <summary>
        /// Initializes a new instance of the DataMigrationProjectMetadata class.
        /// </summary>
        public DataMigrationProjectMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataMigrationProjectMetadata class.
        /// </summary>

        /// <param name="sourceServerName">Source server name
        /// </param>

        /// <param name="sourceServerPort">Source server port number
        /// </param>

        /// <param name="sourceUsername">Source username
        /// </param>

        /// <param name="targetServerName">Target server name
        /// </param>

        /// <param name="targetUsername">Target username
        /// </param>

        /// <param name="targetDbName">Target database name
        /// </param>

        /// <param name="targetUsingWinAuth">Whether target connection is Windows authentication
        /// </param>

        /// <param name="selectedMigrationTables">List of tables selected for migration
        /// </param>
        public DataMigrationProjectMetadata(string sourceServerName = default(string), string sourceServerPort = default(string), string sourceUsername = default(string), string targetServerName = default(string), string targetUsername = default(string), string targetDbName = default(string), bool? targetUsingWinAuth = default(bool?), System.Collections.Generic.IList<MigrationTableMetadata> selectedMigrationTables = default(System.Collections.Generic.IList<MigrationTableMetadata>))

        {
            this.SourceServerName = sourceServerName;
            this.SourceServerPort = sourceServerPort;
            this.SourceUsername = sourceUsername;
            this.TargetServerName = targetServerName;
            this.TargetUsername = targetUsername;
            this.TargetDbName = targetDbName;
            this.TargetUsingWinAuth = targetUsingWinAuth;
            this.SelectedMigrationTables = selectedMigrationTables;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets source server name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceServerName")]
        public string SourceServerName {get; private set; }

        /// <summary>
        /// Gets source server port number
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceServerPort")]
        public string SourceServerPort {get; private set; }

        /// <summary>
        /// Gets source username
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sourceUsername")]
        public string SourceUsername {get; private set; }

        /// <summary>
        /// Gets target server name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetServerName")]
        public string TargetServerName {get; private set; }

        /// <summary>
        /// Gets target username
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetUsername")]
        public string TargetUsername {get; private set; }

        /// <summary>
        /// Gets target database name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetDbName")]
        public string TargetDbName {get; private set; }

        /// <summary>
        /// Gets whether target connection is Windows authentication
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "targetUsingWinAuth")]
        public bool? TargetUsingWinAuth {get; private set; }

        /// <summary>
        /// Gets list of tables selected for migration
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "selectedMigrationTables")]
        public System.Collections.Generic.IList<MigrationTableMetadata> SelectedMigrationTables {get; private set; }
    }
}