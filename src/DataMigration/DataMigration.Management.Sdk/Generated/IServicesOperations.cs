// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// ServicesOperations operations.
    /// </summary>
    public partial interface IServicesOperations
    {
        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PUT method creates a new service or updates
        /// an existing one. When a service is updated, existing child resources (i.e.
        /// tasks) are unaffected. Services currently support a single kind, &#34;vm&#34;,
        /// which refers to a VM-based service, although other kinds may be added in
        /// the future. This method can change the kind, SKU, and network of the
        /// service, but if tasks are currently running (i.e. the service is busy),
        /// this will fail with 400 Bad Request (&#34;ServiceIsBusy&#34;). The provider will
        /// reply when successful with 200 OK or 201 Created. Long-running operations
        /// use the provisioningState property.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PUT method creates a new service or updates
        /// an existing one. When a service is updated, existing child resources (i.e.
        /// tasks) are unaffected. Services currently support a single kind, &#34;vm&#34;,
        /// which refers to a VM-based service, although other kinds may be added in
        /// the future. This method can change the kind, SKU, and network of the
        /// service, but if tasks are currently running (i.e. the service is busy),
        /// this will fail with 400 Bad Request (&#34;ServiceIsBusy&#34;). The provider will
        /// reply when successful with 200 OK or 201 Created. Long-running operations
        /// use the provisioningState property.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='parameters'>
        /// Information about the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationService>> CreateOrUpdateWithHttpMessagesAsync(string groupName, string serviceName, DataMigrationService parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The GET method retrieves information about a
        /// service instance.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The GET method retrieves information about a
        /// service instance.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationService>> GetWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The DELETE method deletes a service. Any
        /// running tasks will be canceled.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The DELETE method deletes a service. Any
        /// running tasks will be canceled.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='deleteRunningTasks'>
        /// Delete the resource even if it contains running tasks
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string groupName, string serviceName, bool? deleteRunningTasks = default(bool?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PATCH method updates an existing service.
        /// This method can change the kind, SKU, and network of the service, but if
        /// tasks are currently running (i.e. the service is busy), this will fail with
        /// 400 Bad Request (&#34;ServiceIsBusy&#34;).
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PATCH method updates an existing service.
        /// This method can change the kind, SKU, and network of the service, but if
        /// tasks are currently running (i.e. the service is busy), this will fail with
        /// 400 Bad Request (&#34;ServiceIsBusy&#34;).
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='parameters'>
        /// Information about the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationService>> UpdateWithHttpMessagesAsync(string groupName, string serviceName, DataMigrationService parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action performs a health check and returns
        /// the status of the service and virtual machine size.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action performs a health check and returns
        /// the status of the service and virtual machine size.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationServiceStatusResponse>> CheckStatusWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action starts the service and the service
        /// can be used for data migration.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action starts the service and the service
        /// can be used for data migration.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> StartWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action stops the service and the service
        /// cannot be used for data migration. The service owner won&#39;t be billed when
        /// the service is stopped.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action stops the service and the service
        /// cannot be used for data migration. The service owner won&#39;t be billed when
        /// the service is stopped.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> StopWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The skus action returns the list of SKUs that a
        /// service resource can be updated to.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The skus action returns the list of SKUs that a
        /// service resource can be updated to.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<AvailableServiceSku>>> ListSkusWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// This method checks whether a proposed nested resource name is valid and
        /// available.
        /// </summary>
        /// <remarks>
        /// This method checks whether a proposed nested resource name is valid and
        /// available.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='parameters'>
        /// Requested name to validate
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<NameAvailabilityResponse>> CheckChildrenNameAvailabilityWithHttpMessagesAsync(string groupName, string serviceName, NameAvailabilityRequest parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a resource group.
        /// </summary>
        /// <remarks>
        /// The Services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a resource group.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataMigrationService>>> ListByResourceGroupWithHttpMessagesAsync(string groupName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a subscription.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a subscription.
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataMigrationService>>> ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// This method checks whether a proposed top-level resource name is valid and
        /// available.
        /// </summary>
        /// <remarks>
        /// This method checks whether a proposed top-level resource name is valid and
        /// available.
        /// </remarks>
        /// <param name='location'>
        /// The Azure region of the operation
        /// </param>
        /// <param name='parameters'>
        /// Requested name to validate
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<NameAvailabilityResponse>> CheckNameAvailabilityWithHttpMessagesAsync(string location, NameAvailabilityRequest parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PUT method creates a new service or updates
        /// an existing one. When a service is updated, existing child resources (i.e.
        /// tasks) are unaffected. Services currently support a single kind, &#34;vm&#34;,
        /// which refers to a VM-based service, although other kinds may be added in
        /// the future. This method can change the kind, SKU, and network of the
        /// service, but if tasks are currently running (i.e. the service is busy),
        /// this will fail with 400 Bad Request (&#34;ServiceIsBusy&#34;). The provider will
        /// reply when successful with 200 OK or 201 Created. Long-running operations
        /// use the provisioningState property.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PUT method creates a new service or updates
        /// an existing one. When a service is updated, existing child resources (i.e.
        /// tasks) are unaffected. Services currently support a single kind, &#34;vm&#34;,
        /// which refers to a VM-based service, although other kinds may be added in
        /// the future. This method can change the kind, SKU, and network of the
        /// service, but if tasks are currently running (i.e. the service is busy),
        /// this will fail with 400 Bad Request (&#34;ServiceIsBusy&#34;). The provider will
        /// reply when successful with 200 OK or 201 Created. Long-running operations
        /// use the provisioningState property.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='parameters'>
        /// Information about the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationService>> BeginCreateOrUpdateWithHttpMessagesAsync(string groupName, string serviceName, DataMigrationService parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The DELETE method deletes a service. Any
        /// running tasks will be canceled.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The DELETE method deletes a service. Any
        /// running tasks will be canceled.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='deleteRunningTasks'>
        /// Delete the resource even if it contains running tasks
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string groupName, string serviceName, bool? deleteRunningTasks = default(bool?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PATCH method updates an existing service.
        /// This method can change the kind, SKU, and network of the service, but if
        /// tasks are currently running (i.e. the service is busy), this will fail with
        /// 400 Bad Request (&#34;ServiceIsBusy&#34;).
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The PATCH method updates an existing service.
        /// This method can change the kind, SKU, and network of the service, but if
        /// tasks are currently running (i.e. the service is busy), this will fail with
        /// 400 Bad Request (&#34;ServiceIsBusy&#34;).
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='parameters'>
        /// Information about the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<DataMigrationService>> BeginUpdateWithHttpMessagesAsync(string groupName, string serviceName, DataMigrationService parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action starts the service and the service
        /// can be used for data migration.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action starts the service and the service
        /// can be used for data migration.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginStartWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action stops the service and the service
        /// cannot be used for data migration. The service owner won&#39;t be billed when
        /// the service is stopped.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This action stops the service and the service
        /// cannot be used for data migration. The service owner won&#39;t be billed when
        /// the service is stopped.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> BeginStopWithHttpMessagesAsync(string groupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The skus action returns the list of SKUs that a
        /// service resource can be updated to.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. The skus action returns the list of SKUs that a
        /// service resource can be updated to.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<AvailableServiceSku>>> ListSkusNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The Services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a resource group.
        /// </summary>
        /// <remarks>
        /// The Services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a resource group.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataMigrationService>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a subscription.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of service resources
        /// in a subscription.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<DataMigrationService>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}