// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.DataMigration
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// TasksOperations operations.
    /// </summary>
    public partial interface ITasksOperations
    {
        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of tasks owned by a
        /// service resource. Some tasks may have a status of Unknown, which indicates
        /// that an error occurred while querying the status of that task.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of tasks owned by a
        /// service resource. Some tasks may have a status of Unknown, which indicates
        /// that an error occurred while querying the status of that task.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskType'>
        /// Filter tasks by task type
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ProjectTask>>> ListWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskType = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The PUT method creates a new task or updates
        /// an existing one, although since tasks have no mutable custom properties,
        /// there is little reason to update an existing one.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The PUT method creates a new task or updates
        /// an existing one, although since tasks have no mutable custom properties,
        /// there is little reason to update an existing one.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='parameters'>
        /// Information about the task
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ProjectTask>> CreateOrUpdateWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, ProjectTask parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The GET method retrieves information about a
        /// task.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The GET method retrieves information about a
        /// task.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='expand'>
        /// Expand the response
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ProjectTask>> GetWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, string expand = default(string), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The DELETE method deletes a task, canceling it
        /// first if it&#39;s running.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The DELETE method deletes a task, canceling it
        /// first if it&#39;s running.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='deleteRunningTasks'>
        /// Delete the resource even if it contains running tasks
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> DeleteWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, bool? deleteRunningTasks = default(bool?), System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The PATCH method updates an existing task, but
        /// since tasks have no mutable custom properties, there is little reason to do
        /// so.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. The PATCH method updates an existing task, but
        /// since tasks have no mutable custom properties, there is little reason to do
        /// so.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='parameters'>
        /// Information about the task
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ProjectTask>> UpdateWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, ProjectTask parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. This method cancels a task if it&#39;s currently
        /// queued or running.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. This method cancels a task if it&#39;s currently
        /// queued or running.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ProjectTask>> CancelWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. This method executes a command on a running
        /// task.
        /// </summary>
        /// <remarks>
        /// The tasks resource is a nested, proxy-only resource representing work
        /// performed by a DMS instance. This method executes a command on a running
        /// task.
        /// </remarks>
        /// <param name='groupName'>
        /// Name of the resource group
        /// </param>
        /// <param name='serviceName'>
        /// Name of the service
        /// </param>
        /// <param name='projectName'>
        /// Name of the project
        /// </param>
        /// <param name='taskName'>
        /// Name of the Task
        /// </param>
        /// <param name='parameters'>
        /// Command to execute
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<CommandProperties>> CommandWithHttpMessagesAsync(string groupName, string serviceName, string projectName, string taskName, CommandProperties parameters, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of tasks owned by a
        /// service resource. Some tasks may have a status of Unknown, which indicates
        /// that an error occurred while querying the status of that task.
        /// </summary>
        /// <remarks>
        /// The services resource is the top-level resource that represents the
        /// Database Migration Service. This method returns a list of tasks owned by a
        /// service resource. Some tasks may have a status of Unknown, which indicates
        /// that an error occurred while querying the status of that task.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ProjectTask>>> ListNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}