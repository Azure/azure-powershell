// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Information of backup set</summary>
    public partial class SqlBackupSetInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfo,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal
    {

        /// <summary>Backing field for <see cref="BackupFinishDate" /> property.</summary>
        private global::System.DateTime? _backupFinishDate;

        /// <summary>Backup end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? BackupFinishDate { get => this._backupFinishDate; }

        /// <summary>Backing field for <see cref="BackupSetId" /> property.</summary>
        private string _backupSetId;

        /// <summary>Backup set id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string BackupSetId { get => this._backupSetId; }

        /// <summary>Backing field for <see cref="BackupStartDate" /> property.</summary>
        private global::System.DateTime? _backupStartDate;

        /// <summary>Backup start date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? BackupStartDate { get => this._backupStartDate; }

        /// <summary>Backing field for <see cref="BackupType" /> property.</summary>
        private string _backupType;

        /// <summary>Backup type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string BackupType { get => this._backupType; }

        /// <summary>Backing field for <see cref="FamilyCount" /> property.</summary>
        private int? _familyCount;

        /// <summary>Media family count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? FamilyCount { get => this._familyCount; }

        /// <summary>Backing field for <see cref="FirstLsn" /> property.</summary>
        private string _firstLsn;

        /// <summary>First LSN of the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string FirstLsn { get => this._firstLsn; }

        /// <summary>Backing field for <see cref="HasBackupChecksum" /> property.</summary>
        private bool? _hasBackupChecksum;

        /// <summary>Has Backup Checksums</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? HasBackupChecksum { get => this._hasBackupChecksum; }

        /// <summary>Backing field for <see cref="IgnoreReason" /> property.</summary>
        private string[] _ignoreReason;

        /// <summary>The reasons why the backup set is ignored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] IgnoreReason { get => this._ignoreReason; }

        /// <summary>Backing field for <see cref="IsBackupRestored" /> property.</summary>
        private bool? _isBackupRestored;

        /// <summary>Whether this backup set has been restored or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public bool? IsBackupRestored { get => this._isBackupRestored; }

        /// <summary>Backing field for <see cref="LastLsn" /> property.</summary>
        private string _lastLsn;

        /// <summary>Last LSN of the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string LastLsn { get => this._lastLsn; }

        /// <summary>Backing field for <see cref="ListOfBackupFile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo[] _listOfBackupFile;

        /// <summary>List of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo[] ListOfBackupFile { get => this._listOfBackupFile; }

        /// <summary>Internal Acessors for BackupFinishDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.BackupFinishDate { get => this._backupFinishDate; set { {_backupFinishDate = value;} } }

        /// <summary>Internal Acessors for BackupSetId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.BackupSetId { get => this._backupSetId; set { {_backupSetId = value;} } }

        /// <summary>Internal Acessors for BackupStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.BackupStartDate { get => this._backupStartDate; set { {_backupStartDate = value;} } }

        /// <summary>Internal Acessors for BackupType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.BackupType { get => this._backupType; set { {_backupType = value;} } }

        /// <summary>Internal Acessors for FamilyCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.FamilyCount { get => this._familyCount; set { {_familyCount = value;} } }

        /// <summary>Internal Acessors for FirstLsn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.FirstLsn { get => this._firstLsn; set { {_firstLsn = value;} } }

        /// <summary>Internal Acessors for HasBackupChecksum</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.HasBackupChecksum { get => this._hasBackupChecksum; set { {_hasBackupChecksum = value;} } }

        /// <summary>Internal Acessors for IgnoreReason</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.IgnoreReason { get => this._ignoreReason; set { {_ignoreReason = value;} } }

        /// <summary>Internal Acessors for IsBackupRestored</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.IsBackupRestored { get => this._isBackupRestored; set { {_isBackupRestored = value;} } }

        /// <summary>Internal Acessors for LastLsn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.LastLsn { get => this._lastLsn; set { {_lastLsn = value;} } }

        /// <summary>Internal Acessors for ListOfBackupFile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfoInternal.ListOfBackupFile { get => this._listOfBackupFile; set { {_listOfBackupFile = value;} } }

        /// <summary>Creates an new <see cref="SqlBackupSetInfo" /> instance.</summary>
        public SqlBackupSetInfo()
        {

        }
    }
    /// Information of backup set
    public partial interface ISqlBackupSetInfo :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Backup end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup end time.",
        SerializedName = @"backupFinishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupFinishDate { get;  }
        /// <summary>Backup set id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup set id.",
        SerializedName = @"backupSetId",
        PossibleTypes = new [] { typeof(string) })]
        string BackupSetId { get;  }
        /// <summary>Backup start date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup start date.",
        SerializedName = @"backupStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupStartDate { get;  }
        /// <summary>Backup type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup type.",
        SerializedName = @"backupType",
        PossibleTypes = new [] { typeof(string) })]
        string BackupType { get;  }
        /// <summary>Media family count</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Media family count",
        SerializedName = @"familyCount",
        PossibleTypes = new [] { typeof(int) })]
        int? FamilyCount { get;  }
        /// <summary>First LSN of the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"First LSN of the backup set.",
        SerializedName = @"firstLSN",
        PossibleTypes = new [] { typeof(string) })]
        string FirstLsn { get;  }
        /// <summary>Has Backup Checksums</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Has Backup Checksums",
        SerializedName = @"hasBackupChecksums",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasBackupChecksum { get;  }
        /// <summary>The reasons why the backup set is ignored</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reasons why the backup set is ignored",
        SerializedName = @"ignoreReasons",
        PossibleTypes = new [] { typeof(string) })]
        string[] IgnoreReason { get;  }
        /// <summary>Whether this backup set has been restored or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Whether this backup set has been restored or not.",
        SerializedName = @"isBackupRestored",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsBackupRestored { get;  }
        /// <summary>Last LSN of the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Last LSN of the backup set.",
        SerializedName = @"lastLSN",
        PossibleTypes = new [] { typeof(string) })]
        string LastLsn { get;  }
        /// <summary>List of files in the backup set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of files in the backup set.",
        SerializedName = @"listOfBackupFiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo[] ListOfBackupFile { get;  }

    }
    /// Information of backup set
    internal partial interface ISqlBackupSetInfoInternal

    {
        /// <summary>Backup end time.</summary>
        global::System.DateTime? BackupFinishDate { get; set; }
        /// <summary>Backup set id.</summary>
        string BackupSetId { get; set; }
        /// <summary>Backup start date.</summary>
        global::System.DateTime? BackupStartDate { get; set; }
        /// <summary>Backup type.</summary>
        string BackupType { get; set; }
        /// <summary>Media family count</summary>
        int? FamilyCount { get; set; }
        /// <summary>First LSN of the backup set.</summary>
        string FirstLsn { get; set; }
        /// <summary>Has Backup Checksums</summary>
        bool? HasBackupChecksum { get; set; }
        /// <summary>The reasons why the backup set is ignored</summary>
        string[] IgnoreReason { get; set; }
        /// <summary>Whether this backup set has been restored or not.</summary>
        bool? IsBackupRestored { get; set; }
        /// <summary>Last LSN of the backup set.</summary>
        string LastLsn { get; set; }
        /// <summary>List of files in the backup set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupFileInfo[] ListOfBackupFile { get; set; }

    }
}