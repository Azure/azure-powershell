// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Detailed status of current migration.</summary>
    public partial class MigrationStatusDetails
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IMigrationStatusDetails FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json ? new MigrationStatusDetails(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject into a new instance of <see cref="MigrationStatusDetails" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MigrationStatusDetails(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_fullBackupSetInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("fullBackupSetInfo"), out var __jsonFullBackupSetInfo) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SqlBackupSetInfo.FromJson(__jsonFullBackupSetInfo) : FullBackupSetInfo;}
            {_lastRestoredBackupSetInfo = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("lastRestoredBackupSetInfo"), out var __jsonLastRestoredBackupSetInfo) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SqlBackupSetInfo.FromJson(__jsonLastRestoredBackupSetInfo) : LastRestoredBackupSetInfo;}
            {_migrationState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("migrationState"), out var __jsonMigrationState) ? (string)__jsonMigrationState : (string)MigrationState;}
            {_activeBackupSet = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("activeBackupSets"), out var __jsonActiveBackupSets) ? If( __jsonActiveBackupSets as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfo[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlBackupSetInfo) (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SqlBackupSetInfo.FromJson(__u) )) ))() : null : ActiveBackupSet;}
            {_invalidFile = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("invalidFiles"), out var __jsonInvalidFiles) ? If( __jsonInvalidFiles as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : InvalidFile;}
            {_blobContainerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("blobContainerName"), out var __jsonBlobContainerName) ? (string)__jsonBlobContainerName : (string)BlobContainerName;}
            {_isFullBackupRestored = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonBoolean>("isFullBackupRestored"), out var __jsonIsFullBackupRestored) ? (bool?)__jsonIsFullBackupRestored : IsFullBackupRestored;}
            {_restoreBlockingReason = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("restoreBlockingReason"), out var __jsonRestoreBlockingReason) ? (string)__jsonRestoreBlockingReason : (string)RestoreBlockingReason;}
            {_completeRestoreErrorMessage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("completeRestoreErrorMessage"), out var __jsonCompleteRestoreErrorMessage) ? (string)__jsonCompleteRestoreErrorMessage : (string)CompleteRestoreErrorMessage;}
            {_fileUploadBlockingError = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("fileUploadBlockingErrors"), out var __jsonFileUploadBlockingErrors) ? If( __jsonFileUploadBlockingErrors as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : FileUploadBlockingError;}
            {_currentRestoringFilename = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("currentRestoringFilename"), out var __jsonCurrentRestoringFilename) ? (string)__jsonCurrentRestoringFilename : (string)CurrentRestoringFilename;}
            {_lastRestoredFilename = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("lastRestoredFilename"), out var __jsonLastRestoredFilename) ? (string)__jsonLastRestoredFilename : (string)LastRestoredFilename;}
            {_pendingLogBackupsCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNumber>("pendingLogBackupsCount"), out var __jsonPendingLogBackupsCount) ? (int?)__jsonPendingLogBackupsCount : PendingLogBackupsCount;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MigrationStatusDetails" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MigrationStatusDetails" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._fullBackupSetInfo ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._fullBackupSetInfo.ToJson(null,serializationMode) : null, "fullBackupSetInfo" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._lastRestoredBackupSetInfo ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._lastRestoredBackupSetInfo.ToJson(null,serializationMode) : null, "lastRestoredBackupSetInfo" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._migrationState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._migrationState.ToString()) : null, "migrationState" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._activeBackupSet)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                    foreach( var __x in this._activeBackupSet )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("activeBackupSets",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._invalidFile)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                    foreach( var __s in this._invalidFile )
                    {
                        AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                    }
                    container.Add("invalidFiles",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._blobContainerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._blobContainerName.ToString()) : null, "blobContainerName" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._isFullBackupRestored ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonBoolean((bool)this._isFullBackupRestored) : null, "isFullBackupRestored" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._restoreBlockingReason)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._restoreBlockingReason.ToString()) : null, "restoreBlockingReason" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._completeRestoreErrorMessage)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._completeRestoreErrorMessage.ToString()) : null, "completeRestoreErrorMessage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._fileUploadBlockingError)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                    foreach( var __n in this._fileUploadBlockingError )
                    {
                        AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                    }
                    container.Add("fileUploadBlockingErrors",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._currentRestoringFilename)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._currentRestoringFilename.ToString()) : null, "currentRestoringFilename" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._lastRestoredFilename)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._lastRestoredFilename.ToString()) : null, "lastRestoredFilename" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._pendingLogBackupsCount ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNumber((int)this._pendingLogBackupsCount) : null, "pendingLogBackupsCount" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}