// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Source Location details of backups.</summary>
    public partial class SourceLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocation,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocationInternal
    {

        /// <summary>Backing field for <see cref="AzureBlob" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob _azureBlob;

        /// <summary>Source Azure Blob.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob AzureBlob { get => (this._azureBlob = this._azureBlob ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.AzureBlob()); set => this._azureBlob = value; }

        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobAccountKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).AccountKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).AccountKey = value ?? null; }

        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobContainerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).BlobContainerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).BlobContainerName = value ?? null; }

        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string AzureBlobStorageAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).StorageAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlobInternal)AzureBlob).StorageAccountResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="FileShare" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare _fileShare;

        /// <summary>Source File share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare FileShare { get => (this._fileShare = this._fileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SqlFileShare()); set => this._fileShare = value; }

        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FileSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Password = value ?? null; }

        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FileSharePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Path = value ?? null; }

        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string FileShareUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShareInternal)FileShare).Username = value ?? null; }

        /// <summary>Internal Acessors for AzureBlob</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocationInternal.AzureBlob { get => (this._azureBlob = this._azureBlob ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.AzureBlob()); set { {_azureBlob = value;} } }

        /// <summary>Internal Acessors for FileShare</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISourceLocationInternal.FileShare { get => (this._fileShare = this._fileShare ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.SqlFileShare()); set { {_fileShare = value;} } }

        /// <summary>Creates an new <see cref="SourceLocation" /> instance.</summary>
        public SourceLocation()
        {

        }
    }
    /// Source Location details of backups.
    public partial interface ISourceLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Storage Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage Account Key.",
        SerializedName = @"accountKey",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobAccountKey { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob container name where backups are stored.",
        SerializedName = @"blobContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobContainerName { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the storage account where backups are stored.",
        SerializedName = @"storageAccountResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Password for username to access file share location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for username to access file share location.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location as SMB share or local drive where backups are placed.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Username to access the file share location for backups.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string FileShareUsername { get; set; }

    }
    /// Source Location details of backups.
    internal partial interface ISourceLocationInternal

    {
        /// <summary>Source Azure Blob.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.IAzureBlob AzureBlob { get; set; }
        /// <summary>Storage Account Key.</summary>
        string AzureBlobAccountKey { get; set; }
        /// <summary>Blob container name where backups are stored.</summary>
        string AzureBlobContainerName { get; set; }
        /// <summary>Resource Id of the storage account where backups are stored.</summary>
        string AzureBlobStorageAccountResourceId { get; set; }
        /// <summary>Source File share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20211030Preview.ISqlFileShare FileShare { get; set; }
        /// <summary>Password for username to access file share location.</summary>
        string FileSharePassword { get; set; }
        /// <summary>Location as SMB share or local drive where backups are placed.</summary>
        string FileSharePath { get; set; }
        /// <summary>Username to access the file share location for backups.</summary>
        string FileShareUsername { get; set; }

    }
}