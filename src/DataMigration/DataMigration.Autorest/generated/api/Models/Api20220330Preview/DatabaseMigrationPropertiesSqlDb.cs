// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database Migration Resource properties for SQL database.</summary>
    public partial class DatabaseMigrationPropertiesSqlDb :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDb,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationProperties __databaseMigrationProperties = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.DatabaseMigrationProperties();

        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public global::System.DateTime? EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).EndedOn; }

        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Support.ResourceType Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).Kind = value ; }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.EndedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).EndedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).EndedOn = value; }

        /// <summary>Internal Acessors for MigrationFailureError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IErrorInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.MigrationFailureError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureError = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorCode = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorMessage = value; }

        /// <summary>Internal Acessors for MigrationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationStatus = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for SourceServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.SourceServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceServerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceServerName = value; }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal.StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).StartedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).StartedOn = value; }

        /// <summary>Internal Acessors for MigrationStatusDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetails Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetail { get => (this._migrationStatusDetail = this._migrationStatusDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlDbMigrationStatusDetails()); set { {_migrationStatusDetail = value;} } }

        /// <summary>Internal Acessors for MigrationStatusDetailListOfCopyProgressDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailListOfCopyProgressDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail = value; }

        /// <summary>Internal Acessors for MigrationStatusDetailMigrationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailMigrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState = value; }

        /// <summary>Internal Acessors for MigrationStatusDetailSqlDataCopyError</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailSqlDataCopyError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError = value; }

        /// <summary>Internal Acessors for OfflineConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfiguration Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.OfflineConfiguration { get => (this._offlineConfiguration = this._offlineConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlDbOfflineConfiguration()); set { {_offlineConfiguration = value;} } }

        /// <summary>Internal Acessors for OfflineConfigurationOffline</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.OfflineConfigurationOffline { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline = value; }

        /// <summary>Internal Acessors for TargetSqlConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesSqlDbInternal.TargetSqlConnection { get => (this._targetSqlConnection = this._targetSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInformation()); set { {_targetSqlConnection = value;} } }

        /// <summary>Error details in case of migration failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IErrorInfo MigrationFailureError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureError; }

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorCode; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationFailureErrorMessage; }

        /// <summary>ID tracking current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationOperationId = value ?? null; }

        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationService { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationService; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationService = value ?? null; }

        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string MigrationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).MigrationStatus; }

        /// <summary>Backing field for <see cref="MigrationStatusDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetails _migrationStatusDetail;

        /// <summary>Detailed migration status. Not included by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetails MigrationStatusDetail { get => (this._migrationStatusDetail = this._migrationStatusDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlDbMigrationStatusDetails()); }

        /// <summary>Details on progress of ADF copy activities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail; }

        /// <summary>Current State of Migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string MigrationStatusDetailMigrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState; }

        /// <summary>Sql Data Copy errors, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string[] MigrationStatusDetailSqlDataCopyError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError; }

        /// <summary>Backing field for <see cref="OfflineConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfiguration _offlineConfiguration;

        /// <summary>Offline configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfiguration OfflineConfiguration { get => (this._offlineConfiguration = this._offlineConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlDbOfflineConfiguration()); }

        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? OfflineConfigurationOffline { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline; }

        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ProvisioningError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).ProvisioningError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).ProvisioningError = value ?? null; }

        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).ProvisioningState; }

        /// <summary>Resource Id of the target resource (SQL VM or SQL Managed Instance)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).Scope = value ?? null; }

        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceDatabaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceDatabaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceDatabaseName = value ?? null; }

        /// <summary>Name of the source sql server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceServerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceServerName; }

        /// <summary>Source SQL Server connection details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformation SourceSqlConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnection = value ?? null /* model class */; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionAuthentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionDataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionDataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? SourceSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionEncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionEncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public System.Security.SecureString SourceSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionPassword = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public bool? SourceSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionTrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionTrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string SourceSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionUserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).SourceSqlConnectionUserName = value ?? null; }

        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public global::System.DateTime? StartedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).StartedOn; }

        /// <summary>Backing field for <see cref="TableList" /> property.</summary>
        private string[] _tableList;

        /// <summary>List of tables to copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] TableList { get => this._tableList; set => this._tableList = value; }

        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inherited)]
        public string TargetDatabaseCollation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).TargetDatabaseCollation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal)__databaseMigrationProperties).TargetDatabaseCollation = value ?? null; }

        /// <summary>Backing field for <see cref="TargetSqlConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformation _targetSqlConnection;

        /// <summary>Target SQL DB connection details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformation TargetSqlConnection { get => (this._targetSqlConnection = this._targetSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.SqlConnectionInformation()); set => this._targetSqlConnection = value; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Authentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).DataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).DataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? TargetSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).EncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).EncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public System.Security.SecureString TargetSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Password = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? TargetSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).TrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).TrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformationInternal)TargetSqlConnection).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="DatabaseMigrationPropertiesSqlDb" /> instance.</summary>
        public DatabaseMigrationPropertiesSqlDb()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__databaseMigrationProperties), __databaseMigrationProperties);
            await eventListener.AssertObjectIsValid(nameof(__databaseMigrationProperties), __databaseMigrationProperties);
        }
    }
    /// Database Migration Resource properties for SQL database.
    public partial interface IDatabaseMigrationPropertiesSqlDb :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationProperties
    {
        /// <summary>Details on progress of ADF copy activities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details on progress of ADF copy activities.",
        SerializedName = @"listOfCopyProgressDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get;  }
        /// <summary>Current State of Migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current State of Migration.",
        SerializedName = @"migrationState",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationStatusDetailMigrationState { get;  }
        /// <summary>Sql Data Copy errors, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sql Data Copy errors, if any.",
        SerializedName = @"sqlDataCopyErrors",
        PossibleTypes = new [] { typeof(string) })]
        string[] MigrationStatusDetailSqlDataCopyError { get;  }
        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline migration",
        SerializedName = @"offline",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OfflineConfigurationOffline { get;  }
        /// <summary>List of tables to copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of tables to copy.",
        SerializedName = @"tableList",
        PossibleTypes = new [] { typeof(string) })]
        string[] TableList { get; set; }
        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source.",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt connection or not.",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TargetSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to source SQL.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString TargetSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust server certificate or not.",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TargetSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name to connect to source SQL.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionUserName { get; set; }

    }
    /// Database Migration Resource properties for SQL database.
    internal partial interface IDatabaseMigrationPropertiesSqlDbInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.IDatabaseMigrationPropertiesInternal
    {
        /// <summary>Detailed migration status. Not included by default.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbMigrationStatusDetails MigrationStatusDetail { get; set; }
        /// <summary>Details on progress of ADF copy activities.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get; set; }
        /// <summary>Current State of Migration.</summary>
        string MigrationStatusDetailMigrationState { get; set; }
        /// <summary>Sql Data Copy errors, if any.</summary>
        string[] MigrationStatusDetailSqlDataCopyError { get; set; }
        /// <summary>Offline configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlDbOfflineConfiguration OfflineConfiguration { get; set; }
        /// <summary>Offline migration</summary>
        bool? OfflineConfigurationOffline { get; set; }
        /// <summary>List of tables to copy.</summary>
        string[] TableList { get; set; }
        /// <summary>Target SQL DB connection details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20220330Preview.ISqlConnectionInformation TargetSqlConnection { get; set; }
        /// <summary>Authentication type.</summary>
        string TargetSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        string TargetSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        bool? TargetSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        System.Security.SecureString TargetSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        bool? TargetSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        string TargetSqlConnectionUserName { get; set; }

    }
}