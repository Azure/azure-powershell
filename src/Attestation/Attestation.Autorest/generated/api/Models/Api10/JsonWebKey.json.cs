// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Extensions;

    public partial class JsonWebKey
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IJsonWebKey.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IJsonWebKey.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Attestation.Models.Api10.IJsonWebKey FromJson(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject json ? new JsonWebKey(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject into a new instance of <see cref="JsonWebKey" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal JsonWebKey(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_alg = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("alg"), out var __jsonAlg) ? (string)__jsonAlg : (string)Alg;}
            {_crv = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("crv"), out var __jsonCrv) ? (string)__jsonCrv : (string)Crv;}
            {_d = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("d"), out var __jsonD) ? (string)__jsonD : (string)D;}
            {_dp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("dp"), out var __jsonDp) ? (string)__jsonDp : (string)Dp;}
            {_dq = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("dq"), out var __jsonDq) ? (string)__jsonDq : (string)Dq;}
            {_e = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("e"), out var __jsonE) ? (string)__jsonE : (string)E;}
            {_k = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("k"), out var __jsonK) ? (string)__jsonK : (string)K;}
            {_kid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("kid"), out var __jsonKid) ? (string)__jsonKid : (string)Kid;}
            {_kty = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("kty"), out var __jsonKty) ? (string)__jsonKty : (string)Kty;}
            {_n = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("n"), out var __jsonN) ? (string)__jsonN : (string)N;}
            {_p = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("p"), out var __jsonP) ? (string)__jsonP : (string)P;}
            {_q = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("q"), out var __jsonQ) ? (string)__jsonQ : (string)Q;}
            {_qi = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("qi"), out var __jsonQi) ? (string)__jsonQi : (string)Qi;}
            {_use = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("use"), out var __jsonUse) ? (string)__jsonUse : (string)Use;}
            {_x = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("x"), out var __jsonX) ? (string)__jsonX : (string)X;}
            {_x5C = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonArray>("x5c"), out var __jsonX5C) ? If( __jsonX5C as Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : X5C;}
            {_y = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString>("y"), out var __jsonY) ? (string)__jsonY : (string)Y;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="JsonWebKey" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="JsonWebKey" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._alg)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._alg.ToString()) : null, "alg" ,container.Add );
            AddIf( null != (((object)this._crv)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._crv.ToString()) : null, "crv" ,container.Add );
            AddIf( null != (((object)this._d)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._d.ToString()) : null, "d" ,container.Add );
            AddIf( null != (((object)this._dp)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._dp.ToString()) : null, "dp" ,container.Add );
            AddIf( null != (((object)this._dq)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._dq.ToString()) : null, "dq" ,container.Add );
            AddIf( null != (((object)this._e)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._e.ToString()) : null, "e" ,container.Add );
            AddIf( null != (((object)this._k)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._k.ToString()) : null, "k" ,container.Add );
            AddIf( null != (((object)this._kid)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._kid.ToString()) : null, "kid" ,container.Add );
            AddIf( null != (((object)this._kty)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._kty.ToString()) : null, "kty" ,container.Add );
            AddIf( null != (((object)this._n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._n.ToString()) : null, "n" ,container.Add );
            AddIf( null != (((object)this._p)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._p.ToString()) : null, "p" ,container.Add );
            AddIf( null != (((object)this._q)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._q.ToString()) : null, "q" ,container.Add );
            AddIf( null != (((object)this._qi)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._qi.ToString()) : null, "qi" ,container.Add );
            AddIf( null != (((object)this._use)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._use.ToString()) : null, "use" ,container.Add );
            AddIf( null != (((object)this._x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._x.ToString()) : null, "x" ,container.Add );
            if (null != this._x5C)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.XNodeArray();
                foreach( var __x in this._x5C )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("x5c",__w);
            }
            AddIf( null != (((object)this._y)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.Attestation.Runtime.Json.JsonString(this._y.ToString()) : null, "y" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}