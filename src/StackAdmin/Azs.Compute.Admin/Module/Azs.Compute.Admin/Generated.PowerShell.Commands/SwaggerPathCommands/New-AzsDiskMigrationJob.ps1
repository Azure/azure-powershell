<#
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License. See License.txt in the project root for license information.

Code generated by Microsoft (R) PSSwagger
Changes may cause incorrect behavior and will be lost if the code is regenerated.
#>

<#
.SYNOPSIS
	Starts a managed disk migration job to migrate managed disks to the specified destination share.

.DESCRIPTION
    Create a disk migration job.

.PARAMETER ResourceId
    The resource id.

.PARAMETER Disks
    The parameters of disk list.

.PARAMETER TargetShare
    The target share name.

.PARAMETER Location
    Location of the resource.

.PARAMETER Name
    The migration job guid name.

.EXAMPLE
    PS C:\> New-AzsDiskMigrationJob -Name "MyMigrationJob" -Disks $disks -location local -TargetShare "\\SU1FileServer.azurestack.local\SU1_ObjStore"

    Start a managed disk migration job for the first 20 disks
#>
function New-AzsDiskMigrationJob
{
    [OutputType([Microsoft.AzureStack.Management.Compute.Admin.Models.DiskMigrationJob])]
	[Alias('Start-AzsDiskMigrationJob')]
    param(
        [Parameter(Mandatory = $true)]
        [Microsoft.AzureStack.Management.Compute.Admin.Models.Disk[]]
        $Disks,

        [Parameter(Mandatory = $true)]
        [System.String]
        $TargetShare,

        [Parameter(Mandatory = $false)]
        [System.String]
        $Location,

        [Parameter(Mandatory = $true)]
        [Alias('MigrationId')]
        [System.String]
        $Name
    )

    Begin
    {
	    Initialize-PSSwaggerDependencies -Azure
        $tracerObject = $null
        if (('continue' -eq $DebugPreference) -or ('inquire' -eq $DebugPreference)) {
            $oldDebugPreference = $global:DebugPreference
			$global:DebugPreference = "continue"
            $tracerObject = New-PSSwaggerClientTracing
            Register-PSSwaggerClientTracing -TracerObject $tracerObject
        }
	}

    Process {

		$NewServiceClient_params = @{
			FullClientTypeName = 'Microsoft.AzureStack.Management.Compute.Admin.ComputeAdminClient'
		}

		$GlobalParameterHashtable = @{}
		$NewServiceClient_params['GlobalParameterHashtable'] = $GlobalParameterHashtable

		$GlobalParameterHashtable['SubscriptionId'] = $null
		if($PSBoundParameters.ContainsKey('SubscriptionId')) {
			$GlobalParameterHashtable['SubscriptionId'] = $PSBoundParameters['SubscriptionId']
		}

		$ComputeAdminClient = New-ServiceClient @NewServiceClient_params

		$MigrationId = $Name


		if (-not $PSBoundParameters.ContainsKey('Location')) {
				$Location = (Get-AzureRMLocation).Location
		}

		Write-Verbose -Message 'Performing operation CreateWithHttpMessagesAsync on $ComputeAdminClient.'
		$TaskResult = $ComputeAdminClient.DiskMigrationJobs.CreateWithHttpMessagesAsync($Location, $MigrationId, $TargetShare, $Disks)

		if ($TaskResult) {
			$GetTaskResult_params = @{
				TaskResult = $TaskResult
			}

			Get-TaskResult @GetTaskResult_params

		}
    }

    End {
        if ($tracerObject) {
            $global:DebugPreference = $oldDebugPreference
            Unregister-PSSwaggerClientTracing -TracerObject $tracerObject
        }
    }
}

