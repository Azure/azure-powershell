<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AADLoginForServicePrincipal" xml:space="preserve">
    <value>Azure PowerShell doesn't currently support AAD login for Service Principal accounts. Provide a -LocalUser.</value>
  </data>
  <data name="ConfigFilePathIsDirectory" xml:space="preserve">
    <value>{0} is a directory, unable to write config file in that path. Provide a valid path for a file.</value>
  </data>
  <data name="ConfigFolderDoesNotExist" xml:space="preserve">
    <value>Config file destination folder {0} does not exist.</value>
  </data>
  <data name="FailedToCreateDefaultEndpoint" xml:space="preserve">
    <value>Failed to create default endpoint for the target Arc Server with error: {0}.</value>
  </data>
  <data name="FailedToCreateDefaultEndpointUnauthorized" xml:space="preserve">
    <value>Failed to create default connectivty endpoint for target resource with an Authorization failure. This is a one time operation that must be performed by someone with Owner or Contributor role before anyone can connect to this resource. Contact the owner of the resource to create the connectivity endpoint. Instructions here: https://aka.ms/ssharc/create-default-endpoint</value>
  </data>
  <data name="FailedToDeleteOldProxy" xml:space="preserve">
    <value>Couldn't delete old version of the Proxy File: {0}. Error: {1}</value>
  </data>
  <data name="FailedToDownloadProxy" xml:space="preserve">
    <value>Failed to download client proxy executable from {0}. Error: {1}</value>
  </data>
  <data name="FailedToListCredentials" xml:space="preserve">
    <value>ListCredentials operation failed with error code '{0}'.</value>
  </data>
  <data name="KeysDestinationFolderWithKeys" xml:space="preserve">
    <value>KeysDestinationFolder can't be used in conjunction with PublicKeyFile or PrivateKeyFile. All generated keys are saved in the same directory as provided keys.</value>
  </data>
  <data name="ListResourcesArgumentNullException" xml:space="preserve">
    <value>Unable to list resources in the {0} Resource Group because API call returned a null object. Please try again and contact support.</value>
  </data>
  <data name="ListResourcesCloudException" xml:space="preserve">
    <value>Failed to list resources in the {0} Resource Group with error: "{1}". Ensure that the Resource Group Name is correct and that you have Read role on that resource group.</value>
  </data>
  <data name="MakeSurePortIsEnabled" xml:space="preserve">
    <value>Please make sure SSH port is allowed using "azcmagent config list" in the target Arc Server. Ensure SSHD is running on the target machine.</value>
  </data>
  <data name="MstscClientNotFound" xml:space="preserve">
    <value>Unable to find Remote Desktop Client (mstsc.exe). Make sure to update the PATH environment variable to make client discoverable.</value>
  </data>
  <data name="MultipleResourcesWithSameName" xml:space="preserve">
    <value>There is more than one resource named "{0}" in the Resource Group "{1}". Please provide -ResourceType so that this cmdlet can identify the correct target resource.</value>
  </data>
  <data name="OpenSSHClientNotFound" xml:space="preserve">
    <value>Unable to find OpenSSH Client. Make sure to update the PATH environment variable to make OpenSSH client discoverable.</value>
  </data>
  <data name="RDPOnNonWindowsClient" xml:space="preserve">
    <value>The -Rdp parameter is only supported on Windows OS.</value>
  </data>
  <data name="ResourceNotFoundNoTypeProvided" xml:space="preserve">
    <value>Unable to find Resource "{0}" in the ResourceGroup "{1}". Make sure the resource exists, that you have Read rights, and that the target resource is of one of the Resource Types supported by this cmdlet.</value>
  </data>
  <data name="ResourceNotFoundTypeProvided" xml:space="preserve">
    <value>Unable to find Resource "{0}" of type "{1}" in the Resource Group "{2}". Make sure the resource exists and that you have Read rights.</value>
  </data>
  <data name="WarningCertificateWithNoLocalUser" xml:space="preserve">
    <value>To authenticate with a certificate you must provide a LocalUser. The certificate will be ignored.</value>
  </data>
</root>