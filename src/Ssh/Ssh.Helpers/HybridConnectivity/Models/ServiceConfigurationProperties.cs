// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.HybridConnectivity.Models
{
    using System.Linq;

    /// <summary>
    /// Service configuration details
    /// </summary>
    public partial class ServiceConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the ServiceConfigurationProperties class.
        /// </summary>
        public ServiceConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceConfigurationProperties class.
        /// </summary>

        /// <param name="serviceName">Name of the service.
        /// Possible values include: &#39;SSH&#39;, &#39;WAC&#39;</param>

        /// <param name="resourceId">The resource Id of the connectivity endpoint (optional).
        /// </param>

        /// <param name="port">The port on which service is enabled.
        /// </param>

        /// <param name="provisioningState">The resource provisioning state.
        /// Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Failed&#39;,
        /// &#39;Canceled&#39;</param>
        public ServiceConfigurationProperties(string serviceName, string resourceId = default(string), long? port = default(long?), string provisioningState = default(string))

        {
            this.ServiceName = serviceName;
            this.ResourceId = resourceId;
            this.Port = port;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the service. Possible values include: &#39;SSH&#39;, &#39;WAC&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "serviceName")]
        public string ServiceName {get; set; }

        /// <summary>
        /// Gets or sets the resource Id of the connectivity endpoint (optional).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; set; }

        /// <summary>
        /// Gets or sets the port on which service is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "port")]
        public long? Port {get; set; }

        /// <summary>
        /// Gets the resource provisioning state. Possible values include: &#39;Succeeded&#39;, &#39;Creating&#39;, &#39;Updating&#39;, &#39;Failed&#39;, &#39;Canceled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.ServiceName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ServiceName");
            }



        }
    }
}