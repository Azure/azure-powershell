// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.HybridConnectivity.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Endpoint details
    /// </summary>
    public partial class EndpointProperties
    {
        /// <summary>
        /// Initializes a new instance of the EndpointProperties class.
        /// </summary>
        public EndpointProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EndpointProperties class.
        /// </summary>
        /// <param name="type">The type of endpoint. Possible values include:
        /// 'default', 'custom'</param>
        /// <param name="resourceId">The resource Id of the connectivity
        /// endpoint (optional).</param>
        /// <param name="provisioningState">The resource provisioning
        /// state.</param>
        public EndpointProperties(string type, string resourceId = default(string), string provisioningState = default(string))
        {
            Type = type;
            ResourceId = resourceId;
            ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the type of endpoint. Possible values include:
        /// 'default', 'custom'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the resource Id of the connectivity endpoint
        /// (optional).
        /// </summary>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }

        /// <summary>
        /// Gets the resource provisioning state.
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
