// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.HybridConnectivity.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represent ManageProxy Request object.
    /// </summary>
    public partial class ManagedProxyRequest
    {
        /// <summary>
        /// Initializes a new instance of the ManagedProxyRequest class.
        /// </summary>
        public ManagedProxyRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManagedProxyRequest class.
        /// </summary>
        /// <param name="service">The name of the service.</param>
        /// <param name="hostname">The target host name.</param>
        /// <param name="serviceName">The name of the service. It is an
        /// optional property, if not provided, service configuration tokens
        /// issue code would be by passed. Possible values include: 'SSH',
        /// 'WAC'</param>
        public ManagedProxyRequest(string service, string hostname = default(string), string serviceName = default(string))
        {
            Service = service;
            Hostname = hostname;
            ServiceName = serviceName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the service.
        /// </summary>
        [JsonProperty(PropertyName = "service")]
        public string Service { get; set; }

        /// <summary>
        /// Gets or sets the target host name.
        /// </summary>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; set; }

        /// <summary>
        /// Gets or sets the name of the service. It is an optional property,
        /// if not provided, service configuration tokens issue code would be
        /// by passed. Possible values include: 'SSH', 'WAC'
        /// </summary>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Service == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Service");
            }
        }
    }
}
