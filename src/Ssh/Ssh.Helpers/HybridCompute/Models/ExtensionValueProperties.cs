// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.HybridCompute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes Extension Metadata properties
    /// </summary>
    public partial class ExtensionValueProperties
    {
        /// <summary>
        /// Initializes a new instance of the ExtensionValueProperties class.
        /// </summary>
        public ExtensionValueProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtensionValueProperties class.
        /// </summary>

        /// <param name="version">The version of the Extension being received.
        /// </param>

        /// <param name="extensionType">The type of the Extension being received.
        /// </param>

        /// <param name="publisher">The publisher of the Extension being received.
        /// </param>
        public ExtensionValueProperties(string version = default(string), string extensionType = default(string), string publisher = default(string))

        {
            this.Version = version;
            this.ExtensionType = extensionType;
            this.Publisher = publisher;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the version of the Extension being received.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets the type of the Extension being received.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extensionType")]
        public string ExtensionType {get; private set; }

        /// <summary>
        /// Gets the publisher of the Extension being received.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publisher")]
        public string Publisher {get; private set; }
    }
}