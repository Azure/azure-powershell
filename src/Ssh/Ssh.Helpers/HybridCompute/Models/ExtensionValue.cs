// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.HybridCompute.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes a Extension Metadata
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class ExtensionValue : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the ExtensionValue class.
        /// </summary>
        public ExtensionValue()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExtensionValue class.
        /// </summary>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="version">The version of the Extension being
        /// received.</param>
        /// <param name="extensionType">The type of the Extension being
        /// received.</param>
        /// <param name="publisher">The publisher of the Extension being
        /// received.</param>
        public ExtensionValue(string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), string version = default(string), string extensionType = default(string), string publisher = default(string))
            : base(id, name, type, systemData)
        {
            Version = version;
            ExtensionType = extensionType;
            Publisher = publisher;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the version of the Extension being received.
        /// </summary>
        [JsonProperty(PropertyName = "properties.version")]
        public string Version { get; private set; }

        /// <summary>
        /// Gets the type of the Extension being received.
        /// </summary>
        [JsonProperty(PropertyName = "properties.extensionType")]
        public string ExtensionType { get; private set; }

        /// <summary>
        /// Gets the publisher of the Extension being received.
        /// </summary>
        [JsonProperty(PropertyName = "properties.publisher")]
        public string Publisher { get; private set; }

    }
}
