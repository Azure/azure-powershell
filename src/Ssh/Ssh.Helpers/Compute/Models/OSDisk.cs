// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies information about the operating system disk used by the virtual
    /// machine. &lt;br&gt;&lt;br&gt; For more information about disks, see [About disks and
    /// VHDs for Azure virtual
    /// machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
    /// </summary>
    public partial class OSDisk
    {
        /// <summary>
        /// Initializes a new instance of the OSDisk class.
        /// </summary>
        public OSDisk()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OSDisk class.
        /// </summary>

        /// <param name="osType">This property allows you to specify the type of the OS that is included in
        /// the disk if creating a VM from user-image or a specialized VHD. &lt;br&gt;&lt;br&gt;
        /// Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
        /// Possible values include: &#39;Windows&#39;, &#39;Linux&#39;</param>

        /// <param name="encryptionSettings">Specifies the encryption settings for the OS Disk. &lt;br&gt;&lt;br&gt; Minimum
        /// api-version: 2015-06-15
        /// </param>

        /// <param name="name">The disk name.
        /// </param>

        /// <param name="vhd">The virtual hard disk.
        /// </param>

        /// <param name="image">The source user image virtual hard disk. The virtual hard disk will be
        /// copied before being attached to the virtual machine. If SourceImage is
        /// provided, the destination virtual hard drive must not exist.
        /// </param>

        /// <param name="caching">Specifies the caching requirements. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt;
        /// **None** &lt;br&gt;&lt;br&gt; **ReadOnly** &lt;br&gt;&lt;br&gt; **ReadWrite** &lt;br&gt;&lt;br&gt; Default:
        /// **None** for Standard storage. **ReadOnly** for Premium storage.
        /// Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;</param>

        /// <param name="writeAcceleratorEnabled">Specifies whether writeAccelerator should be enabled or disabled on the
        /// disk.
        /// </param>

        /// <param name="diffDiskSettings">Specifies the ephemeral Disk Settings for the operating system disk used by
        /// the virtual machine.
        /// </param>

        /// <param name="createOption">Specifies how the virtual machine should be created.&lt;br&gt;&lt;br&gt; Possible
        /// values are:&lt;br&gt;&lt;br&gt; **Attach** \u2013 This value is used when you are using
        /// a specialized disk to create the virtual machine.&lt;br&gt;&lt;br&gt; **FromImage**
        /// \u2013 This value is used when you are using an image to create the virtual
        /// machine. If you are using a platform image, you also use the imageReference
        /// element described above. If you are using a marketplace image, you  also
        /// use the plan element previously described.
        /// Possible values include: &#39;FromImage&#39;, &#39;Empty&#39;, &#39;Attach&#39;</param>

        /// <param name="diskSizeGb">Specifies the size of an empty data disk in gigabytes. This element can be
        /// used to overwrite the size of the disk in a virtual machine image. &lt;br&gt;&lt;br&gt;
        /// diskSizeGB is the number of bytes x 1024^3 for the disk and the value
        /// cannot be larger than 1023
        /// </param>

        /// <param name="managedDisk">The managed disk parameters.
        /// </param>

        /// <param name="deleteOption">Specifies whether OS Disk should be deleted or detached upon VM deletion.
        /// &lt;br&gt;&lt;br&gt; Possible values: &lt;br&gt;&lt;br&gt; **Delete** If this value is used, the OS
        /// disk is deleted when VM is deleted.&lt;br&gt;&lt;br&gt; **Detach** If this value is
        /// used, the os disk is retained after VM is deleted. &lt;br&gt;&lt;br&gt; The default
        /// value is set to **detach**. For an ephemeral OS Disk, the default value is
        /// set to **Delete**. User cannot change the delete option for ephemeral OS
        /// Disk.
        /// Possible values include: &#39;Delete&#39;, &#39;Detach&#39;</param>
        public OSDisk(string createOption, OperatingSystemTypes? osType = default(OperatingSystemTypes?), DiskEncryptionSettings encryptionSettings = default(DiskEncryptionSettings), string name = default(string), VirtualHardDisk vhd = default(VirtualHardDisk), VirtualHardDisk image = default(VirtualHardDisk), CachingTypes? caching = default(CachingTypes?), bool? writeAcceleratorEnabled = default(bool?), DiffDiskSettings diffDiskSettings = default(DiffDiskSettings), int? diskSizeGb = default(int?), ManagedDiskParameters managedDisk = default(ManagedDiskParameters), string deleteOption = default(string))

        {
            this.OSType = osType;
            this.EncryptionSettings = encryptionSettings;
            this.Name = name;
            this.Vhd = vhd;
            this.Image = image;
            this.Caching = caching;
            this.WriteAcceleratorEnabled = writeAcceleratorEnabled;
            this.DiffDiskSettings = diffDiskSettings;
            this.CreateOption = createOption;
            this.DiskSizeGb = diskSizeGb;
            this.ManagedDisk = managedDisk;
            this.DeleteOption = deleteOption;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets this property allows you to specify the type of the OS that is
        /// included in the disk if creating a VM from user-image or a specialized VHD.
        /// &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux** Possible values include: &#39;Windows&#39;, &#39;Linux&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osType")]
        public OperatingSystemTypes? OSType {get; set; }

        /// <summary>
        /// Gets or sets specifies the encryption settings for the OS Disk. &lt;br&gt;&lt;br&gt;
        /// Minimum api-version: 2015-06-15
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "encryptionSettings")]
        public DiskEncryptionSettings EncryptionSettings {get; set; }

        /// <summary>
        /// Gets or sets the disk name.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; set; }

        /// <summary>
        /// Gets or sets the virtual hard disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vhd")]
        public VirtualHardDisk Vhd {get; set; }

        /// <summary>
        /// Gets or sets the source user image virtual hard disk. The virtual hard disk
        /// will be copied before being attached to the virtual machine. If SourceImage
        /// is provided, the destination virtual hard drive must not exist.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "image")]
        public VirtualHardDisk Image {get; set; }

        /// <summary>
        /// Gets or sets specifies the caching requirements. &lt;br&gt;&lt;br&gt; Possible values
        /// are: &lt;br&gt;&lt;br&gt; **None** &lt;br&gt;&lt;br&gt; **ReadOnly** &lt;br&gt;&lt;br&gt; **ReadWrite**
        /// &lt;br&gt;&lt;br&gt; Default: **None** for Standard storage. **ReadOnly** for Premium
        /// storage. Possible values include: &#39;None&#39;, &#39;ReadOnly&#39;, &#39;ReadWrite&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caching")]
        public CachingTypes? Caching {get; set; }

        /// <summary>
        /// Gets or sets specifies whether writeAccelerator should be enabled or
        /// disabled on the disk.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "writeAcceleratorEnabled")]
        public bool? WriteAcceleratorEnabled {get; set; }

        /// <summary>
        /// Gets or sets specifies the ephemeral Disk Settings for the operating system
        /// disk used by the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diffDiskSettings")]
        public DiffDiskSettings DiffDiskSettings {get; set; }

        /// <summary>
        /// Gets or sets specifies how the virtual machine should be created.&lt;br&gt;&lt;br&gt;
        /// Possible values are:&lt;br&gt;&lt;br&gt; **Attach** \u2013 This value is used when you
        /// are using a specialized disk to create the virtual machine.&lt;br&gt;&lt;br&gt;
        /// **FromImage** \u2013 This value is used when you are using an image to
        /// create the virtual machine. If you are using a platform image, you also use
        /// the imageReference element described above. If you are using a marketplace
        /// image, you  also use the plan element previously described. Possible values include: &#39;FromImage&#39;, &#39;Empty&#39;, &#39;Attach&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "createOption")]
        public string CreateOption {get; set; }

        /// <summary>
        /// Gets or sets specifies the size of an empty data disk in gigabytes. This
        /// element can be used to overwrite the size of the disk in a virtual machine
        /// image. &lt;br&gt;&lt;br&gt; diskSizeGB is the number of bytes x 1024^3 for the disk and
        /// the value cannot be larger than 1023
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diskSizeGB")]
        public int? DiskSizeGb {get; set; }

        /// <summary>
        /// Gets or sets the managed disk parameters.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "managedDisk")]
        public ManagedDiskParameters ManagedDisk {get; set; }

        /// <summary>
        /// Gets or sets specifies whether OS Disk should be deleted or detached upon
        /// VM deletion. &lt;br&gt;&lt;br&gt; Possible values: &lt;br&gt;&lt;br&gt; **Delete** If this value is
        /// used, the OS disk is deleted when VM is deleted.&lt;br&gt;&lt;br&gt; **Detach** If this
        /// value is used, the os disk is retained after VM is deleted. &lt;br&gt;&lt;br&gt; The
        /// default value is set to **detach**. For an ephemeral OS Disk, the default
        /// value is set to **Delete**. User cannot change the delete option for
        /// ephemeral OS Disk. Possible values include: &#39;Delete&#39;, &#39;Detach&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deleteOption")]
        public string DeleteOption {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.CreateOption == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "CreateOption");
            }

            if (this.EncryptionSettings != null)
            {
                this.EncryptionSettings.Validate();
            }








        }
    }
}