// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes Protocol and thumbprint of Windows Remote Management listener
    /// </summary>
    public partial class WinRMListener
    {
        /// <summary>
        /// Initializes a new instance of the WinRMListener class.
        /// </summary>
        public WinRMListener()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WinRMListener class.
        /// </summary>

        /// <param name="protocol">Specifies the protocol of WinRM listener. &lt;br&gt;&lt;br&gt; Possible values are:
        /// &lt;br&gt;**http** &lt;br&gt;&lt;br&gt; **https**
        /// Possible values include: &#39;Http&#39;, &#39;Https&#39;</param>

        /// <param name="certificateUrl">This is the URL of a certificate that has been uploaded to Key Vault as a
        /// secret. For adding a secret to the Key Vault, see [Add a key or secret to
        /// the key
        /// vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
        /// In this case, your certificate needs to be It is the Base64 encoding of the
        /// following JSON Object which is encoded in UTF-8: &lt;br&gt;&lt;br&gt; {&lt;br&gt; 
        /// &#34;data&#34;:&#34;&lt;Base64-encoded-certificate&gt;&#34;,&lt;br&gt;  &#34;dataType&#34;:&#34;pfx&#34;,&lt;br&gt; 
        /// &#34;password&#34;:&#34;&lt;pfx-file-password&gt;&#34;&lt;br&gt;} &lt;br&gt; To install certificates on a
        /// virtual machine it is recommended to use the [Azure Key Vault virtual
        /// machine extension for
        /// Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for
        /// Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </param>
        public WinRMListener(ProtocolTypes? protocol = default(ProtocolTypes?), string certificateUrl = default(string))

        {
            this.Protocol = protocol;
            this.CertificateUrl = certificateUrl;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the protocol of WinRM listener. &lt;br&gt;&lt;br&gt; Possible
        /// values are: &lt;br&gt;**http** &lt;br&gt;&lt;br&gt; **https** Possible values include: &#39;Http&#39;, &#39;Https&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "protocol")]
        public ProtocolTypes? Protocol {get; set; }

        /// <summary>
        /// Gets or sets this is the URL of a certificate that has been uploaded to Key
        /// Vault as a secret. For adding a secret to the Key Vault, see [Add a key or
        /// secret to the key
        /// vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
        /// In this case, your certificate needs to be It is the Base64 encoding of the
        /// following JSON Object which is encoded in UTF-8: &lt;br&gt;&lt;br&gt; {&lt;br&gt; 
        /// &#34;data&#34;:&#34;&lt;Base64-encoded-certificate&gt;&#34;,&lt;br&gt;  &#34;dataType&#34;:&#34;pfx&#34;,&lt;br&gt; 
        /// &#34;password&#34;:&#34;&lt;pfx-file-password&gt;&#34;&lt;br&gt;} &lt;br&gt; To install certificates on a
        /// virtual machine it is recommended to use the [Azure Key Vault virtual
        /// machine extension for
        /// Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)
        /// or the [Azure Key Vault virtual machine extension for
        /// Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "certificateUrl")]
        public string CertificateUrl {get; set; }
    }
}