// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies Windows operating system settings on the virtual machine.
    /// </summary>
    public partial class WindowsConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the WindowsConfiguration class.
        /// </summary>
        public WindowsConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WindowsConfiguration class.
        /// </summary>

        /// <param name="provisionVMAgent">Indicates whether virtual machine agent should be provisioned on the
        /// virtual machine. &lt;br&gt;&lt;br&gt; When this property is not specified in the
        /// request body, default behavior is to set it to true.  This will ensure that
        /// VM Agent is installed on the VM so that extensions can be added to the VM
        /// later.
        /// </param>

        /// <param name="enableAutomaticUpdates">Indicates whether Automatic Updates is enabled for the Windows virtual
        /// machine. Default value is true. &lt;br&gt;&lt;br&gt; For virtual machine scale sets,
        /// this property can be updated and updates will take effect on OS
        /// reprovisioning.
        /// </param>

        /// <param name="timeZone">Specifies the time zone of the virtual machine. e.g. &#34;Pacific Standard
        /// Time&#34;. &lt;br&gt;&lt;br&gt; Possible values can be
        /// [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
        /// value from time zones returned by
        /// [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </param>

        /// <param name="additionalUnattendContent">Specifies additional base-64 encoded XML formatted information that can be
        /// included in the Unattend.xml file, which is used by Windows Setup.
        /// </param>

        /// <param name="patchSettings">[Preview Feature] Specifies settings related to VM Guest Patching on
        /// Windows.
        /// </param>

        /// <param name="winRm">Specifies the Windows Remote Management listeners. This enables remote
        /// Windows PowerShell.
        /// </param>

        /// <param name="enableVMAgentPlatformUpdates">Indicates whether VMAgent Platform Updates is enabled for the Windows
        /// virtual machine. Default value is false.
        /// </param>
        public WindowsConfiguration(bool? provisionVMAgent = default(bool?), bool? enableAutomaticUpdates = default(bool?), string timeZone = default(string), System.Collections.Generic.IList<AdditionalUnattendContent> additionalUnattendContent = default(System.Collections.Generic.IList<AdditionalUnattendContent>), PatchSettings patchSettings = default(PatchSettings), WinRMConfiguration winRm = default(WinRMConfiguration), bool? enableVMAgentPlatformUpdates = default(bool?))

        {
            this.ProvisionVMAgent = provisionVMAgent;
            this.EnableAutomaticUpdates = enableAutomaticUpdates;
            this.TimeZone = timeZone;
            this.AdditionalUnattendContent = additionalUnattendContent;
            this.PatchSettings = patchSettings;
            this.WinRm = winRm;
            this.EnableVMAgentPlatformUpdates = enableVMAgentPlatformUpdates;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets indicates whether virtual machine agent should be provisioned
        /// on the virtual machine. &lt;br&gt;&lt;br&gt; When this property is not specified in the
        /// request body, default behavior is to set it to true.  This will ensure that
        /// VM Agent is installed on the VM so that extensions can be added to the VM
        /// later.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisionVMAgent")]
        public bool? ProvisionVMAgent {get; set; }

        /// <summary>
        /// Gets or sets indicates whether Automatic Updates is enabled for the Windows
        /// virtual machine. Default value is true. &lt;br&gt;&lt;br&gt; For virtual machine scale
        /// sets, this property can be updated and updates will take effect on OS
        /// reprovisioning.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableAutomaticUpdates")]
        public bool? EnableAutomaticUpdates {get; set; }

        /// <summary>
        /// Gets or sets specifies the time zone of the virtual machine. e.g. &#34;Pacific
        /// Standard Time&#34;. &lt;br&gt;&lt;br&gt; Possible values can be
        /// [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)
        /// value from time zones returned by
        /// [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeZone")]
        public string TimeZone {get; set; }

        /// <summary>
        /// Gets or sets specifies additional base-64 encoded XML formatted information
        /// that can be included in the Unattend.xml file, which is used by Windows
        /// Setup.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalUnattendContent")]
        public System.Collections.Generic.IList<AdditionalUnattendContent> AdditionalUnattendContent {get; set; }

        /// <summary>
        /// Gets or sets [Preview Feature] Specifies settings related to VM Guest
        /// Patching on Windows.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "patchSettings")]
        public PatchSettings PatchSettings {get; set; }

        /// <summary>
        /// Gets or sets specifies the Windows Remote Management listeners. This
        /// enables remote Windows PowerShell.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "winRM")]
        public WinRMConfiguration WinRm {get; set; }

        /// <summary>
        /// Gets or sets indicates whether VMAgent Platform Updates is enabled for the
        /// Windows virtual machine. Default value is false.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "enableVMAgentPlatformUpdates")]
        public bool? EnableVMAgentPlatformUpdates {get; set; }
    }
}