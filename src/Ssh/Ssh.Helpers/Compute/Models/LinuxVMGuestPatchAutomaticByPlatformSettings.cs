// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Specifies additional settings to be applied when patch mode
    /// AutomaticByPlatform is selected in Linux patch settings.
    /// </summary>
    public partial class LinuxVMGuestPatchAutomaticByPlatformSettings
    {
        /// <summary>
        /// Initializes a new instance of the LinuxVMGuestPatchAutomaticByPlatformSettings class.
        /// </summary>
        public LinuxVMGuestPatchAutomaticByPlatformSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinuxVMGuestPatchAutomaticByPlatformSettings class.
        /// </summary>

        /// <param name="rebootSetting">Specifies the reboot setting for all AutomaticByPlatform patch installation
        /// operations.
        /// Possible values include: &#39;Unknown&#39;, &#39;IfRequired&#39;, &#39;Never&#39;, &#39;Always&#39;</param>
        public LinuxVMGuestPatchAutomaticByPlatformSettings(string rebootSetting = default(string))

        {
            this.RebootSetting = rebootSetting;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the reboot setting for all AutomaticByPlatform patch
        /// installation operations. Possible values include: &#39;Unknown&#39;, &#39;IfRequired&#39;, &#39;Never&#39;, &#39;Always&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "rebootSetting")]
        public string RebootSetting {get; set; }
    }
}