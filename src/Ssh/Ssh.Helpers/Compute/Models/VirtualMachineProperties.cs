// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes the properties of a Virtual Machine.
    /// </summary>
    public partial class VirtualMachineProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachineProperties class.
        /// </summary>
        public VirtualMachineProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachineProperties class.
        /// </summary>

        /// <param name="hardwareProfile">Specifies the hardware settings for the virtual machine.
        /// </param>

        /// <param name="storageProfile">Specifies the storage settings for the virtual machine disks.
        /// </param>

        /// <param name="additionalCapabilities">Specifies additional capabilities enabled or disabled on the virtual
        /// machine.
        /// </param>

        /// <param name="osProfile">Specifies the operating system settings used while creating the virtual
        /// machine. Some of the settings cannot be changed once VM is provisioned.
        /// </param>

        /// <param name="networkProfile">Specifies the network interfaces of the virtual machine.
        /// </param>

        /// <param name="securityProfile">Specifies the Security related profile settings for the virtual machine.
        /// </param>

        /// <param name="diagnosticsProfile">Specifies the boot diagnostic settings state. &lt;br&gt;&lt;br&gt;Minimum api-version:
        /// 2015-06-15.
        /// </param>

        /// <param name="availabilitySet">Specifies information about the availability set that the virtual machine
        /// should be assigned to. Virtual machines specified in the same availability
        /// set are allocated to different nodes to maximize availability. For more
        /// information about availability sets, see [Availability sets
        /// overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
        /// &lt;br&gt;&lt;br&gt; For more information on Azure planned maintenance, see
        /// [Maintenance and updates for Virtual Machines in
        /// Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates)
        /// &lt;br&gt;&lt;br&gt; Currently, a VM can only be added to availability set at creation
        /// time. The availability set to which the VM is being added should be under
        /// the same resource group as the availability set resource. An existing VM
        /// cannot be added to an availability set. &lt;br&gt;&lt;br&gt;This property cannot exist
        /// along with a non-null properties.virtualMachineScaleSet reference.
        /// </param>

        /// <param name="virtualMachineScaleSet">Specifies information about the virtual machine scale set that the virtual
        /// machine should be assigned to. Virtual machines specified in the same
        /// virtual machine scale set are allocated to different nodes to maximize
        /// availability. Currently, a VM can only be added to virtual machine scale
        /// set at creation time. An existing VM cannot be added to a virtual machine
        /// scale set. &lt;br&gt;&lt;br&gt;This property cannot exist along with a non-null
        /// properties.availabilitySet reference. &lt;br&gt;&lt;br&gt;Minimum api‐version:
        /// 2019‐03‐01
        /// </param>

        /// <param name="proximityPlacementGroup">Specifies information about the proximity placement group that the virtual
        /// machine should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </param>

        /// <param name="priority">Specifies the priority for the virtual machine. &lt;br&gt;&lt;br&gt;Minimum
        /// api-version: 2019-03-01
        /// Possible values include: &#39;Regular&#39;, &#39;Low&#39;, &#39;Spot&#39;</param>

        /// <param name="evictionPolicy">Specifies the eviction policy for the Azure Spot virtual machine and Azure
        /// Spot scale set. &lt;br&gt;&lt;br&gt;For Azure Spot virtual machines, both &#39;Deallocate&#39;
        /// and &#39;Delete&#39; are supported and the minimum api-version is 2019-03-01.
        /// &lt;br&gt;&lt;br&gt;For Azure Spot scale sets, both &#39;Deallocate&#39; and &#39;Delete&#39; are
        /// supported and the minimum api-version is 2017-10-30-preview.
        /// Possible values include: &#39;Deallocate&#39;, &#39;Delete&#39;</param>

        /// <param name="billingProfile">Specifies the billing related details of a Azure Spot virtual machine.
        /// &lt;br&gt;&lt;br&gt;Minimum api-version: 2019-03-01.
        /// </param>

        /// <param name="host">Specifies information about the dedicated host that the virtual machine
        /// resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-10-01.
        /// </param>

        /// <param name="hostGroup">Specifies information about the dedicated host group that the virtual
        /// machine resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01. &lt;br&gt;&lt;br&gt;NOTE:
        /// User cannot specify both host and hostGroup properties.
        /// </param>

        /// <param name="provisioningState">The provisioning state, which only appears in the response.
        /// </param>

        /// <param name="instanceView">The virtual machine instance view.
        /// </param>

        /// <param name="licenseType">Specifies that the image or disk that is being used was licensed
        /// on-premises. &lt;br&gt;&lt;br&gt; Possible values for Windows Server operating system
        /// are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; Possible
        /// values for Linux Server operating system are: &lt;br&gt;&lt;br&gt; RHEL_BYOS (for RHEL)
        /// &lt;br&gt;&lt;br&gt; SLES_BYOS (for SUSE) &lt;br&gt;&lt;br&gt; For more information, see [Azure
        /// Hybrid Use Benefit for Windows
        /// Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// &lt;br&gt;&lt;br&gt; [Azure Hybrid Use Benefit for Linux
        /// Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </param>

        /// <param name="vmId">Specifies the VM unique ID which is a 128-bits identifier that is encoded
        /// and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS
        /// commands.
        /// </param>

        /// <param name="extensionsTimeBudget">Specifies the time alloted for all extensions to start. The time duration
        /// should be between 15 minutes and 120 minutes (inclusive) and should be
        /// specified in ISO 8601 format. The default value is 90 minutes (PT1H30M).
        /// &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
        /// </param>

        /// <param name="platformFaultDomain">Specifies the scale set logical fault domain into which the Virtual Machine
        /// will be created. By default, the Virtual Machine will by automatically
        /// assigned to a fault domain that best maintains balance across available
        /// fault domains.&lt;br&gt;&lt;li&gt;This is applicable only if the
        /// &#39;virtualMachineScaleSet&#39; property of this Virtual Machine is set.&lt;li&gt;The
        /// Virtual Machine Scale Set that is referenced, must have
        /// &#39;platformFaultDomainCount&#39; &amp;gt; 1.&lt;li&gt;This property cannot be updated once
        /// the Virtual Machine is created.&lt;li&gt;Fault domain assignment can be viewed in
        /// the Virtual Machine Instance View.&lt;br&gt;&lt;br&gt;Minimum api‐version: 2020‐12‐01
        /// </param>

        /// <param name="scheduledEventsProfile">Specifies Scheduled Event related configurations.
        /// </param>

        /// <param name="userData">UserData for the VM, which must be base-64 encoded. Customer should not
        /// pass any secrets in here. &lt;br&gt;&lt;br&gt;Minimum api-version: 2021-03-01
        /// </param>

        /// <param name="capacityReservation">Specifies information about the capacity reservation that is used to
        /// allocate virtual machine. &lt;br&gt;&lt;br&gt;Minimum api-version: 2021-04-01.
        /// </param>

        /// <param name="applicationProfile">Specifies the gallery applications that should be made available to the
        /// VM/VMSS
        /// </param>

        /// <param name="timeCreated">Specifies the time at which the Virtual Machine resource was
        /// created.&lt;br&gt;&lt;br&gt;Minimum api-version: 2021-11-01.
        /// </param>
        public VirtualMachineProperties(HardwareProfile hardwareProfile = default(HardwareProfile), StorageProfile storageProfile = default(StorageProfile), AdditionalCapabilities additionalCapabilities = default(AdditionalCapabilities), OSProfile osProfile = default(OSProfile), NetworkProfile networkProfile = default(NetworkProfile), SecurityProfile securityProfile = default(SecurityProfile), DiagnosticsProfile diagnosticsProfile = default(DiagnosticsProfile), SubResource availabilitySet = default(SubResource), SubResource virtualMachineScaleSet = default(SubResource), SubResource proximityPlacementGroup = default(SubResource), string priority = default(string), string evictionPolicy = default(string), BillingProfile billingProfile = default(BillingProfile), SubResource host = default(SubResource), SubResource hostGroup = default(SubResource), string provisioningState = default(string), VirtualMachineInstanceView instanceView = default(VirtualMachineInstanceView), string licenseType = default(string), string vmId = default(string), string extensionsTimeBudget = default(string), int? platformFaultDomain = default(int?), ScheduledEventsProfile scheduledEventsProfile = default(ScheduledEventsProfile), string userData = default(string), CapacityReservationProfile capacityReservation = default(CapacityReservationProfile), ApplicationProfile applicationProfile = default(ApplicationProfile), System.DateTime? timeCreated = default(System.DateTime?))

        {
            this.HardwareProfile = hardwareProfile;
            this.StorageProfile = storageProfile;
            this.AdditionalCapabilities = additionalCapabilities;
            this.OSProfile = osProfile;
            this.NetworkProfile = networkProfile;
            this.SecurityProfile = securityProfile;
            this.DiagnosticsProfile = diagnosticsProfile;
            this.AvailabilitySet = availabilitySet;
            this.VirtualMachineScaleSet = virtualMachineScaleSet;
            this.ProximityPlacementGroup = proximityPlacementGroup;
            this.Priority = priority;
            this.EvictionPolicy = evictionPolicy;
            this.BillingProfile = billingProfile;
            this.Host = host;
            this.HostGroup = hostGroup;
            this.ProvisioningState = provisioningState;
            this.InstanceView = instanceView;
            this.LicenseType = licenseType;
            this.VMId = vmId;
            this.ExtensionsTimeBudget = extensionsTimeBudget;
            this.PlatformFaultDomain = platformFaultDomain;
            this.ScheduledEventsProfile = scheduledEventsProfile;
            this.UserData = userData;
            this.CapacityReservation = capacityReservation;
            this.ApplicationProfile = applicationProfile;
            this.TimeCreated = timeCreated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets specifies the hardware settings for the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hardwareProfile")]
        public HardwareProfile HardwareProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the storage settings for the virtual machine disks.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "storageProfile")]
        public StorageProfile StorageProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies additional capabilities enabled or disabled on the
        /// virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalCapabilities")]
        public AdditionalCapabilities AdditionalCapabilities {get; set; }

        /// <summary>
        /// Gets or sets specifies the operating system settings used while creating
        /// the virtual machine. Some of the settings cannot be changed once VM is
        /// provisioned.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "osProfile")]
        public OSProfile OSProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the network interfaces of the virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkProfile")]
        public NetworkProfile NetworkProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the Security related profile settings for the
        /// virtual machine.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "securityProfile")]
        public SecurityProfile SecurityProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies the boot diagnostic settings state. &lt;br&gt;&lt;br&gt;Minimum
        /// api-version: 2015-06-15.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "diagnosticsProfile")]
        public DiagnosticsProfile DiagnosticsProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the availability set that the
        /// virtual machine should be assigned to. Virtual machines specified in the
        /// same availability set are allocated to different nodes to maximize
        /// availability. For more information about availability sets, see
        /// [Availability sets
        /// overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview).
        /// &lt;br&gt;&lt;br&gt; For more information on Azure planned maintenance, see
        /// [Maintenance and updates for Virtual Machines in
        /// Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates)
        /// &lt;br&gt;&lt;br&gt; Currently, a VM can only be added to availability set at creation
        /// time. The availability set to which the VM is being added should be under
        /// the same resource group as the availability set resource. An existing VM
        /// cannot be added to an availability set. &lt;br&gt;&lt;br&gt;This property cannot exist
        /// along with a non-null properties.virtualMachineScaleSet reference.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "availabilitySet")]
        public SubResource AvailabilitySet {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the virtual machine scale set that
        /// the virtual machine should be assigned to. Virtual machines specified in
        /// the same virtual machine scale set are allocated to different nodes to
        /// maximize availability. Currently, a VM can only be added to virtual machine
        /// scale set at creation time. An existing VM cannot be added to a virtual
        /// machine scale set. &lt;br&gt;&lt;br&gt;This property cannot exist along with a non-null
        /// properties.availabilitySet reference. &lt;br&gt;&lt;br&gt;Minimum api‐version:
        /// 2019‐03‐01
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "virtualMachineScaleSet")]
        public SubResource VirtualMachineScaleSet {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the proximity placement group that
        /// the virtual machine should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version:
        /// 2018-04-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "proximityPlacementGroup")]
        public SubResource ProximityPlacementGroup {get; set; }

        /// <summary>
        /// Gets or sets specifies the priority for the virtual machine.
        /// &lt;br&gt;&lt;br&gt;Minimum api-version: 2019-03-01 Possible values include: &#39;Regular&#39;, &#39;Low&#39;, &#39;Spot&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "priority")]
        public string Priority {get; set; }

        /// <summary>
        /// Gets or sets specifies the eviction policy for the Azure Spot virtual
        /// machine and Azure Spot scale set. &lt;br&gt;&lt;br&gt;For Azure Spot virtual machines,
        /// both &#39;Deallocate&#39; and &#39;Delete&#39; are supported and the minimum api-version is
        /// 2019-03-01. &lt;br&gt;&lt;br&gt;For Azure Spot scale sets, both &#39;Deallocate&#39; and
        /// &#39;Delete&#39; are supported and the minimum api-version is 2017-10-30-preview. Possible values include: &#39;Deallocate&#39;, &#39;Delete&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "evictionPolicy")]
        public string EvictionPolicy {get; set; }

        /// <summary>
        /// Gets or sets specifies the billing related details of a Azure Spot virtual
        /// machine. &lt;br&gt;&lt;br&gt;Minimum api-version: 2019-03-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "billingProfile")]
        public BillingProfile BillingProfile {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the dedicated host that the
        /// virtual machine resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-10-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "host")]
        public SubResource Host {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the dedicated host group that the
        /// virtual machine resides in. &lt;br&gt;&lt;br&gt;Minimum api-version: 2020-06-01.
        /// &lt;br&gt;&lt;br&gt;NOTE: User cannot specify both host and hostGroup properties.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hostGroup")]
        public SubResource HostGroup {get; set; }

        /// <summary>
        /// Gets the provisioning state, which only appears in the response.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState {get; private set; }

        /// <summary>
        /// Gets the virtual machine instance view.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "instanceView")]
        public VirtualMachineInstanceView InstanceView {get; private set; }

        /// <summary>
        /// Gets or sets specifies that the image or disk that is being used was
        /// licensed on-premises. &lt;br&gt;&lt;br&gt; Possible values for Windows Server operating
        /// system are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt;
        /// Possible values for Linux Server operating system are: &lt;br&gt;&lt;br&gt; RHEL_BYOS
        /// (for RHEL) &lt;br&gt;&lt;br&gt; SLES_BYOS (for SUSE) &lt;br&gt;&lt;br&gt; For more information, see
        /// [Azure Hybrid Use Benefit for Windows
        /// Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)
        /// &lt;br&gt;&lt;br&gt; [Azure Hybrid Use Benefit for Linux
        /// Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)
        /// &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "licenseType")]
        public string LicenseType {get; set; }

        /// <summary>
        /// Gets specifies the VM unique ID which is a 128-bits identifier that is
        /// encoded and stored in all Azure IaaS VMs SMBIOS and can be read using
        /// platform BIOS commands.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vmId")]
        public string VMId {get; private set; }

        /// <summary>
        /// Gets or sets specifies the time alloted for all extensions to start. The
        /// time duration should be between 15 minutes and 120 minutes (inclusive) and
        /// should be specified in ISO 8601 format. The default value is 90 minutes
        /// (PT1H30M). &lt;br&gt;&lt;br&gt; Minimum api-version: 2020-06-01
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "extensionsTimeBudget")]
        public string ExtensionsTimeBudget {get; set; }

        /// <summary>
        /// Gets or sets specifies the scale set logical fault domain into which the
        /// Virtual Machine will be created. By default, the Virtual Machine will by
        /// automatically assigned to a fault domain that best maintains balance across
        /// available fault domains.&lt;br&gt;&lt;li&gt;This is applicable only if the
        /// &#39;virtualMachineScaleSet&#39; property of this Virtual Machine is set.&lt;li&gt;The
        /// Virtual Machine Scale Set that is referenced, must have
        /// &#39;platformFaultDomainCount&#39; &amp;gt; 1.&lt;li&gt;This property cannot be updated once
        /// the Virtual Machine is created.&lt;li&gt;Fault domain assignment can be viewed in
        /// the Virtual Machine Instance View.&lt;br&gt;&lt;br&gt;Minimum api‐version: 2020‐12‐01
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "platformFaultDomain")]
        public int? PlatformFaultDomain {get; set; }

        /// <summary>
        /// Gets or sets specifies Scheduled Event related configurations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "scheduledEventsProfile")]
        public ScheduledEventsProfile ScheduledEventsProfile {get; set; }

        /// <summary>
        /// Gets or sets userData for the VM, which must be base-64 encoded. Customer
        /// should not pass any secrets in here. &lt;br&gt;&lt;br&gt;Minimum api-version:
        /// 2021-03-01
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "userData")]
        public string UserData {get; set; }

        /// <summary>
        /// Gets or sets specifies information about the capacity reservation that is
        /// used to allocate virtual machine. &lt;br&gt;&lt;br&gt;Minimum api-version: 2021-04-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "capacityReservation")]
        public CapacityReservationProfile CapacityReservation {get; set; }

        /// <summary>
        /// Gets or sets specifies the gallery applications that should be made
        /// available to the VM/VMSS
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "applicationProfile")]
        public ApplicationProfile ApplicationProfile {get; set; }

        /// <summary>
        /// Gets specifies the time at which the Virtual Machine resource was
        /// created.&lt;br&gt;&lt;br&gt;Minimum api-version: 2021-11-01.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "timeCreated")]
        public System.DateTime? TimeCreated {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.StorageProfile != null)
            {
                this.StorageProfile.Validate();
            }






















        }
    }
}