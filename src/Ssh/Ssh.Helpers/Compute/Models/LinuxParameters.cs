// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Input for InstallPatches on a Linux VM, as directly received by the API
    /// </summary>
    public partial class LinuxParameters
    {
        /// <summary>
        /// Initializes a new instance of the LinuxParameters class.
        /// </summary>
        public LinuxParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LinuxParameters class.
        /// </summary>

        /// <param name="classificationsToInclude">The update classifications to select when installing patches for Linux.
        /// </param>

        /// <param name="packageNameMasksToInclude">packages to include in the patch operation. Format:
        /// packageName_packageVersion
        /// </param>

        /// <param name="packageNameMasksToExclude">packages to exclude in the patch operation. Format:
        /// packageName_packageVersion
        /// </param>

        /// <param name="maintenanceRunId">This is used as a maintenance run identifier for Auto VM Guest Patching in
        /// Linux.
        /// </param>
        public LinuxParameters(System.Collections.Generic.IList<string> classificationsToInclude = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> packageNameMasksToInclude = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> packageNameMasksToExclude = default(System.Collections.Generic.IList<string>), string maintenanceRunId = default(string))

        {
            this.ClassificationsToInclude = classificationsToInclude;
            this.PackageNameMasksToInclude = packageNameMasksToInclude;
            this.PackageNameMasksToExclude = packageNameMasksToExclude;
            this.MaintenanceRunId = maintenanceRunId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the update classifications to select when installing patches
        /// for Linux.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "classificationsToInclude")]
        public System.Collections.Generic.IList<string> ClassificationsToInclude {get; set; }

        /// <summary>
        /// Gets or sets packages to include in the patch operation. Format:
        /// packageName_packageVersion
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageNameMasksToInclude")]
        public System.Collections.Generic.IList<string> PackageNameMasksToInclude {get; set; }

        /// <summary>
        /// Gets or sets packages to exclude in the patch operation. Format:
        /// packageName_packageVersion
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "packageNameMasksToExclude")]
        public System.Collections.Generic.IList<string> PackageNameMasksToExclude {get; set; }

        /// <summary>
        /// Gets or sets this is used as a maintenance run identifier for Auto VM Guest
        /// Patching in Linux.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "maintenanceRunId")]
        public string MaintenanceRunId {get; set; }
    }
}