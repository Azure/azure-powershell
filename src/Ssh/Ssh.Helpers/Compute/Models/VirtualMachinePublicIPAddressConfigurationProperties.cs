// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Ssh.Helpers.Compute.Models
{
    using System.Linq;

    /// <summary>
    /// Describes a virtual machines IP Configuration&#39;s PublicIPAddress
    /// configuration
    /// </summary>
    public partial class VirtualMachinePublicIPAddressConfigurationProperties
    {
        /// <summary>
        /// Initializes a new instance of the VirtualMachinePublicIPAddressConfigurationProperties class.
        /// </summary>
        public VirtualMachinePublicIPAddressConfigurationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VirtualMachinePublicIPAddressConfigurationProperties class.
        /// </summary>

        /// <param name="idleTimeoutInMinutes">The idle timeout of the public IP address.
        /// </param>

        /// <param name="deleteOption">Specify what happens to the public IP address when the VM is deleted
        /// Possible values include: &#39;Delete&#39;, &#39;Detach&#39;</param>

        /// <param name="dnsSettings">The dns settings to be applied on the publicIP addresses .
        /// </param>

        /// <param name="ipTags">The list of IP tags associated with the public IP address.
        /// </param>

        /// <param name="publicIPPrefix">The PublicIPPrefix from which to allocate publicIP addresses.
        /// </param>

        /// <param name="publicIPAddressVersion">Available from Api-Version 2019-07-01 onwards, it represents whether the
        /// specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
        /// Possible values are: &#39;IPv4&#39; and &#39;IPv6&#39;.
        /// Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;</param>

        /// <param name="publicIPAllocationMethod">Specify the public IP allocation type
        /// Possible values include: &#39;Dynamic&#39;, &#39;Static&#39;</param>
        public VirtualMachinePublicIPAddressConfigurationProperties(int? idleTimeoutInMinutes = default(int?), string deleteOption = default(string), VirtualMachinePublicIPAddressDnsSettingsConfiguration dnsSettings = default(VirtualMachinePublicIPAddressDnsSettingsConfiguration), System.Collections.Generic.IList<VirtualMachineIpTag> ipTags = default(System.Collections.Generic.IList<VirtualMachineIpTag>), SubResource publicIPPrefix = default(SubResource), string publicIPAddressVersion = default(string), string publicIPAllocationMethod = default(string))

        {
            this.IdleTimeoutInMinutes = idleTimeoutInMinutes;
            this.DeleteOption = deleteOption;
            this.DnsSettings = dnsSettings;
            this.IPTags = ipTags;
            this.PublicIPPrefix = publicIPPrefix;
            this.PublicIPAddressVersion = publicIPAddressVersion;
            this.PublicIPAllocationMethod = publicIPAllocationMethod;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the idle timeout of the public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "idleTimeoutInMinutes")]
        public int? IdleTimeoutInMinutes {get; set; }

        /// <summary>
        /// Gets or sets specify what happens to the public IP address when the VM is
        /// deleted Possible values include: &#39;Delete&#39;, &#39;Detach&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deleteOption")]
        public string DeleteOption {get; set; }

        /// <summary>
        /// Gets or sets the dns settings to be applied on the publicIP addresses .
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dnsSettings")]
        public VirtualMachinePublicIPAddressDnsSettingsConfiguration DnsSettings {get; set; }

        /// <summary>
        /// Gets or sets the list of IP tags associated with the public IP address.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ipTags")]
        public System.Collections.Generic.IList<VirtualMachineIpTag> IPTags {get; set; }

        /// <summary>
        /// Gets or sets the PublicIPPrefix from which to allocate publicIP addresses.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPPrefix")]
        public SubResource PublicIPPrefix {get; set; }

        /// <summary>
        /// Gets or sets available from Api-Version 2019-07-01 onwards, it represents
        /// whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as
        /// IPv4. Possible values are: &#39;IPv4&#39; and &#39;IPv6&#39;. Possible values include: &#39;IPv4&#39;, &#39;IPv6&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPAddressVersion")]
        public string PublicIPAddressVersion {get; set; }

        /// <summary>
        /// Gets or sets specify the public IP allocation type Possible values include: &#39;Dynamic&#39;, &#39;Static&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "publicIPAllocationMethod")]
        public string PublicIPAllocationMethod {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.DnsSettings != null)
            {
                this.DnsSettings.Validate();
            }




        }
    }
}