// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Encryption key containing details about key to encrypt different keys.</summary>
    public partial class KeyEncryptionKey :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IKeyEncryptionKey,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IKeyEncryptionKeyInternal
    {

        /// <summary>Backing field for <see cref="IdentityProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IIdentityProperties _identityProperty;

        /// <summary>Managed identity properties used for key encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IIdentityProperties IdentityProperty { get => (this._identityProperty = this._identityProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IdentityProperties()); set => this._identityProperty = value; }

        /// <summary>Backing field for <see cref="KekType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.KekType _kekType;

        /// <summary>Type of encryption key used for key encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.KekType KekType { get => this._kekType; set => this._kekType = value; }

        /// <summary>Backing field for <see cref="KekUrl" /> property.</summary>
        private string _kekUrl;

        /// <summary>Key encryption key. It is required in case of Customer managed KekType.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public string KekUrl { get => this._kekUrl; set => this._kekUrl = value; }

        /// <summary>Backing field for <see cref="KekVaultResourceId" /> property.</summary>
        private string _kekVaultResourceId;

        /// <summary>Kek vault resource id. It is required in case of Customer managed KekType.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public string KekVaultResourceId { get => this._kekVaultResourceId; set => this._kekVaultResourceId = value; }

        /// <summary>Creates an new <see cref="KeyEncryptionKey" /> instance.</summary>
        public KeyEncryptionKey()
        {

        }
    }
    /// Encryption key containing details about key to encrypt different keys.
    public partial interface IKeyEncryptionKey :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>Managed identity properties used for key encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Managed identity properties used for key encryption.",
        SerializedName = @"identityProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IIdentityProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IIdentityProperties IdentityProperty { get; set; }
        /// <summary>Type of encryption key used for key encryption.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of encryption key used for key encryption.",
        SerializedName = @"kekType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.KekType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.KekType KekType { get; set; }
        /// <summary>Key encryption key. It is required in case of Customer managed KekType.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key encryption key. It is required in case of Customer managed KekType.",
        SerializedName = @"kekUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KekUrl { get; set; }
        /// <summary>Kek vault resource id. It is required in case of Customer managed KekType.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kek vault resource id. It is required in case of Customer managed KekType.",
        SerializedName = @"kekVaultResourceID",
        PossibleTypes = new [] { typeof(string) })]
        string KekVaultResourceId { get; set; }

    }
    /// Encryption key containing details about key to encrypt different keys.
    internal partial interface IKeyEncryptionKeyInternal

    {
        /// <summary>Managed identity properties used for key encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IIdentityProperties IdentityProperty { get; set; }
        /// <summary>Type of encryption key used for key encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.KekType KekType { get; set; }
        /// <summary>Key encryption key. It is required in case of Customer managed KekType.</summary>
        string KekUrl { get; set; }
        /// <summary>Kek vault resource id. It is required in case of Customer managed KekType.</summary>
        string KekVaultResourceId { get; set; }

    }
}