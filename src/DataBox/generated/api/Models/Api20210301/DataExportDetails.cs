// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Details of the data to be used for exporting data from azure.</summary>
    public partial class DataExportDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataExportDetails,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataExportDetailsInternal
    {

        /// <summary>Backing field for <see cref="AccountDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetails _accountDetail;

        /// <summary>Account details of the data to be transferred</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetails AccountDetail { get => (this._accountDetail = this._accountDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.DataAccountDetails()); set => this._accountDetail = value; }

        /// <summary>Account Type of the data to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType AccountDetailDataAccountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetailsInternal)AccountDetail).DataAccountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetailsInternal)AccountDetail).DataAccountType = value ; }

        /// <summary>
        /// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If
        /// this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements
        /// : Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one
        /// number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets,
        /// numbers and these characters : @#\-$%^!+=;:_()]+
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string AccountDetailSharePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetailsInternal)AccountDetail).SharePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetailsInternal)AccountDetail).SharePassword = value ?? null; }

        /// <summary>Backing field for <see cref="LogCollectionLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.LogCollectionLevel? _logCollectionLevel;

        /// <summary>Level of the logs to be collected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.LogCollectionLevel? LogCollectionLevel { get => this._logCollectionLevel; set => this._logCollectionLevel = value; }

        /// <summary>Internal Acessors for AccountDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataExportDetailsInternal.AccountDetail { get => (this._accountDetail = this._accountDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.DataAccountDetails()); set { {_accountDetail = value;} } }

        /// <summary>Backing field for <see cref="TransferConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferConfiguration _transferConfiguration;

        /// <summary>Configuration for the data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferConfiguration TransferConfiguration { get => (this._transferConfiguration = this._transferConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.TransferConfiguration()); set => this._transferConfiguration = value; }

        /// <summary>Creates an new <see cref="DataExportDetails" /> instance.</summary>
        public DataExportDetails()
        {

        }
    }
    /// Details of the data to be used for exporting data from azure.
    public partial interface IDataExportDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>Account Type of the data to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Account Type of the data to be transferred.",
        SerializedName = @"dataAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType AccountDetailDataAccountType { get; set; }
        /// <summary>
        /// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If
        /// this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements
        /// : Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one
        /// number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets,
        /// numbers and these characters : @#\-$%^!+=;:_()]+
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\-$%^!+=;:_()]+",
        SerializedName = @"sharePassword",
        PossibleTypes = new [] { typeof(string) })]
        string AccountDetailSharePassword { get; set; }
        /// <summary>Level of the logs to be collected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Level of the logs to be collected.",
        SerializedName = @"logCollectionLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.LogCollectionLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.LogCollectionLevel? LogCollectionLevel { get; set; }
        /// <summary>Configuration for the data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Configuration for the data transfer.",
        SerializedName = @"transferConfiguration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferConfiguration TransferConfiguration { get; set; }

    }
    /// Details of the data to be used for exporting data from azure.
    internal partial interface IDataExportDetailsInternal

    {
        /// <summary>Account details of the data to be transferred</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IDataAccountDetails AccountDetail { get; set; }
        /// <summary>Account Type of the data to be transferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType AccountDetailDataAccountType { get; set; }
        /// <summary>
        /// Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If
        /// this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements
        /// : Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one
        /// number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets,
        /// numbers and these characters : @#\-$%^!+=;:_()]+
        /// </summary>
        string AccountDetailSharePassword { get; set; }
        /// <summary>Level of the logs to be collected.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.LogCollectionLevel? LogCollectionLevel { get; set; }
        /// <summary>Configuration for the data transfer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferConfiguration TransferConfiguration { get; set; }

    }
}