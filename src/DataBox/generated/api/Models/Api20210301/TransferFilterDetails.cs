// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Details of the filtering the transfer of data.</summary>
    public partial class TransferFilterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferFilterDetails,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferFilterDetailsInternal
    {

        /// <summary>Backing field for <see cref="AzureFileFilterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetails _azureFileFilterDetail;

        /// <summary>Filter details to transfer Azure files.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetails AzureFileFilterDetail { get => (this._azureFileFilterDetail = this._azureFileFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.AzureFileFilterDetails()); set => this._azureFileFilterDetail = value; }

        /// <summary>List of full path of the files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFilePathList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FilePathList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FilePathList = value ?? null /* arrayOf */; }

        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFilePrefixList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FilePrefixList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FilePrefixList = value ?? null /* arrayOf */; }

        /// <summary>List of file shares to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] AzureFileFilterDetailFileShareList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FileShareList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetailsInternal)AzureFileFilterDetail).FileShareList = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="BlobFilterDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetails _blobFilterDetail;

        /// <summary>Filter details to transfer blobs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetails BlobFilterDetail { get => (this._blobFilterDetail = this._blobFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.BlobFilterDetails()); set => this._blobFilterDetail = value; }

        /// <summary>List of full path of the blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailBlobPathList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).BlobPathList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).BlobPathList = value ?? null /* arrayOf */; }

        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailBlobPrefixList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).BlobPrefixList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).BlobPrefixList = value ?? null /* arrayOf */; }

        /// <summary>List of blob containers to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] BlobFilterDetailContainerList { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).ContainerList; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetailsInternal)BlobFilterDetail).ContainerList = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DataAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType _dataAccountType;

        /// <summary>Type of the account of data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType DataAccountType { get => this._dataAccountType; set => this._dataAccountType = value; }

        /// <summary>Backing field for <see cref="FilterFileDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IFilterFileDetails[] _filterFileDetail;

        /// <summary>Details of the filter files to be used for data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IFilterFileDetails[] FilterFileDetail { get => this._filterFileDetail; set => this._filterFileDetail = value; }

        /// <summary>Internal Acessors for AzureFileFilterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferFilterDetailsInternal.AzureFileFilterDetail { get => (this._azureFileFilterDetail = this._azureFileFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.AzureFileFilterDetails()); set { {_azureFileFilterDetail = value;} } }

        /// <summary>Internal Acessors for BlobFilterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetails Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransferFilterDetailsInternal.BlobFilterDetail { get => (this._blobFilterDetail = this._blobFilterDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.BlobFilterDetails()); set { {_blobFilterDetail = value;} } }

        /// <summary>Creates an new <see cref="TransferFilterDetails" /> instance.</summary>
        public TransferFilterDetails()
        {

        }
    }
    /// Details of the filtering the transfer of data.
    public partial interface ITransferFilterDetails :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>List of full path of the files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of full path of the files to be transferred.",
        SerializedName = @"filePathList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFilePathList { get; set; }
        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Prefix list of the Azure files to be transferred.",
        SerializedName = @"filePrefixList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFilePrefixList { get; set; }
        /// <summary>List of file shares to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of file shares to be transferred.",
        SerializedName = @"fileShareList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AzureFileFilterDetailFileShareList { get; set; }
        /// <summary>List of full path of the blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of full path of the blobs to be transferred.",
        SerializedName = @"blobPathList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailBlobPathList { get; set; }
        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Prefix list of the Azure blobs to be transferred.",
        SerializedName = @"blobPrefixList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailBlobPrefixList { get; set; }
        /// <summary>List of blob containers to be transferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of blob containers to be transferred.",
        SerializedName = @"containerList",
        PossibleTypes = new [] { typeof(string) })]
        string[] BlobFilterDetailContainerList { get; set; }
        /// <summary>Type of the account of data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Type of the account of data.",
        SerializedName = @"dataAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType DataAccountType { get; set; }
        /// <summary>Details of the filter files to be used for data transfer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the filter files to be used for data transfer.",
        SerializedName = @"filterFileDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IFilterFileDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IFilterFileDetails[] FilterFileDetail { get; set; }

    }
    /// Details of the filtering the transfer of data.
    internal partial interface ITransferFilterDetailsInternal

    {
        /// <summary>Filter details to transfer Azure files.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IAzureFileFilterDetails AzureFileFilterDetail { get; set; }
        /// <summary>List of full path of the files to be transferred.</summary>
        string[] AzureFileFilterDetailFilePathList { get; set; }
        /// <summary>Prefix list of the Azure files to be transferred.</summary>
        string[] AzureFileFilterDetailFilePrefixList { get; set; }
        /// <summary>List of file shares to be transferred.</summary>
        string[] AzureFileFilterDetailFileShareList { get; set; }
        /// <summary>Filter details to transfer blobs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IBlobFilterDetails BlobFilterDetail { get; set; }
        /// <summary>List of full path of the blobs to be transferred.</summary>
        string[] BlobFilterDetailBlobPathList { get; set; }
        /// <summary>Prefix list of the Azure blobs to be transferred.</summary>
        string[] BlobFilterDetailBlobPrefixList { get; set; }
        /// <summary>List of blob containers to be transferred.</summary>
        string[] BlobFilterDetailContainerList { get; set; }
        /// <summary>Type of the account of data.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DataAccountType DataAccountType { get; set; }
        /// <summary>Details of the filter files to be used for data transfer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IFilterFileDetails[] FilterFileDetail { get; set; }

    }
}