// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Request to validate preference of transport and data center.</summary>
    public partial class PreferencesValidationRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesValidationRequest,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesValidationRequestInternal,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequest"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequest __validationInputRequest = new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ValidationInputRequest();

        /// <summary>Backing field for <see cref="DeviceType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName _deviceType;

        /// <summary>Device type to be used for the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName DeviceType { get => this._deviceType; set => this._deviceType = value; }

        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).EncryptionPreferenceDoubleEncryption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption)""); }

        /// <summary>Internal Acessors for Preference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferences Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesValidationRequestInternal.Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.Preferences()); set { {_preference = value;} } }

        /// <summary>Internal Acessors for PreferenceEncryptionPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IEncryptionPreferences Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesValidationRequestInternal.PreferenceEncryptionPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).EncryptionPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).EncryptionPreference = value; }

        /// <summary>Internal Acessors for PreferenceTransportPreference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransportPreferences Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesValidationRequestInternal.PreferenceTransportPreference { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).TransportPreference; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).TransportPreference = value; }

        /// <summary>Backing field for <see cref="Preference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferences _preference;

        /// <summary>Preference of transport and data center.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferences Preference { get => (this._preference = this._preference ?? new Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.Preferences()); set => this._preference = value; }

        /// <summary>Preferred data center region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public string[] PreferencePreferredDataCenterRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).PreferredDataCenterRegion; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).PreferredDataCenterRegion = value ?? null /* arrayOf */; }

        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferencesInternal)Preference).TransportPreferencePreferredShipmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes)""); }

        /// <summary>Identifies the type of validation request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.ValidationInputDiscriminator ValidationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequestInternal)__validationInputRequest).ValidationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequestInternal)__validationInputRequest).ValidationType = value ; }

        /// <summary>Creates an new <see cref="PreferencesValidationRequest" /> instance.</summary>
        public PreferencesValidationRequest()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__validationInputRequest), __validationInputRequest);
            await eventListener.AssertObjectIsValid(nameof(__validationInputRequest), __validationInputRequest);
        }
    }
    /// Request to validate preference of transport and data center.
    public partial interface IPreferencesValidationRequest :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequest
    {
        /// <summary>Device type to be used for the job.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Device type to be used for the job.",
        SerializedName = @"deviceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName DeviceType { get; set; }
        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines secondary layer of software-based encryption enablement.",
        SerializedName = @"doubleEncryption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get; set; }
        /// <summary>Preferred data center region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferred data center region.",
        SerializedName = @"preferredDataCenterRegion",
        PossibleTypes = new [] { typeof(string) })]
        string[] PreferencePreferredDataCenterRegion { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates Shipment Logistics type that the customer preferred.",
        SerializedName = @"preferredShipmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
    /// Request to validate preference of transport and data center.
    internal partial interface IPreferencesValidationRequestInternal :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IValidationInputRequestInternal
    {
        /// <summary>Device type to be used for the job.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.SkuName DeviceType { get; set; }
        /// <summary>Defines secondary layer of software-based encryption enablement.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.DoubleEncryption? EncryptionPreferenceDoubleEncryption { get; set; }
        /// <summary>Preference of transport and data center.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IPreferences Preference { get; set; }
        /// <summary>Preferences related to the Encryption.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.IEncryptionPreferences PreferenceEncryptionPreference { get; set; }
        /// <summary>Preferred data center region.</summary>
        string[] PreferencePreferredDataCenterRegion { get; set; }
        /// <summary>Preferences related to the shipment logistics of the sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ITransportPreferences PreferenceTransportPreference { get; set; }
        /// <summary>Indicates Shipment Logistics type that the customer preferred.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Support.TransportShipmentTypes? TransportPreferencePreferredShipmentType { get; set; }

    }
}