// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Extensions;

    /// <summary>Describes metadata for retrieving price info.</summary>
    public partial class SkuCost :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ISkuCost,
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ISkuCostInternal
    {

        /// <summary>Backing field for <see cref="MeterId" /> property.</summary>
        private string _meterId;

        /// <summary>Meter id of the Sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public string MeterId { get => this._meterId; }

        /// <summary>Backing field for <see cref="MeterType" /> property.</summary>
        private string _meterType;

        /// <summary>The type of the meter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public string MeterType { get => this._meterType; }

        /// <summary>Internal Acessors for MeterId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ISkuCostInternal.MeterId { get => this._meterId; set { {_meterId = value;} } }

        /// <summary>Internal Acessors for MeterType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ISkuCostInternal.MeterType { get => this._meterType; set { {_meterType = value;} } }

        /// <summary>Internal Acessors for Multiplier</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.DataBox.Models.Api20210301.ISkuCostInternal.Multiplier { get => this._multiplier; set { {_multiplier = value;} } }

        /// <summary>Backing field for <see cref="Multiplier" /> property.</summary>
        private double? _multiplier;

        /// <summary>
        /// Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping
        /// guid with appropriate multiplier specific to region.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataBox.PropertyOrigin.Owned)]
        public double? Multiplier { get => this._multiplier; }

        /// <summary>Creates an new <see cref="SkuCost" /> instance.</summary>
        public SkuCost()
        {

        }
    }
    /// Describes metadata for retrieving price info.
    public partial interface ISkuCost :
        Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.IJsonSerializable
    {
        /// <summary>Meter id of the Sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Meter id of the Sku.",
        SerializedName = @"meterId",
        PossibleTypes = new [] { typeof(string) })]
        string MeterId { get;  }
        /// <summary>The type of the meter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the meter.",
        SerializedName = @"meterType",
        PossibleTypes = new [] { typeof(string) })]
        string MeterType { get;  }
        /// <summary>
        /// Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping
        /// guid with appropriate multiplier specific to region.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataBox.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
        SerializedName = @"multiplier",
        PossibleTypes = new [] { typeof(double) })]
        double? Multiplier { get;  }

    }
    /// Describes metadata for retrieving price info.
    internal partial interface ISkuCostInternal

    {
        /// <summary>Meter id of the Sku.</summary>
        string MeterId { get; set; }
        /// <summary>The type of the meter.</summary>
        string MeterType { get; set; }
        /// <summary>
        /// Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping
        /// guid with appropriate multiplier specific to region.
        /// </summary>
        double? Multiplier { get; set; }

    }
}