
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for SpacecraftLink.
.Description
Create an in-memory object for SpacecraftLink.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20220301.SpacecraftLink
.Link
https://docs.microsoft.com/powershell/module/az.Orbital/new-AzOrbitalSpacecraftLinkObject
#>
function New-AzOrbitalSpacecraftLinkObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20220301.SpacecraftLink')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(Mandatory, HelpMessage="Bandwidth in MHz.")]
        [float]
        $BandwidthMHz,
        [Parameter(Mandatory, HelpMessage="Center Frequency in MHz.")]
        [float]
        $CenterFrequencyMHz,
        [Parameter(Mandatory, HelpMessage="Direction (uplink or downlink).")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction])]
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Direction]
        $Direction,
        [Parameter(Mandatory, HelpMessage="Link name.")]
        [string]
        $Name,
        [Parameter(Mandatory, HelpMessage="polarization. eg (RHCP, LHCP).")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization])]
        [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Support.Polarization]
        $Polarization
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Orbital.Models.Api20220301.SpacecraftLink]::New()

        if ($PSBoundParameters.ContainsKey('BandwidthMHz')) {
            $Object.BandwidthMHz = $BandwidthMHz
        }
        if ($PSBoundParameters.ContainsKey('CenterFrequencyMHz')) {
            $Object.CenterFrequencyMHz = $CenterFrequencyMHz
        }
        if ($PSBoundParameters.ContainsKey('Direction')) {
            $Object.Direction = $Direction
        }
        if ($PSBoundParameters.ContainsKey('Name')) {
            $Object.Name = $Name
        }
        if ($PSBoundParameters.ContainsKey('Polarization')) {
            $Object.Polarization = $Polarization
        }
        return $Object
    }
}

