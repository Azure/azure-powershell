// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>Holds the alert intent stage(s) mapping for this alert.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.KillChainIntentTypeConverter))]
    public partial struct KillChainIntent :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unknown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unknown'", "Unknown", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unknown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Probing".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Probing'", "Probing", global::System.Management.Automation.CompletionResultType.ParameterValue, "Probing");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Exploitation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Exploitation'", "Exploitation", global::System.Management.Automation.CompletionResultType.ParameterValue, "Exploitation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Persistence".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Persistence'", "Persistence", global::System.Management.Automation.CompletionResultType.ParameterValue, "Persistence");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PrivilegeEscalation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PrivilegeEscalation'", "PrivilegeEscalation", global::System.Management.Automation.CompletionResultType.ParameterValue, "PrivilegeEscalation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DefenseEvasion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DefenseEvasion'", "DefenseEvasion", global::System.Management.Automation.CompletionResultType.ParameterValue, "DefenseEvasion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CredentialAccess".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CredentialAccess'", "CredentialAccess", global::System.Management.Automation.CompletionResultType.ParameterValue, "CredentialAccess");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Discovery".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Discovery'", "Discovery", global::System.Management.Automation.CompletionResultType.ParameterValue, "Discovery");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "LateralMovement".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'LateralMovement'", "LateralMovement", global::System.Management.Automation.CompletionResultType.ParameterValue, "LateralMovement");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Execution".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Execution'", "Execution", global::System.Management.Automation.CompletionResultType.ParameterValue, "Execution");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Collection".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Collection'", "Collection", global::System.Management.Automation.CompletionResultType.ParameterValue, "Collection");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Exfiltration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Exfiltration'", "Exfiltration", global::System.Management.Automation.CompletionResultType.ParameterValue, "Exfiltration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CommandAndControl".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CommandAndControl'", "CommandAndControl", global::System.Management.Automation.CompletionResultType.ParameterValue, "CommandAndControl");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Impact".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Impact'", "Impact", global::System.Management.Automation.CompletionResultType.ParameterValue, "Impact");
            }
        }
    }
}