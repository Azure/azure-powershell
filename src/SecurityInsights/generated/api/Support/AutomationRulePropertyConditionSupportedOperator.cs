// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support
{

    /// <summary>The operator to use for evaluation the condition</summary>
    public partial struct AutomationRulePropertyConditionSupportedOperator :
        System.IEquatable<AutomationRulePropertyConditionSupportedOperator>
    {
        /// <summary>Evaluates if the property contains at least one of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator Contains = @"Contains";

        /// <summary>Evaluates if the property ends with any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator EndsWith = @"EndsWith";

        /// <summary>Evaluates if the property equals at least one of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator Equal = @"Equals";

        /// <summary>Evaluates if the property does not contain any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator NotContains = @"NotContains";

        /// <summary>Evaluates if the property does not end with any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator NotEndsWith = @"NotEndsWith";

        /// <summary>Evaluates if the property does not equal any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator NotEquals = @"NotEquals";

        /// <summary>Evaluates if the property does not start with any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator NotStartsWith = @"NotStartsWith";

        /// <summary>Evaluates if the property starts with any of the condition values</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator StartsWith = @"StartsWith";

        /// <summary>
        /// the value for an instance of the <see cref="AutomationRulePropertyConditionSupportedOperator" /> Enum.
        /// </summary>
        private string _value { get; set; }

        /// <summary>
        /// Creates an instance of the <see cref="AutomationRulePropertyConditionSupportedOperator"/> Enum class.
        /// </summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private AutomationRulePropertyConditionSupportedOperator(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>
        /// Conversion from arbitrary object to AutomationRulePropertyConditionSupportedOperator
        /// </summary>
        /// <param name="value">the value to convert to an instance of <see cref="AutomationRulePropertyConditionSupportedOperator"
        /// />.</param>
        internal static object CreateFrom(object value)
        {
            return new AutomationRulePropertyConditionSupportedOperator(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type AutomationRulePropertyConditionSupportedOperator</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>
        /// Compares values of enum type AutomationRulePropertyConditionSupportedOperator (override for Object)
        /// </summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is AutomationRulePropertyConditionSupportedOperator && Equals((AutomationRulePropertyConditionSupportedOperator)obj);
        }

        /// <summary>Returns hashCode for enum AutomationRulePropertyConditionSupportedOperator</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>
        /// Returns string representation for AutomationRulePropertyConditionSupportedOperator
        /// </summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>
        /// Implicit operator to convert string to AutomationRulePropertyConditionSupportedOperator
        /// </summary>
        /// <param name="value">the value to convert to an instance of <see cref="AutomationRulePropertyConditionSupportedOperator"
        /// />.</param>

        public static implicit operator AutomationRulePropertyConditionSupportedOperator(string value)
        {
            return new AutomationRulePropertyConditionSupportedOperator(value);
        }

        /// <summary>
        /// Implicit operator to convert AutomationRulePropertyConditionSupportedOperator to string
        /// </summary>
        /// <param name="e">the value to convert to an instance of <see cref="AutomationRulePropertyConditionSupportedOperator" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e)
        {
            return e._value;
        }

        /// <summary>
        /// Overriding != operator for enum AutomationRulePropertyConditionSupportedOperator
        /// </summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e1, Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overriding == operator for enum AutomationRulePropertyConditionSupportedOperator
        /// </summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e1, Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.AutomationRulePropertyConditionSupportedOperator e2)
        {
            return e2.Equals(e1);
        }
    }
}