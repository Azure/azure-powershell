// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Array of tags to be appended to the threat intelligence indicator.</summary>
    public partial class ThreatIntelligenceAppendTags :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceAppendTags,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IThreatIntelligenceAppendTagsInternal
    {

        /// <summary>Backing field for <see cref="ThreatIntelligenceTag" /> property.</summary>
        private string[] _threatIntelligenceTag;

        /// <summary>List of tags to be appended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] ThreatIntelligenceTag { get => this._threatIntelligenceTag; set => this._threatIntelligenceTag = value; }

        /// <summary>Creates an new <see cref="ThreatIntelligenceAppendTags" /> instance.</summary>
        public ThreatIntelligenceAppendTags()
        {

        }
    }
    /// Array of tags to be appended to the threat intelligence indicator.
    public partial interface IThreatIntelligenceAppendTags :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>List of tags to be appended.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of tags to be appended.",
        SerializedName = @"threatIntelligenceTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatIntelligenceTag { get; set; }

    }
    /// Array of tags to be appended to the threat intelligence indicator.
    internal partial interface IThreatIntelligenceAppendTagsInternal

    {
        /// <summary>List of tags to be appended.</summary>
        string[] ThreatIntelligenceTag { get; set; }

    }
}