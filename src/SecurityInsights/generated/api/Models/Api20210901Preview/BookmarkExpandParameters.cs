// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>The parameters required to execute an expand operation on the given bookmark.</summary>
    public partial class BookmarkExpandParameters :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IBookmarkExpandParameters,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IBookmarkExpandParametersInternal
    {

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>
        /// The end date filter, so the only expansion results returned are before this date.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="ExpansionId" /> property.</summary>
        private string _expansionId;

        /// <summary>The Id of the expansion to perform.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ExpansionId { get => this._expansionId; set => this._expansionId = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>
        /// The start date filter, so the only expansion results returned are after this date.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Creates an new <see cref="BookmarkExpandParameters" /> instance.</summary>
        public BookmarkExpandParameters()
        {

        }
    }
    /// The parameters required to execute an expand operation on the given bookmark.
    public partial interface IBookmarkExpandParameters :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The end date filter, so the only expansion results returned are before this date.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end date filter, so the only expansion results returned are before this date.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The Id of the expansion to perform.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Id of the expansion to perform.",
        SerializedName = @"expansionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExpansionId { get; set; }
        /// <summary>
        /// The start date filter, so the only expansion results returned are after this date.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start date filter, so the only expansion results returned are after this date.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }

    }
    /// The parameters required to execute an expand operation on the given bookmark.
    internal partial interface IBookmarkExpandParametersInternal

    {
        /// <summary>
        /// The end date filter, so the only expansion results returned are before this date.
        /// </summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The Id of the expansion to perform.</summary>
        string ExpansionId { get; set; }
        /// <summary>
        /// The start date filter, so the only expansion results returned are after this date.
        /// </summary>
        global::System.DateTime? StartTime { get; set; }

    }
}