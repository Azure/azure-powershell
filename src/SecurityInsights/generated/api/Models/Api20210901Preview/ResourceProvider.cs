// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Resource provider permissions required for the connector</summary>
    public partial class ResourceProvider :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProvider,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProviderInternal
    {

        /// <summary>Internal Acessors for RequiredPermission</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissions Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IResourceProviderInternal.RequiredPermission { get => (this._requiredPermission = this._requiredPermission ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.RequiredPermissions()); set { {_requiredPermission = value;} } }

        /// <summary>Backing field for <see cref="PermissionsDisplayText" /> property.</summary>
        private string _permissionsDisplayText;

        /// <summary>Permission description text</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string PermissionsDisplayText { get => this._permissionsDisplayText; set => this._permissionsDisplayText = value; }

        /// <summary>Backing field for <see cref="Provider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.ProviderName? _provider;

        /// <summary>Provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.ProviderName? Provider { get => this._provider; set => this._provider = value; }

        /// <summary>Backing field for <see cref="ProviderDisplayName" /> property.</summary>
        private string _providerDisplayName;

        /// <summary>Permission provider display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ProviderDisplayName { get => this._providerDisplayName; set => this._providerDisplayName = value; }

        /// <summary>Backing field for <see cref="RequiredPermission" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissions _requiredPermission;

        /// <summary>Required permissions for the connector</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissions RequiredPermission { get => (this._requiredPermission = this._requiredPermission ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.RequiredPermissions()); set => this._requiredPermission = value; }

        /// <summary>action permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? RequiredPermissionAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Action; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Action = value ?? default(bool); }

        /// <summary>delete permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? RequiredPermissionDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Delete; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Delete = value ?? default(bool); }

        /// <summary>read permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? RequiredPermissionRead { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Read; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Read = value ?? default(bool); }

        /// <summary>write permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public bool? RequiredPermissionWrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Write; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissionsInternal)RequiredPermission).Write = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PermissionProviderScope? _scope;

        /// <summary>Permission provider scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PermissionProviderScope? Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Creates an new <see cref="ResourceProvider" /> instance.</summary>
        public ResourceProvider()
        {

        }
    }
    /// Resource provider permissions required for the connector
    public partial interface IResourceProvider :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>Permission description text</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Permission description text",
        SerializedName = @"permissionsDisplayText",
        PossibleTypes = new [] { typeof(string) })]
        string PermissionsDisplayText { get; set; }
        /// <summary>Provider name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provider name",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.ProviderName) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.ProviderName? Provider { get; set; }
        /// <summary>Permission provider display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Permission provider display name",
        SerializedName = @"providerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string ProviderDisplayName { get; set; }
        /// <summary>action permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"action permission",
        SerializedName = @"action",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiredPermissionAction { get; set; }
        /// <summary>delete permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"delete permission",
        SerializedName = @"delete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiredPermissionDelete { get; set; }
        /// <summary>read permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"read permission",
        SerializedName = @"read",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiredPermissionRead { get; set; }
        /// <summary>write permission</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"write permission",
        SerializedName = @"write",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequiredPermissionWrite { get; set; }
        /// <summary>Permission provider scope</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Permission provider scope",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PermissionProviderScope) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PermissionProviderScope? Scope { get; set; }

    }
    /// Resource provider permissions required for the connector
    internal partial interface IResourceProviderInternal

    {
        /// <summary>Permission description text</summary>
        string PermissionsDisplayText { get; set; }
        /// <summary>Provider name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.ProviderName? Provider { get; set; }
        /// <summary>Permission provider display name</summary>
        string ProviderDisplayName { get; set; }
        /// <summary>Required permissions for the connector</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IRequiredPermissions RequiredPermission { get; set; }
        /// <summary>action permission</summary>
        bool? RequiredPermissionAction { get; set; }
        /// <summary>delete permission</summary>
        bool? RequiredPermissionDelete { get; set; }
        /// <summary>read permission</summary>
        bool? RequiredPermissionRead { get; set; }
        /// <summary>write permission</summary>
        bool? RequiredPermissionWrite { get; set; }
        /// <summary>Permission provider scope</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PermissionProviderScope? Scope { get; set; }

    }
}