// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Describe the request properties needed to successfully pull from the server</summary>
    public partial class CodelessConnectorPollingRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingRequestProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ICodelessConnectorPollingRequestPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApiEndpoint" /> property.</summary>
        private string _apiEndpoint;

        /// <summary>Describe the endpoint we should pull the data from</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ApiEndpoint { get => this._apiEndpoint; set => this._apiEndpoint = value; }

        /// <summary>Backing field for <see cref="EndTimeAttributeName" /> property.</summary>
        private string _endTimeAttributeName;

        /// <summary>This will be used the query events from the end of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string EndTimeAttributeName { get => this._endTimeAttributeName; set => this._endTimeAttributeName = value; }

        /// <summary>Backing field for <see cref="Header" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny _header;

        /// <summary>Describe the headers sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny Header { get => (this._header = this._header ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Any()); set => this._header = value; }

        /// <summary>Backing field for <see cref="HttpMethod" /> property.</summary>
        private string _httpMethod;

        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string HttpMethod { get => this._httpMethod; set => this._httpMethod = value; }

        /// <summary>Backing field for <see cref="QueryParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny _queryParameter;

        /// <summary>Describe the query parameters sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny QueryParameter { get => (this._queryParameter = this._queryParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Any()); set => this._queryParameter = value; }

        /// <summary>Backing field for <see cref="QueryParametersTemplate" /> property.</summary>
        private string _queryParametersTemplate;

        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string QueryParametersTemplate { get => this._queryParametersTemplate; set => this._queryParametersTemplate = value; }

        /// <summary>Backing field for <see cref="QueryTimeFormat" /> property.</summary>
        private string _queryTimeFormat;

        /// <summary>The time format will be used the query events in a specific window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string QueryTimeFormat { get => this._queryTimeFormat; set => this._queryTimeFormat = value; }

        /// <summary>Backing field for <see cref="QueryWindowInMin" /> property.</summary>
        private int _queryWindowInMin;

        /// <summary>The window interval we will use the pull the data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int QueryWindowInMin { get => this._queryWindowInMin; set => this._queryWindowInMin = value; }

        /// <summary>Backing field for <see cref="RateLimitQp" /> property.</summary>
        private int? _rateLimitQp;

        /// <summary>Defines the rate limit QPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? RateLimitQp { get => this._rateLimitQp; set => this._rateLimitQp = value; }

        /// <summary>Backing field for <see cref="RetryCount" /> property.</summary>
        private int? _retryCount;

        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? RetryCount { get => this._retryCount; set => this._retryCount = value; }

        /// <summary>Backing field for <see cref="StartTimeAttributeName" /> property.</summary>
        private string _startTimeAttributeName;

        /// <summary>This will be used the query events from a start of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string StartTimeAttributeName { get => this._startTimeAttributeName; set => this._startTimeAttributeName = value; }

        /// <summary>Backing field for <see cref="TimeoutInSecond" /> property.</summary>
        private int? _timeoutInSecond;

        /// <summary>The number of seconds we will consider as a request timeout</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public int? TimeoutInSecond { get => this._timeoutInSecond; set => this._timeoutInSecond = value; }

        /// <summary>
        /// Creates an new <see cref="CodelessConnectorPollingRequestProperties" /> instance.
        /// </summary>
        public CodelessConnectorPollingRequestProperties()
        {

        }
    }
    /// Describe the request properties needed to successfully pull from the server
    public partial interface ICodelessConnectorPollingRequestProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>Describe the endpoint we should pull the data from</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Describe the endpoint we should pull the data from",
        SerializedName = @"apiEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string ApiEndpoint { get; set; }
        /// <summary>This will be used the query events from the end of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This will be used the query events from the end of the time window",
        SerializedName = @"endTimeAttributeName",
        PossibleTypes = new [] { typeof(string) })]
        string EndTimeAttributeName { get; set; }
        /// <summary>Describe the headers sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the headers sent in the poll request",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny Header { get; set; }
        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The http method type we will use in the poll request, GET or POST",
        SerializedName = @"httpMethod",
        PossibleTypes = new [] { typeof(string) })]
        string HttpMethod { get; set; }
        /// <summary>Describe the query parameters sent in the poll request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the query parameters sent in the poll request",
        SerializedName = @"queryParameters",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny QueryParameter { get; set; }
        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"For advanced scenarios for example user name/password embedded in nested JSON payload",
        SerializedName = @"queryParametersTemplate",
        PossibleTypes = new [] { typeof(string) })]
        string QueryParametersTemplate { get; set; }
        /// <summary>The time format will be used the query events in a specific window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The time format will be used the query events in a specific window",
        SerializedName = @"queryTimeFormat",
        PossibleTypes = new [] { typeof(string) })]
        string QueryTimeFormat { get; set; }
        /// <summary>The window interval we will use the pull the data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The window interval we will use the pull the data",
        SerializedName = @"queryWindowInMin",
        PossibleTypes = new [] { typeof(int) })]
        int QueryWindowInMin { get; set; }
        /// <summary>Defines the rate limit QPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the rate limit QPS",
        SerializedName = @"rateLimitQps",
        PossibleTypes = new [] { typeof(int) })]
        int? RateLimitQp { get; set; }
        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Describe the amount of time we should try and poll the data in case of failure",
        SerializedName = @"retryCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryCount { get; set; }
        /// <summary>This will be used the query events from a start of the time window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This will be used the query events from a start of the time window",
        SerializedName = @"startTimeAttributeName",
        PossibleTypes = new [] { typeof(string) })]
        string StartTimeAttributeName { get; set; }
        /// <summary>The number of seconds we will consider as a request timeout</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of seconds we will consider as a request timeout",
        SerializedName = @"timeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutInSecond { get; set; }

    }
    /// Describe the request properties needed to successfully pull from the server
    internal partial interface ICodelessConnectorPollingRequestPropertiesInternal

    {
        /// <summary>Describe the endpoint we should pull the data from</summary>
        string ApiEndpoint { get; set; }
        /// <summary>This will be used the query events from the end of the time window</summary>
        string EndTimeAttributeName { get; set; }
        /// <summary>Describe the headers sent in the poll request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny Header { get; set; }
        /// <summary>The http method type we will use in the poll request, GET or POST</summary>
        string HttpMethod { get; set; }
        /// <summary>Describe the query parameters sent in the poll request</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.IAny QueryParameter { get; set; }
        /// <summary>
        /// For advanced scenarios for example user name/password embedded in nested JSON payload
        /// </summary>
        string QueryParametersTemplate { get; set; }
        /// <summary>The time format will be used the query events in a specific window</summary>
        string QueryTimeFormat { get; set; }
        /// <summary>The window interval we will use the pull the data</summary>
        int QueryWindowInMin { get; set; }
        /// <summary>Defines the rate limit QPS</summary>
        int? RateLimitQp { get; set; }
        /// <summary>Describe the amount of time we should try and poll the data in case of failure</summary>
        int? RetryCount { get; set; }
        /// <summary>This will be used the query events from a start of the time window</summary>
        string StartTimeAttributeName { get; set; }
        /// <summary>The number of seconds we will consider as a request timeout</summary>
        int? TimeoutInSecond { get; set; }

    }
}