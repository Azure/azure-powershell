// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Account entity property bag.</summary>
    public partial class AccountEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties __entityCommonProperties = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.EntityCommonProperties();

        /// <summary>Backing field for <see cref="AadTenantId" /> property.</summary>
        private string _aadTenantId;

        /// <summary>The Azure Active Directory tenant id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string AadTenantId { get => this._aadTenantId; }

        /// <summary>Backing field for <see cref="AadUserId" /> property.</summary>
        private string _aadUserId;

        /// <summary>The Azure Active Directory user id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string AadUserId { get => this._aadUserId; }

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>
        /// The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; }

        /// <summary>
        /// A bag of custom fields that should be part of the entity and will be presented to the user.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="DnsDomain" /> property.</summary>
        private string _dnsDomain;

        /// <summary>The fully qualified domain DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string DnsDomain { get => this._dnsDomain; }

        /// <summary>
        /// The graph item display name which is a short humanly readable description of the graph item instance. This property is
        /// optional and might be system generated.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; }

        /// <summary>Backing field for <see cref="HostEntityId" /> property.</summary>
        private string _hostEntityId;

        /// <summary>
        /// The Host entity id that contains the account in case it is a local account (not domain joined)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string HostEntityId { get => this._hostEntityId; }

        /// <summary>Backing field for <see cref="IsDomainJoined" /> property.</summary>
        private bool? _isDomainJoined;

        /// <summary>Determines whether this is a domain account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public bool? IsDomainJoined { get => this._isDomainJoined; }

        /// <summary>Internal Acessors for AadTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.AadTenantId { get => this._aadTenantId; set { {_aadTenantId = value;} } }

        /// <summary>Internal Acessors for AadUserId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.AadUserId { get => this._aadUserId; set { {_aadUserId = value;} } }

        /// <summary>Internal Acessors for AccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.AccountName { get => this._accountName; set { {_accountName = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for DnsDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.DnsDomain { get => this._dnsDomain; set { {_dnsDomain = value;} } }

        /// <summary>Internal Acessors for HostEntityId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.HostEntityId { get => this._hostEntityId; set { {_hostEntityId = value;} } }

        /// <summary>Internal Acessors for IsDomainJoined</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.IsDomainJoined { get => this._isDomainJoined; set { {_isDomainJoined = value;} } }

        /// <summary>Internal Acessors for NtDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.NtDomain { get => this._ntDomain; set { {_ntDomain = value;} } }

        /// <summary>Internal Acessors for ObjectGuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.ObjectGuid { get => this._objectGuid; set { {_objectGuid = value;} } }

        /// <summary>Internal Acessors for Puid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.Puid { get => this._puid; set { {_puid = value;} } }

        /// <summary>Internal Acessors for Sid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.Sid { get => this._sid; set { {_sid = value;} } }

        /// <summary>Internal Acessors for UpnSuffix</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IAccountEntityPropertiesInternal.UpnSuffix { get => this._upnSuffix; set { {_upnSuffix = value;} } }

        /// <summary>Internal Acessors for AdditionalData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesAdditionalData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.AdditionalData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).AdditionalData = value; }

        /// <summary>Internal Acessors for FriendlyName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal.FriendlyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal)__entityCommonProperties).FriendlyName = value; }

        /// <summary>Backing field for <see cref="NtDomain" /> property.</summary>
        private string _ntDomain;

        /// <summary>
        /// The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string NtDomain { get => this._ntDomain; }

        /// <summary>Backing field for <see cref="ObjectGuid" /> property.</summary>
        private string _objectGuid;

        /// <summary>
        /// The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active
        /// directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ObjectGuid { get => this._objectGuid; }

        /// <summary>Backing field for <see cref="Puid" /> property.</summary>
        private string _puid;

        /// <summary>The Azure Active Directory Passport User ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Puid { get => this._puid; }

        /// <summary>Backing field for <see cref="Sid" /> property.</summary>
        private string _sid;

        /// <summary>The account security identifier, e.g. S-1-5-18.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Sid { get => this._sid; }

        /// <summary>Backing field for <see cref="UpnSuffix" /> property.</summary>
        private string _upnSuffix;

        /// <summary>
        /// The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string UpnSuffix { get => this._upnSuffix; }

        /// <summary>Creates an new <see cref="AccountEntityProperties" /> instance.</summary>
        public AccountEntityProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__entityCommonProperties), __entityCommonProperties);
            await eventListener.AssertObjectIsValid(nameof(__entityCommonProperties), __entityCommonProperties);
        }
    }
    /// Account entity property bag.
    public partial interface IAccountEntityProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonProperties
    {
        /// <summary>The Azure Active Directory tenant id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Azure Active Directory tenant id.",
        SerializedName = @"aadTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AadTenantId { get;  }
        /// <summary>The Azure Active Directory user id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Azure Active Directory user id.",
        SerializedName = @"aadUserId",
        PossibleTypes = new [] { typeof(string) })]
        string AadUserId { get;  }
        /// <summary>
        /// The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get;  }
        /// <summary>The display name of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the account.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The fully qualified domain DNS name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified domain DNS name.",
        SerializedName = @"dnsDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DnsDomain { get;  }
        /// <summary>
        /// The Host entity id that contains the account in case it is a local account (not domain joined)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Host entity id that contains the account in case it is a local account (not domain joined)",
        SerializedName = @"hostEntityId",
        PossibleTypes = new [] { typeof(string) })]
        string HostEntityId { get;  }
        /// <summary>Determines whether this is a domain account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Determines whether this is a domain account.",
        SerializedName = @"isDomainJoined",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsDomainJoined { get;  }
        /// <summary>
        /// The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.",
        SerializedName = @"ntDomain",
        PossibleTypes = new [] { typeof(string) })]
        string NtDomain { get;  }
        /// <summary>
        /// The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active
        /// directory.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.",
        SerializedName = @"objectGuid",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectGuid { get;  }
        /// <summary>The Azure Active Directory Passport User ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Azure Active Directory Passport User ID.",
        SerializedName = @"puid",
        PossibleTypes = new [] { typeof(string) })]
        string Puid { get;  }
        /// <summary>The account security identifier, e.g. S-1-5-18.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The account security identifier, e.g. S-1-5-18.",
        SerializedName = @"sid",
        PossibleTypes = new [] { typeof(string) })]
        string Sid { get;  }
        /// <summary>
        /// The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.",
        SerializedName = @"upnSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string UpnSuffix { get;  }

    }
    /// Account entity property bag.
    internal partial interface IAccountEntityPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.IEntityCommonPropertiesInternal
    {
        /// <summary>The Azure Active Directory tenant id.</summary>
        string AadTenantId { get; set; }
        /// <summary>The Azure Active Directory user id.</summary>
        string AadUserId { get; set; }
        /// <summary>
        /// The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.
        /// </summary>
        string AccountName { get; set; }
        /// <summary>The display name of the account.</summary>
        string DisplayName { get; set; }
        /// <summary>The fully qualified domain DNS name.</summary>
        string DnsDomain { get; set; }
        /// <summary>
        /// The Host entity id that contains the account in case it is a local account (not domain joined)
        /// </summary>
        string HostEntityId { get; set; }
        /// <summary>Determines whether this is a domain account.</summary>
        bool? IsDomainJoined { get; set; }
        /// <summary>
        /// The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.
        /// </summary>
        string NtDomain { get; set; }
        /// <summary>
        /// The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active
        /// directory.
        /// </summary>
        string ObjectGuid { get; set; }
        /// <summary>The Azure Active Directory Passport User ID.</summary>
        string Puid { get; set; }
        /// <summary>The account security identifier, e.g. S-1-5-18.</summary>
        string Sid { get; set; }
        /// <summary>
        /// The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.
        /// </summary>
        string UpnSuffix { get; set; }

    }
}