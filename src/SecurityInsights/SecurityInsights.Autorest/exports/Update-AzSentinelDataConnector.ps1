
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Updates the data connector.
.Description
Updates the data connector.
.Example
Update-AzSentinelDataConnector -ResourceGroupName "myResourceGroupName" -workspaceName "myWorkspaceName" -Id  3bd6c555-1412-4103-9b9d-2b0b40cda6b6 -SharePoint "Enabled"

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.ISecurityInsightsIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.DataConnector
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <ISecurityInsightsIdentity>: [Parameter(ParameterSetName = 'UpdateViaIdentityGenericUI', Mandatory, ValueFromPipeline)]  Identity Parameter 
  [ActionId <String>]: Action ID
  [AlertRuleTemplateId <String>]: Alert rule template ID
  [AutomationRuleId <String>]: Automation rule ID
  [BookmarkId <String>]: Bookmark ID
  [ConsentId <String>]: consent ID
  [DataConnectorId <String>]: Connector ID
  [EntityId <String>]: entity ID
  [EntityQueryId <String>]: entity query ID
  [EntityQueryTemplateId <String>]: entity query template ID
  [Id <String>]: Resource identity path
  [IncidentCommentId <String>]: Incident comment ID
  [IncidentId <String>]: Incident ID
  [MetadataName <String>]: The Metadata name.
  [Name <String>]: Threat intelligence indicator name field.
  [RelationName <String>]: Relation Name
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [RuleId <String>]: Alert rule ID
  [SentinelOnboardingStateName <String>]: The Sentinel onboarding state name. Supports - default
  [SettingsName <String>]: The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
  [SourceControlId <String>]: Source control Id
  [SubscriptionId <String>]: The ID of the target subscription.
  [WorkspaceName <String>]: The name of the workspace.

PERMISSIONCUSTOM <PermissionsCustomsItem[]>: 
  [Description <String>]: Customs permissions description
  [Name <String>]: Customs permissions name

PERMISSIONRESOURCEPROVIDER <PermissionsResourceProviderItem[]>: 
  [PermissionsDisplayText <String>]: Permission description text
  [Provider <ProviderName?>]: Provider name
  [ProviderDisplayName <String>]: Permission provider display name
  [RequiredPermissionAction <Boolean?>]: action permission
  [RequiredPermissionDelete <Boolean?>]: delete permission
  [RequiredPermissionRead <Boolean?>]: read permission
  [RequiredPermissionWrite <Boolean?>]: write permission
  [Scope <PermissionProviderScope?>]: Permission provider scope

UICONFIGCONNECTIVITYCRITERION <ConnectivityCriteria[]>: 
  [Type <ConnectivityType?>]: type of connectivity
  [Value <String[]>]: Queries for checking connectivity

UICONFIGDATATYPE <LastDataReceivedDataType[]>: 
  [LastDataReceivedQuery <String>]: Query for indicate last data received
  [Name <String>]: Name of the data type to show in the graph. can be use with {{graphQueriesTableName}} placeholder

UICONFIGGRAPHQUERY <GraphQueries[]>: 
  [BaseQuery <String>]: The base query for the graph
  [Legend <String>]: The legend for the graph
  [MetricName <String>]: the metric that the query is checking

UICONFIGINSTRUCTIONSTEP <InstructionSteps[]>: 
  [Description <String>]: Instruction step description
  [Instruction <IConnectorInstructionModelBase[]>]: Instruction step details
    Type <SettingType>: The kind of the setting
    [Parameter <IAny>]: The parameters for the setting
  [Title <String>]: Instruction step title

UICONFIGSAMPLEQUERY <SampleQueries[]>: 
  [Description <String>]: The sample query description
  [Query <String>]: the sample query
.Link
https://learn.microsoft.com/powershell/module/az.securityinsights/update-azsentineldataconnector
#>
function Update-AzSentinelDataConnector {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.DataConnector])]
[CmdletBinding(DefaultParameterSetName='UpdateAADAATP', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='UpdateAADAATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeIRM', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateOffice365', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity', Mandatory)]
    [Parameter(ParameterSetName='UpdateDynamics365', Mandatory)]
    [Parameter(ParameterSetName='UpdateAzureSecurityCenter', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Path')]
    [System.String]
    # [Parameter(ParameterSetName = 'UpdateGenericUI', Mandatory)]
    #  The Resource Group Name.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='UpdateAADAATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeIRM', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateOffice365', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity', Mandatory)]
    [Parameter(ParameterSetName='UpdateDynamics365', Mandatory)]
    [Parameter(ParameterSetName='UpdateAzureSecurityCenter', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Path')]
    [System.String]
    # [Parameter(ParameterSetName = 'UpdateGenericUI', Mandatory)]
    #  The name of the workspace.
    ${WorkspaceName},

    [Parameter(ParameterSetName='UpdateAADAATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii', Mandatory)]
    [Parameter(ParameterSetName='UpdateThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeIRM', Mandatory)]
    [Parameter(ParameterSetName='UpdateOfficeATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateOffice365', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity', Mandatory)]
    [Parameter(ParameterSetName='UpdateDynamics365', Mandatory)]
    [Parameter(ParameterSetName='UpdateAzureSecurityCenter', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3', Mandatory)]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Path')]
    [System.String]
    # [Parameter(ParameterSetName = 'UpdateGenericUI', Mandatory)]
    #  The Id of the Data Connector.
    ${Id},

    [Parameter(ParameterSetName='UpdateAADAATP')]
    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateOfficeIRM')]
    [Parameter(ParameterSetName='UpdateOfficeATP')]
    [Parameter(ParameterSetName='UpdateOffice365')]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection')]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection')]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateDynamics365')]
    [Parameter(ParameterSetName='UpdateAzureSecurityCenter')]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # [Parameter(ParameterSetName = 'UpdateGenericUI')]
    #  Gets subscription credentials which uniquely identify Microsoft Azure subscription.
    #  The subscription ID forms part of the URI for every service call.
    ${SubscriptionId},

    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligence', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeIRM', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeATP', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatProtection', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftCloudAppSecurity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityDynamics365', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityAzureSecurityCenter', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityAADAATP', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesCloudTrail', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.ISecurityInsightsIdentity]
    # [Parameter(ParameterSetName = 'UpdateViaIdentityGenericUI', Mandatory, ValueFromPipeline)]
    #  Identity Parameter
    # 
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='UpdateAADAATP')]
    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateOfficeIRM')]
    [Parameter(ParameterSetName='UpdateOfficeATP')]
    [Parameter(ParameterSetName='UpdateOffice365')]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection')]
    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection')]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateDynamics365')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeIRM')]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeATP')]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatProtection')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateViaIdentityDynamics365')]
    [Parameter(ParameterSetName='UpdateViaIdentityAzureSecurityCenter')]
    [Parameter(ParameterSetName='UpdateViaIdentityAADAATP')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesCloudTrail')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.DefaultInfo(Script='(Get-AzContext).Tenant.Id')]
    [System.String]
    # [Parameter(ParameterSetName = 'UpdateViaIdentityGenericUI')]
    #  The TenantId.
    ${TenantId},

    [Parameter(ParameterSetName='UpdateAADAATP')]
    [Parameter(ParameterSetName='UpdateOfficeIRM')]
    [Parameter(ParameterSetName='UpdateOfficeATP')]
    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection')]
    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateAzureSecurityCenter')]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeIRM')]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeATP')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateViaIdentityAzureSecurityCenter')]
    [Parameter(ParameterSetName='UpdateViaIdentityAADAATP')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Alerts},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${APIRootURL},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${WorkspaceId},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${FriendlyName},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${CollectionId},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UserName},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Password},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${TaxiiLookbackPeriod},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PollingFrequency])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PollingFrequency]
    ${PollingFrequency},

    [Parameter(ParameterSetName='UpdateThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligence')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Indicator},

    [Parameter(ParameterSetName='UpdateOffice365')]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Exchange},

    [Parameter(ParameterSetName='UpdateOffice365')]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${SharePoint},

    [Parameter(ParameterSetName='UpdateOffice365')]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Teams},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatProtection')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Incident},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${BingSafetyPhishinURL},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${BingSafetyPhishingUrlLookbackPeriod},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${MicrosoftEmergingThreatFeed},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${MicrosoftEmergingThreatFeedLookbackPeriod},

    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity')]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftCloudAppSecurity')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${DiscoveryLog},

    [Parameter(ParameterSetName='UpdateDynamics365')]
    [Parameter(ParameterSetName='UpdateViaIdentityDynamics365')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${CommonDataServiceActivity},

    [Parameter(ParameterSetName='UpdateAzureSecurityCenter')]
    [Parameter(ParameterSetName='UpdateViaIdentityAzureSecurityCenter')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    # ASC Subscription Id.
    ${ASCSubscriptionId},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesCloudTrail')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${AWSRoleArn},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesCloudTrail')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.DataTypeState])]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${Log},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String[]]
    ${SQSURL},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3')]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${DetinationTable},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UiConfigTitle},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UiConfigPublisher},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UiConfigDescriptionMarkdown},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UiConfigCustomImage},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.String]
    ${UiConfigGraphQueriesTableName},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.GraphQueries[]]
    # To construct, see NOTES section for UICONFIGGRAPHQUERY properties and create a hash table.
    ${UiConfigGraphQuery},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.SampleQueries[]]
    # To construct, see NOTES section for UICONFIGSAMPLEQUERY properties and create a hash table.
    ${UiConfigSampleQuery},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.LastDataReceivedDataType[]]
    # To construct, see NOTES section for UICONFIGDATATYPE properties and create a hash table.
    ${UiConfigDataType},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.ConnectivityCriteria[]]
    # To construct, see NOTES section for UICONFIGCONNECTIVITYCRITERION properties and create a hash table.
    ${UiConfigConnectivityCriterion},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [System.Boolean]
    ${AvailabilityIsPreview},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.DefaultInfo(Script='1')]
    [System.Int32]
    ${AvailabilityStatus},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.PermissionsResourceProviderItem[]]
    # To construct, see NOTES section for PERMISSIONRESOURCEPROVIDER properties and create a hash table.
    ${PermissionResourceProvider},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.PermissionsCustomsItem[]]
    # To construct, see NOTES section for PERMISSIONCUSTOM properties and create a hash table.
    ${PermissionCustom},

    [Parameter(ParameterSetName='UpdateViaIdentityGenericUI')]
    [Parameter(ParameterSetName='UpdateGenericUI')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20210901Preview.InstructionSteps[]]
    # To construct, see NOTES section for UICONFIGINSTRUCTIONSTEP properties and create a hash table.
    ${UiConfigInstructionStep},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(ParameterSetName='UpdateAADAATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityAADAATP', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${AzureADorAATP},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='UpdateThreatIntelligenceTaxii', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligenceTaxii', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${ThreatIntelligenceTaxii},

    [Parameter(ParameterSetName='UpdateThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityThreatIntelligence', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${ThreatIntelligence},

    [Parameter(ParameterSetName='UpdateOfficeIRM', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeIRM', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${OfficeIRM},

    [Parameter(ParameterSetName='UpdateOfficeATP', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityOfficeATP', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${OfficeATP},

    [Parameter(ParameterSetName='UpdateOffice365', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityOffice365', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${Office365},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatProtection', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${MicrosoftThreatProtection},

    [Parameter(ParameterSetName='UpdateMicrosoftThreatIntelligence', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftThreatIntelligence', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${MicrosoftTI},

    [Parameter(ParameterSetName='UpdateMicrosoftDefenderAdvancedThreatProtection', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${DefenderATP},

    [Parameter(ParameterSetName='UpdateMicrosoftCloudAppSecurity', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityMicrosoftCloudAppSecurity', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # [Parameter(ParameterSetName = 'UpdateGenericUI', Mandatory)]
    # [Parameter(ParameterSetName = 'UpdateViaIdentityGenericUI', Mandatory)]
    # [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    # [System.Management.Automation.SwitchParameter]
    # ${GenericUI},
    ${CloudAppSecurity},

    [Parameter(ParameterSetName='UpdateDynamics365', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityDynamics365', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${Dynamics365},

    [Parameter(ParameterSetName='UpdateAzureSecurityCenter', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityAzureSecurityCenter', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${AzureSecurityCenter},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesS3', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesS3', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${AWSS3},

    [Parameter(ParameterSetName='UpdateAmazonWebServicesCloudTrail', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityAmazonWebServicesCloudTrail', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    ${AWSCloudTrail}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            UpdateAADAATP = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateThreatIntelligenceTaxii = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateThreatIntelligence = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateOfficeIRM = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateOfficeATP = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateOffice365 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateMicrosoftThreatProtection = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateMicrosoftThreatIntelligence = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateMicrosoftDefenderAdvancedThreatProtection = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateMicrosoftCloudAppSecurity = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateDynamics365 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateAzureSecurityCenter = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateAmazonWebServicesS3 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateAmazonWebServicesCloudTrail = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityThreatIntelligenceTaxii = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityThreatIntelligence = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityOfficeIRM = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityOfficeATP = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityOffice365 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityMicrosoftThreatProtection = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityMicrosoftThreatIntelligence = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityMicrosoftCloudAppSecurity = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityDynamics365 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityAzureSecurityCenter = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityAADAATP = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityAmazonWebServicesS3 = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityAmazonWebServicesCloudTrail = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateViaIdentityGenericUI = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
            UpdateGenericUI = 'Az.SecurityInsights.custom\Update-AzSentinelDataConnector';
        }
        if (('UpdateAADAATP', 'UpdateThreatIntelligenceTaxii', 'UpdateThreatIntelligence', 'UpdateOfficeIRM', 'UpdateOfficeATP', 'UpdateOffice365', 'UpdateMicrosoftThreatProtection', 'UpdateMicrosoftThreatIntelligence', 'UpdateMicrosoftDefenderAdvancedThreatProtection', 'UpdateMicrosoftCloudAppSecurity', 'UpdateDynamics365', 'UpdateAzureSecurityCenter', 'UpdateAmazonWebServicesS3', 'UpdateAmazonWebServicesCloudTrail') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        if (('UpdateAADAATP', 'UpdateThreatIntelligenceTaxii', 'UpdateThreatIntelligence', 'UpdateOfficeIRM', 'UpdateOfficeATP', 'UpdateOffice365', 'UpdateMicrosoftThreatProtection', 'UpdateMicrosoftThreatIntelligence', 'UpdateMicrosoftDefenderAdvancedThreatProtection', 'UpdateMicrosoftCloudAppSecurity', 'UpdateDynamics365', 'UpdateViaIdentityThreatIntelligenceTaxii', 'UpdateViaIdentityThreatIntelligence', 'UpdateViaIdentityOfficeIRM', 'UpdateViaIdentityOfficeATP', 'UpdateViaIdentityOffice365', 'UpdateViaIdentityMicrosoftThreatProtection', 'UpdateViaIdentityMicrosoftThreatIntelligence', 'UpdateViaIdentityMicrosoftDefenderAdvancedThreatProtection', 'UpdateViaIdentityMicrosoftCloudAppSecurity', 'UpdateViaIdentityDynamics365', 'UpdateViaIdentityAzureSecurityCenter', 'UpdateViaIdentityAADAATP', 'UpdateViaIdentityAmazonWebServicesS3', 'UpdateViaIdentityAmazonWebServicesCloudTrail') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('TenantId')) {
            $PSBoundParameters['TenantId'] = (Get-AzContext).Tenant.Id
        }
        if (('UpdateViaIdentityGenericUI', 'UpdateGenericUI') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('AvailabilityStatus')) {
            $PSBoundParameters['AvailabilityStatus'] = 1
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
