// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Security.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Extensions;

    /// <summary>The github scope connector's environment data</summary>
    public partial class GitHubScopeEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IGitHubScopeEnvironment,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IGitHubScopeEnvironmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment __securityConnectorEnvironment = new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.SecurityConnectorEnvironment();

        /// <summary>The type of the environment data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inherited)]
        public string EnvironmentType { get => "GithubScope"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironmentInternal)__securityConnectorEnvironment).EnvironmentType = "GithubScope"; }

        /// <summary>Creates an new <see cref="GitHubScopeEnvironment" /> instance.</summary>
        public GitHubScopeEnvironment()
        {
            this.__securityConnectorEnvironment.EnvironmentType = "GithubScope";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__securityConnectorEnvironment), __securityConnectorEnvironment);
            await eventListener.AssertObjectIsValid(nameof(__securityConnectorEnvironment), __securityConnectorEnvironment);
        }
    }
    /// The github scope connector's environment data
    public partial interface IGitHubScopeEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment
    {

    }
    /// The github scope connector's environment data
    internal partial interface IGitHubScopeEnvironmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironmentInternal
    {

    }
}