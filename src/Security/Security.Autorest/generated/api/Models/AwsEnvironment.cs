// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Security.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Extensions;

    /// <summary>The AWS connector environment data</summary>
    public partial class AwsEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsEnvironment,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsEnvironmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment __securityConnectorEnvironment = new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.SecurityConnectorEnvironment();

        /// <summary>Backing field for <see cref="AccountName" /> property.</summary>
        private string _accountName;

        /// <summary>The AWS account name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public string AccountName { get => this._accountName; }

        /// <summary>The type of the environment data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inherited)]
        public string EnvironmentType { get => "AwsAccount"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironmentInternal)__securityConnectorEnvironment).EnvironmentType = "AwsAccount"; }

        /// <summary>Internal Acessors for AccountName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsEnvironmentInternal.AccountName { get => this._accountName; set { {_accountName = value;} } }

        /// <summary>Backing field for <see cref="OrganizationalData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData _organizationalData;

        /// <summary>The AWS account's organizational data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData OrganizationalData { get => (this._organizationalData = this._organizationalData ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.AwsOrganizationalData()); set => this._organizationalData = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private System.Collections.Generic.List<string> _region;

        /// <summary>list of regions to scan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public System.Collections.Generic.List<string> Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="ScanInterval" /> property.</summary>
        private long? _scanInterval;

        /// <summary>Scan interval in hours (value should be between 1-hour to 24-hours)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        public long? ScanInterval { get => this._scanInterval; set => this._scanInterval = value; }

        /// <summary>Creates an new <see cref="AwsEnvironment" /> instance.</summary>
        public AwsEnvironment()
        {
            this.__securityConnectorEnvironment.EnvironmentType = "AwsAccount";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__securityConnectorEnvironment), __securityConnectorEnvironment);
            await eventListener.AssertObjectIsValid(nameof(__securityConnectorEnvironment), __securityConnectorEnvironment);
        }
    }
    /// The AWS connector environment data
    public partial interface IAwsEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironment
    {
        /// <summary>The AWS account name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Read = true,
        Create = false,
        Update = false,
        Description = @"The AWS account name",
        SerializedName = @"accountName",
        PossibleTypes = new [] { typeof(string) })]
        string AccountName { get;  }
        /// <summary>The AWS account's organizational data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The AWS account's organizational data",
        SerializedName = @"organizationalData",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData),typeof(Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataMaster),typeof(Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalDataMember) })]
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData OrganizationalData { get; set; }
        /// <summary>list of regions to scan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"list of regions to scan",
        SerializedName = @"regions",
        PossibleTypes = new [] { typeof(string) })]
        System.Collections.Generic.List<string> Region { get; set; }
        /// <summary>Scan interval in hours (value should be between 1-hour to 24-hours)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Scan interval in hours (value should be between 1-hour to 24-hours)",
        SerializedName = @"scanInterval",
        PossibleTypes = new [] { typeof(long) })]
        long? ScanInterval { get; set; }

    }
    /// The AWS connector environment data
    internal partial interface IAwsEnvironmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ISecurityConnectorEnvironmentInternal
    {
        /// <summary>The AWS account name</summary>
        string AccountName { get; set; }
        /// <summary>The AWS account's organizational data</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAwsOrganizationalData OrganizationalData { get; set; }
        /// <summary>list of regions to scan</summary>
        System.Collections.Generic.List<string> Region { get; set; }
        /// <summary>Scan interval in hours (value should be between 1-hour to 24-hours)</summary>
        long? ScanInterval { get; set; }

    }
}