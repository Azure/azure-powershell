// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Security.Models
{
    using Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.PowerShell;

    /// <summary>The Defender for Servers GCP offering configurations</summary>
    [System.ComponentModel.TypeConverter(typeof(DefenderForServersGcpOfferingTypeConverter))]
    public partial class DefenderForServersGcpOffering
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// <c>OverrideToString</c> will be called if it is implemented. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="stringResult">/// instance serialized to a string, normally it is a Json</param>
        /// <param name="returnNow">/// set returnNow to true if you provide a customized OverrideToString function</param>

        partial void OverrideToString(ref string stringResult, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOffering"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal DefenderForServersGcpOffering(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DefenderForServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServer = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingDefenderForServers) content.GetValueForProperty("DefenderForServer",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServer, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingDefenderForServersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ArcAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingArcAutoProvisioning) content.GetValueForProperty("ArcAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingArcAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("VaAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVaAutoProvisioning) content.GetValueForProperty("VaAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVaAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("MdeAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingMdeAutoProvisioning) content.GetValueForProperty("MdeAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingMdeAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlan = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingSubPlan) content.GetValueForProperty("SubPlan",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlan, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingSubPlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScanner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScanner = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScanners) content.GetValueForProperty("VMScanner",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScanner, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersTypeConverter.ConvertFrom);
            }
            if (content.Contains("OfferingType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).OfferingType = (string) content.GetValueForProperty("OfferingType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).OfferingType, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("SubPlanType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlanType = (string) content.GetValueForProperty("SubPlanType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlanType, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderForServerWorkloadIdentityProviderId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerWorkloadIdentityProviderId = (string) content.GetValueForProperty("DefenderForServerWorkloadIdentityProviderId",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerWorkloadIdentityProviderId, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderForServerServiceAccountEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerServiceAccountEmailAddress = (string) content.GetValueForProperty("DefenderForServerServiceAccountEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerServiceAccountEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ArcAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingArcAutoProvisioningConfiguration) content.GetValueForProperty("ArcAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingArcAutoProvisioningConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ArcAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningEnabled = (bool?) content.GetValueForProperty("ArcAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VaAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVaAutoProvisioningConfiguration) content.GetValueForProperty("VaAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVaAutoProvisioningConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VaAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningEnabled = (bool?) content.GetValueForProperty("VaAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationType = (string) content.GetValueForProperty("ConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("MdeAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningEnabled = (bool?) content.GetValueForProperty("MdeAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MdeAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny) content.GetValueForProperty("MdeAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScannerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScannersConfiguration) content.GetValueForProperty("VMScannerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScannerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerEnabled = (bool?) content.GetValueForProperty("VMScannerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ConfigurationScanningMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationScanningMode = (string) content.GetValueForProperty("ConfigurationScanningMode",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationScanningMode, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationProxy = (string) content.GetValueForProperty("ConfigurationProxy",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationProxy, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationPrivateLinkScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationPrivateLinkScope = (string) content.GetValueForProperty("ConfigurationPrivateLinkScope",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationPrivateLinkScope, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationExclusionTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationExclusionTag = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScannersConfigurationExclusionTags) content.GetValueForProperty("ConfigurationExclusionTag",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationExclusionTag, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersConfigurationExclusionTagsTypeConverter.ConvertFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOffering"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal DefenderForServersGcpOffering(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DefenderForServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServer = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingDefenderForServers) content.GetValueForProperty("DefenderForServer",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServer, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingDefenderForServersTypeConverter.ConvertFrom);
            }
            if (content.Contains("ArcAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingArcAutoProvisioning) content.GetValueForProperty("ArcAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingArcAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("VaAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVaAutoProvisioning) content.GetValueForProperty("VaAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVaAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("MdeAutoProvisioning"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioning = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingMdeAutoProvisioning) content.GetValueForProperty("MdeAutoProvisioning",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioning, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingMdeAutoProvisioningTypeConverter.ConvertFrom);
            }
            if (content.Contains("SubPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlan = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingSubPlan) content.GetValueForProperty("SubPlan",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlan, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingSubPlanTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScanner"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScanner = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScanners) content.GetValueForProperty("VMScanner",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScanner, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersTypeConverter.ConvertFrom);
            }
            if (content.Contains("OfferingType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).OfferingType = (string) content.GetValueForProperty("OfferingType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).OfferingType, global::System.Convert.ToString);
            }
            if (content.Contains("Description"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).Description = (string) content.GetValueForProperty("Description",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)this).Description, global::System.Convert.ToString);
            }
            if (content.Contains("SubPlanType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlanType = (string) content.GetValueForProperty("SubPlanType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).SubPlanType, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderForServerWorkloadIdentityProviderId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerWorkloadIdentityProviderId = (string) content.GetValueForProperty("DefenderForServerWorkloadIdentityProviderId",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerWorkloadIdentityProviderId, global::System.Convert.ToString);
            }
            if (content.Contains("DefenderForServerServiceAccountEmailAddress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerServiceAccountEmailAddress = (string) content.GetValueForProperty("DefenderForServerServiceAccountEmailAddress",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).DefenderForServerServiceAccountEmailAddress, global::System.Convert.ToString);
            }
            if (content.Contains("ArcAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingArcAutoProvisioningConfiguration) content.GetValueForProperty("ArcAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingArcAutoProvisioningConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("ArcAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningEnabled = (bool?) content.GetValueForProperty("ArcAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ArcAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VaAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVaAutoProvisioningConfiguration) content.GetValueForProperty("VaAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVaAutoProvisioningConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VaAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningEnabled = (bool?) content.GetValueForProperty("VaAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VaAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ConfigurationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationType = (string) content.GetValueForProperty("ConfigurationType",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationType, global::System.Convert.ToString);
            }
            if (content.Contains("MdeAutoProvisioningEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningEnabled = (bool?) content.GetValueForProperty("MdeAutoProvisioningEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("MdeAutoProvisioningConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny) content.GetValueForProperty("MdeAutoProvisioningConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).MdeAutoProvisioningConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.AnyTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScannerConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScannersConfiguration) content.GetValueForProperty("VMScannerConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerConfiguration, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMScannerEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerEnabled = (bool?) content.GetValueForProperty("VMScannerEnabled",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).VMScannerEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ConfigurationScanningMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationScanningMode = (string) content.GetValueForProperty("ConfigurationScanningMode",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationScanningMode, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationProxy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationProxy = (string) content.GetValueForProperty("ConfigurationProxy",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationProxy, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationPrivateLinkScope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationPrivateLinkScope = (string) content.GetValueForProperty("ConfigurationPrivateLinkScope",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationPrivateLinkScope, global::System.Convert.ToString);
            }
            if (content.Contains("ConfigurationExclusionTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationExclusionTag = (Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingVMScannersConfigurationExclusionTags) content.GetValueForProperty("ConfigurationExclusionTag",((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOfferingInternal)this).ConfigurationExclusionTag, Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOfferingVMScannersConfigurationExclusionTagsTypeConverter.ConvertFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOffering"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOffering" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOffering DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new DefenderForServersGcpOffering(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersGcpOffering"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOffering" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOffering DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new DefenderForServersGcpOffering(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="DefenderForServersGcpOffering" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="DefenderForServersGcpOffering" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersGcpOffering FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.SerializationMode.IncludeAll)?.ToString();

        public override string ToString()
        {
            var returnNow = false;
            var result = global::System.String.Empty;
            OverrideToString(ref result, ref returnNow);
            if (returnNow)
            {
                return result;
            }
            return ToJsonString();
        }
    }
    /// The Defender for Servers GCP offering configurations
    [System.ComponentModel.TypeConverter(typeof(DefenderForServersGcpOfferingTypeConverter))]
    public partial interface IDefenderForServersGcpOffering

    {

    }
}