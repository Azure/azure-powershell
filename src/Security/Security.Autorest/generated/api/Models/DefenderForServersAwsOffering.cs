// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Security.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Extensions;

    /// <summary>The Defender for Servers AWS offering</summary>
    public partial class DefenderForServersAwsOffering :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOffering,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOffering" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOffering __cloudOffering = new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.CloudOffering();

        /// <summary>Backing field for <see cref="ArcAutoProvisioning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioning _arcAutoProvisioning;

        /// <summary>The ARC autoprovisioning configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioning ArcAutoProvisioning { get => (this._arcAutoProvisioning = this._arcAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingArcAutoProvisioning()); set => this._arcAutoProvisioning = value; }

        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ArcAutoProvisioningCloudRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).CloudRoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).CloudRoleArn = value ?? null; }

        /// <summary>Is arc auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public bool? ArcAutoProvisioningEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).Enabled = value ?? default(bool); }

        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ConfigurationCloudRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationCloudRoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationCloudRoleArn = value ?? null; }

        /// <summary>VM tags that indicates that VM should not be scanned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfigurationExclusionTags ConfigurationExclusionTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationExclusionTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationExclusionTag = value ?? null /* model class */; }

        /// <summary>Optional Arc private link scope resource id to link the Arc agent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ConfigurationPrivateLinkScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).ConfigurationPrivateLinkScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).ConfigurationPrivateLinkScope = value ?? null; }

        /// <summary>Optional HTTP proxy endpoint to use for the Arc agent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ConfigurationProxy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).ConfigurationProxy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).ConfigurationProxy = value ?? null; }

        /// <summary>The scanning mode for the VM scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ConfigurationScanningMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationScanningMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).ConfigurationScanningMode = value ?? null; }

        /// <summary>
        /// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string ConfigurationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).ConfigurationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).ConfigurationType = value ?? null; }

        /// <summary>Backing field for <see cref="DefenderForServer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServers _defenderForServer;

        /// <summary>The Defender for servers connection configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServers DefenderForServer { get => (this._defenderForServer = this._defenderForServer ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingDefenderForServers()); set => this._defenderForServer = value; }

        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string DefenderForServerCloudRoleArn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServersInternal)DefenderForServer).CloudRoleArn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServersInternal)DefenderForServer).CloudRoleArn = value ?? null; }

        /// <summary>The offering description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inherited)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)__cloudOffering).Description; }

        /// <summary>Backing field for <see cref="MdeAutoProvisioning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioning _mdeAutoProvisioning;

        /// <summary>The Microsoft Defender for Endpoint autoprovisioning configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioning MdeAutoProvisioning { get => (this._mdeAutoProvisioning = this._mdeAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingMdeAutoProvisioning()); set => this._mdeAutoProvisioning = value; }

        /// <summary>configuration for Microsoft Defender for Endpoint autoprovisioning</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny MdeAutoProvisioningConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioningInternal)MdeAutoProvisioning).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioningInternal)MdeAutoProvisioning).Configuration = value ?? null /* model class */; }

        /// <summary>Is Microsoft Defender for Endpoint auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public bool? MdeAutoProvisioningEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioningInternal)MdeAutoProvisioning).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioningInternal)MdeAutoProvisioning).Enabled = value ?? default(bool); }

        /// <summary>Internal Acessors for Description</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal.Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)__cloudOffering).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)__cloudOffering).Description = value; }

        /// <summary>Internal Acessors for ArcAutoProvisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioning Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.ArcAutoProvisioning { get => (this._arcAutoProvisioning = this._arcAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingArcAutoProvisioning()); set { {_arcAutoProvisioning = value;} } }

        /// <summary>Internal Acessors for ArcAutoProvisioningConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningConfiguration Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.ArcAutoProvisioningConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningInternal)ArcAutoProvisioning).Configuration = value; }

        /// <summary>Internal Acessors for DefenderForServer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServers Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.DefenderForServer { get => (this._defenderForServer = this._defenderForServer ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingDefenderForServers()); set { {_defenderForServer = value;} } }

        /// <summary>Internal Acessors for MdeAutoProvisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioning Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.MdeAutoProvisioning { get => (this._mdeAutoProvisioning = this._mdeAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingMdeAutoProvisioning()); set { {_mdeAutoProvisioning = value;} } }

        /// <summary>Internal Acessors for SubPlan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlan Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.SubPlan { get => (this._subPlan = this._subPlan ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingSubPlan()); set { {_subPlan = value;} } }

        /// <summary>Internal Acessors for VMScanner</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScanners Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.VMScanner { get => (this._vMScanner = this._vMScanner ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingVMScanners()); set { {_vMScanner = value;} } }

        /// <summary>Internal Acessors for VMScannerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfiguration Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.VMScannerConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).Configuration = value; }

        /// <summary>Internal Acessors for VaAutoProvisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioning Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.VaAutoProvisioning { get => (this._vaAutoProvisioning = this._vaAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingVaAutoProvisioning()); set { {_vaAutoProvisioning = value;} } }

        /// <summary>Internal Acessors for VaAutoProvisioningConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningConfiguration Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingInternal.VaAutoProvisioningConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).Configuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).Configuration = value; }

        /// <summary>The type of the security offering.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Constant]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inherited)]
        public string OfferingType { get => "DefenderForServersAws"; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal)__cloudOffering).OfferingType = "DefenderForServersAws"; }

        /// <summary>Backing field for <see cref="SubPlan" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlan _subPlan;

        /// <summary>configuration for the servers offering subPlan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlan SubPlan { get => (this._subPlan = this._subPlan ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingSubPlan()); set => this._subPlan = value; }

        /// <summary>The available sub plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public string SubPlanType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlanInternal)SubPlan).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlanInternal)SubPlan).Type = value ?? null; }

        /// <summary>Backing field for <see cref="VMScanner" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScanners _vMScanner;

        /// <summary>The Microsoft Defender for Server VM scanning configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScanners VMScanner { get => (this._vMScanner = this._vMScanner ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingVMScanners()); set => this._vMScanner = value; }

        /// <summary>Is Microsoft Defender for Server VM scanning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public bool? VMScannerEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersInternal)VMScanner).Enabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="VaAutoProvisioning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioning _vaAutoProvisioning;

        /// <summary>The Vulnerability Assessment autoprovisioning configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioning VaAutoProvisioning { get => (this._vaAutoProvisioning = this._vaAutoProvisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderForServersAwsOfferingVaAutoProvisioning()); set => this._vaAutoProvisioning = value; }

        /// <summary>Is Vulnerability Assessment auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Origin(Microsoft.Azure.PowerShell.Cmdlets.Security.PropertyOrigin.Inlined)]
        public bool? VaAutoProvisioningEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningInternal)VaAutoProvisioning).Enabled = value ?? default(bool); }

        /// <summary>Creates an new <see cref="DefenderForServersAwsOffering" /> instance.</summary>
        public DefenderForServersAwsOffering()
        {
            this.__cloudOffering.OfferingType = "DefenderForServersAws";
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__cloudOffering), __cloudOffering);
            await eventListener.AssertObjectIsValid(nameof(__cloudOffering), __cloudOffering);
        }
    }
    /// The Defender for Servers AWS offering
    public partial interface IDefenderForServersAwsOffering :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOffering
    {
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cloud role ARN in AWS for this feature",
        SerializedName = @"cloudRoleArn",
        PossibleTypes = new [] { typeof(string) })]
        string ArcAutoProvisioningCloudRoleArn { get; set; }
        /// <summary>Is arc auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is arc auto provisioning enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ArcAutoProvisioningEnabled { get; set; }
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cloud role ARN in AWS for this feature",
        SerializedName = @"cloudRoleArn",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationCloudRoleArn { get; set; }
        /// <summary>VM tags that indicates that VM should not be scanned</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"VM tags that indicates that VM should not be scanned",
        SerializedName = @"exclusionTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfigurationExclusionTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfigurationExclusionTags ConfigurationExclusionTag { get; set; }
        /// <summary>Optional Arc private link scope resource id to link the Arc agent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional Arc private link scope resource id to link the Arc agent",
        SerializedName = @"privateLinkScope",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationPrivateLinkScope { get; set; }
        /// <summary>Optional HTTP proxy endpoint to use for the Arc agent</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Optional HTTP proxy endpoint to use for the Arc agent",
        SerializedName = @"proxy",
        PossibleTypes = new [] { typeof(string) })]
        string ConfigurationProxy { get; set; }
        /// <summary>The scanning mode for the VM scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The scanning mode for the VM scan.",
        SerializedName = @"scanningMode",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Default")]
        string ConfigurationScanningMode { get; set; }
        /// <summary>
        /// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Qualys", "TVM")]
        string ConfigurationType { get; set; }
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The cloud role ARN in AWS for this feature",
        SerializedName = @"cloudRoleArn",
        PossibleTypes = new [] { typeof(string) })]
        string DefenderForServerCloudRoleArn { get; set; }
        /// <summary>configuration for Microsoft Defender for Endpoint autoprovisioning</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"configuration for Microsoft Defender for Endpoint autoprovisioning",
        SerializedName = @"configuration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny MdeAutoProvisioningConfiguration { get; set; }
        /// <summary>Is Microsoft Defender for Endpoint auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is Microsoft Defender for Endpoint auto provisioning enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MdeAutoProvisioningEnabled { get; set; }
        /// <summary>The available sub plans</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"The available sub plans",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("P1", "P2")]
        string SubPlanType { get; set; }
        /// <summary>Is Microsoft Defender for Server VM scanning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is Microsoft Defender for Server VM scanning enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VMScannerEnabled { get; set; }
        /// <summary>Is Vulnerability Assessment auto provisioning enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Read = true,
        Create = true,
        Update = true,
        Description = @"Is Vulnerability Assessment auto provisioning enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VaAutoProvisioningEnabled { get; set; }

    }
    /// The Defender for Servers AWS offering
    internal partial interface IDefenderForServersAwsOfferingInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.ICloudOfferingInternal
    {
        /// <summary>The ARC autoprovisioning configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioning ArcAutoProvisioning { get; set; }
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        string ArcAutoProvisioningCloudRoleArn { get; set; }
        /// <summary>Configuration for servers Arc auto provisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingArcAutoProvisioningConfiguration ArcAutoProvisioningConfiguration { get; set; }
        /// <summary>Is arc auto provisioning enabled</summary>
        bool? ArcAutoProvisioningEnabled { get; set; }
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        string ConfigurationCloudRoleArn { get; set; }
        /// <summary>VM tags that indicates that VM should not be scanned</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfigurationExclusionTags ConfigurationExclusionTag { get; set; }
        /// <summary>Optional Arc private link scope resource id to link the Arc agent</summary>
        string ConfigurationPrivateLinkScope { get; set; }
        /// <summary>Optional HTTP proxy endpoint to use for the Arc agent</summary>
        string ConfigurationProxy { get; set; }
        /// <summary>The scanning mode for the VM scan.</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Default")]
        string ConfigurationScanningMode { get; set; }
        /// <summary>
        /// The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'
        /// </summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Qualys", "TVM")]
        string ConfigurationType { get; set; }
        /// <summary>The Defender for servers connection configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingDefenderForServers DefenderForServer { get; set; }
        /// <summary>The cloud role ARN in AWS for this feature</summary>
        string DefenderForServerCloudRoleArn { get; set; }
        /// <summary>The Microsoft Defender for Endpoint autoprovisioning configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingMdeAutoProvisioning MdeAutoProvisioning { get; set; }
        /// <summary>configuration for Microsoft Defender for Endpoint autoprovisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IAny MdeAutoProvisioningConfiguration { get; set; }
        /// <summary>Is Microsoft Defender for Endpoint auto provisioning enabled</summary>
        bool? MdeAutoProvisioningEnabled { get; set; }
        /// <summary>configuration for the servers offering subPlan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingSubPlan SubPlan { get; set; }
        /// <summary>The available sub plans</summary>
        [global::Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("P1", "P2")]
        string SubPlanType { get; set; }
        /// <summary>The Microsoft Defender for Server VM scanning configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScanners VMScanner { get; set; }
        /// <summary>configuration for Microsoft Defender for Server VM scanning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVMScannersConfiguration VMScannerConfiguration { get; set; }
        /// <summary>Is Microsoft Defender for Server VM scanning enabled</summary>
        bool? VMScannerEnabled { get; set; }
        /// <summary>The Vulnerability Assessment autoprovisioning configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioning VaAutoProvisioning { get; set; }
        /// <summary>configuration for Vulnerability Assessment autoprovisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderForServersAwsOfferingVaAutoProvisioningConfiguration VaAutoProvisioningConfiguration { get; set; }
        /// <summary>Is Vulnerability Assessment auto provisioning enabled</summary>
        bool? VaAutoProvisioningEnabled { get; set; }

    }
}