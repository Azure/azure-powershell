
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for DefenderCspmGcpOffering.
.Description
Create an in-memory object for DefenderCspmGcpOffering.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmGcpOffering
.Link
https://learn.microsoft.com/powershell/module/Az.Security/new-azsecuritydefendercspmgcpofferingobject
#>
function New-AzSecurityDefenderCspmGcpOfferingObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmGcpOffering')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="the azure active directory app name used of authenticating against GCP workload identity federation.")]
        [string]
        $CiemDiscoveryAzureActiveDirectoryAppName,
        [Parameter(HelpMessage="The service account email address in GCP for CIEM discovery offering.")]
        [string]
        $CiemDiscoveryServiceAccountEmailAddress,
        [Parameter(HelpMessage="The GCP workload identity provider id for CIEM discovery offering.")]
        [string]
        $CiemDiscoveryWorkloadIdentityProviderId,
        [Parameter(HelpMessage="VM tags that indicates that VM should not be scanned.")]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderCspmGcpOfferingVMScannersConfigurationExclusionTags]
        $ConfigurationExclusionTag,
        [Parameter(HelpMessage="The scanning mode for the VM scan.")]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Default")]
        [string]
        $ConfigurationScanningMode,
        [Parameter(HelpMessage="Is Microsoft Defender Data Sensitivity discovery enabled.")]
        [bool]
        $DataSensitivityDiscoveryEnabled,
        [Parameter(HelpMessage="The service account email address in GCP for this feature.")]
        [string]
        $DataSensitivityDiscoveryServiceAccountEmailAddress,
        [Parameter(HelpMessage="The workload identity provider id in GCP for this feature.")]
        [string]
        $DataSensitivityDiscoveryWorkloadIdentityProviderId,
        [Parameter(HelpMessage="Is Microsoft Defender container agentless discovery enabled.")]
        [bool]
        $MdcContainerAgentlessDiscoveryK8SEnabled,
        [Parameter(HelpMessage="The service account email address in GCP for this feature.")]
        [string]
        $MdcContainerAgentlessDiscoveryK8SServiceAccountEmailAddress,
        [Parameter(HelpMessage="The workload identity provider id in GCP for this feature.")]
        [string]
        $MdcContainerAgentlessDiscoveryK8SWorkloadIdentityProviderId,
        [Parameter(HelpMessage="Is Microsoft Defender container image assessment enabled.")]
        [bool]
        $MdcContainerImageAssessmentEnabled,
        [Parameter(HelpMessage="The service account email address in GCP for this feature.")]
        [string]
        $MdcContainerImageAssessmentServiceAccountEmailAddress,
        [Parameter(HelpMessage="The workload identity provider id in GCP for this feature.")]
        [string]
        $MdcContainerImageAssessmentWorkloadIdentityProviderId,
        [Parameter(HelpMessage="Is Microsoft Defender for Server VM scanning enabled.")]
        [bool]
        $VMScannerEnabled
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmGcpOffering]::New()

        if ($PSBoundParameters.ContainsKey('CiemDiscoveryAzureActiveDirectoryAppName')) {
            $Object.CiemDiscoveryAzureActiveDirectoryAppName = $CiemDiscoveryAzureActiveDirectoryAppName
        }
        if ($PSBoundParameters.ContainsKey('CiemDiscoveryServiceAccountEmailAddress')) {
            $Object.CiemDiscoveryServiceAccountEmailAddress = $CiemDiscoveryServiceAccountEmailAddress
        }
        if ($PSBoundParameters.ContainsKey('CiemDiscoveryWorkloadIdentityProviderId')) {
            $Object.CiemDiscoveryWorkloadIdentityProviderId = $CiemDiscoveryWorkloadIdentityProviderId
        }
        if ($PSBoundParameters.ContainsKey('ConfigurationExclusionTag')) {
            $Object.ConfigurationExclusionTag = $ConfigurationExclusionTag
        }
        if ($PSBoundParameters.ContainsKey('ConfigurationScanningMode')) {
            $Object.ConfigurationScanningMode = $ConfigurationScanningMode
        }
        if ($PSBoundParameters.ContainsKey('DataSensitivityDiscoveryEnabled')) {
            $Object.DataSensitivityDiscoveryEnabled = $DataSensitivityDiscoveryEnabled
        }
        if ($PSBoundParameters.ContainsKey('DataSensitivityDiscoveryServiceAccountEmailAddress')) {
            $Object.DataSensitivityDiscoveryServiceAccountEmailAddress = $DataSensitivityDiscoveryServiceAccountEmailAddress
        }
        if ($PSBoundParameters.ContainsKey('DataSensitivityDiscoveryWorkloadIdentityProviderId')) {
            $Object.DataSensitivityDiscoveryWorkloadIdentityProviderId = $DataSensitivityDiscoveryWorkloadIdentityProviderId
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerAgentlessDiscoveryK8SEnabled')) {
            $Object.MdcContainerAgentlessDiscoveryK8SEnabled = $MdcContainerAgentlessDiscoveryK8SEnabled
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerAgentlessDiscoveryK8SServiceAccountEmailAddress')) {
            $Object.MdcContainerAgentlessDiscoveryK8SServiceAccountEmailAddress = $MdcContainerAgentlessDiscoveryK8SServiceAccountEmailAddress
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerAgentlessDiscoveryK8SWorkloadIdentityProviderId')) {
            $Object.MdcContainerAgentlessDiscoveryK8SWorkloadIdentityProviderId = $MdcContainerAgentlessDiscoveryK8SWorkloadIdentityProviderId
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerImageAssessmentEnabled')) {
            $Object.MdcContainerImageAssessmentEnabled = $MdcContainerImageAssessmentEnabled
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerImageAssessmentServiceAccountEmailAddress')) {
            $Object.MdcContainerImageAssessmentServiceAccountEmailAddress = $MdcContainerImageAssessmentServiceAccountEmailAddress
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerImageAssessmentWorkloadIdentityProviderId')) {
            $Object.MdcContainerImageAssessmentWorkloadIdentityProviderId = $MdcContainerImageAssessmentWorkloadIdentityProviderId
        }
        if ($PSBoundParameters.ContainsKey('VMScannerEnabled')) {
            $Object.VMScannerEnabled = $VMScannerEnabled
        }
        return $Object
    }
}

