
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for DefenderCspmAwsOffering.
.Description
Create an in-memory object for DefenderCspmAwsOffering.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmAwsOffering
.Link
https://learn.microsoft.com/powershell/module/Az.Security/new-azsecuritydefendercspmawsofferingobject
#>
function New-AzSecurityDefenderCspmAwsOfferingObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmAwsOffering')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="The cloud role ARN in AWS for CIEM discovery.")]
        [string]
        $CiemDiscoveryCloudRoleArn,
        [Parameter(HelpMessage="the azure active directory app name used of authenticating against AWS.")]
        [string]
        $CiemOidcAzureActiveDirectoryAppName,
        [Parameter(HelpMessage="The cloud role ARN in AWS for CIEM oidc connection.")]
        [string]
        $CiemOidcCloudRoleArn,
        [Parameter(HelpMessage="The cloud role ARN in AWS for this feature.")]
        [string]
        $ConfigurationCloudRoleArn,
        [Parameter(HelpMessage="VM tags that indicates that VM should not be scanned.")]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.Models.IDefenderCspmAwsOfferingVMScannersConfigurationExclusionTags]
        $ConfigurationExclusionTag,
        [Parameter(HelpMessage="The scanning mode for the VM scan.")]
        [Microsoft.Azure.PowerShell.Cmdlets.Security.PSArgumentCompleterAttribute("Default")]
        [string]
        $ConfigurationScanningMode,
        [Parameter(HelpMessage="The cloud role ARN in AWS for this feature.")]
        [string]
        $DataSensitivityDiscoveryCloudRoleArn,
        [Parameter(HelpMessage="Is Microsoft Defender Data Sensitivity discovery enabled.")]
        [bool]
        $DataSensitivityDiscoveryEnabled,
        [Parameter(HelpMessage="The cloud role ARN in AWS for this feature.")]
        [string]
        $DatabaseDspmCloudRoleArn,
        [Parameter(HelpMessage="Is databases DSPM protection enabled.")]
        [bool]
        $DatabaseDspmEnabled,
        [Parameter(HelpMessage="The cloud role ARN in AWS for this feature.")]
        [string]
        $MdcContainerAgentlessDiscoveryK8SCloudRoleArn,
        [Parameter(HelpMessage="Is Microsoft Defender container agentless discovery K8s enabled.")]
        [bool]
        $MdcContainerAgentlessDiscoveryK8SEnabled,
        [Parameter(HelpMessage="The cloud role ARN in AWS for this feature.")]
        [string]
        $MdcContainerImageAssessmentCloudRoleArn,
        [Parameter(HelpMessage="Is Microsoft Defender container image assessment enabled.")]
        [bool]
        $MdcContainerImageAssessmentEnabled,
        [Parameter(HelpMessage="Is Microsoft Defender for Server VM scanning enabled.")]
        [bool]
        $VMScannerEnabled
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Security.Models.DefenderCspmAwsOffering]::New()

        if ($PSBoundParameters.ContainsKey('CiemDiscoveryCloudRoleArn')) {
            $Object.CiemDiscoveryCloudRoleArn = $CiemDiscoveryCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('CiemOidcAzureActiveDirectoryAppName')) {
            $Object.CiemOidcAzureActiveDirectoryAppName = $CiemOidcAzureActiveDirectoryAppName
        }
        if ($PSBoundParameters.ContainsKey('CiemOidcCloudRoleArn')) {
            $Object.CiemOidcCloudRoleArn = $CiemOidcCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('ConfigurationCloudRoleArn')) {
            $Object.ConfigurationCloudRoleArn = $ConfigurationCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('ConfigurationExclusionTag')) {
            $Object.ConfigurationExclusionTag = $ConfigurationExclusionTag
        }
        if ($PSBoundParameters.ContainsKey('ConfigurationScanningMode')) {
            $Object.ConfigurationScanningMode = $ConfigurationScanningMode
        }
        if ($PSBoundParameters.ContainsKey('DataSensitivityDiscoveryCloudRoleArn')) {
            $Object.DataSensitivityDiscoveryCloudRoleArn = $DataSensitivityDiscoveryCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('DataSensitivityDiscoveryEnabled')) {
            $Object.DataSensitivityDiscoveryEnabled = $DataSensitivityDiscoveryEnabled
        }
        if ($PSBoundParameters.ContainsKey('DatabaseDspmCloudRoleArn')) {
            $Object.DatabaseDspmCloudRoleArn = $DatabaseDspmCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('DatabaseDspmEnabled')) {
            $Object.DatabaseDspmEnabled = $DatabaseDspmEnabled
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerAgentlessDiscoveryK8SCloudRoleArn')) {
            $Object.MdcContainerAgentlessDiscoveryK8SCloudRoleArn = $MdcContainerAgentlessDiscoveryK8SCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerAgentlessDiscoveryK8SEnabled')) {
            $Object.MdcContainerAgentlessDiscoveryK8SEnabled = $MdcContainerAgentlessDiscoveryK8SEnabled
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerImageAssessmentCloudRoleArn')) {
            $Object.MdcContainerImageAssessmentCloudRoleArn = $MdcContainerImageAssessmentCloudRoleArn
        }
        if ($PSBoundParameters.ContainsKey('MdcContainerImageAssessmentEnabled')) {
            $Object.MdcContainerImageAssessmentEnabled = $MdcContainerImageAssessmentEnabled
        }
        if ($PSBoundParameters.ContainsKey('VMScannerEnabled')) {
            $Object.VMScannerEnabled = $VMScannerEnabled
        }
        return $Object
    }
}

