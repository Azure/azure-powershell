// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Statistical information about the number of recommendations per device, per
    /// recommendation type.
    /// </summary>
    public partial class IoTSecurityDeviceRecommendation
    {
        /// <summary>
        /// Initializes a new instance of the IoTSecurityDeviceRecommendation class.
        /// </summary>
        public IoTSecurityDeviceRecommendation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IoTSecurityDeviceRecommendation class.
        /// </summary>

        /// <param name="recommendationDisplayName">Display name of the recommendation.
        /// </param>

        /// <param name="reportedSeverity">Assessed recommendation severity.
        /// Possible values include: 'Informational', 'Low', 'Medium', 'High'</param>

        /// <param name="devicesCount">Number of devices with this recommendation.
        /// </param>
        public IoTSecurityDeviceRecommendation(string recommendationDisplayName = default(string), string reportedSeverity = default(string), long? devicesCount = default(long?))

        {
            this.RecommendationDisplayName = recommendationDisplayName;
            this.ReportedSeverity = reportedSeverity;
            this.DevicesCount = devicesCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets display name of the recommendation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recommendationDisplayName")]
        public string RecommendationDisplayName {get; private set; }

        /// <summary>
        /// Gets assessed recommendation severity. Possible values include: &#39;Informational&#39;, &#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reportedSeverity")]
        public string ReportedSeverity {get; private set; }

        /// <summary>
        /// Gets number of devices with this recommendation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "devicesCount")]
        public long? DevicesCount {get; private set; }
    }
}