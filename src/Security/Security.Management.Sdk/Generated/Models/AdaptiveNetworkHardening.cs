// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The resource whose properties describes the Adaptive Network Hardening
    /// settings for some Azure resource
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AdaptiveNetworkHardening : Resource
    {
        /// <summary>
        /// Initializes a new instance of the AdaptiveNetworkHardening class.
        /// </summary>
        public AdaptiveNetworkHardening()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdaptiveNetworkHardening class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="rules">The security rules which are recommended to be effective on the VM
        /// </param>

        /// <param name="rulesCalculationTime">The UTC time on which the rules were calculated
        /// </param>

        /// <param name="effectiveNetworkSecurityGroups">The Network Security Groups effective on the network interfaces of the
        /// protected resource
        /// </param>
        public AdaptiveNetworkHardening(string id = default(string), string name = default(string), string type = default(string), System.Collections.Generic.IList<Rule> rules = default(System.Collections.Generic.IList<Rule>), System.DateTime? rulesCalculationTime = default(System.DateTime?), System.Collections.Generic.IList<EffectiveNetworkSecurityGroups> effectiveNetworkSecurityGroups = default(System.Collections.Generic.IList<EffectiveNetworkSecurityGroups>))

        : base(id, name, type)
        {
            this.Rules = rules;
            this.RulesCalculationTime = rulesCalculationTime;
            this.EffectiveNetworkSecurityGroups = effectiveNetworkSecurityGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the security rules which are recommended to be effective on
        /// the VM
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.rules")]
        public System.Collections.Generic.IList<Rule> Rules {get; set; }

        /// <summary>
        /// Gets or sets the UTC time on which the rules were calculated
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.rulesCalculationTime")]
        public System.DateTime? RulesCalculationTime {get; set; }

        /// <summary>
        /// Gets or sets the Network Security Groups effective on the network
        /// interfaces of the protected resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.effectiveNetworkSecurityGroups")]
        public System.Collections.Generic.IList<EffectiveNetworkSecurityGroups> EffectiveNetworkSecurityGroups {get; set; }
    }
}