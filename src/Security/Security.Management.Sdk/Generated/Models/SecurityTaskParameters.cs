// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Changing set of properties, depending on the task type that is derived from
    /// the name field
    /// </summary>
    public partial class SecurityTaskParameters
    {
        /// <summary>
        /// Initializes a new instance of the SecurityTaskParameters class.
        /// </summary>
        public SecurityTaskParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityTaskParameters class.
        /// </summary>

        /// <param name="additionalProperties">Changing set of properties, depending on the task type that is derived from
        /// the name field
        /// </param>

        /// <param name="name">Name of the task type
        /// </param>
        public SecurityTaskParameters(System.Collections.Generic.IDictionary<string, object> additionalProperties = default(System.Collections.Generic.IDictionary<string, object>), string name = default(string))

        {
            this.AdditionalProperties = additionalProperties;
            this.Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets changing set of properties, depending on the task type that is
        /// derived from the name field
        /// </summary>
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties {get; set; }

        /// <summary>
        /// Gets name of the task type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }
    }
}