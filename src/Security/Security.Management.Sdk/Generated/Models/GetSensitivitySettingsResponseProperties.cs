// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The sensitivity settings properties
    /// </summary>
    public partial class GetSensitivitySettingsResponseProperties
    {
        /// <summary>
        /// Initializes a new instance of the GetSensitivitySettingsResponseProperties class.
        /// </summary>
        public GetSensitivitySettingsResponseProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetSensitivitySettingsResponseProperties class.
        /// </summary>

        /// <param name="sensitiveInfoTypesIds">List of selected sensitive info types&#39; IDs.
        /// </param>

        /// <param name="sensitivityThresholdLabelOrder">The order of the sensitivity threshold label. Any label at or above this
        /// order will be considered sensitive. If set to -1, sensitivity by labels is
        /// turned off
        /// </param>

        /// <param name="sensitivityThresholdLabelId">The id of the sensitivity threshold label. Any label at or above this rank
        /// will be considered sensitive.
        /// </param>

        /// <param name="mipInformation">Microsoft information protection built-in and custom information types,
        /// labels, and integration status.
        /// </param>
        public GetSensitivitySettingsResponseProperties(System.Collections.Generic.IList<System.Guid?> sensitiveInfoTypesIds = default(System.Collections.Generic.IList<System.Guid?>), double? sensitivityThresholdLabelOrder = default(double?), System.Guid? sensitivityThresholdLabelId = default(System.Guid?), GetSensitivitySettingsResponsePropertiesMipInformation mipInformation = default(GetSensitivitySettingsResponsePropertiesMipInformation))

        {
            this.SensitiveInfoTypesIds = sensitiveInfoTypesIds;
            this.SensitivityThresholdLabelOrder = sensitivityThresholdLabelOrder;
            this.SensitivityThresholdLabelId = sensitivityThresholdLabelId;
            this.MipInformation = mipInformation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets list of selected sensitive info types&#39; IDs.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sensitiveInfoTypesIds")]
        public System.Collections.Generic.IList<System.Guid?> SensitiveInfoTypesIds {get; set; }

        /// <summary>
        /// Gets or sets the order of the sensitivity threshold label. Any label at or
        /// above this order will be considered sensitive. If set to -1, sensitivity by
        /// labels is turned off
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sensitivityThresholdLabelOrder")]
        public double? SensitivityThresholdLabelOrder {get; set; }

        /// <summary>
        /// Gets or sets the id of the sensitivity threshold label. Any label at or
        /// above this rank will be considered sensitive.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sensitivityThresholdLabelId")]
        public System.Guid? SensitivityThresholdLabelId {get; set; }

        /// <summary>
        /// Gets or sets microsoft information protection built-in and custom
        /// information types, labels, and integration status.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "mipInformation")]
        public GetSensitivitySettingsResponsePropertiesMipInformation MipInformation {get; set; }
    }
}