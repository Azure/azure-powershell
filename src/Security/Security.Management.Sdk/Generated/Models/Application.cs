// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Security Application over a given scope
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Application : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>
        public Application()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Application class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="displayName">display name of the application
        /// </param>

        /// <param name="description">description of the application
        /// </param>

        /// <param name="sourceResourceType">The application source, what it affects, e.g. Assessments
        /// Possible values include: 'Assessments'</param>

        /// <param name="conditionSets">The application conditionSets - see examples
        /// </param>
        public Application(string id = default(string), string name = default(string), string type = default(string), string displayName = default(string), string description = default(string), string sourceResourceType = default(string), System.Collections.Generic.IList<object> conditionSets = default(System.Collections.Generic.IList<object>))

        : base(id, name, type)
        {
            this.DisplayName = displayName;
            this.Description = description;
            this.SourceResourceType = sourceResourceType;
            this.ConditionSets = conditionSets;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets display name of the application
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.displayName")]
        public string DisplayName {get; set; }

        /// <summary>
        /// Gets or sets description of the application
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; set; }

        /// <summary>
        /// Gets or sets the application source, what it affects, e.g. Assessments Possible values include: &#39;Assessments&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sourceResourceType")]
        public string SourceResourceType {get; set; }

        /// <summary>
        /// Gets or sets the application conditionSets - see examples
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.conditionSets")]
        public System.Collections.Generic.IList<object> ConditionSets {get; set; }
    }
}