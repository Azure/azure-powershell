// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SecuritySolution
    {
        /// <summary>
        /// Initializes a new instance of the SecuritySolution class.
        /// </summary>
        public SecuritySolution()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecuritySolution class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="location">Location where the resource is stored
        /// </param>

        /// <param name="securityFamily">The security family of the security solution
        /// Possible values include: 'Waf', 'Ngfw', 'SaasWaf', 'Va'</param>

        /// <param name="provisioningState">The security family provisioning State
        /// Possible values include: 'Succeeded', 'Failed', 'Updating'</param>

        /// <param name="template">The security solutions&#39; template
        /// </param>

        /// <param name="protectionStatus">The security solutions&#39; status
        /// </param>
        public SecuritySolution(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string securityFamily = default(string), string provisioningState = default(string), string template = default(string), string protectionStatus = default(string))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Location = location;
            this.SecurityFamily = securityFamily;
            this.ProvisioningState = provisioningState;
            this.Template = template;
            this.ProtectionStatus = protectionStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets resource name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets resource type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets location where the resource is stored
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets or sets the security family of the security solution Possible values include: &#39;Waf&#39;, &#39;Ngfw&#39;, &#39;SaasWaf&#39;, &#39;Va&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.securityFamily")]
        public string SecurityFamily {get; set; }

        /// <summary>
        /// Gets or sets the security family provisioning State Possible values include: &#39;Succeeded&#39;, &#39;Failed&#39;, &#39;Updating&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; template
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.template")]
        public string Template {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; status
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.protectionStatus")]
        public string ProtectionStatus {get; set; }
    }
}