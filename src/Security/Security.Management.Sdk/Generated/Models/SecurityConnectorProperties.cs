// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// A set of properties that defines the security connector configuration.
    /// </summary>
    public partial class SecurityConnectorProperties
    {
        /// <summary>
        /// Initializes a new instance of the SecurityConnectorProperties class.
        /// </summary>
        public SecurityConnectorProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityConnectorProperties class.
        /// </summary>

        /// <param name="hierarchyIdentifier">The multi cloud resource identifier (account id in case of AWS connector,
        /// project number in case of GCP connector).
        /// </param>

        /// <param name="hierarchyIdentifierTrialEndDate">The date on which the trial period will end, if applicable. Trial period
        /// exists for 30 days after upgrading to payed offerings.
        /// </param>

        /// <param name="environmentName">The multi cloud resource&#39;s cloud name.
        /// Possible values include: 'Azure', 'AWS', 'GCP', 'Github', 'AzureDevOps'</param>

        /// <param name="offerings">A collection of offerings for the security connector.
        /// </param>

        /// <param name="environmentData">The security connector environment data.
        /// </param>
        public SecurityConnectorProperties(string hierarchyIdentifier = default(string), System.DateTime? hierarchyIdentifierTrialEndDate = default(System.DateTime?), string environmentName = default(string), System.Collections.Generic.IList<CloudOffering> offerings = default(System.Collections.Generic.IList<CloudOffering>), EnvironmentData environmentData = default(EnvironmentData))

        {
            this.HierarchyIdentifier = hierarchyIdentifier;
            this.HierarchyIdentifierTrialEndDate = hierarchyIdentifierTrialEndDate;
            this.EnvironmentName = environmentName;
            this.Offerings = offerings;
            this.EnvironmentData = environmentData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the multi cloud resource identifier (account id in case of AWS
        /// connector, project number in case of GCP connector).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hierarchyIdentifier")]
        public string HierarchyIdentifier {get; set; }

        /// <summary>
        /// Gets the date on which the trial period will end, if applicable. Trial
        /// period exists for 30 days after upgrading to payed offerings.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "hierarchyIdentifierTrialEndDate")]
        public System.DateTime? HierarchyIdentifierTrialEndDate {get; private set; }

        /// <summary>
        /// Gets or sets the multi cloud resource&#39;s cloud name. Possible values include: &#39;Azure&#39;, &#39;AWS&#39;, &#39;GCP&#39;, &#39;Github&#39;, &#39;AzureDevOps&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentName")]
        public string EnvironmentName {get; set; }

        /// <summary>
        /// Gets or sets a collection of offerings for the security connector.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "offerings")]
        public System.Collections.Generic.IList<CloudOffering> Offerings {get; set; }

        /// <summary>
        /// Gets or sets the security connector environment data.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentData")]
        public EnvironmentData EnvironmentData {get; set; }
    }
}