// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The resource details of the health report
    /// </summary>
    public partial class HealthReportResourceDetails
    {
        /// <summary>
        /// Initializes a new instance of the HealthReportResourceDetails class.
        /// </summary>
        public HealthReportResourceDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HealthReportResourceDetails class.
        /// </summary>

        /// <param name="source">The status of the health report
        /// Possible values include: &#39;Azure&#39;, &#39;OnPremise&#39;, &#39;OnPremiseSql&#39;</param>

        /// <param name="id">The azure id of the resource
        /// </param>

        /// <param name="connectorId">The id of the connector
        /// </param>
        public HealthReportResourceDetails(string source = default(string), string id = default(string), string connectorId = default(string))

        {
            this.Source = source;
            this.Id = id;
            this.ConnectorId = connectorId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the status of the health report Possible values include: &#39;Azure&#39;, &#39;OnPremise&#39;, &#39;OnPremiseSql&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "source")]
        public string Source {get; set; }

        /// <summary>
        /// Gets the azure id of the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets the id of the connector
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "connectorId")]
        public string ConnectorId {get; private set; }
    }
}