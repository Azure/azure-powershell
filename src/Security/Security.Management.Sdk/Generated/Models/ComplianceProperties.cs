// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The Compliance score (percentage) of a Subscription is a sum of all
    /// Resources&#39; Compliances under the given Subscription. A Resource Compliance
    /// is defined as the compliant (&#39;healthy&#39;) Policy Definitions out of all
    /// Policy Definitions applicable to a given resource.
    /// </summary>
    public partial class ComplianceProperties
    {
        /// <summary>
        /// Initializes a new instance of the ComplianceProperties class.
        /// </summary>
        public ComplianceProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ComplianceProperties class.
        /// </summary>

        /// <param name="assessmentTimestampUtcDate">The timestamp when the Compliance calculation was conducted.
        /// </param>

        /// <param name="resourceCount">The resource count of the given subscription for which the Compliance
        /// calculation was conducted (needed for Management Group Compliance
        /// calculation).
        /// </param>

        /// <param name="assessmentResult">An array of segment, which is the actually the compliance assessment.
        /// </param>
        public ComplianceProperties(System.DateTime? assessmentTimestampUtcDate = default(System.DateTime?), int? resourceCount = default(int?), System.Collections.Generic.IList<ComplianceSegment> assessmentResult = default(System.Collections.Generic.IList<ComplianceSegment>))

        {
            this.AssessmentTimestampUtcDate = assessmentTimestampUtcDate;
            this.ResourceCount = resourceCount;
            this.AssessmentResult = assessmentResult;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the timestamp when the Compliance calculation was conducted.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "assessmentTimestampUtcDate")]
        public System.DateTime? AssessmentTimestampUtcDate {get; private set; }

        /// <summary>
        /// Gets the resource count of the given subscription for which the Compliance
        /// calculation was conducted (needed for Management Group Compliance
        /// calculation).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceCount")]
        public int? ResourceCount {get; private set; }

        /// <summary>
        /// Gets an array of segment, which is the actually the compliance assessment.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "assessmentResult")]
        public System.Collections.Generic.IList<ComplianceSegment> AssessmentResult {get; private set; }
    }
}