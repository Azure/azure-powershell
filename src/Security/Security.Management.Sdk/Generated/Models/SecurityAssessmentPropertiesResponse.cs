// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Describes properties of an assessment.
    /// </summary>
    public partial class SecurityAssessmentPropertiesResponse : SecurityAssessmentPropertiesBase
    {
        /// <summary>
        /// Initializes a new instance of the SecurityAssessmentPropertiesResponse class.
        /// </summary>
        public SecurityAssessmentPropertiesResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityAssessmentPropertiesResponse class.
        /// </summary>

        /// <param name="resourceDetails">Details of the resource that was assessed
        /// </param>

        /// <param name="displayName">User friendly display name of the assessment
        /// </param>

        /// <param name="additionalData">Additional data regarding the assessment
        /// </param>

        /// <param name="links">Links relevant to the assessment
        /// </param>

        /// <param name="metadata">Describes properties of an assessment metadata.
        /// </param>

        /// <param name="partnersData">Data regarding 3rd party partner integration
        /// </param>

        /// <param name="status">The result of the assessment
        /// </param>
        public SecurityAssessmentPropertiesResponse(ResourceDetails resourceDetails, AssessmentStatusResponse status, string displayName = default(string), System.Collections.Generic.IDictionary<string, string> additionalData = default(System.Collections.Generic.IDictionary<string, string>), AssessmentLinks links = default(AssessmentLinks), SecurityAssessmentMetadataProperties metadata = default(SecurityAssessmentMetadataProperties), SecurityAssessmentPartnerData partnersData = default(SecurityAssessmentPartnerData))

        : base(resourceDetails, displayName, additionalData, links, metadata, partnersData)
        {
            this.Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the result of the assessment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public AssessmentStatusResponse Status {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (this.Status == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Status");
            }
            if (this.Status != null)
            {
                this.Status.Validate();
            }
        }
    }
}