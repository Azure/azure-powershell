// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The rule result adjusted with baseline.
    /// </summary>
    public partial class BaselineAdjustedResult
    {
        /// <summary>
        /// Initializes a new instance of the BaselineAdjustedResult class.
        /// </summary>
        public BaselineAdjustedResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BaselineAdjustedResult class.
        /// </summary>

        /// <param name="baseline">Baseline details.
        /// </param>

        /// <param name="status">The rule result status.
        /// Possible values include: 'NonFinding', 'Finding', 'InternalError'</param>

        /// <param name="resultsNotInBaseline">Results the are not in baseline.
        /// </param>

        /// <param name="resultsOnlyInBaseline">Results the are in baseline.
        /// </param>
        public BaselineAdjustedResult(Baseline baseline = default(Baseline), string status = default(string), System.Collections.Generic.IList<System.Collections.Generic.IList<string>> resultsNotInBaseline = default(System.Collections.Generic.IList<System.Collections.Generic.IList<string>>), System.Collections.Generic.IList<System.Collections.Generic.IList<string>> resultsOnlyInBaseline = default(System.Collections.Generic.IList<System.Collections.Generic.IList<string>>))

        {
            this.Baseline = baseline;
            this.Status = status;
            this.ResultsNotInBaseline = resultsNotInBaseline;
            this.ResultsOnlyInBaseline = resultsOnlyInBaseline;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets baseline details.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "baseline")]
        public Baseline Baseline {get; set; }

        /// <summary>
        /// Gets or sets the rule result status. Possible values include: &#39;NonFinding&#39;, &#39;Finding&#39;, &#39;InternalError&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public string Status {get; set; }

        /// <summary>
        /// Gets or sets results the are not in baseline.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resultsNotInBaseline")]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<string>> ResultsNotInBaseline {get; set; }

        /// <summary>
        /// Gets or sets results the are in baseline.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resultsOnlyInBaseline")]
        public System.Collections.Generic.IList<System.Collections.Generic.IList<string>> ResultsOnlyInBaseline {get; set; }
    }
}