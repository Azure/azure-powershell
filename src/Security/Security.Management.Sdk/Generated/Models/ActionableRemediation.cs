// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Configuration payload for PR Annotations.
    /// </summary>
    public partial class ActionableRemediation
    {
        /// <summary>
        /// Initializes a new instance of the ActionableRemediation class.
        /// </summary>
        public ActionableRemediation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActionableRemediation class.
        /// </summary>

        /// <param name="state">ActionableRemediation Setting.
        /// None - the setting was never set.
        /// Enabled - ActionableRemediation is enabled.
        /// Disabled - ActionableRemediation is disabled.
        /// Possible values include: &#39;None&#39;, &#39;Disabled&#39;, &#39;Enabled&#39;</param>

        /// <param name="categoryConfigurations">Gets or sets list of categories and severity levels.
        /// </param>

        /// <param name="branchConfiguration">Repository branch configuration for PR Annotations.
        /// </param>

        /// <param name="inheritFromParentState">Update Settings.
        /// Enabled - Resource should inherit configurations from parent.
        /// Disabled - Resource should not inherit configurations from parent.
        /// Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;</param>
        public ActionableRemediation(string state = default(string), System.Collections.Generic.IList<CategoryConfiguration> categoryConfigurations = default(System.Collections.Generic.IList<CategoryConfiguration>), TargetBranchConfiguration branchConfiguration = default(TargetBranchConfiguration), string inheritFromParentState = default(string))

        {
            this.State = state;
            this.CategoryConfigurations = categoryConfigurations;
            this.BranchConfiguration = branchConfiguration;
            this.InheritFromParentState = inheritFromParentState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets actionableRemediation Setting.
        /// None - the setting was never set.
        /// Enabled - ActionableRemediation is enabled.
        /// Disabled - ActionableRemediation is disabled. Possible values include: &#39;None&#39;, &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "state")]
        public string State {get; set; }

        /// <summary>
        /// Gets or sets gets or sets list of categories and severity levels.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "categoryConfigurations")]
        public System.Collections.Generic.IList<CategoryConfiguration> CategoryConfigurations {get; set; }

        /// <summary>
        /// Gets or sets repository branch configuration for PR Annotations.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "branchConfiguration")]
        public TargetBranchConfiguration BranchConfiguration {get; set; }

        /// <summary>
        /// Gets or sets update Settings.
        /// Enabled - Resource should inherit configurations from parent.
        /// Disabled - Resource should not inherit configurations from parent. Possible values include: &#39;Disabled&#39;, &#39;Enabled&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "inheritFromParentState")]
        public string InheritFromParentState {get; set; }
    }
}