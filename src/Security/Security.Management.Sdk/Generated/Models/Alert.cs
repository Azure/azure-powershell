// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Security alert
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class Alert : Resource
    {
        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>
        public Alert()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Alert class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="intent">The kill chain related intent behind the alert. For list of supported
        /// values, and explanations of Azure Security Center&#39;s supported kill chain
        /// intents.
        /// Possible values include: 'Unknown', 'PreAttack', 'InitialAccess',
        /// 'Persistence', 'PrivilegeEscalation', 'DefenseEvasion', 'CredentialAccess',
        /// 'Discovery', 'LateralMovement', 'Execution', 'Collection', 'Exfiltration',
        /// 'CommandAndControl', 'Impact', 'Probing', 'Exploitation'</param>

        /// <param name="version">Schema version.
        /// </param>

        /// <param name="alertType">Unique identifier for the detection logic (all alert instances from the
        /// same detection logic will have the same alertType).
        /// </param>

        /// <param name="systemAlertId">Unique identifier for the alert.
        /// </param>

        /// <param name="productComponentName">The name of Azure Security Center pricing tier which powering this alert.
        /// Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing
        /// </param>

        /// <param name="alertDisplayName">The display name of the alert.
        /// </param>

        /// <param name="description">Description of the suspicious activity that was detected.
        /// </param>

        /// <param name="severity">The risk level of the threat that was detected. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-alerts-overview#how-are-alerts-classified.
        /// Possible values include: 'Informational', 'Low', 'Medium', 'High'</param>

        /// <param name="startTimeUtc">The UTC time of the first event or activity included in the alert in
        /// ISO8601 format.
        /// </param>

        /// <param name="endTimeUtc">The UTC time of the last event or activity included in the alert in ISO8601
        /// format.
        /// </param>

        /// <param name="resourceIdentifiers">The resource identifiers that can be used to direct the alert to the right
        /// product exposure group (tenant, workspace, subscription etc.). There can be
        /// multiple identifiers of different type per alert.
        /// </param>

        /// <param name="remediationSteps">Manual action items to take to remediate the alert.
        /// </param>

        /// <param name="vendorName">The name of the vendor that raises the alert.
        /// </param>

        /// <param name="status">The life cycle status of the alert.
        /// Possible values include: 'Active', 'InProgress', 'Resolved', 'Dismissed'</param>

        /// <param name="extendedLinks">Links related to the alert
        /// </param>

        /// <param name="alertUri">A direct link to the alert page in Azure Portal.
        /// </param>

        /// <param name="timeGeneratedUtc">The UTC time the alert was generated in ISO8601 format.
        /// </param>

        /// <param name="productName">The name of the product which published this alert (Microsoft Sentinel,
        /// Microsoft Defender for Identity, Microsoft Defender for Endpoint, Microsoft
        /// Defender for Office, Microsoft Defender for Cloud Apps, and so on).
        /// </param>

        /// <param name="processingEndTimeUtc">The UTC processing end time of the alert in ISO8601 format.
        /// </param>

        /// <param name="entities">A list of entities related to the alert.
        /// </param>

        /// <param name="isIncident">This field determines whether the alert is an incident (a compound grouping
        /// of several alerts) or a single alert.
        /// </param>

        /// <param name="correlationKey">Key for corelating related alerts. Alerts with the same correlation key
        /// considered to be related.
        /// </param>

        /// <param name="extendedProperties">Custom properties for the alert.
        /// </param>

        /// <param name="compromisedEntity">The display name of the resource most related to this alert.
        /// </param>

        /// <param name="techniques">kill chain related techniques behind the alert.
        /// </param>

        /// <param name="subTechniques">Kill chain related sub-techniques behind the alert.
        /// </param>

        /// <param name="supportingEvidence">Changing set of properties depending on the supportingEvidence type.
        /// </param>
        public Alert(string id = default(string), string name = default(string), string type = default(string), string intent = default(string), string version = default(string), string alertType = default(string), string systemAlertId = default(string), string productComponentName = default(string), string alertDisplayName = default(string), string description = default(string), string severity = default(string), System.DateTime? startTimeUtc = default(System.DateTime?), System.DateTime? endTimeUtc = default(System.DateTime?), System.Collections.Generic.IList<ResourceIdentifier> resourceIdentifiers = default(System.Collections.Generic.IList<ResourceIdentifier>), System.Collections.Generic.IList<string> remediationSteps = default(System.Collections.Generic.IList<string>), string vendorName = default(string), string status = default(string), System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>> extendedLinks = default(System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>>), string alertUri = default(string), System.DateTime? timeGeneratedUtc = default(System.DateTime?), string productName = default(string), System.DateTime? processingEndTimeUtc = default(System.DateTime?), System.Collections.Generic.IList<AlertEntity> entities = default(System.Collections.Generic.IList<AlertEntity>), bool? isIncident = default(bool?), string correlationKey = default(string), System.Collections.Generic.IDictionary<string, string> extendedProperties = default(System.Collections.Generic.IDictionary<string, string>), string compromisedEntity = default(string), System.Collections.Generic.IList<string> techniques = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> subTechniques = default(System.Collections.Generic.IList<string>), AlertPropertiesSupportingEvidence supportingEvidence = default(AlertPropertiesSupportingEvidence))

        : base(id, name, type)
        {
            this.Intent = intent;
            this.Version = version;
            this.AlertType = alertType;
            this.SystemAlertId = systemAlertId;
            this.ProductComponentName = productComponentName;
            this.AlertDisplayName = alertDisplayName;
            this.Description = description;
            this.Severity = severity;
            this.StartTimeUtc = startTimeUtc;
            this.EndTimeUtc = endTimeUtc;
            this.ResourceIdentifiers = resourceIdentifiers;
            this.RemediationSteps = remediationSteps;
            this.VendorName = vendorName;
            this.Status = status;
            this.ExtendedLinks = extendedLinks;
            this.AlertUri = alertUri;
            this.TimeGeneratedUtc = timeGeneratedUtc;
            this.ProductName = productName;
            this.ProcessingEndTimeUtc = processingEndTimeUtc;
            this.Entities = entities;
            this.IsIncident = isIncident;
            this.CorrelationKey = correlationKey;
            this.ExtendedProperties = extendedProperties;
            this.CompromisedEntity = compromisedEntity;
            this.Techniques = techniques;
            this.SubTechniques = subTechniques;
            this.SupportingEvidence = supportingEvidence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets the kill chain related intent behind the alert. For list of supported
        /// values, and explanations of Azure Security Center&#39;s supported kill chain
        /// intents. Possible values include: &#39;Unknown&#39;, &#39;PreAttack&#39;, &#39;InitialAccess&#39;, &#39;Persistence&#39;, &#39;PrivilegeEscalation&#39;, &#39;DefenseEvasion&#39;, &#39;CredentialAccess&#39;, &#39;Discovery&#39;, &#39;LateralMovement&#39;, &#39;Execution&#39;, &#39;Collection&#39;, &#39;Exfiltration&#39;, &#39;CommandAndControl&#39;, &#39;Impact&#39;, &#39;Probing&#39;, &#39;Exploitation&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.intent")]
        public string Intent {get; private set; }

        /// <summary>
        /// Gets schema version.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets unique identifier for the detection logic (all alert instances from
        /// the same detection logic will have the same alertType).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alertType")]
        public string AlertType {get; private set; }

        /// <summary>
        /// Gets unique identifier for the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.systemAlertId")]
        public string SystemAlertId {get; private set; }

        /// <summary>
        /// Gets the name of Azure Security Center pricing tier which powering this
        /// alert. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.productComponentName")]
        public string ProductComponentName {get; private set; }

        /// <summary>
        /// Gets the display name of the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alertDisplayName")]
        public string AlertDisplayName {get; private set; }

        /// <summary>
        /// Gets description of the suspicious activity that was detected.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets the risk level of the threat that was detected. Learn more:
        /// https://docs.microsoft.com/en-us/azure/security-center/security-center-alerts-overview#how-are-alerts-classified. Possible values include: &#39;Informational&#39;, &#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.severity")]
        public string Severity {get; private set; }

        /// <summary>
        /// Gets the UTC time of the first event or activity included in the alert in
        /// ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.startTimeUtc")]
        public System.DateTime? StartTimeUtc {get; private set; }

        /// <summary>
        /// Gets the UTC time of the last event or activity included in the alert in
        /// ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.endTimeUtc")]
        public System.DateTime? EndTimeUtc {get; private set; }

        /// <summary>
        /// Gets the resource identifiers that can be used to direct the alert to the
        /// right product exposure group (tenant, workspace, subscription etc.). There
        /// can be multiple identifiers of different type per alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.resourceIdentifiers")]
        public System.Collections.Generic.IList<ResourceIdentifier> ResourceIdentifiers {get; private set; }

        /// <summary>
        /// Gets manual action items to take to remediate the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.remediationSteps")]
        public System.Collections.Generic.IList<string> RemediationSteps {get; private set; }

        /// <summary>
        /// Gets the name of the vendor that raises the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vendorName")]
        public string VendorName {get; private set; }

        /// <summary>
        /// Gets the life cycle status of the alert. Possible values include: &#39;Active&#39;, &#39;InProgress&#39;, &#39;Resolved&#39;, &#39;Dismissed&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.status")]
        public string Status {get; private set; }

        /// <summary>
        /// Gets links related to the alert
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.extendedLinks")]
        public System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, string>> ExtendedLinks {get; private set; }

        /// <summary>
        /// Gets a direct link to the alert page in Azure Portal.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alertUri")]
        public string AlertUri {get; private set; }

        /// <summary>
        /// Gets the UTC time the alert was generated in ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.timeGeneratedUtc")]
        public System.DateTime? TimeGeneratedUtc {get; private set; }

        /// <summary>
        /// Gets the name of the product which published this alert (Microsoft
        /// Sentinel, Microsoft Defender for Identity, Microsoft Defender for Endpoint,
        /// Microsoft Defender for Office, Microsoft Defender for Cloud Apps, and so
        /// on).
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.productName")]
        public string ProductName {get; private set; }

        /// <summary>
        /// Gets the UTC processing end time of the alert in ISO8601 format.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.processingEndTimeUtc")]
        public System.DateTime? ProcessingEndTimeUtc {get; private set; }

        /// <summary>
        /// Gets a list of entities related to the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.entities")]
        public System.Collections.Generic.IList<AlertEntity> Entities {get; private set; }

        /// <summary>
        /// Gets this field determines whether the alert is an incident (a compound
        /// grouping of several alerts) or a single alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.isIncident")]
        public bool? IsIncident {get; private set; }

        /// <summary>
        /// Gets key for corelating related alerts. Alerts with the same correlation
        /// key considered to be related.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.correlationKey")]
        public string CorrelationKey {get; private set; }

        /// <summary>
        /// Gets or sets custom properties for the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.extendedProperties")]
        public System.Collections.Generic.IDictionary<string, string> ExtendedProperties {get; set; }

        /// <summary>
        /// Gets the display name of the resource most related to this alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.compromisedEntity")]
        public string CompromisedEntity {get; private set; }

        /// <summary>
        /// Gets kill chain related techniques behind the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.techniques")]
        public System.Collections.Generic.IList<string> Techniques {get; private set; }

        /// <summary>
        /// Gets kill chain related sub-techniques behind the alert.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.subTechniques")]
        public System.Collections.Generic.IList<string> SubTechniques {get; private set; }

        /// <summary>
        /// Gets or sets changing set of properties depending on the supportingEvidence
        /// type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.supportingEvidence")]
        public AlertPropertiesSupportingEvidence SupportingEvidence {get; set; }
    }
}