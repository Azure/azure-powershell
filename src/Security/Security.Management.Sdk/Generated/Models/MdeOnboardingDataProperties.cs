// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Properties of the MDE configuration or data parameter needed to onboard the
    /// machine to MDE
    /// </summary>
    public partial class MdeOnboardingDataProperties
    {
        /// <summary>
        /// Initializes a new instance of the MdeOnboardingDataProperties class.
        /// </summary>
        public MdeOnboardingDataProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MdeOnboardingDataProperties class.
        /// </summary>

        /// <param name="onboardingPackageWindows">The onboarding package used to onboard Windows machines to MDE, coded in
        /// base64. This can also be used for onboarding using the dedicated VM
        /// Extension
        /// </param>

        /// <param name="onboardingPackageLinux">The onboarding package used to onboard Linux machines to MDE, coded in
        /// base64. This can also be used for onboarding using the dedicated VM
        /// Extension
        /// </param>
        public MdeOnboardingDataProperties(byte[] onboardingPackageWindows = default(byte[]), byte[] onboardingPackageLinux = default(byte[]))

        {
            this.OnboardingPackageWindows = onboardingPackageWindows;
            this.OnboardingPackageLinux = onboardingPackageLinux;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the onboarding package used to onboard Windows machines to
        /// MDE, coded in base64. This can also be used for onboarding using the
        /// dedicated VM Extension
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "onboardingPackageWindows")]
        public byte[] OnboardingPackageWindows {get; set; }

        /// <summary>
        /// Gets or sets the onboarding package used to onboard Linux machines to MDE,
        /// coded in base64. This can also be used for onboarding using the dedicated
        /// VM Extension
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "onboardingPackageLinux")]
        public byte[] OnboardingPackageLinux {get; set; }
    }
}