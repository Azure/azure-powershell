// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// IoT Security solution aggregated recommendation information
    /// </summary>
    public partial class IoTSecurityAggregatedRecommendationProperties
    {
        /// <summary>
        /// Initializes a new instance of the IoTSecurityAggregatedRecommendationProperties class.
        /// </summary>
        public IoTSecurityAggregatedRecommendationProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IoTSecurityAggregatedRecommendationProperties class.
        /// </summary>

        /// <param name="recommendationName">Name of the recommendation.
        /// </param>

        /// <param name="recommendationDisplayName">Display name of the recommendation type.
        /// </param>

        /// <param name="description">Description of the suspected vulnerability and meaning.
        /// </param>

        /// <param name="recommendationTypeId">Recommendation-type GUID.
        /// </param>

        /// <param name="detectedBy">Name of the organization that made the recommendation.
        /// </param>

        /// <param name="remediationSteps">Recommended steps for remediation
        /// </param>

        /// <param name="reportedSeverity">Assessed recommendation severity.
        /// Possible values include: 'Informational', 'Low', 'Medium', 'High'</param>

        /// <param name="healthyDevices">Number of healthy devices within the IoT Security solution.
        /// </param>

        /// <param name="unhealthyDeviceCount">Number of unhealthy devices within the IoT Security solution.
        /// </param>

        /// <param name="logAnalyticsQuery">Log analytics query for getting the list of affected devices/alerts.
        /// </param>
        public IoTSecurityAggregatedRecommendationProperties(string recommendationName = default(string), string recommendationDisplayName = default(string), string description = default(string), string recommendationTypeId = default(string), string detectedBy = default(string), string remediationSteps = default(string), string reportedSeverity = default(string), long? healthyDevices = default(long?), long? unhealthyDeviceCount = default(long?), string logAnalyticsQuery = default(string))

        {
            this.RecommendationName = recommendationName;
            this.RecommendationDisplayName = recommendationDisplayName;
            this.Description = description;
            this.RecommendationTypeId = recommendationTypeId;
            this.DetectedBy = detectedBy;
            this.RemediationSteps = remediationSteps;
            this.ReportedSeverity = reportedSeverity;
            this.HealthyDevices = healthyDevices;
            this.UnhealthyDeviceCount = unhealthyDeviceCount;
            this.LogAnalyticsQuery = logAnalyticsQuery;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets name of the recommendation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recommendationName")]
        public string RecommendationName {get; set; }

        /// <summary>
        /// Gets display name of the recommendation type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recommendationDisplayName")]
        public string RecommendationDisplayName {get; private set; }

        /// <summary>
        /// Gets description of the suspected vulnerability and meaning.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "description")]
        public string Description {get; private set; }

        /// <summary>
        /// Gets recommendation-type GUID.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recommendationTypeId")]
        public string RecommendationTypeId {get; private set; }

        /// <summary>
        /// Gets name of the organization that made the recommendation.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "detectedBy")]
        public string DetectedBy {get; private set; }

        /// <summary>
        /// Gets recommended steps for remediation
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "remediationSteps")]
        public string RemediationSteps {get; private set; }

        /// <summary>
        /// Gets assessed recommendation severity. Possible values include: &#39;Informational&#39;, &#39;Low&#39;, &#39;Medium&#39;, &#39;High&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reportedSeverity")]
        public string ReportedSeverity {get; private set; }

        /// <summary>
        /// Gets number of healthy devices within the IoT Security solution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthyDevices")]
        public long? HealthyDevices {get; private set; }

        /// <summary>
        /// Gets number of unhealthy devices within the IoT Security solution.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "unhealthyDeviceCount")]
        public long? UnhealthyDeviceCount {get; private set; }

        /// <summary>
        /// Gets log analytics query for getting the list of affected devices/alerts.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logAnalyticsQuery")]
        public string LogAnalyticsQuery {get; private set; }
    }
}