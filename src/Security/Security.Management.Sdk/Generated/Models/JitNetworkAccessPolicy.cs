// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class JitNetworkAccessPolicy
    {
        /// <summary>
        /// Initializes a new instance of the JitNetworkAccessPolicy class.
        /// </summary>
        public JitNetworkAccessPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JitNetworkAccessPolicy class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="kind">Kind of the resource
        /// </param>

        /// <param name="location">Location where the resource is stored
        /// </param>

        /// <param name="virtualMachines">Configurations for Microsoft.Compute/virtualMachines resource type.
        /// </param>

        /// <param name="requests">
        /// </param>

        /// <param name="provisioningState">Gets the provisioning state of the Just-in-Time policy.
        /// </param>
        public JitNetworkAccessPolicy(System.Collections.Generic.IList<JitNetworkAccessPolicyVirtualMachine> virtualMachines, string id = default(string), string name = default(string), string type = default(string), string kind = default(string), string location = default(string), System.Collections.Generic.IList<JitNetworkAccessRequest> requests = default(System.Collections.Generic.IList<JitNetworkAccessRequest>), string provisioningState = default(string))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Kind = kind;
            this.Location = location;
            this.VirtualMachines = virtualMachines;
            this.Requests = requests;
            this.ProvisioningState = provisioningState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets resource name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets resource type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets or sets kind of the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "kind")]
        public string Kind {get; set; }

        /// <summary>
        /// Gets location where the resource is stored
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets or sets configurations for Microsoft.Compute/virtualMachines resource
        /// type.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.virtualMachines")]
        public System.Collections.Generic.IList<JitNetworkAccessPolicyVirtualMachine> VirtualMachines {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.requests")]
        public System.Collections.Generic.IList<JitNetworkAccessRequest> Requests {get; set; }

        /// <summary>
        /// Gets gets the provisioning state of the Just-in-Time policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState {get; private set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.VirtualMachines == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "VirtualMachines");
            }





            if (this.VirtualMachines != null)
            {
                foreach (var element in this.VirtualMachines)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (this.Requests != null)
            {
                foreach (var element in this.Requests)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }

        }
    }
}