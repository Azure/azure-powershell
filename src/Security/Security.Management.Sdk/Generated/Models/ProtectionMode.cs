// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// The protection mode of the collection/file types. Exe/Msi/Script are used
    /// for Windows, Executable is used for Linux.
    /// </summary>
    public partial class ProtectionMode
    {
        /// <summary>
        /// Initializes a new instance of the ProtectionMode class.
        /// </summary>
        public ProtectionMode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProtectionMode class.
        /// </summary>

        /// <param name="exe">The application control policy enforcement/protection mode of the machine
        /// group
        /// Possible values include: 'Audit', 'Enforce', 'None'</param>

        /// <param name="msi">The application control policy enforcement/protection mode of the machine
        /// group
        /// Possible values include: 'Audit', 'Enforce', 'None'</param>

        /// <param name="script">The application control policy enforcement/protection mode of the machine
        /// group
        /// Possible values include: 'Audit', 'Enforce', 'None'</param>

        /// <param name="executable">The application control policy enforcement/protection mode of the machine
        /// group
        /// Possible values include: 'Audit', 'Enforce', 'None'</param>
        public ProtectionMode(string exe = default(string), string msi = default(string), string script = default(string), string executable = default(string))

        {
            this.Exe = exe;
            this.Msi = msi;
            this.Script = script;
            this.Executable = executable;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the application control policy enforcement/protection mode of
        /// the machine group Possible values include: &#39;Audit&#39;, &#39;Enforce&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "exe")]
        public string Exe {get; set; }

        /// <summary>
        /// Gets or sets the application control policy enforcement/protection mode of
        /// the machine group Possible values include: &#39;Audit&#39;, &#39;Enforce&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "msi")]
        public string Msi {get; set; }

        /// <summary>
        /// Gets or sets the application control policy enforcement/protection mode of
        /// the machine group Possible values include: &#39;Audit&#39;, &#39;Enforce&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "script")]
        public string Script {get; set; }

        /// <summary>
        /// Gets or sets the application control policy enforcement/protection mode of
        /// the machine group Possible values include: &#39;Audit&#39;, &#39;Enforce&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "executable")]
        public string Executable {get; set; }
    }
}