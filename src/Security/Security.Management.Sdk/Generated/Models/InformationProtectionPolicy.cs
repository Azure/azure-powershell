// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Information protection policy.
    /// </summary>
    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class InformationProtectionPolicy : Resource
    {
        /// <summary>
        /// Initializes a new instance of the InformationProtectionPolicy class.
        /// </summary>
        public InformationProtectionPolicy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InformationProtectionPolicy class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="lastModifiedUtc">Describes the last UTC time the policy was modified.
        /// </param>

        /// <param name="version">Describes the version of the policy.
        /// </param>

        /// <param name="labels">Dictionary of sensitivity labels.
        /// </param>

        /// <param name="informationTypes">The sensitivity information types.
        /// </param>
        public InformationProtectionPolicy(string id = default(string), string name = default(string), string type = default(string), System.DateTime? lastModifiedUtc = default(System.DateTime?), string version = default(string), System.Collections.Generic.IDictionary<string, SensitivityLabel> labels = default(System.Collections.Generic.IDictionary<string, SensitivityLabel>), System.Collections.Generic.IDictionary<string, InformationType> informationTypes = default(System.Collections.Generic.IDictionary<string, InformationType>))

        : base(id, name, type)
        {
            this.LastModifiedUtc = lastModifiedUtc;
            this.Version = version;
            this.Labels = labels;
            this.InformationTypes = informationTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets describes the last UTC time the policy was modified.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.lastModifiedUtc")]
        public System.DateTime? LastModifiedUtc {get; private set; }

        /// <summary>
        /// Gets describes the version of the policy.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.version")]
        public string Version {get; private set; }

        /// <summary>
        /// Gets or sets dictionary of sensitivity labels.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.labels")]
        public System.Collections.Generic.IDictionary<string, SensitivityLabel> Labels {get; set; }

        /// <summary>
        /// Gets or sets the sensitivity information types.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.informationTypes")]
        public System.Collections.Generic.IDictionary<string, InformationType> InformationTypes {get; set; }
    }
}