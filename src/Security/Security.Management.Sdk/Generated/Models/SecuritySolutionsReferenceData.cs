// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class SecuritySolutionsReferenceData
    {
        /// <summary>
        /// Initializes a new instance of the SecuritySolutionsReferenceData class.
        /// </summary>
        public SecuritySolutionsReferenceData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecuritySolutionsReferenceData class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="location">Location where the resource is stored
        /// </param>

        /// <param name="securityFamily">The security family of the security solution
        /// Possible values include: 'Waf', 'Ngfw', 'SaasWaf', 'Va'</param>

        /// <param name="alertVendorName">The security solutions&#39; vendor name
        /// </param>

        /// <param name="packageInfoUrl">The security solutions&#39; package info url
        /// </param>

        /// <param name="productName">The security solutions&#39; product name
        /// </param>

        /// <param name="publisher">The security solutions&#39; publisher
        /// </param>

        /// <param name="publisherDisplayName">The security solutions&#39; publisher display name
        /// </param>

        /// <param name="template">The security solutions&#39; template
        /// </param>
        public SecuritySolutionsReferenceData(string securityFamily, string alertVendorName, string packageInfoUrl, string productName, string publisher, string publisherDisplayName, string template, string id = default(string), string name = default(string), string type = default(string), string location = default(string))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Location = location;
            this.SecurityFamily = securityFamily;
            this.AlertVendorName = alertVendorName;
            this.PackageInfoUrl = packageInfoUrl;
            this.ProductName = productName;
            this.Publisher = publisher;
            this.PublisherDisplayName = publisherDisplayName;
            this.Template = template;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets resource name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets resource type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets location where the resource is stored
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets or sets the security family of the security solution Possible values include: &#39;Waf&#39;, &#39;Ngfw&#39;, &#39;SaasWaf&#39;, &#39;Va&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.securityFamily")]
        public string SecurityFamily {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; vendor name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.alertVendorName")]
        public string AlertVendorName {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; package info url
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.packageInfoUrl")]
        public string PackageInfoUrl {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; product name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.productName")]
        public string ProductName {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; publisher
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publisher")]
        public string Publisher {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; publisher display name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.publisherDisplayName")]
        public string PublisherDisplayName {get; set; }

        /// <summary>
        /// Gets or sets the security solutions&#39; template
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.template")]
        public string Template {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (this.SecurityFamily == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "SecurityFamily");
            }
            if (this.AlertVendorName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "AlertVendorName");
            }
            if (this.PackageInfoUrl == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PackageInfoUrl");
            }
            if (this.ProductName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "ProductName");
            }
            if (this.Publisher == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Publisher");
            }
            if (this.PublisherDisplayName == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "PublisherDisplayName");
            }
            if (this.Template == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Template");
            }











        }
    }
}