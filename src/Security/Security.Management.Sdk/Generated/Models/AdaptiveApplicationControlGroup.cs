// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    [Microsoft.Rest.Serialization.JsonTransformation]
    public partial class AdaptiveApplicationControlGroup
    {
        /// <summary>
        /// Initializes a new instance of the AdaptiveApplicationControlGroup class.
        /// </summary>
        public AdaptiveApplicationControlGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdaptiveApplicationControlGroup class.
        /// </summary>

        /// <param name="id">Resource Id
        /// </param>

        /// <param name="name">Resource name
        /// </param>

        /// <param name="type">Resource type
        /// </param>

        /// <param name="location">Location where the resource is stored
        /// </param>

        /// <param name="enforcementMode">The application control policy enforcement/protection mode of the machine
        /// group
        /// Possible values include: 'Audit', 'Enforce', 'None'</param>

        /// <param name="protectionMode">The protection mode of the collection/file types. Exe/Msi/Script are used
        /// for Windows, Executable is used for Linux.
        /// </param>

        /// <param name="configurationStatus">The configuration status of the machines group or machine or rule
        /// Possible values include: 'Configured', 'NotConfigured', 'InProgress',
        /// 'Failed', 'NoStatus'</param>

        /// <param name="recommendationStatus">The initial recommendation status of the machine group or machine
        /// Possible values include: 'Recommended', 'NotRecommended', 'NotAvailable',
        /// 'NoStatus'</param>

        /// <param name="sourceSystem">The source type of the machine group
        /// Possible values include: 'Azure_AppLocker', 'Azure_AuditD',
        /// 'NonAzure_AppLocker', 'NonAzure_AuditD', 'None'</param>

        /// <param name="vmRecommendations">
        /// </param>

        /// <param name="pathRecommendations">
        /// </param>

        /// <param name="issues">
        /// </param>
        public AdaptiveApplicationControlGroup(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string enforcementMode = default(string), ProtectionMode protectionMode = default(ProtectionMode), string configurationStatus = default(string), string recommendationStatus = default(string), string sourceSystem = default(string), System.Collections.Generic.IList<VmRecommendation> vmRecommendations = default(System.Collections.Generic.IList<VmRecommendation>), System.Collections.Generic.IList<PathRecommendation> pathRecommendations = default(System.Collections.Generic.IList<PathRecommendation>), System.Collections.Generic.IList<AdaptiveApplicationControlIssueSummary> issues = default(System.Collections.Generic.IList<AdaptiveApplicationControlIssueSummary>))

        {
            this.Id = id;
            this.Name = name;
            this.Type = type;
            this.Location = location;
            this.EnforcementMode = enforcementMode;
            this.ProtectionMode = protectionMode;
            this.ConfigurationStatus = configurationStatus;
            this.RecommendationStatus = recommendationStatus;
            this.SourceSystem = sourceSystem;
            this.VMRecommendations = vmRecommendations;
            this.PathRecommendations = pathRecommendations;
            this.Issues = issues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets resource Id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id {get; private set; }

        /// <summary>
        /// Gets resource name
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "name")]
        public string Name {get; private set; }

        /// <summary>
        /// Gets resource type
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "type")]
        public string Type {get; private set; }

        /// <summary>
        /// Gets location where the resource is stored
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets or sets the application control policy enforcement/protection mode of
        /// the machine group Possible values include: &#39;Audit&#39;, &#39;Enforce&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.enforcementMode")]
        public string EnforcementMode {get; set; }

        /// <summary>
        /// Gets or sets the protection mode of the collection/file types.
        /// Exe/Msi/Script are used for Windows, Executable is used for Linux.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.protectionMode")]
        public ProtectionMode ProtectionMode {get; set; }

        /// <summary>
        /// Gets the configuration status of the machines group or machine or rule Possible values include: &#39;Configured&#39;, &#39;NotConfigured&#39;, &#39;InProgress&#39;, &#39;Failed&#39;, &#39;NoStatus&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.configurationStatus")]
        public string ConfigurationStatus {get; private set; }

        /// <summary>
        /// Gets the initial recommendation status of the machine group or machine Possible values include: &#39;Recommended&#39;, &#39;NotRecommended&#39;, &#39;NotAvailable&#39;, &#39;NoStatus&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.recommendationStatus")]
        public string RecommendationStatus {get; private set; }

        /// <summary>
        /// Gets the source type of the machine group Possible values include: &#39;Azure_AppLocker&#39;, &#39;Azure_AuditD&#39;, &#39;NonAzure_AppLocker&#39;, &#39;NonAzure_AuditD&#39;, &#39;None&#39;
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.sourceSystem")]
        public string SourceSystem {get; private set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.vmRecommendations")]
        public System.Collections.Generic.IList<VmRecommendation> VMRecommendations {get; set; }

        /// <summary>
        /// Gets or sets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.pathRecommendations")]
        public System.Collections.Generic.IList<PathRecommendation> PathRecommendations {get; set; }

        /// <summary>
        /// Gets
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "properties.issues")]
        public System.Collections.Generic.IList<AdaptiveApplicationControlIssueSummary> Issues {get; private set; }
    }
}