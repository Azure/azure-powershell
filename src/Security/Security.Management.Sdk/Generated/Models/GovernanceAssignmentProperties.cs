// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Describes properties of an governance assignment
    /// </summary>
    public partial class GovernanceAssignmentProperties
    {
        /// <summary>
        /// Initializes a new instance of the GovernanceAssignmentProperties class.
        /// </summary>
        public GovernanceAssignmentProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GovernanceAssignmentProperties class.
        /// </summary>

        /// <param name="owner">The Owner for the governance assignment - e.g. user@contoso.com - see
        /// example
        /// </param>

        /// <param name="remediationDueDate">The remediation due-date - after this date Secure Score will be affected
        /// (in case of  active grace-period)
        /// </param>

        /// <param name="remediationEta">The ETA (estimated time of arrival) for remediation (optional), see example
        /// </param>

        /// <param name="isGracePeriod">Defines whether there is a grace period on the governance assignment
        /// </param>

        /// <param name="governanceEmailNotification">The email notifications settings for the governance rule, states whether to
        /// disable notifications for mangers and owners
        /// </param>

        /// <param name="additionalData">The additional data for the governance assignment - e.g. links to ticket
        /// (optional), see example
        /// </param>
        public GovernanceAssignmentProperties(System.DateTime remediationDueDate, string owner = default(string), RemediationEta remediationEta = default(RemediationEta), bool? isGracePeriod = default(bool?), GovernanceEmailNotification governanceEmailNotification = default(GovernanceEmailNotification), GovernanceAssignmentAdditionalData additionalData = default(GovernanceAssignmentAdditionalData))

        {
            this.Owner = owner;
            this.RemediationDueDate = remediationDueDate;
            this.RemediationEta = remediationEta;
            this.IsGracePeriod = isGracePeriod;
            this.GovernanceEmailNotification = governanceEmailNotification;
            this.AdditionalData = additionalData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the Owner for the governance assignment - e.g.
        /// user@contoso.com - see example
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "owner")]
        public string Owner {get; set; }

        /// <summary>
        /// Gets or sets the remediation due-date - after this date Secure Score will
        /// be affected (in case of  active grace-period)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "remediationDueDate")]
        public System.DateTime RemediationDueDate {get; set; }

        /// <summary>
        /// Gets or sets the ETA (estimated time of arrival) for remediation
        /// (optional), see example
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "remediationEta")]
        public RemediationEta RemediationEta {get; set; }

        /// <summary>
        /// Gets or sets defines whether there is a grace period on the governance
        /// assignment
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isGracePeriod")]
        public bool? IsGracePeriod {get; set; }

        /// <summary>
        /// Gets or sets the email notifications settings for the governance rule,
        /// states whether to disable notifications for mangers and owners
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "governanceEmailNotification")]
        public GovernanceEmailNotification GovernanceEmailNotification {get; set; }

        /// <summary>
        /// Gets or sets the additional data for the governance assignment - e.g. links
        /// to ticket (optional), see example
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "additionalData")]
        public GovernanceAssignmentAdditionalData AdditionalData {get; set; }
        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {

            if (this.RemediationEta != null)
            {
                this.RemediationEta.Validate();
            }

            if (this.AdditionalData != null)
            {
                this.AdditionalData.Validate();
            }
        }
    }
}