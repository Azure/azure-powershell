// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    public partial class TopologySingleResource
    {
        /// <summary>
        /// Initializes a new instance of the TopologySingleResource class.
        /// </summary>
        public TopologySingleResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TopologySingleResource class.
        /// </summary>

        /// <param name="resourceId">Azure resource id
        /// </param>

        /// <param name="severity">The security severity of the resource
        /// </param>

        /// <param name="recommendationsExist">Indicates if the resource has security recommendations
        /// </param>

        /// <param name="networkZones">Indicates the resource connectivity level to the Internet (InternetFacing,
        /// Internal ,etc.)
        /// </param>

        /// <param name="topologyScore">Score of the resource based on its security severity
        /// </param>

        /// <param name="location">The location of this resource
        /// </param>

        /// <param name="parents">Azure resources connected to this resource which are in higher level in the
        /// topology view
        /// </param>

        /// <param name="children">Azure resources connected to this resource which are in lower level in the
        /// topology view
        /// </param>
        public TopologySingleResource(string resourceId = default(string), string severity = default(string), bool? recommendationsExist = default(bool?), string networkZones = default(string), int? topologyScore = default(int?), string location = default(string), System.Collections.Generic.IList<TopologySingleResourceParent> parents = default(System.Collections.Generic.IList<TopologySingleResourceParent>), System.Collections.Generic.IList<TopologySingleResourceChild> children = default(System.Collections.Generic.IList<TopologySingleResourceChild>))

        {
            this.ResourceId = resourceId;
            this.Severity = severity;
            this.RecommendationsExist = recommendationsExist;
            this.NetworkZones = networkZones;
            this.TopologyScore = topologyScore;
            this.Location = location;
            this.Parents = parents;
            this.Children = children;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets azure resource id
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceId")]
        public string ResourceId {get; private set; }

        /// <summary>
        /// Gets the security severity of the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "severity")]
        public string Severity {get; private set; }

        /// <summary>
        /// Gets indicates if the resource has security recommendations
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "recommendationsExist")]
        public bool? RecommendationsExist {get; private set; }

        /// <summary>
        /// Gets indicates the resource connectivity level to the Internet
        /// (InternetFacing, Internal ,etc.)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "networkZones")]
        public string NetworkZones {get; private set; }

        /// <summary>
        /// Gets score of the resource based on its security severity
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "topologyScore")]
        public int? TopologyScore {get; private set; }

        /// <summary>
        /// Gets the location of this resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "location")]
        public string Location {get; private set; }

        /// <summary>
        /// Gets azure resources connected to this resource which are in higher level
        /// in the topology view
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "parents")]
        public System.Collections.Generic.IList<TopologySingleResourceParent> Parents {get; private set; }

        /// <summary>
        /// Gets azure resources connected to this resource which are in lower level in
        /// the topology view
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "children")]
        public System.Collections.Generic.IList<TopologySingleResourceChild> Children {get; private set; }
    }
}