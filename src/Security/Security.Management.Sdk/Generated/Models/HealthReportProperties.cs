// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security.Models
{
    using System.Linq;

    /// <summary>
    /// Describes properties of the health report
    /// </summary>
    public partial class HealthReportProperties
    {
        /// <summary>
        /// Initializes a new instance of the HealthReportProperties class.
        /// </summary>
        public HealthReportProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HealthReportProperties class.
        /// </summary>

        /// <param name="resourceDetails">The resource details of the health report
        /// </param>

        /// <param name="environmentDetails">The environment details of the resource
        /// </param>

        /// <param name="healthDataClassification">The classification of the health report
        /// </param>

        /// <param name="status">The status of the health report
        /// </param>

        /// <param name="affectedDefendersPlans">The affected defenders plans by unhealthy report
        /// </param>

        /// <param name="affectedDefendersSubPlans">The affected defenders sub plans by unhealthy report
        /// </param>

        /// <param name="reportAdditionalData">Additional data for the given health report, this field can include more
        /// details on the resource and the health scenario.
        /// </param>

        /// <param name="issues">A collection of the issues in the report
        /// </param>
        public HealthReportProperties(HealthReportResourceDetails resourceDetails = default(HealthReportResourceDetails), EnvironmentDetails environmentDetails = default(EnvironmentDetails), HealthDataClassification healthDataClassification = default(HealthDataClassification), HealthReportStatus status = default(HealthReportStatus), System.Collections.Generic.IList<string> affectedDefendersPlans = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> affectedDefendersSubPlans = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IDictionary<string, string> reportAdditionalData = default(System.Collections.Generic.IDictionary<string, string>), System.Collections.Generic.IList<Issue> issues = default(System.Collections.Generic.IList<Issue>))

        {
            this.ResourceDetails = resourceDetails;
            this.EnvironmentDetails = environmentDetails;
            this.HealthDataClassification = healthDataClassification;
            this.Status = status;
            this.AffectedDefendersPlans = affectedDefendersPlans;
            this.AffectedDefendersSubPlans = affectedDefendersSubPlans;
            this.ReportAdditionalData = reportAdditionalData;
            this.Issues = issues;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();


        /// <summary>
        /// Gets or sets the resource details of the health report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "resourceDetails")]
        public HealthReportResourceDetails ResourceDetails {get; set; }

        /// <summary>
        /// Gets or sets the environment details of the resource
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "environmentDetails")]
        public EnvironmentDetails EnvironmentDetails {get; set; }

        /// <summary>
        /// Gets or sets the classification of the health report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "healthDataClassification")]
        public HealthDataClassification HealthDataClassification {get; set; }

        /// <summary>
        /// Gets or sets the status of the health report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "status")]
        public HealthReportStatus Status {get; set; }

        /// <summary>
        /// Gets or sets the affected defenders plans by unhealthy report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "affectedDefendersPlans")]
        public System.Collections.Generic.IList<string> AffectedDefendersPlans {get; set; }

        /// <summary>
        /// Gets or sets the affected defenders sub plans by unhealthy report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "affectedDefendersSubPlans")]
        public System.Collections.Generic.IList<string> AffectedDefendersSubPlans {get; set; }

        /// <summary>
        /// Gets additional data for the given health report, this field can include
        /// more details on the resource and the health scenario.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "reportAdditionalData")]
        public System.Collections.Generic.IDictionary<string, string> ReportAdditionalData {get; private set; }

        /// <summary>
        /// Gets or sets a collection of the issues in the report
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "issues")]
        public System.Collections.Generic.IList<Issue> Issues {get; set; }
    }
}