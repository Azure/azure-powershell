// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for ApiCollectionsOperations
    /// </summary>
    public static partial class ApiCollectionsOperationsExtensions
    {
        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListBySubscription(this IApiCollectionsOperations operations)
        {
                return ((IApiCollectionsOperations)operations).ListBySubscriptionAsync().GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListBySubscriptionAsync(this IApiCollectionsOperations operations, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListByResourceGroup(this IApiCollectionsOperations operations, string resourceGroupName)
        {
                return ((IApiCollectionsOperations)operations).ListByResourceGroupAsync(resourceGroupName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListByResourceGroupAsync(this IApiCollectionsOperations operations, string resourceGroupName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListByAzureApiManagementService(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName)
        {
                return ((IApiCollectionsOperations)operations).ListByAzureApiManagementServiceAsync(resourceGroupName, serviceName).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListByAzureApiManagementServiceAsync(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByAzureApiManagementServiceWithHttpMessagesAsync(resourceGroupName, serviceName, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets an Azure API Management API if it has been onboarded to Microsoft
        /// Defender for APIs. If an Azure API Management API is onboarded to Microsoft
        /// Defender for APIs, the system will monitor the operations within the Azure
        /// API Management API for intrusive behaviors and provide alerts for attacks
        /// that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        public static ApiCollection GetByAzureApiManagementService(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId)
        {
                return ((IApiCollectionsOperations)operations).GetByAzureApiManagementServiceAsync(resourceGroupName, serviceName, apiId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets an Azure API Management API if it has been onboarded to Microsoft
        /// Defender for APIs. If an Azure API Management API is onboarded to Microsoft
        /// Defender for APIs, the system will monitor the operations within the Azure
        /// API Management API for intrusive behaviors and provide alerts for attacks
        /// that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ApiCollection> GetByAzureApiManagementServiceAsync(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetByAzureApiManagementServiceWithHttpMessagesAsync(resourceGroupName, serviceName, apiId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        public static ApiCollection OnboardAzureApiManagementApi(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId)
        {
                return ((IApiCollectionsOperations)operations).OnboardAzureApiManagementApiAsync(resourceGroupName, serviceName, apiId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ApiCollection> OnboardAzureApiManagementApiAsync(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.OnboardAzureApiManagementApiWithHttpMessagesAsync(resourceGroupName, serviceName, apiId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Offboard an Azure API Management API from Microsoft Defender for APIs. The
        /// system will stop monitoring the operations within the Azure API Management
        /// API for intrusive behaviors.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        public static void OffboardAzureApiManagementApi(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId)
        {
                ((IApiCollectionsOperations)operations).OffboardAzureApiManagementApiAsync(resourceGroupName, serviceName, apiId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Offboard an Azure API Management API from Microsoft Defender for APIs. The
        /// system will stop monitoring the operations within the Azure API Management
        /// API for intrusive behaviors.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task OffboardAzureApiManagementApiAsync(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.OffboardAzureApiManagementApiWithHttpMessagesAsync(resourceGroupName, serviceName, apiId, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        public static ApiCollection BeginOnboardAzureApiManagementApi(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId)
        {
                return ((IApiCollectionsOperations)operations).BeginOnboardAzureApiManagementApiAsync(resourceGroupName, serviceName, apiId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<ApiCollection> BeginOnboardAzureApiManagementApiAsync(this IApiCollectionsOperations operations, string resourceGroupName, string serviceName, string apiId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.BeginOnboardAzureApiManagementApiWithHttpMessagesAsync(resourceGroupName, serviceName, apiId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListBySubscriptionNext(this IApiCollectionsOperations operations, string nextPageLink)
        {
                return ((IApiCollectionsOperations)operations).ListBySubscriptionNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListBySubscriptionNextAsync(this IApiCollectionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySubscriptionNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListByResourceGroupNext(this IApiCollectionsOperations operations, string nextPageLink)
        {
                return ((IApiCollectionsOperations)operations).ListByResourceGroupNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListByResourceGroupNextAsync(this IApiCollectionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByResourceGroupNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<ApiCollection> ListByAzureApiManagementServiceNext(this IApiCollectionsOperations operations, string nextPageLink)
        {
                return ((IApiCollectionsOperations)operations).ListByAzureApiManagementServiceNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<ApiCollection>> ListByAzureApiManagementServiceNextAsync(this IApiCollectionsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListByAzureApiManagementServiceNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
