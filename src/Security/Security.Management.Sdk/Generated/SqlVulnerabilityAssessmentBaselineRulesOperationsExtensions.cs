// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for SqlVulnerabilityAssessmentBaselineRulesOperations
    /// </summary>
    public static partial class SqlVulnerabilityAssessmentBaselineRulesOperationsExtensions
    {
        /// <summary>
        /// Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        public static RuleResults CreateOrUpdate(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IList<System.Collections.Generic.IList<string>> results = default(System.Collections.Generic.IList<System.Collections.Generic.IList<string>>))
        {
                return ((ISqlVulnerabilityAssessmentBaselineRulesOperations)operations).CreateOrUpdateAsync(ruleId, workspaceId, resourceId, latestScan, results).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Creates a Baseline for a rule in a database. Will overwrite any previously existing results.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RuleResults> CreateOrUpdateAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IList<System.Collections.Generic.IList<string>> results = default(System.Collections.Generic.IList<System.Collections.Generic.IList<string>>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(ruleId, workspaceId, resourceId, latestScan, results, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Gets the results for a given rule in the Baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        public static RuleResults Get(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId)
        {
                return ((ISqlVulnerabilityAssessmentBaselineRulesOperations)operations).GetAsync(ruleId, workspaceId, resourceId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the results for a given rule in the Baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RuleResults> GetAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.GetWithHttpMessagesAsync(ruleId, workspaceId, resourceId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Deletes a rule from the Baseline of a given database.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        public static void Delete(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId)
        {
                ((ISqlVulnerabilityAssessmentBaselineRulesOperations)operations).DeleteAsync(ruleId, workspaceId, resourceId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Deletes a rule from the Baseline of a given database.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='ruleId'>
        /// The rule Id.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task DeleteAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string ruleId, string workspaceId, string resourceId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            (await operations.DeleteWithHttpMessagesAsync(ruleId, workspaceId, resourceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
        }
        /// <summary>
        /// Gets the results for all rules in the Baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        public static RulesResults List(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string resourceId)
        {
                return ((ISqlVulnerabilityAssessmentBaselineRulesOperations)operations).ListAsync(workspaceId, resourceId).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Gets the results for all rules in the Baseline.
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RulesResults> ListAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string resourceId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(workspaceId, resourceId, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        public static RulesResults Add(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>> results = default(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>>))
        {
                return ((ISqlVulnerabilityAssessmentBaselineRulesOperations)operations).AddAsync(workspaceId, resourceId, latestScan, results).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Add a list of baseline rules. Will overwrite any previously existing results (for all rules).
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='workspaceId'>
        /// The workspace Id.
        /// </param>
        /// <param name='resourceId'>
        /// The identifier of the resource.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<RulesResults> AddAsync(this ISqlVulnerabilityAssessmentBaselineRulesOperations operations, string workspaceId, string resourceId, bool? latestScan = default(bool?), System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>> results = default(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<System.Collections.Generic.IList<string>>>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.AddWithHttpMessagesAsync(workspaceId, resourceId, latestScan, results, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
