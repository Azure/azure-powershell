// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// Extension methods for SecureScoreControlsOperations
    /// </summary>
    public static partial class SecureScoreControlsOperationsExtensions
    {
        /// <summary>
        /// Get all security controls for a specific initiative within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='secureScoreName'>
        /// The initiative name. For the ASC Default initiative, use &#39;ascScore&#39; as in the sample request below.
        /// </param>
        /// <param name='expand'>
        /// OData expand. Optional.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SecureScoreControlDetails> ListBySecureScore(this ISecureScoreControlsOperations operations, string secureScoreName, string expand = default(string))
        {
                return ((ISecureScoreControlsOperations)operations).ListBySecureScoreAsync(secureScoreName, expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all security controls for a specific initiative within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='secureScoreName'>
        /// The initiative name. For the ASC Default initiative, use &#39;ascScore&#39; as in the sample request below.
        /// </param>
        /// <param name='expand'>
        /// OData expand. Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SecureScoreControlDetails>> ListBySecureScoreAsync(this ISecureScoreControlsOperations operations, string secureScoreName, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySecureScoreWithHttpMessagesAsync(secureScoreName, expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get all security controls within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// OData expand. Optional.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SecureScoreControlDetails> List(this ISecureScoreControlsOperations operations, string expand = default(string))
        {
                return ((ISecureScoreControlsOperations)operations).ListAsync(expand).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all security controls within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='expand'>
        /// OData expand. Optional.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SecureScoreControlDetails>> ListAsync(this ISecureScoreControlsOperations operations, string expand = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListWithHttpMessagesAsync(expand, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get all security controls for a specific initiative within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SecureScoreControlDetails> ListBySecureScoreNext(this ISecureScoreControlsOperations operations, string nextPageLink)
        {
                return ((ISecureScoreControlsOperations)operations).ListBySecureScoreNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all security controls for a specific initiative within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SecureScoreControlDetails>> ListBySecureScoreNextAsync(this ISecureScoreControlsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListBySecureScoreNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
        /// <summary>
        /// Get all security controls within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        public static Microsoft.Rest.Azure.IPage<SecureScoreControlDetails> ListNext(this ISecureScoreControlsOperations operations, string nextPageLink)
        {
                return ((ISecureScoreControlsOperations)operations).ListNextAsync(nextPageLink).GetAwaiter().GetResult();
        }

        /// <summary>
        /// Get all security controls within a scope
        /// </summary>
        /// <param name='operations'>
        /// The operations group for this extension method.
        /// </param>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        public static async System.Threading.Tasks.Task<Microsoft.Rest.Azure.IPage<SecureScoreControlDetails>> ListNextAsync(this ISecureScoreControlsOperations operations, string nextPageLink, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
            {
                return _result.Body;
            }
        }
    }
}
