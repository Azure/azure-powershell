// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.Management.Security
{
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// ApiCollectionsOperations operations.
    /// </summary>
    public partial interface IApiCollectionsOperations
    {
        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <remarks>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListBySubscriptionWithHttpMessagesAsync(System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <remarks>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListByResourceGroupWithHttpMessagesAsync(string resourceGroupName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <remarks>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListByAzureApiManagementServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets an Azure API Management API if it has been onboarded to Microsoft
        /// Defender for APIs. If an Azure API Management API is onboarded to Microsoft
        /// Defender for APIs, the system will monitor the operations within the Azure
        /// API Management API for intrusive behaviors and provide alerts for attacks
        /// that have been detected.
        /// </summary>
        /// <remarks>
        /// Gets an Azure API Management API if it has been onboarded to Microsoft
        /// Defender for APIs. If an Azure API Management API is onboarded to Microsoft
        /// Defender for APIs, the system will monitor the operations within the Azure
        /// API Management API for intrusive behaviors and provide alerts for attacks
        /// that have been detected.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ApiCollection>> GetByAzureApiManagementServiceWithHttpMessagesAsync(string resourceGroupName, string serviceName, string apiId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <remarks>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ApiCollection,ApiCollectionsOnboardAzureApiManagementApiHeaders>> OnboardAzureApiManagementApiWithHttpMessagesAsync(string resourceGroupName, string serviceName, string apiId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Offboard an Azure API Management API from Microsoft Defender for APIs. The
        /// system will stop monitoring the operations within the Azure API Management
        /// API for intrusive behaviors.
        /// </summary>
        /// <remarks>
        /// Offboard an Azure API Management API from Microsoft Defender for APIs. The
        /// system will stop monitoring the operations within the Azure API Management
        /// API for intrusive behaviors.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse> OffboardAzureApiManagementApiWithHttpMessagesAsync(string resourceGroupName, string serviceName, string apiId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </summary>
        /// <remarks>
        /// Onboard an Azure API Management API to Microsoft Defender for APIs. The
        /// system will start monitoring the operations within the Azure Management API
        /// for intrusive behaviors and provide alerts for attacks that have been
        /// detected.
        /// </remarks>
        /// <param name='resourceGroupName'>
        /// The name of the resource group. The name is case insensitive.
        /// </param>
        /// <param name='serviceName'>
        /// The name of the API Management service.
        /// </param>
        /// <param name='apiId'>
        /// API revision identifier. Must be unique in the API Management service
        /// instance. Non-current revision has ;rev=n as a suffix where n is the
        /// revision number.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<ApiCollection,ApiCollectionsOnboardAzureApiManagementApiHeaders>> BeginOnboardAzureApiManagementApiWithHttpMessagesAsync(string resourceGroupName, string serviceName, string apiId, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <remarks>
        /// Gets a list of API collections within a subscription that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListBySubscriptionNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </summary>
        /// <remarks>
        /// Gets a list of API collections within a resource group that have been
        /// onboarded to Microsoft Defender for APIs.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListByResourceGroupNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </summary>
        /// <remarks>
        /// Gets a list of Azure API Management APIs that have been onboarded to
        /// Microsoft Defender for APIs. If an Azure API Management API is onboarded to
        /// Microsoft Defender for APIs, the system will monitor the operations within
        /// the Azure API Management API for intrusive behaviors and provide alerts for
        /// attacks that have been detected.
        /// </remarks>
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.Azure.CloudException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        System.Threading.Tasks.Task<Microsoft.Rest.Azure.AzureOperationResponse<Microsoft.Rest.Azure.IPage<ApiCollection>>> ListByAzureApiManagementServiceNextWithHttpMessagesAsync(string nextPageLink, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> customHeaders = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }
}